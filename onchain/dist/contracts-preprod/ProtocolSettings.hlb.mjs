import { DelegatedDataBundle } from '@donecollectively/stellar-contracts';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';
import { makeSource } from '@helios-lang/compiler-utils';
import { P as ProtocolSettings_hl } from '../ProtocolSettings.mjs';
import { N as NodeOperatorSettings_hl } from '../NodeOperatorSettings.mjs';
import { N as NeighborhoodSettings_hl } from '../NeighborhoodSettings.mjs';

const ProtocolSettingsPolicy_hl = makeSource(
  "module ProtocolSettingsPolicy\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\n// this module provides the basic interface needed for a Capo delegate.\n\n// it is also packaged (with a unique module name above) to enable access \n// ...from other helios scopes.\n\n// THIS MODULE has been specialized to ...\n//  - test delegated-datum structures\n// ... more details here\n\n// original notes about (un)specialization follow:\n//  //! provides a basic version, ~~not yet specialized,~~\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    tnCip68ref100,\n    tnCip68nft222,\n    mkUutTnFactory\n} from CapoMintHelpers\n\nimport {\n    ProtocolSettings\n} from ProtocolSettings\n\nimport {\n    CapoCtx,\n    mkCapoCtx,\n    mkTv,\n    AnyData \n} from CapoHelpers\n\nimport {\n    TODO,\n    REQT\n} from StellarHeliosHelpers\n\nenum DelegateDatum {\n    Cip68RefToken {  \n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data // can be Unit () or anything else\n    }\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: ProtocolSettings\n        version: Int\n        otherDetails: Data \n    }\n}\n\nenum MintingActivity {\n    CreatingRecord {\n        seed: TxOutputId\n    }\n}\n\nenum BurningActivity {\n    DeletingRecord {\n        id: ByteArray\n    }\n}\n\nenum SpendingActivity {\n    UpdatingRecord {\n        id: ByteArray\n    }\n}\n\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        activity: BurningActivity\n    }\n\n    // not used in non-mint/spend delegate\n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // id from seed\n    }\n    // not used in non-mint/spend delegate\n    UpdatingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n    // not used in non-mint/spend delegate\n    DeletingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        activities: []Data\n    }\n    \n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {\n        print(\"  -- addl dgt val \\n\");\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            // non-mintDelegate can't trigger these activities\n            CapoLifecycleActivities => error(\"unreachable\"),\n            MintingActivities{VMA} => VMA.switch {\n                CreatingRecord{seed} => {\n                    print(\"creating Settings record...\\n\");\n                    mkTn : (String) -> String = mkUutTnFactory(seed);\n                    assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n                    assert(cctx.requiresGovAuthority().orFail(), \"no gov authority\");\n\n                    tokenName = mkTn(\"set\");\n                    depositedValue: Value = mkTv(priorMddd.dd.mph, tokenName);\n\n                    newRec : TxOutput = cctx.delegatedTxOutput( tokenName.encode_utf8() );\n\n                    assert(\n                        newRec.value.contains(depositedValue),\n                        \"missing id token\"\n                    );\n\n                    DelegateDatum::capoStoredData {\n                        recData, // ProtocolSettings\n                        _version,\n                        _otherDetails\n                    } = DelegateDatum::from_data(newRec.datum.inline);\n                    // recData: ProtocolSettings = ProtocolSettings::from_data(\n                    //     newRec.datum.inline\n                    // );\n\n                    recData.validate() &&\n                    validateUutMinting(\n                        mph: priorMddd.dd.mph,\n                        seed: seed,\n                        purposes: []String{\"set\"},\n                        // otherMintedValue: ... ,\n                        mkTokenName: mkTn,\n                        // The uut-minting proves that the \n                        // minter was involved, but not that its blind\n                        // trust of the mint delegate was warranted.\n                        // Checking the mint delegate's instructions\n                        // gives us assurance that the mintDgt did approve\n                        // US for this minting case.\n                        needsMintDelegateApproval: false\n                    )\n                }\n            },\n            SpendingActivities{VSA} => {\n                print(\"capo mph: \" + priorMddd.dd.mph.show());\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n                assert(cctx.requiresGovAuthority().orFail(), \"no gov authority\");\n\n                // print( \"capo addr\" + cctx.resolveCharterUtxo().address.show());\n\n                VSA.switch {\n                    UpdatingRecord{recId} => {\n                        hasDD : (TxInput) -> Bool = cctx.mkDelegatedDataPredicate(\"set\", recId);\n                        // settings: ProtocolSettings = cctx.getManifestDatum[ProtocolSettings](\"settings\");\n                        hasDDOutput : (TxOutput) -> Bool = cctx.mkDelegatedDataOutputPredicate(\"set\", recId);\n    \n                        tx.inputs.filter(hasDD).for_each( (_utxo : TxInput) -> () {\n                            // they're all settings records, because of the above filter\n                            // inputData : DgDatumTestData = DgDatumTestData::from_data(utxo.datum.inline);\n                            updatedUtxo : TxOutput = tx.outputs.find_safe(hasDDOutput).switch{\n                                Some{txo} => txo,\n                                None => error(\"record not updated as expected\")\n                            };\n\n                            _outputData : ProtocolSettings = ProtocolSettings::from_data(updatedUtxo.datum.inline);\n\n                            // previousDeposit : Int = utxo.value.get_lovelace(); \n                            // newDepositTotal : Int = updatedUtxo.value.get_lovelace();                                  \n                            assert(true, \"no way\")\n                        });\n                        true\n                    }\n                }\n            }, \n            BurningActivities => error(\"no burn activity here yet\"),\n            _ => false  \n        } || tx.serialize() == priorMddd.serialize()        \n    }\n\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way\" );\n        []String{ \n            // \"nothingHereYet\",\n        }\n    }\n\n    //! Used only for validating non-IsDelegation datum types and activities.\n    // if you have any special admininstrative data structures that inform \n    // ...  your minting policy, this might be useful.  Otherwise, and typically,\n    // ... you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation( self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/settings/ProtocolSettingsPolicy.hl", // source filename
    moduleName:  "ProtocolSettingsPolicy",
});

class ProtocolSettingsBundle extends DelegatedDataBundle.usingCapoBundleClass(
  DredCapoBundle
) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "8cfe457712446efd045a29ccc37fdffb4502fec575f437ede11598b8f1d22bf7", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "src/settings/ProtocolSettings.hl": "1fd35459a2986ea2c5604bf3b25100e4a3db74b4b942aeda0fde80c4851fe9e3", "src/nodeRegistry/NodeOperatorSettings.hl": "ff4d0a67f419dd96fb2ba4532e6b2ea48f2ee80b345d04cb78e2408453707839", "src/DredNeighborhood/NeighborhoodSettings.hl": "1baebad53be8fbdcc02e12b6857fc0e3538c1f765b441813c7ee2ab65c242d23", "generatedSpecializedDelegateModule": "1bbd804c71531578b1178abc1dce7284b672201b53348529fdea5981cacbb681", "src/settings/ProtocolSettingsPolicy.hl": "ec6036218f113b360d4255484006bd1921fe9bb83151a864fbde1acf967b046a", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##5650726f746f636f6c53657474696e6773506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "59254359254001000022232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232325333573466600200207006e2930b111191a999ab9a3370e00290020930a999ab9a3370e0029001091919191919191919191919ab9b53335734666ae68cdc7800a450101004a094452616335736a666ae68ccd5cd19b8f0014890767656e6572616c004a094452616335736a666ae68ccd5cd19b8f0014891650726f746f636f6c53657474696e6773506f6c696379004a0944526163232335736a666ae6800452616323253335734a666ae68d4ccd5cd19b8735573a6ea80452002124a22a666ae68cdc39aab9d375402290000930a999ab9a3370e6aae74dd5008a400c2464646466ae6cc926324a2603800c64646466ae6cc94ccd5cd0008a4c2c6464660020026607a00400844a666aae7c0045288992999ab9a323335734002941289991191980080099821001801112999aab9f00114a2264a666ae68c8ccd5cd000a504a26644666ae68cdc4001000a504a26608c00a0026608c00800229404cc00c00cd5d10011aba10013303e0040013303e00600114a02660060066ae88008d5d08009bab357426ae88d55cf1baa001323253335734a666ae68c8c94ccd5cd19baf3303b002488103406964003303b0014881034069640015333573466ebccc0ec009220103747065003303b0014881037470650015333573466ebccc0ec0092201036e4f70003303b0014881036e4f700015333573466ebccc0ec0092201036e6268003303b0014881036e62680014a229405280a5014a06eac008dd58008a5114a02666666603a02400e97ae1010443736574002510064a0930a50357426aae78dd500099823181c9aba1357446ae88d55cf1baa00148010c8c8c8c8c8d4ccd5cd19b8735573a6ea8005200212612357426aae78dd5000800991981980092999ab9a3370e6606c6eacd5d09aba235573c6ea8004011200213375e6ae84d55cf1baa00100314a06eb0d5d09aba2357446aae78dd50251812005998251bae357420140046e64004dcc001198160070009800a490373657400301a001357426aae78dd50009aba135573c6ea800454ccd5cd19b8735573a6ea804520041232335736649319251301a00432323233573664646600200200444a666aae7c0045261335736646493181d9aba1357446ae88d55cf1baa0013235333573466e1cd55ce9baa0014800048d5d09aab9e375400224c002646606200200a6eb0d5d09aba2357446aae78dd5024198010011aba2001323330370010034bd701bac357426aae78dd5022a513225333573466ebcd5d09aab9e37540020042646a666ae68cdc39aab9d3754002900209192999ab9a3372e605e002921037365740015333573466e3c01d2210014a2266e3cdd71981c9bab001489034069640000714a0605a00424940004c0e0d5d09aba2357446aae78dd50008a50301f00633301d0054a20026eb8d5d09aab9e37540026ae84d55cf1baa00115333573466e1cd55ce9baa0114802049849280088a5113371e6ecc100dd98078a51163301d01c00132323235333573466e1c00520021200a15333573466e1c00520041200a1232323235333573466e1cd55ce9baa0014800848c07c03848c8c8cd5d01ba900633574066e95200233574000266ae800092f5c097ae033046323304700148000c0e4c8d5d09aba2357446aae78dd50009aba1357446aae78dd5000a40006ae84d55cf1baa001001323302d001232333573466e2400520004a0944cc0c0c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa044330450014881076368617274657200375c6ae8402800cd55ce8009baa001357426ae88018d4ccd5cd19b8735573a6ea8039201012323233037002235333573466e1cd55ce9baa0014803049854ccd5cd19b8735573a6ea8005200a12615333573466e1cd55ce9baa0014803849854ccd5cd19b8735573a6ea800520041233301501501400215333573466e1cd55ce9baa0014801848ccc05405405000854ccd5cd19b8735573a6ea8005200812615333573466e1cd55ce9baa0014800849854ccd5cd19b8735573a6ea80052000126126001301700737586ae84d55cf1baa00115333573466e1cd55ce9baa00e4800848c8d4ccd5cd19b8735573a6ea80052000123232323232325333573400220042940ccccccc064038014cd5d01ba9373000897ae04a0932510033235333573466e1cd55ce9baa001480284928892500013024001301c00b330453304400b00748004c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd5000a40042466e1cc8c8c8c8c8c8ccc004004894ccd55cf8008b0a999ab9a3375e6aae74d5d080080209bad35573c6ae840044cc008008d5d10008031112999aab9f0011615333573466ebcd55ce9aba100100513300200237566aae78d5d080089998018018011aba2001357426ae88008d5d08009aab9e00137546608601400c608208090008930009aba135573c6ea800454ccd5cd19b8735573a6ea803920001232323233573664646a666ae68cdc3800a40002464a666ae68cdd78008038a4c2c6ae84d55cf1baa00115333573466e1c005200a1235333573466e1cd55ce9baa00648000492612600612600235573a6ea8004c084008c8c94ccd5cd1a999ab9a3370e6aae74dd5002a4000246464646a666ae68cdc39aab9d375400a90000919ab9b53335734666666603802200866ae80dd49b980034bd702510024a0930a4c293191a999ab9a3370e6aae74dd5000a400424c246466ae6cc94ccd5cd0008a4c2c66e5cc8dcc9bae00135742002600a00c6605a0020286eb0d5d09aab9e37540020026466660820026ea4dcc002119ba548000cd5d0000a5eb805300103d87a80003237566ae84d5d11aba235573c6ea8004cc09008c024498014c074008c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd5002a40042464646464646464646464646464646466ae6cd4ccd5cd0028930924c00e66ae6cc94ccd5cd0008a4c2c6466ebcdd38009ba700f3574401866a666ae6801449854ccd5cd19b8735573a6ea801d200012323232323223330010040030023237326eb8004d5d09aba20033237326eb8004d5d08011aba1002357440026aae78dd5000891919191199800802001801191b99375c0026ae84d5d11aba235573c6ea800cc8dcc9bae001357426ae88d55cf1baa002357426aae78dd5000803911191919ab9b5333573466e1cc8cc004004050894ccd55cf8008a4000266e00cc008008d5d1000a400490000a4c2ca666ae6800840045281a999ab9a3370e6aae74dd500aa400424c2a666ae68cdc39aab9d375402a9000091919ab9b533357340022930b19192999ab9a003100114a06a666ae68cdc39aab9d375401c90000919ab9b35333573466e1cd55ce9baa0024800049849260024a22a666ae68cdc39aab9d375401c9002099191911919ab9b35333573400624c2a666ae68cdc38022400c24c2a666ae68cdc38022401c24c2493008191919ab9b32533357340022930b19baf003357426aae78dd5000a5135333573466e1c015200012323374a900019aba00014bd7019822182100e8150a999ab9a3370e00a9001091919ba548000cd5d0000a5eb80cc110dd61aba135573c6ea80740a854ccd5cd008091919ba548000cd5d0000a5eb80cc1100080a854ccd5cd19b870054802849854ccd5cd19b870054803049854ccd5cd0020930a999ab9a3370e00a90030930930089a999ab9a3370e6aae74dd50032400424c2464646a666ae68cdc39aab9d37540029001091bac357426aae78dd5000893000998289bab0014890374706500357426aae78dd50008031aba1357446ae88d5d11aab9e375400266e1c005200435573a0026ea802c498038cc0e0dd59aba135744608802a00e6609e02646a666ae68cdc39aab9d375400290000919191a999ab9a3370e6aae74dd5000a40102464666ae68cdcb8008062504a2608200224c0026ae84d5d10009bac357426aae78dd500089300089300a9a999ab9a3370e6aae74dd500a240042494454ccd5cd19b8735573a6ea805120001235333573466e1cd55ce9baa00b4800849848c8c8c8c8cd5cda999ab9a3372e00260080102930b19192999ab9a5333573400a294452808008a5035333573466e1cd55ce9baa0114801048cd5cd991a999ab9a3370e6aae74dd5000a40002464646a666ae68cdc39aab9d3754002900109192999ab9a3372e00201e2930b191b99375c0026ae84d5d11aab9e375400224c002660a26eac00522010374706500357426aae78dd50008930009981e9bab357426ae88c124068031288925101132335736a666ae68004526164a26607c00404a646e64dd70009aba100135333573466e1cd55ce9baa0094800849848dd61aba135573c6ea8004024ccccccc0b4088018cd5d01ba9373000a97ae04a2606000c94126302f00500b126014353335734004206c24c0066ae84d5d100319b8735573a6ea800520083574200866e1cd55ce800a40046ea8004d5d08011aba200137586ae84d55cf1baa0013304800148000d5d08009bac357426ae88d5d11819000998110108039bac357426ae88d5d1181800099821802240002a666ae68cdc39aab9d375400a90020930a999ab9a3370e6aae74dd5002a400c24c2a666ae68cdc39aab9d375400a9006091919ab9b35333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200212615333573466e1cd55ce9baa0014801048c8c8c8c8c8c8cd5cd991a999ab9a3370e6aae74dd5000a400424c246464646466ae6d4ccd5cd19b8f00200b149858cd5cd9a999ab9a3370e6aae74dd5000a400024c24930009a999ab9a3370e6aae74dd5001a40002493093001998209bab0034881036d706800375c660806eac009220102746e003303f375600291010374706500357426aae78dd500080099815801003192999ab9a001149858c8cdd79ba6001374c64646600200200a44a666aae7c00440044c8c94ccd5cd19baf00535573a004266008008002266ae80008cc010010004d5d10011aba100137526e6001cdd59aba135744606e0086464646a666ae68cdc39aab9d37540029001093091aba135573c6ea8004004c8cc0d800400cdd61aba1357446aae78dd50269b9900533302500c4a00086eacd5d09aba230350013302502400a3304700848000dd71aba1357446aae78dd5001191b99375c0026ae84d55cf1baa00115333573466e1cd55ce9baa0014801849849260014a26ae84d55cf1baa00115333573466e1cd55ce9baa005480284984980145288a5035333573466e1cd55ce9baa0014803849854ccd5cd19b8735573a6ea8005200212615333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200c13232253335734646464666ae68cdc4800a40009412899818991bab357426ae88d55cf1baa001357426ae88d55cf1baa002001330293027006003503e14c0103d8798000153335734646464666ae68cdc4800a40009412899818991bab357426ae88d55cf1baa001357426ae88d55cf1baa0020013302937586ae84d55cf1baa006003503e14c103d87a800016375c0026ae8400c498004d4ccd5cd19b8735573a6ea800d200812615333573466e1cd55ce9baa0034802849854ccd5cd19b8735573a6ea800d200c124c0103d87a800015333573466e1cd55ce9baa003480084930103d879800015333573466e1cd55ce9baa003480104930103d87a800015333573466e1cd55ce9baa003480184930103d87f8000124c0103d8798000003301d0013301d01c3018007357426aae78dd50008a999ab9a3370e6aae74dd50072401424c2a666ae68cdc39aab9d375401c90060930a999ab9a3370e6aae74dd50072401c24c2a666ae68cdc39aab9d375401c90020925115333573466e1cd55ce9baa00e4801849288925100e3037323237566ae84d5d11aab9e37540026ae84d5d11aab9e3754002a06a6eb8004d5d08009aba20043357406ea40052f5c2103d87980001bae001357420026ae88004dd60009aba100135573c6ea800448d4ccd5cd19b8735573a6ea800d200212615333573466e1cd55ce9baa0034800049848d4ccd5cd19b8735573a6ea8011200212615333573466e1cd55ce9baa0044800049849280020018019aab9d37540044444444646464646466ae6d4ccd5cd199ab9a3302700200c4a094458526323357366601e0024493191919ab9b3357366602200244931924c606c66605800a46644666ae68cdc78010092504a26eb8d55ce8009bab35573c00297adef6c6032335736a666ae6800452616335736649319ab9b5333573464666ae68005282513303137586ae84d55cf1baa03c23375e6ae84d55cf1baa001010161499289919ab9b533357340022930b2999ab9a002100114a0a666ae68c8ccd5cd000a504a2605401029444c94ccd5cd18158008a511335736646600200200444a666aae7c0045261323357366644646603200444a666ae68c8ccd5cd000a504a2646a666ae68cdc39aab9d375400290010925012323370e0020086eb4d5d09aab9e3754002002666607a0066ea40088cdd2a400066ae800052f5c02980103d87a8000161498cc0bc030008dd71aab9d00137566aae78004cc00c00cd5d10011aba10014a2a666ae68cc0ac0140404c8c8cc00400401c894ccd55cf8008800899192999ab9a3375e00a6aae740084cc0100100044cd5d0001198020020009aba2002357420026ea40404014cdd79ba6001374c0066601e002444466e40010008cc09800c034cc034cc0940040308888cdc80020011981199811a5eb7bdb18000cc8c8cc004004008894ccd55cf8008a5eb7bdb1804cc098dd59aba10013300200235744002646600200201444a666aae7c00452f5c0266ae80dd3191981080718038009b99375c6ae84004cc008008d5d1000981b81b19192513017001330343232323233038323303900148000c0acc8d5d09aba2357446aae78dd50009aba1357446aae78dd5000a4000646a666ae68cdc39aab9d37540029000091aba135573c6ea800448c8d4ccd5cd19b8735573a6ea8005200012357426aae78dd500089300099198118008021bac357426aae78dd501d00099810001800919199ab9a3371200290002504a266044646eacd5d09aba235573c6ea8004d5d09aba235573c6ea8004008cc0e002922107636861727465720037586ae84d5d11aab9e375406a90002999ab9a003100214bd6f7b6302999ab9a00410031300a0062232330010010032253335573e002200226464646600200200644a666aae7c0044cd5d00018008992999ab9a3333008375c6aae74010dd69aab9e004375c6aae74004dd69aab9e0011335740008004266ae80004cc00c00cd5d10011aba100135742004660040046ae8800488c8cc00400400c894ccd55cf8008a4c26466ae6ccc010dd71aab9d001375a6aae78004cc00c00cd5d10011aba1001232323232323223372c66e58005241012d0000230333337189000240186e500054ccd5cd199ab9a337126e3400920124a0944584cdc519b8a00148810140000023337189005240806ecc00cdd99ba8001375a6ae84d5d11aab9e37540046ae84d55cf1baa00123235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004126123232323357406ea400ccd5d019ba548008cd5d000099aba00024bd7025eb80cc0b0c8cc0b40052000301f32357426ae88d5d11aab9e37540026ae84d5d11aab9e3754002900019191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233016001232333573466e2400520004a0944cc064c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa02d3302e001489076368617274657200375c6ae8400c004d5d09aba200123235333573466e1cd55ce9baa001480104800c54ccd5cd19b8735573a6ea8005200212612323232323357406ea4010cd5d019ba548010cd5d000099aba00024bd7025eb80cc0b0c8cc0b40052000301f32357426ae88d5d11aab9e37540026ae84d5d11aab9e37540029000191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233015001232333573466e2400520004a0944cc060c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426aae78dd501619816800a45076368617274657200375c6ae8400c004d5d09aba2001222323225333573466ebcc0540040084c8d4ccd5cd19b8735573a6ea80052004123253335734a666ae68cdcb80324810014a2266e5cc054005241037365740015333573466e3c01d2210014a2266e3cdd71980f9bab001489034069640000714a0602600424940004c078c8d5d09aba2357446aae78dd50009aba1357446aae78dd50008a50300500453335734004292103736574001491002300f3235333573466e1cd55ce9baa0014800848d5d09aba235573c6ea800454ccd5cd19b8735573a6ea8005200412357426ae88d55cf1baa001126001357426ae8800488c8c8c8d4ccd5cd19b8735573a6ea800520041233029301c32357426ae88d5d11aab9e375400264646600200200444a666aae7c004584c94ccd5cd2999ab9a3375e6ae84d55cf1baa001007132333573466e2400520004a0944cc060dd59aba1357446aae78dd50008040a501001133003003357440046ae84004dd61aba1357446ae88d55cf1baa02a48000498004d5d09aba2003300300233028375c6ae84005220107636861727465720023235333573466e1cd55ce9baa0014800848c8cc0980052000357426aae78dd50008a999ab9a3370e6aae74dd5000a400824646604c00290001aba135573c6ea8004498004d5d09aba20012233573664a666ae6800452616330063237586ae84c040004c008004dd71aba100100122333301b00237526e600048cdd2a400066ae800052f5c02980103d87a800023235333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea80052002126123232323235333573466e1c005200412615333573466e1c005200812615333573466e1c00520021200415333573466e1c005200a1200415333573466e1c0052006120041200400335573a0026ea8004c8c8c8cccc07c008004800458c8cc004004008894ccd55cf8008b0992999ab9a35333573466e1cd55ce9baa0014800848cdd79aba135573c6ea8004018492800088008998018019aba200235573a6ae84004dd59aba1357446ae88d5d11aba23010025357426aae78dd50009aba1357446aae78dd50008009aba13574400246eb0d5d09aba2357446ae88d55cf1baa0012232323232335736a666ae694ccd5cd199ab9a0014a09445288a50161498004d4ccd5cd19b8735573a6ea80092000123232333573466e2400520004a0944cc03cc8ccc09000488cc050008dd59aba1357446aae78dd5000a5eb7bdb180c8ccc05c0048c94ccd5cd19b8735573a6ea8005200213371e008646eb8d5d09aab9e37540026604e00290010a5032357426aae78dd50009aba135573c6ea80052f5c06eb0d5d09aba2357446aae78dd50128019bae357426aae78dd500089191a999ab9a3370e6aae74dd5000a40002494449280009919806800919199ab9a3371200290002504a2660206eacd5d09aba235573c6ea8004010dd61aba1357446ae88d55cf1baa0240023302400337300046ae84d5d1001991b99375c0026ae8400888cc084004dcc191b99375c0026ae840088c8dcc9bae001357426aae78dd500091a999ab9a5333333574800229445280a5014a0294048c8c8d4ccd5cd2999999aba400114a029445280a5014a0246ae8400c498004d5d08009aab9e375400224c0024646e64dd7000998059bab00148903747065002232335736a666ae68ccd5cd19b89371a00290002504a22930b1980f9980f001800a40046e6000488c8ccc00400400c0088894ccd55cf8010a6103d87a8000132533357346004002266e95200033574000297ae01333004004357440060046ae840088c8d5d09aab9e37540026ae84d5d11aab9e37540024464646466600200244a666aae7c0045200015333573466ebcd55ce9aba10010041375a6aae78d5d08008998010011aba200100522253335573e002290000a999ab9a3375e6aae74d5d08008028998010011bab35573c6ae840044ccc00c00c008d5d10009aba1357446aae78dd50011aba135573c6ea80048d5d11aba2357446ae88d5d11aab9e37540024464660020026601600600444a666aae7c00452f5bded8c02646464a666aae7c00440084cd5d019bb0003374c002004664464660020026602200600444a666aae7c00452f5bded8c02646464a666ae68cdc3800a40002004266ae80cdd80019ba8001002337006602c00c0046602c00a004660060066ae88008d5d08009980680300119806802801198018019aba2002357420024464646600200200844a666aae7c0045854ccd5cd19baf35573a6ae8400400c4dd59aab9e357420022660040046ae88004dd480091919800800801112999aab9f00114a22a666ae68c8c8cc004004008894ccd55cf8008a5115333573466e1cdd69aab9e3574200290000998010011aba200114a06eacd55cf1aba100113300200235744002294088c8c8cc004004010894ccd55cf8008a5015333573466ebcd55ce9aba100100314a22660040046ae88004dd480091191919800800802112999aab9f0011613232325333573466ebc00801840044cc014014d5d10021aab9e00235573a0026ae84004dd4800911191998008008020019112999aab9f0021004132533357346004002266ae80004ccc010010d5d100180109998020021aba2003002357420044646464a666ae68cdc38012400826ae8400458d55cf0011aab9d001375400244646600200200644a666aae7c00452f5bded8c02a666ae68cdd79aab9d3574200200626eacd55cf1aba1001133002002357440024464646464666002002004008444a666aae7c00440084cd5d01aba100133300300300235744002666002002004006444a666aae7c00452f5c0264a666ae68cc0200148cdd780080109998020020019aba200213357400026660080080066ae88008d55ce9aba100132330010010032253335573e002297ae013357406aae74d5d0800998010011aba2001223233300100100300222253335573e004294054ccd5cd18009aba100214a226660060066ae8800800488c8ccc00400400c0088894ccd55cf8010a40002a666ae68cdd79aab9d3574200400226eb4d55cf1aba10021333003003357440040024464666002002006004444a666aae7c0085288a999ab9a30013574200426660060066ae880080045281111191998008008028021112999aab9f0020041325333573466ebc008d55ce800898031aab9e0011333004004357440060046ae840084c8c8cc004004dd61aba135573c6ea8024894ccd55cf8008b0992999ab9a3375e6ae84d55cf1baa0010041001133003003357440046ae84004d5d09aab9e37540026ae84d5d1006119980200091191919b9600433300600223372ca666ae68cdc7800a4410014910013372c601e002921010a0053333335748004292100133300937560044464646660160044a666666ae900085241001491001491001325333573466e3c01d2210013372c9201096c6f76656c61636520003372c601c0029201010a0013372c92010320202e003372ca666ae68c8c8cc0040052000225333573466e1c00400c5288992999ab9a33712002907f0089980180199b800024800854ccd5cd19b8733706002902024018264a666ae68cdc480080289980d99b8e007337000069001112999ab9a00213253335734a666ae68cdc4a410004002266e2400520fe1f14a026600e00e0082940cdc019b823370c00890202410002002294052819b800024801054ccd5cd19b8733706002901024038264a666ae68cdc480080289980d99b8e007337000069001112999ab9a00213301d3371c01266e0001520042253335734004264a666ae694ccd5cd19b8948200800044cdc4800a41fdfe0e29404cc02402401852819b803370466e1801920204820100cdc019b8200348200040045280a5014a066e00009200615333573466e1ccdc1800a4020901e0992999ab9a3371200200a26603666e3801ccdc0001a400444a666ae680084cc074cdc700499b8000548010894ccd5cd00109980f99b8e00b3370000e9003112999ab9a00213253335734a666ae68cdc4a41010010002266e2400520feffff0114a02660160160102940cdc019b823370c010900824101004066e00cdc1002a41008066e00cdc1001a41000200229405280a5014a066e00009200814a066e38014004dc680109b99002130150023372c9210120003372c601c0029201010a00375a004292010014910035573c0046aae74004014524010014910014910014910035573c0046aae7400524010022253333335748006002002002002260046eb800c8dcc992999ab9a337100049000099b8b48168ccc004004cdc10012400291100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b3370066e18009201448180004888c8ccc0040040100088894ccd55cf801080089998018019aba2002330050013574200444a666ae68cdc39aab9d375400400220042c6ae840188dd59aba1357446ae88d5d11aba235573c6ea800488cdd2a400066ae80dd480119aba0375200297ae022323233574066ec0008dd319aba0337600026ea000d2f5bded8c097adef6c60357426ae88d55cf1baa003357426aae78dd50011191980080080111192999ab9a337109000000899b96373264666ae68cdc39b8d00148008cdc5a40c00020026e60c8c8dcca999ab9a337100049000099b8b48168ccc004004cdc10012400291010013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc30012404066e3800920003300300333371890010008010a4900371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a090001aab9e0013754003", "unoptimized": "", "optimizedIR": '(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common13 = __core__unConstrData(__CONTEXT);\n    __common14 = __core__sndPair(__common13);\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__bytearray__show = (self_5) -> {\n        recurse_5 = (recurse_4, self_6) -> {\n            n_1 = __core__lengthOfByteString(self_6);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n_1),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);\n                    recurse_3 = (recurse_2, self_4, bytes_1) -> {\n                        digit = __core__modInteger(self_4, 16);\n                        bytes_2 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes_1);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_4, 16),\n                            () -> {\n                                bytes_2\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_2)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_3, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_3, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_5)\n    };\n    __helios__value__new = (assetClass, i_1) -> {\n        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_1, token_name) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_18) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))))))\n    };\n    __helios__scriptcontext__tx = __core__headList(__common14);\n    __helios__common__assert_constr_index = (data, i_2) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),\n            () -> {\n                data\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__fold = (self_19, fn, z) -> {\n        recurse_7 = (recurse_6, self_20, z_1) -> {\n            __core__chooseList(self_20, () -> {\n                z_1\n            }, () -> {\n                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))\n            })()\n        };\n        recurse_7(recurse_7, self_19, z)\n    };\n    __helios__int__show = (self_21) -> {\n        __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {\n            bytes_4 = __core__consByteString(__core__addInteger(__core__modInteger(i_3, 10), 48), bytes_3);\n            __core__ifThenElse(\n                __core__lessThanInteger(i_3, 10),\n                () -> {\n                    bytes_4\n                },\n                () -> {\n                    recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_21, 0),\n            () -> {\n                __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))\n            },\n            () -> {\n                recurse_9(recurse_9, self_21, #)\n            }\n        )())\n    };\n    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {\n        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {\n            callback_ok(__core__unBData__safe(data_5))\n        })()\n    };\n    __helios__value__show = (self_29) -> {\n        __helios__common__fold(self_29, (prev_1, pair_3) -> {\n            mph_data = __core__fstPair(pair_3);\n            tokens_data = __core__sndPair(pair_3);\n            __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph_4, #),\n                    () -> {\n                        ""\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph_4), "\n")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    ""\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_4) -> {\n                        token_name_data = __core__fstPair(pair_4);\n                        qty_data = __core__sndPair(pair_4);\n                        __helios__common__unBData__safe(token_name_data, (token_name_2) -> {\n                            __core__chooseData(qty_data, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph_4, #),\n                                    () -> {\n                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                    },\n                                    () -> {\n                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                            n = __core__lengthOfByteString(token_name_2);\n                                            recurse_1 = (recurse, i) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(i, n),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        b0 = __core__indexByteString__safe(token_name_2, i);\n                                                        __core__ifThenElse(\n                                                            __core__lessThanEqualsInteger(b0, 127),\n                                                            () -> {\n                                                                recurse(recurse, __core__addInteger(i, 1))\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                                                    () -> {\n                                                                        inext_2 = __core__addInteger(i, 2);\n                                                                        __core__ifThenElse(\n                                                                            __core__lessThanEqualsInteger(inext_2, n),\n                                                                            () -> {\n                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_5, c1_2) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        valid_5,\n                                                                                        () -> {\n                                                                                            c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                                                            __core__ifThenElse(\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__lessThanEqualsInteger(128, c_2),\n                                                                                                    () -> {\n                                                                                                        __core__lessThanEqualsInteger(c_2, 2047)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )(),\n                                                                                                () -> {\n                                                                                                    recurse(recurse, inext_2)\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                })\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                                                            () -> {\n                                                                                inext_1 = __core__addInteger(i, 3);\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(inext_1, n),\n                                                                                    () -> {\n                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_3, c1_1) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                valid_3,\n                                                                                                () -> {\n                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_4, c2_1) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            valid_4,\n                                                                                                            () -> {\n                                                                                                                c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__lessThanEqualsInteger(2048, c_1),\n                                                                                                                        () -> {\n                                                                                                                            __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )(),\n                                                                                                                    () -> {\n                                                                                                                        recurse(recurse, inext_1)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    })\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        })\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                                                    () -> {\n                                                                                        inext = __core__addInteger(i, 4);\n                                                                                        __core__ifThenElse(\n                                                                                            __core__lessThanEqualsInteger(inext, n),\n                                                                                            () -> {\n                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid, c1) -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        valid,\n                                                                                                        () -> {\n                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_1, c2) -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    valid_1,\n                                                                                                                    () -> {\n                                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 3)), (valid_2, c3) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                valid_2,\n                                                                                                                                () -> {\n                                                                                                                                    c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__lessThanEqualsInteger(65536, c),\n                                                                                                                                            () -> {\n                                                                                                                                                __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                false\n                                                                                                                                            }\n                                                                                                                                        )(),\n                                                                                                                                        () -> {\n                                                                                                                                            recurse(recurse, inext)\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            false\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        })\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            };\n                                            recurse_1(recurse_1, 0),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name_2)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name_2)\n                                            }\n                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                    }\n                                )()\n                            }, () -> {\n                                ""\n                            })()\n                        }, () -> {\n                            ""\n                        })\n                    }, prev_1)\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                })())\n            }, () -> {\n                ""\n            }))\n        }, "")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common14));\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_17 = (recurse_16, lst_2) -> {\n            __core__chooseList(lst_2, () -> {\n                error()\n            }, () -> {\n                item_3 = __core__headList__safe(lst_2);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),\n                    () -> {\n                        item_3\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(lst_2))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__value__get_inner_map_int = (map_3, key_3) -> {\n        recurse_25 = (recurse_24, map_4, key_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), key_4),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(map_4), key_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, map_3, key_3)\n    };\n    __helios__common__any = (self_43, fn_3) -> {\n        recurse_29 = (recurse_28, self_44, fn_4) -> {\n            __core__chooseList(self_44, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_4(__core__headList__safe(self_44)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(self_44), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_43, fn_3)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        (aKeys) -> {\n            recurse_33 = (recurse_32, keys, map_7) -> {\n                __core__chooseList(map_7, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_6 = __core__fstPair(__core__headList__safe(map_7));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_6)\n                        }),\n                        () -> {\n                            recurse_32(recurse_32, keys, __core__tailList__safe(map_7))\n                        },\n                        () -> {\n                            __core__mkCons(key_6, recurse_32(recurse_32, keys, __core__tailList__safe(map_7)))\n                        }\n                    )()\n                })()\n            };\n            b_4 = recurse_33(recurse_33, aKeys, b_5);\n            recurse_31 = (recurse_30, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_30(recurse_30, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_31(recurse_31, b_4, aKeys)\n        }(recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_6)), recurse_26(recurse_26, __core__tailList__safe(map_6)))\n            })()\n        };\n        recurse_27(recurse_27, a_5))\n    };\n    __helios__value__get_inner_map = (map_8, mph_5) -> {\n        recurse_37 = (recurse_36, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_5),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_8)\n    };\n    __helios__txoutputdatum__inline = (self_46) -> {\n        pair_5 = __core__unConstrData(self_46);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__filter = (self_50, fn_5, nil) -> {\n        recurse_41 = (recurse_40, self_51, fn_6) -> {\n            __core__chooseList(self_51, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_51);\n                __core__ifThenElse(\n                    fn_6(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_40(recurse_40, __core__tailList__safe(self_51), fn_6))\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_51), fn_6)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_50, fn_5)\n    };\n    __helios__common__mStruct_field_internal = (map_10, name) -> {\n        name_data = __core__bData(name);\n        recurse_43 = (recurse_42, map_11) -> {\n            __core__chooseList(map_11, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_11);\n                key_9 = __core__fstPair(head_3);\n                value_3 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_9, name_data),\n                    () -> {\n                        value_3\n                    },\n                    () -> {\n                        recurse_42(recurse_42, __core__tailList__safe(map_11))\n                    }\n                )()\n            })()\n        };\n        recurse_43(recurse_43, map_10)\n    };\n    __helios__value__contains_policy = (self_53, mph_6) -> {\n        mph_7 = __core__bData(mph_6);\n        recurse_45 = (recurse_44, map_12) -> {\n            __core__chooseList(map_12, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_7),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_44(recurse_44, __core__tailList__safe(map_12))\n                    }\n                )()\n            })()\n        };\n        recurse_45(recurse_45, self_53)\n    };\n    __helios__value__is_zero = (self_54) -> {\n        recurse_49 = (recurse_48, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_13)));\n                    recurse_47 = (recurse_46, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_46(recurse_46, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, tokens_1),\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_13))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, self_54)\n    };\n    __helios__value__get_policy = (self_55, mph_8) -> {\n        mph_9 = __core__bData(mph_8);\n        recurse_51 = (recurse_50, map_14) -> {\n            __core__chooseList(map_14, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_14)))\n                    },\n                    () -> {\n                        recurse_50(recurse_50, __core__tailList__safe(map_14))\n                    }\n                )()\n            })()\n        };\n        recurse_51(recurse_51, self_55)\n    };\n    __helios__value____add = (a_11, b_11) -> {\n        recurse_55 = (recurse_54, keys_4) -> {\n            __core__chooseList(keys_4, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_11 = __core__headList__safe(keys_4);\n                tail_1 = recurse_54(recurse_54, __core__tailList__safe(keys_4));\n                item_5 = (a_9, b_9) -> {\n                    recurse_53 = (recurse_52, keys_3) -> {\n                        __core__chooseList(keys_3, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_10 = __core__headList__safe(keys_3);\n                            tail = recurse_52(recurse_52, __core__tailList__safe(keys_3));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_9, key_10), __helios__value__get_inner_map_int(b_9, key_10));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_10, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_53(recurse_53, __helios__value__merge_map_keys(a_9, b_9))\n                }(__helios__value__get_inner_map(a_11, key_11), __helios__value__get_inner_map(b_11, key_11));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_11, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_55(recurse_55, __helios__value__merge_map_keys(a_11, b_11))\n    };\n    __helios__common__enum_fields_after_4 = (self_62) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_62)))))))\n    };\n    __helios__value__get_safe = (self_69, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_15) -> {\n            __core__chooseList(map_15, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_15)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_15))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_15))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        }, self_69)\n    };\n    __helios__txinput__address = (self_76) -> {\n        self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_76))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n    };\n    __helios__common__find_safe = (self_98, fn_13) -> {\n        recurse_65 = (recurse_64, self_99, fn_14) -> {\n            __core__chooseList(self_99, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_99);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_99), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_98, fn_13)\n    };\n    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {\n        tnBytes_1 = __core__encodeUtf8(tn);\n        __core__chooseUnit(__core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                false,\n                true\n            ),\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_106) -> {\n        d = __helios__common__mStruct_field_internal(__core__unMapData(self_106), #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_5, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_7);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_7)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_5)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_110)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130, mph_11) -> {\n        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_130);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137, mph_14) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_137));\n            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_52 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_52, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_82 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_82)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_9))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_136, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_137);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_155)))))))\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {\n        __cond_28 = __core__headList(__core__tailList(self_184));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),\n            () -> {\n                (__lhs_0_56) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n                    () -> {\n                        (__lhs_0_55) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_48) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));\n                            (activity) -> {\n                                __common31 = __core__unConstrData(activity);\n                                __common32 = __core__fstPair(__common31);\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__common32, 2),\n                                    () -> {\n                                        (__lhs_0_54) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__common32, 4),\n                                            () -> {\n                                                (__lhs_0_53) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__common32, 1),\n                                                    () -> {\n                                                        (__lhs_0_52) -> {\n                                                            activity\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__common32, 5),\n                                                            () -> {\n                                                                (__lhs_0_51) -> {\n                                                                    activity\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__common32, 3),\n                                                                    () -> {\n                                                                        (__lhs_0_50) -> {\n                                                                            activity\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_49) -> {\n                                                                            activity\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_2)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185, key_14) -> {\n        __helios__common__map_get(self_185, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_191) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_157 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_191);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_157))), __core__unBData(__core__headList(self_191)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_191)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {\n        __cond_33 = __core__headList(__core__tailList(self_197));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),\n            () -> {\n                (self_160) -> {\n                    data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_160)));\n                    __helios__common__assert_constr_index(data_137, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),\n                    () -> {\n                        (self_162) -> {\n                            data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_162)));\n                            __helios__common__assert_constr_index(data_137, 0)\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_33)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_198) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_198)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198);\n        __cond_34 = __core__headList(__core__tailList(self_198));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),\n            () -> {\n                (__lhs_0_64) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_47) -> {\n                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47)))))\n                    }(self_100 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                    recurse_67 = (recurse_66, lst_12) -> {\n                        __core__chooseList(lst_12, () -> {\n                            error()\n                        }, () -> {\n                            item_6 = __core__headList__safe(lst_12);\n                            __core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),\n                                    () -> {\n                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);\n                                        __core__ifThenElse(\n                                            __core__lessThanEqualsInteger(a_3, 0),\n                                            false,\n                                            true\n                                        )\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )(),\n                                () -> {\n                                    item_6\n                                },\n                                () -> {\n                                    recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_67(recurse_67, self_100))), 0)\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_34)\n    };\n    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {\n        __helios__txinput__address(__cond_35 = __core__headList(__core__tailList(self_201));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),\n            () -> {\n                (self_11) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),\n                    () -> {\n                        (self_11) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                        }\n                    },\n                    () -> {\n                        (__30) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_35))\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204, __useopt__typeName, id_1) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                "set"\n            },\n            () -> {\n                ""\n            }\n        )();\n        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204);\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_159 = __helios__txoutputdatum__inline(self_47 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),\n                        () -> {\n                            (__lhs_0_71) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, ""),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "set")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_1, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field_internal(__core__unMapData(x_7), #406964)), id_1)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__31) -> {\n                                false\n                            }\n                        }\n                    )()(data_159)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_209) -> {\n        charter_2 = __core__headList(__core__tailList(self_209));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_87) -> {\n                    self_209\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_86) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_82) -> {\n                            mph_21 = __core__unBData(__core__headList(self_209));\n                            charterAc_4 = __helios__assetclass__new(mph_21, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_47 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47))))));\n                                __helios__common__assert_constr_index(data_137, 0), 0);\n                                __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_45) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_84) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_45)\n                            }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_133, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_210) -> {\n        charter_3 = __core__headList(__core__tailList(self_210));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_91) -> {\n                    self_210\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_90) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_88) -> {\n                            mph_22 = __core__unBData(__core__headList(self_210));\n                            (utxo_5) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_47 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47))))));\n                                __helios__common__assert_constr_index(data_137, 0), 0);\n                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_22, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_133, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_220, fn_25) -> {\n        recurse_87 = (recurse_86, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_43 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_87(recurse_87, self_220)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_228, comp_4) -> {\n        recurse_61 = (recurse_60, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_60(recurse_60, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_59 = (recurse_58, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_58(recurse_58, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_59(recurse_59, tail_2)\n            })()\n        };\n        recurse_61(recurse_61, self_228)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_229) -> {\n                recurse_93 = (recurse_92, lst_24) -> {\n                    __core__chooseList(lst_24, () -> {\n                        __core__mkNilPairData(())\n                    }, () -> {\n                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))\n                    })()\n                };\n                recurse_93(recurse_93, self_229)\n            }(recurse_57 = (recurse_56, rem_1) -> {\n                __core__chooseList(rem_1, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));\n                    __module__StellarHeliosHelpers__mkTv(mph_26, mkTokenName_1(purpose_2))), recurse_56(recurse_56, __core__tailList__safe(rem_1)))\n                })()\n            };\n            recurse_57(recurse_57, purposes)));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_26),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_26), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_26);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {\n                ()\n            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_38) -> {\n                (b_15, __38) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_15, mph_26),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_38)), __core__unMapData(__core__sndPair(pair_38)))\n            }, __core__mkNilPairData(())));\n            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));\n            __core__chooseUnit(__core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            (), otherPoliciesMintOk = __core__ifThenElse(\n                b = __helios__value__is_zero(otherMintedValue_1);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    true\n                },\n                () -> {\n                    remainingExpectedMint = __core__ifThenElse(\n                        __helios__value__contains_policy(expectedValue, mph_26),\n                        () -> {\n                            key_23 = __core__bData(mph_26);\n                            recurse_91 = (recurse_90, self_226) -> {\n                                __core__chooseList(self_226, () -> {\n                                    self_226\n                                }, () -> {\n                                    head_45 = __core__headList__safe(self_226);\n                                    tail_4 = __core__tailList__safe(self_226);\n                                    __core__ifThenElse(\n                                        __core__equalsData(key_23, __core__fstPair(head_45)),\n                                        () -> {\n                                            recurse_90(recurse_90, tail_4)\n                                        },\n                                        () -> {\n                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_91(recurse_91, expectedValue)\n                        },\n                        () -> {\n                            expectedValue\n                        }\n                    )();\n                    __core__ifThenElse(\n                        __helios__value__is_zero(remainingExpectedMint),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {\n                                __core__chooseList(map_30, () -> {\n                                    ()\n                                }, () -> {\n                                    head_44 = __core__headList__safe(map_30);\n                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                            __core__ifThenElse(\n                                                (b) -> {\n                                                    __core__ifThenElse(\n                                                        b,\n                                                        false,\n                                                        true\n                                                    )\n                                                }(__cond_55 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                    __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                }, () -> {\n                                                    __core__constrData(1, __core__mkNilData(()))\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_55)), 1),\n                                                    () -> {\n                                                        (__lhs_0_113) -> {\n                                                            false\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_112) -> {\n                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_112))));\n                                                            __core__equalsInteger(actualCount, expectedCount)\n                                                        }\n                                                    }\n                                                )()(__cond_55)),\n                                                () -> {\n                                                    error()\n                                                },\n                                                () -> {\n                                                    ()\n                                                }\n                                            )()\n                                        })\n                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))\n                                })()\n                            };\n                            recurse_89(recurse_89, remainingExpectedMint), true)\n                        }\n                    )()\n                }\n            )();\n            __core__chooseUnit(__core__ifThenElse(\n                otherPoliciesMintOk,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    otherPoliciesMintOk\n                },\n                () -> {\n                    false\n                }\n            )()))))))\n        }(__lhs_0_111 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_26, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_47 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47))))));\n            __helios__common__assert_constr_index(data_137, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_9) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_9) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_133, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);\n        true)\n    };\n    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main, mdd, activity_3) -> {\n        __common5 = __core__fstPair(__core__unConstrData(mdd));\n        __core__ifThenElse(\n            __core__equalsInteger(__common5, 2),\n            () -> {\n                (__lhs_0_264) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common5, 1),\n                    () -> {\n                        (isD) -> {\n                            __common15 = __core__sndPair(__core__unConstrData(isD));\n                            __common16 = __core__headList(__common15);\n                            __common17 = __core__unListData(__common16);\n                            __common39 = __core__tailList(__common17);\n                            __common40 = __core__headList(__common39);\n                            __common41 = __core__unBData(__common40);\n                            __common42 = __core__mkCons(__core__bData(__common41), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));\n                            __common34 = __core__tailList(__common39);\n                            __common35 = __core__headList(__common34);\n                            __common36 = __core__unBData(__common35);\n                            __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common36, #01),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common36, #67656e6572616c),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common36, #50726f746f636f6c53657474696e6773506f6c696379),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), myDgTkn = __helios__value__show(self_36 = __helios__scriptcontext__get_current_input();\n                            self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_36))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))));\n                            checkNonDelegatedActivities = __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),\n                                () -> {\n                                    (__lhs_0_242) -> {\n                                        activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_242))));\n                                        cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common42);\n                                        __helios__common__all(activities_2, (rawActivity_2) -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                                                () -> {\n                                                    (__lhs_0_263) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                                        () -> {\n                                                            (__lhs_0_262) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                                                () -> {\n                                                                    (__lhs_0_261) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_260) -> {\n                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_259) -> {\n                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                                        () -> {\n                                                                                            (__lhs_0_258) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_257) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_256) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_255) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()(rawActivity_2)\n                                        })\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                        () -> {\n                                            (__lhs_0_236) -> {\n                                                innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_236)));\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                                    () -> {\n                                                        (__lhs_0_240) -> {\n                                                            seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_240)));\n                                                            (purpose_8) -> {\n                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common41, __common36), -1);\n                                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common42);\n                                                                (isUpdatingCharter) -> {\n                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common41, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                                    __core__ifThenElse(\n                                                                        isMintingOk,\n                                                                        () -> {\n                                                                            isUpdatingCharter\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }(__cond_111 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_111)), 5),\n                                                                    () -> {\n                                                                        (__lhs_0_241) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__75) -> {\n                                                                            false\n                                                                        }\n                                                                    }\n                                                                )()(__cond_111))\n                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_240))));\n                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                                            () -> {\n                                                                (__lhs_0_239) -> {\n                                                                    __core__equalsInteger(self_13 = __helios__tx__minted(__helios__scriptcontext__tx);\n                                                                    __common37 = __core__unConstrData(__helios__assetclass__new(__common41, __common36));\n                                                                    __common38 = __core__sndPair(__common37);\n                                                                    mph_2 = __core__headList(__common38);\n                                                                    tokenName_1 = __core__headList(__core__tailList(__common38));\n                                                                    outer_1 = (outer, inner, map) -> {\n                                                                        __core__chooseList(map, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),\n                                                                                () -> {\n                                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                                },\n                                                                                () -> {\n                                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    };\n                                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                                        __core__chooseList(map_1, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                                () -> {\n                                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                                },\n                                                                                () -> {\n                                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    }, self_13), -1)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__lhs_0_237) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(innerActivity)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                () -> {\n                                                    (__lhs_0_136) -> {\n                                                        dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_136)));\n                                                        cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common42));\n                                                        __common22 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);\n                                                        __core__chooseUnit(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                                        __common33 = __core__fstPair(__core__unConstrData(__cond_108));\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__common33, 0),\n                                                            () -> {\n                                                                (__lhs_0_235) -> {\n                                                                    cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_235)));\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsData(cCLA, dCLA),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            error()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__common33, 5),\n                                                                    () -> {\n                                                                        (__lhs_0_233) -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                                () -> {\n                                                                                    (__lhs_0_234) -> {\n                                                                                        ()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__74) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()(dCLA)\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__73) -> {\n                                                                            error()\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(__cond_108), neededRole = __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                                            () -> {\n                                                                (__lhs_0_102) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                    () -> {\n                                                                        (__lhs_0_101) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_100) -> {\n                                                                                    __core__constrData(1, __core__mkNilData(()))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_99) -> {\n                                                                                            __core__constrData(0, __core__mkNilData(()))\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                            () -> {\n                                                                                                (__lhs_0_98) -> {\n                                                                                                    __core__constrData(1, __core__mkNilData(()))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_97) -> {\n                                                                                                            __core__constrData(6, __core__mkNilData(()))\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_96) -> {\n                                                                                                            __core__constrData(0, __core__mkNilData(()))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(dCLA);\n                                                        myCurrentRole = __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                                            () -> {\n                                                                (__lhs_0_140) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_139) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_138) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                                    () -> {\n                                                                                        __common20 = __core__headList(cctx_4);\n                                                                                        __common21 = __core__unBData(__common20);\n                                                                                        (__lhs_0_137) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                input_2 = __helios__scriptcontext__get_current_input();\n                                                                                                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common22), __common21);\n                                                                                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));\n                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acMintDgt);\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                    false,\n                                                                                                    true\n                                                                                                ),\n                                                                                                () -> {\n                                                                                                    __core__constrData(0, __core__mkNilData(()))\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        input_3 = __helios__scriptcontext__get_current_input();\n                                                                                                        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common22)))), __common21);\n                                                                                                        a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));\n                                                                                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acSpendDgt);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                            false,\n                                                                                                            true\n                                                                                                        ),\n                                                                                                        () -> {\n                                                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__43) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(neededRole);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                () -> {\n                                                                    (__lhs_0_229) -> {\n                                                                        seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_229)));\n                                                                        (purpose_7) -> {\n                                                                            mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                () -> {\n                                                                                    (__lhs_0_230) -> {\n                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                            __module__CapoMintHelpers__validateUutMinting(__common41, seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            }\n                                                                                        )(), (__cond_107) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_107)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_232) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_231) -> {\n                                                                                                        dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_231))));\n                                                                                                        __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                                        __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common41))\n                                                                                                    }\n                                                                                                }\n                                                                                            )()(__cond_107)\n                                                                                        }((self_193) -> {\n                                                                                            __helios__common__map_get(self_193, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {\n                                                                                                __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                                            }, () -> {\n                                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                                            })\n                                                                                        }(self_154 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);\n                                                                                        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_154)))))))))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__72) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()(myCurrentRole)\n                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_229))));\n                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                        () -> {\n                                                                            (__lhs_0_177) -> {\n                                                                                charterData_4 = __helios__common__assert_constr_index(__common22, 0);\n                                                                                __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);\n                                                                                nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                                                newChange = __core__headList(nextChangeList);\n                                                                                __lhs_0_178 = __helios__common__assert_constr_index(newChange, 0);\n                                                                                __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_178))));\n                                                                                __common11 = __core__tailList(__lhs_0_0_2);\n                                                                                action = __core__headList(__lhs_0_0_2);\n                                                                                __common25 = __core__unConstrData(action);\n                                                                                __common27 = __core__equalsInteger(__core__fstPair(__common25), 1);\n                                                                                role_2 = __core__headList(__common11);\n                                                                                __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                                                OdgtLink = __core__headList(__core__tailList(__common11));\n                                                                                newDgtRoleName = __core__ifThenElse(\n                                                                                    __common3,\n                                                                                    () -> {\n                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__56) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(role_2);\n                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                    __common27,\n                                                                                    () -> {\n                                                                                        (__lhs_0_227) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__70) -> {\n                                                                                            ()\n                                                                                        }\n                                                                                    }\n                                                                                )()(action), __core__chooseUnit((cond) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )()\n                                                                                }(self_251 = __core__tailList(nextChangeList);\n                                                                                __core__equalsData(__core__listData(self_251), __core__listData(__common0))), __core__ifThenElse(\n                                                                                    __common27,\n                                                                                    () -> {\n                                                                                        (__lhs_0_226) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_225) -> {\n                                                                                                    __common28 = __core__sndPair(__core__unConstrData(__lhs_0_225));\n                                                                                                    __common29 = __core__tailList(__common28);\n                                                                                                    seed_7 = __core__headList(__common28);\n                                                                                                    (purpose_6) -> {\n                                                                                                        (idPrefix_9) -> {\n                                                                                                            (callback_14) -> {\n                                                                                                                callback_14(seed_7, purpose_6, idPrefix_9)\n                                                                                                            }\n                                                                                                        }(d = __core__headList(__core__tailList(__common29));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }(d = __core__headList(__common29);\n                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_224) -> {\n                                                                                                    seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_224)));\n                                                                                                    (purpose_5) -> {\n                                                                                                        (idPrefix_8) -> {\n                                                                                                            (callback_13) -> {\n                                                                                                                callback_13(seed_6, purpose_5, idPrefix_8)\n                                                                                                            }\n                                                                                                        }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224)))));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224))));\n                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {\n                                                                                    possibleMintDgtVerifications = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_196) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_180) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_188) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__58) -> {\n                                                                                                                    mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                                    mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common41, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                                    dgtLink_2 = __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_182) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (self_192) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_192))))\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(OdgtLink);\n                                                                                                                    (__common1) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsString(__common1, mkTokenName_2(purpose_4)),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), (delegateTakesOwnership) -> {\n                                                                                                                            possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_183) -> {\n                                                                                                                                        __core__chooseUnit(__cond_89 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_89)), 0),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_185) -> {\n                                                                                                                                                    dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_185)));\n                                                                                                                                                    entryType_1 = __helios__common__mStruct_field_internal(__core__unMapData(dde), #747065);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_187) -> {\n                                                                                                                                                                (idPrefix_7) -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            ()\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            error()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_187))));\n                                                                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__60) -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        }\n                                                                                                                                                    )()(entryType_1)\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_184) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        )()(__cond_89), true)\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__59) -> {\n                                                                                                                                        true\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(action);\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    mintedDgTkn,\n                                                                                                                                    () -> {\n                                                                                                                                        true\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        false\n                                                                                                                                    }\n                                                                                                                                )(),\n                                                                                                                                () -> {\n                                                                                                                                    possibleExtraReplacementCheck\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common41);\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            assertion_2,\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), true)))\n                                                                                                                    }(d = __core__headList(dgtLink_2);\n                                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action)\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__57) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(myCurrentRole);\n                                                                                    otherPossibleVerifications = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_223) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_197) -> {\n                                                                                                        isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_198) -> {\n                                                                                                                        __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_198))));\n                                                                                                                        pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_199) -> {\n                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_199);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                                        false,\n                                                                                                                                        true\n                                                                                                                                    )\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__64) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(pendingRole)\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__63) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()(pdChange_2)\n                                                                                                        });\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            isNotADuplicate,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                        possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_221) -> {\n                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_222) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__69) -> {\n                                                                                                                                ()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(existingRoleEntryMaybe), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                    () -> {\n                                                                                                                        __common23 = __core__unConstrData(role_2);\n                                                                                                                        __common24 = __core__fstPair(__common23);\n                                                                                                                        __common30 = __core__equalsInteger(__common24, 2);\n                                                                                                                        (__lhs_0_202) -> {\n                                                                                                                            replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_202))))));\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                __common30,\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_220) -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__common24, 3),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_219) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__common24, 7),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_218) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__68) -> {\n                                                                                                                                                        ()\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_205) -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_203) -> {\n                                                                                                                                        __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_203)));\n                                                                                                                                        entryType_2 = __helios__common__mStruct_field_internal(__core__unMapData(__lhs_0_0_4), #747065);\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                                            () -> {\n                                                                                                                                                (self_146) -> {\n                                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_146))))\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                (__66) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        )()(entryType_2)\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(existingRoleEntryMaybe);\n                                                                                                                            existingDgTkn = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__common24, 0),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_213) -> {\n                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common41);\n                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__common24, 1),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_212) -> {\n                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common41);\n                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __common3,\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_211) -> {\n                                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common41);\n                                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsInteger(__common24, 5),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_210) -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __core__equalsInteger(__common24, 6),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_209) -> {\n                                                                                                                                                                        error()\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __common30,\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_208) -> {\n                                                                                                                                                                                error()\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                                __core__equalsInteger(__common24, 3),\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_207) -> {\n                                                                                                                                                                                        error()\n                                                                                                                                                                                    }\n                                                                                                                                                                                },\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_206) -> {\n                                                                                                                                                                                        error()\n                                                                                                                                                                                    }\n                                                                                                                                                                                }\n                                                                                                                                                                            )()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(role_2);\n                                                                                                                            __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )(), true))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_200) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            isNotADuplicate,\n                                                                                                            () -> {\n                                                                                                                possibleReplacementIsCorrect\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )())\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__62) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(myCurrentRole);\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(recurse_19 = (recurse_18, lst_4) -> {\n                                                                                            __core__chooseList(lst_4, () -> {\n                                                                                                0\n                                                                                            }, () -> {\n                                                                                                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n                                                                                            })()\n                                                                                        };\n                                                                                        recurse_19(recurse_19, __common0), 0),\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __core__ifThenElse(\n                                                                                        possibleMintDgtVerifications,\n                                                                                        () -> {\n                                                                                            otherPossibleVerifications\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                })))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                () -> {\n                                                                                    (__lhs_0_176) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                        () -> {\n                                                                                            (__lhs_0_153) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_143) -> {\n                                                                                                        manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_143)));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_152) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_151) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_145) -> {\n                                                                                                                                    (key_31) -> {\n                                                                                                                                        tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_145)))));\n                                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__common22, 0);\n                                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);\n                                                                                                                                        __common2 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                                        (__lhs_0_146) -> {\n                                                                                                                                            __core__chooseUnit(__cond_67 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common2, key_31);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_67)), 1),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_150) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_147) -> {\n                                                                                                                                                        __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_147)));\n                                                                                                                                                        entryType = __helios__common__mStruct_field_internal(__core__unMapData(__lhs_0_0), #747065);\n                                                                                                                                                        tn_4 = __core__unBData(__helios__common__mStruct_field_internal(__core__unMapData(__lhs_0_0), #746e));\n                                                                                                                                                        mph_27 = __helios__common__mStruct_field_internal(__core__unMapData(__lhs_0_0), #6d7068);\n                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                            __core__equalsByteString(tn_4, tokenName_5),\n                                                                                                                                                            () -> {\n                                                                                                                                                                ()\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_27)), 0),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_149) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__46) -> {\n                                                                                                                                                                    ()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(mph_27), __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_148) -> {\n                                                                                                                                                                    ()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__45) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(entryType)))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_67), (cond) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    cond,\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(self_268 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                                            __core__equalsData(__core__mapData(self_268), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                                            recurse_101 = (recurse_100, self_267) -> {\n                                                                                                                                                __core__chooseList(self_267, () -> {\n                                                                                                                                                    self_267\n                                                                                                                                                }, () -> {\n                                                                                                                                                    head_49 = __core__headList__safe(self_267);\n                                                                                                                                                    tail_6 = __core__tailList__safe(self_267);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                                        () -> {\n                                                                                                                                                            recurse_100(recurse_100, tail_6)\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__mkCons(head_49, recurse_100(recurse_100, tail_6))\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                })()\n                                                                                                                                            };\n                                                                                                                                            recurse_101(recurse_101, __common2)))))\n                                                                                                                                        }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);\n                                                                                                                                        recIdStr = __core__decodeUtf8(tokenName_5);\n                                                                                                                                        (__cond_36) -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_68) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_67) -> {\n                                                                                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_36)\n                                                                                                                                        }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                                        __helios__common__find_safe(self_133, hasDD)))\n                                                                                                                                    }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_145)));\n                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_144) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__44) -> {\n                                                                                                                                            ()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(manifestActivity), true)\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_142) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_141) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(dCLA),\n                                                            () -> {\n                                                                true\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )())\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                                        () -> {\n                                                            (__lhs_0_135) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),\n                                                                () -> {\n                                                                    (__lhs_0_134) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),\n                                                                        () -> {\n                                                                            (__lhs_0_132) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                                () -> {\n                                                                                    (__lhs_0_131) -> {\n                                                                                        true\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                                        () -> {\n                                                                                            (__lhs_0_130) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_129) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()(activity_3);\n                            __core__chooseUnit(__core__ifThenElse(\n                                checkNonDelegatedActivities,\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), (cctx_7) -> {\n                                __common12 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_7);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                            () -> {\n                                                (__lhs_0_124) -> {\n                                                    true\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                    () -> {\n                                                        (__lhs_0_123) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                            () -> {\n                                                                (__lhs_0_120) -> {\n                                                                    VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_120)));\n                                                                    seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));\n                                                                    mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                                                    __core__chooseUnit((cond) -> {\n                                                                        ()\n                                                                    }(self_217 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                    true), tokenName_4 = mkTn("set");\n                                                                    depositedValue = __module__StellarHeliosHelpers__mkTv(__common41, tokenName_4);\n                                                                    (newRec) -> {\n                                                                        __core__chooseUnit((cond) -> {\n                                                                            __core__ifThenElse(\n                                                                                cond,\n                                                                                () -> {\n                                                                                    ()\n                                                                                },\n                                                                                () -> {\n                                                                                    error()\n                                                                                }\n                                                                            )()\n                                                                        }(a_8 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(newRec)))));\n                                                                        recurse_39 = (recurse_38, keys_2) -> {\n                                                                            __core__chooseList(keys_2, () -> {\n                                                                                true\n                                                                            }, () -> {\n                                                                                key_8 = __core__headList__safe(keys_2);\n                                                                                __core__ifThenElse(\n                                                                                    b = (a_6, b_6) -> {\n                                                                                        recurse_35 = (recurse_34, keys_1) -> {\n                                                                                            __core__chooseList(keys_1, () -> {\n                                                                                                true\n                                                                                            }, () -> {\n                                                                                                key_7 = __core__headList__safe(keys_1);\n                                                                                                __core__ifThenElse(\n                                                                                                    b = (a_qty, b_qty) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__lessThanInteger(a_qty, b_qty),\n                                                                                                            false,\n                                                                                                            true\n                                                                                                        )\n                                                                                                    }(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));\n                                                                                                    __core__ifThenElse(\n                                                                                                        b,\n                                                                                                        false,\n                                                                                                        true\n                                                                                                    ),\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        recurse_34(recurse_34, __core__tailList__safe(keys_1))\n                                                                                                    }\n                                                                                                )()\n                                                                                            })()\n                                                                                        };\n                                                                                        recurse_35(recurse_35, __helios__value__merge_map_keys(a_6, b_6))\n                                                                                    }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(depositedValue, key_8));\n                                                                                    __core__ifThenElse(\n                                                                                        b,\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        false\n                                                                                    },\n                                                                                    () -> {\n                                                                                        recurse_38(recurse_38, __core__tailList__safe(keys_2))\n                                                                                    }\n                                                                                )()\n                                                                            })()\n                                                                        };\n                                                                        recurse_39(recurse_39, __helios__value__merge_map_keys(a_8, depositedValue))), __lhs_0_122 = __helios__common__assert_constr_index(__helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(newRec)))))), 2);\n                                                                        recData = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_122)));\n                                                                        __core__ifThenElse(\n                                                                            __core__ifThenElse(\n                                                                                aFields = __core__unMapData(recData);\n                                                                                bFields = __core__unMapData(recData);\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #406964), __helios__common__mStruct_field_internal(bFields, #406964)),\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #747065), __helios__common__mStruct_field_internal(bFields, #747065)),\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e4f70), __helios__common__mStruct_field_internal(bFields, #6e4f70)),\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e6268), __helios__common__mStruct_field_internal(bFields, #6e6268)),\n                                                                                                            () -> {\n                                                                                                                true\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )(),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )(),\n                                                                            () -> {\n                                                                                __module__CapoMintHelpers__validateUutMinting(__common41, seed_3, __core__mkCons(__core__bData(#736574), __core__mkNilData(())), true, mkTn, false, ())\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )())\n                                                                    }(recId_5 = __core__encodeUtf8(tokenName_4);\n                                                                    recIdStr_3 = __core__decodeUtf8(recId_5);\n                                                                    ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(cctx_7)), recId_5);\n                                                                    capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_1(cctx_7);\n                                                                    (__cond_41) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_75) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_74) -> {\n                                                                                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_74)))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_41)\n                                                                    }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                                                    __helios__common__find_safe(self_136, (txout) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                                                                            () -> {\n                                                                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    }))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                    () -> {\n                                                                        (__lhs_0_115) -> {\n                                                                            VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115)));\n                                                                            __core__chooseUnit((cond) -> {\n                                                                                ()\n                                                                            }(self_217 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                            true), recId_6 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));\n                                                                            hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_7, true, recId_6);\n                                                                            (hasDDOutput) -> {\n                                                                                __core__chooseUnit((self_246) -> {\n                                                                                    recurse_95 = (recurse_94, lst_25) -> {\n                                                                                        __core__chooseList(lst_25, () -> {\n                                                                                            ()\n                                                                                        }, () -> {\n                                                                                            __core__chooseUnit((updatedUtxo) -> {\n                                                                                                __lhs_0_119 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                                                ()\n                                                                                            }((__cond_58) -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_58)), 0),\n                                                                                                    () -> {\n                                                                                                        (self_9) -> {\n                                                                                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_117) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(__cond_58)\n                                                                                            }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                                                                            __helios__common__find_safe(self_136, hasDDOutput))), recurse_94(recurse_94, __core__tailList__safe(lst_25)))\n                                                                                        })()\n                                                                                    };\n                                                                                    recurse_95(recurse_95, self_246)\n                                                                                }(self_52 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                                                __helios__common__filter(self_52, hasDD_2, __core__mkNilData(()))), true)\n                                                                            }(capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(cctx_7);\n                                                                            (txo_1) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_1))), capoAddr_2),\n                                                                                    () -> {\n                                                                                        data_160 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_1))))));\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_160)), 2),\n                                                                                            () -> {\n                                                                                                (__lhs_0_72) -> {\n                                                                                                    x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_160);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "set"),\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsByteString(recId_6, #),\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    __core__equalsByteString(__core__unBData(__helios__common__mStruct_field_internal(__core__unMapData(x_8), #406964)), recId_6)\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__32) -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            }\n                                                                                        )()(data_160)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_114) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__39) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(activity_3),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))\n                                        }\n                                    )(),\n                                    () -> {\n                                        true\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(charter_1 = __core__headList(__core__tailList(__common42));\n                            __common18 = __core__unConstrData(charter_1);\n                            __common19 = __core__fstPair(__common18);\n                            __core__ifThenElse(\n                                __core__equalsInteger(__common19, 1),\n                                () -> {\n                                    (__lhs_0_81) -> {\n                                        __common42\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common19, 2),\n                                        () -> {\n                                            (__lhs_0_80) -> {\n                                                __common42\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_76) -> {\n                                                mph_20 = __core__unBData(__core__headList(__common42));\n                                                charterAc_3 = __helios__assetclass__new(mph_20, #63686172746572);\n                                                (__cond_43) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                                                        () -> {\n                                                            (__lhs_0_79) -> {\n                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common42)\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_78) -> {\n                                                                charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_78)));\n                                                                datum_4 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_47 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_47))))));\n                                                                __helios__common__assert_constr_index(data_137, 0), 0);\n                                                                __core__mkCons(__core__bData(mph_20), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                                            }\n                                                        }\n                                                    )()(__cond_43)\n                                                }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                __helios__common__find_safe(self_133, (txin_5) -> {\n                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_3);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                        false,\n                                                        true\n                                                    )\n                                                }))\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(charter_1))))))\n                        }\n                    },\n                    () -> {\n                        (__41) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                () -> {\n                                    (__lhs_0_128) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                        () -> {\n                                            (__lhs_0_127) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__42) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                                    () -> {\n                                                        (__lhs_0_126) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                            () -> {\n                                                                (__lhs_0_125) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__40) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(activity_3)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(activity_3)\n                        }\n                    }\n                )()\n            }\n        )()(mdd)\n    };\n    __core__ifThenElse(\n        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1, __DATUM, __REDEEMER),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes) -> {
        n = __core__lengthOfByteString(bytes);
        recurse_1 = (recurse, i) -> {
            __core__ifThenElse(
                __core__equalsInteger(i, n),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes, i);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse(recurse, __core__addInteger(i, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse(recurse, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse(recurse, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse(recurse, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_1(recurse_1, 0)
    };
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes_1) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_2 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes_1);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_2
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_2)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n_1 = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n_1),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__bytearray__decode_utf8_safe = (self_7) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_7),
                () -> {
                    __core__decodeUtf8__safe(self_7)
                },
                () -> {
                    __helios__bytearray__show(self_7)()
                }
            )()
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_8) -> {
        __core__sndPair(__core__unConstrData(self_8))
    };
    __helios__common__enum_field_0 = (self_9) -> {
        __core__headList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_fields_after_0 = (self_10) -> {
        __core__tailList(__helios__common__enum_fields(self_10))
    };
    __helios__common__enum_field_1 = (self_11) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__value__new = (assetClass, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_1),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_12) -> {
        __core__multiplyInteger(self_12, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_13) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_13)
        }
    };
    __helios__common__enum_fields_after_1 = (self_14) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_14))
    };
    __helios__common__enum_fields_after_2 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_15))
    };
    __helios__common__enum_fields_after_3 = (self_16) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_16))
    };
    __helios__common__enum_field_4 = (self_17) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_17))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__helios__common__enum_field_4(self_18))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_21) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
                bytes_4 = __core__consByteString(__helios__int__show_digit(i_3), bytes_3);
                __core__ifThenElse(
                    __core__lessThanInteger(i_3, 10),
                    () -> {
                        bytes_4
                    },
                    () -> {
                        recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_21, 0),
                () -> {
                    __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
                },
                () -> {
                    recurse_9(recurse_9, self_21, #)
                }
            )())
        }
    };
    __helios__data__show = (self_22) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_11, data_2) -> {
                recurse_11(recurse_11, data_2)
            }((recurse_10, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_10(recurse_10, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_10(recurse_10, __core__fstPair(pair));
                        value_1 = recurse_10(recurse_10, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_10(recurse_10, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_5 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_5)()
                })()
            }, self_22)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_13 = (recurse_12) -> {
                (lst_1, i_4) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_2(head)
                            },
                            () -> {
                                recurse_12(recurse_12)(__core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_13(recurse_13)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_3(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_23) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_23)()
                    }
                )()
            })(self_23)
        }
    };
    __helios__string____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_24, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_6, callback_ok_1, callback_nok_3) -> {
        __core__chooseData(data_6, callback_nok_3, () -> {
            callback_ok_1(__core__unMapData__safe(data_6))
        }, callback_nok_3, callback_nok_3, callback_nok_3)()
    };
    __helios__common__unIData__safe = (data_7, callback_ok_2, callback_nok_4) -> {
        __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
            callback_ok_2(__core__unIData__safe(data_7))
        }, callback_nok_4)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_25) -> {
        () -> {
            __core__divideInteger(self_25, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_26) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_26, 0),
                () -> {
                    __core__multiplyInteger(self_26, -1)
                },
                () -> {
                    self_26
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_27, n_2) -> {
        recurse_15 = (recurse_14, x_1, pos, bytes_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_6
                        },
                        () -> {
                            recurse_14(recurse_14, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_6))
                        }
                    )()
                },
                () -> {
                    recurse_14(recurse_14, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_6))
                }
            )()
        };
        recurse_15(recurse_15, self_27, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_28) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_28, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_28, -1)))
                },
                () -> {
                    show_positive(self_28)
                }
            )()
        }
    };
    __helios__value__show = (self_29) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_29, (prev_1, pair_3) -> {
                mph_data = __core__fstPair(pair_3);
                tokens_data = __core__sndPair(pair_3);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_4) -> {
                            token_name_data = __core__fstPair(pair_4);
                            qty_data = __core__sndPair(pair_4);
                            __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_4, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_2)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__int____neq = (self_30, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_30, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_31) -> {
        () -> {
            self_31
        }
    };
    __helios__string__show = (self_32) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_32, "'"))
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_33) -> {
        () -> {
            __core__ifThenElse(
                self_33,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_34) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_34)()), self_34)
        }
    };
    __helios__txoutput__value = (self_35) -> {
        __core__unMapData(__helios__common__enum_field_1(self_35))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_36) -> {
        __helios__txoutput__value(__helios__txinput__output(self_36))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_37) -> {
        __core__unListData(__helios__common__enum_field_0(self_37))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__value__get_inner_map_int = (map_3, key_3) -> {
        recurse_25 = (recurse_24, map_4, key_4) -> {
            __core__chooseList(map_4, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_4), key_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, map_3, key_3)
    };
    __helios__value__get_map_keys = (map_5) -> {
        recurse_27 = (recurse_26, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_6)), recurse_26(recurse_26, __core__tailList__safe(map_6)))
            })()
        };
        recurse_27(recurse_27, map_5)
    };
    __helios__common__any = (self_43, fn_3) -> {
        recurse_29 = (recurse_28, self_44, fn_4) -> {
            __core__chooseList(self_44, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_4(__core__headList__safe(self_44)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(self_44), fn_4)
                    }
                )()
            })()
        };
        recurse_29(recurse_29, self_43, fn_3)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_5)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_31 = (recurse_30, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_30(recurse_30, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_31(recurse_31, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_33 = (recurse_32, keys, map_7) -> {
            __core__chooseList(map_7, () -> {
                __helios__common__list_0
            }, () -> {
                key_6 = __core__fstPair(__core__headList__safe(map_7));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_6),
                    () -> {
                        recurse_32(recurse_32, keys, __core__tailList__safe(map_7))
                    },
                    () -> {
                        __core__mkCons(key_6, recurse_32(recurse_32, keys, __core__tailList__safe(map_7)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_33(recurse_33, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__compare_inner = (comp, a_6, b_6) -> {
        recurse_35 = (recurse_34, keys_1) -> {
            __core__chooseList(keys_1, () -> {
                true
            }, () -> {
                key_7 = __core__headList__safe(keys_1);
                __core__ifThenElse(
                    __helios__bool____not(comp(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(keys_1))
                    }
                )()
            })()
        };
        recurse_35(recurse_35, __helios__value__merge_map_keys(a_6, b_6))
    };
    __helios__value__get_inner_map = (map_8, mph_5) -> {
        recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_5),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_9))
                    }
                )()
            })()
        };
        recurse_37(recurse_37, map_8)
    };
    __helios__value__compare = (a_7, b_7, comp_1) -> {
        recurse_39 = (recurse_38, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                true
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_1, __helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(keys_2))
                    }
                )()
            })()
        };
        recurse_39(recurse_39, __helios__value__merge_map_keys(a_7, b_7))
    };
    __helios__value____geq = (a_8, b_8) -> {
        __helios__value__compare(a_8, b_8, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_45) -> {
        (value_2) -> {
            __helios__value____geq(self_45, value_2)
        }
    };
    __helios__txoutputdatum__inline = (self_46) -> {
        pair_5 = __core__unConstrData(self_46);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_47) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_47))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__tx__outputs = (self_48) -> {
        __core__unListData(__helios__common__enum_field_2(self_48))
    };
    __helios__common__serialize = (self_49) -> {
        () -> {
            __core__serialiseData(self_49)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_50, fn_5, nil) -> {
        recurse_41 = (recurse_40, self_51, fn_6) -> {
            __core__chooseList(self_51, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_51);
                __core__ifThenElse(
                    fn_6(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_40(recurse_40, __core__tailList__safe(self_51), fn_6))
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(self_51), fn_6)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, self_50, fn_5)
    };
    __helios__common__filter_list = (self_52, fn_7) -> {
        __helios__common__filter(self_52, fn_7, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_11))
        })()
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_13, index_2, test_a, test_b) -> {
        __core__chooseData(data_13, () -> {
            pair_6 = __core__unConstrData__safe(data_13);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_6), index_2),
                () -> {
                    fields_3 = __core__sndPair(pair_6);
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_3)),
                            () -> {
                                tail = __core__tailList__safe(fields_3);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_14) -> {
            __core__chooseData(data_14, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_14);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_7 = __core__unConstrData__safe(data_15);
            index_3 = __core__fstPair(pair_7);
            fields_4 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_4), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_4))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_16) -> {
        __core__chooseData(data_16, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_17) -> {
        __helios__common__test_constr_data_2(data_17, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_18) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_10, name) -> {
        name_data = __core__bData(name);
        recurse_43 = (recurse_42, map_11) -> {
            __core__chooseList(map_11, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_11);
                key_9 = __core__fstPair(head_3);
                value_3 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_9, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_42(recurse_42, __core__tailList__safe(map_11))
                    }
                )()
            })()
        };
        recurse_43(recurse_43, map_10)
    };
    __helios__common__test_mStruct_field = (self_53, name_1, inner_test) -> {
        __core__chooseData(self_53, () -> {
            false
        }, () -> {
            map_12 = __core__unMapData__safe(self_53);
            recurse_45 = (recurse_44, map_13) -> {
                __core__chooseList(map_13, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_1))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_13);
                    key_10 = __core__fstPair(head_4);
                    value_4 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_10, name_1),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_44(recurse_44, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            recurse_45(recurse_45, map_12)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_19) -> {
        __core__chooseData(data_19, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_8 = __core__unBData__safe(data_19);
            n_4 = __core__lengthOfByteString(bytes_8);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_20) -> {
            __core__chooseData(data_20, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_9 = __core__unBData__safe(data_20);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_9), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__value__is_valid_data = (data_21) -> {
        __core__chooseData(data_21, () -> {
            false
        }, () -> {
            map_14 = __core__unMapData__safe(data_21);
            recurse_47 = (recurse_46, map_15) -> {
                __core__chooseList(map_15, () -> {
                    true
                }, () -> {
                    head_5 = __core__headList__safe(map_15);
                    key_11 = __core__fstPair(head_5);
                    value_5 = __core__sndPair(head_5);
                    tail_1 = __core__tailList__safe(map_15);
                    __core__ifThenElse(
                        __helios__mintingpolicyhash__is_valid_data(key_11),
                        () -> {
                            __core__chooseData(value_5, () -> {
                                false
                            }, () -> {
                                inner_3 = __core__unMapData__safe(value_5);
                                __core__chooseList(inner_3, () -> {
                                    false
                                }, () -> {
                                    recurse_inner_1 = (recurse_inner, inner_4) -> {
                                        __core__chooseList(inner_4, () -> {
                                            recurse_46(recurse_46, tail_1)
                                        }, () -> {
                                            head_6 = __core__headList__safe(inner_4);
                                            key_12 = __core__fstPair(head_6);
                                            value_6 = __core__sndPair(head_6);
                                            __core__ifThenElse(
                                                __helios__bytearray__is_valid_data_max_length(32)(key_12),
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(value_6),
                                                        () -> {
                                                            recurse_46(recurse_46, tail_1)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        })()
                                    };
                                    recurse_inner_1(recurse_inner_1, inner_3)
                                })()
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                })()
            };
            recurse_47(recurse_47, map_14)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__duration__is_valid_data = __helios__int__is_valid_data;
    __helios__value__contains_policy = (self_54) -> {
        (mph_6) -> {
            mph_7 = __helios__mintingpolicyhash____to_data(mph_6);
            recurse_49 = (recurse_48, map_16) -> {
                __core__chooseList(map_16, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_7),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_48(recurse_48, __core__tailList__safe(map_16))
                        }
                    )()
                })()
            };
            recurse_49(recurse_49, self_54)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_51 = (recurse_50, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_50(recurse_50, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_51(recurse_51, tokens_1)
    };
    __helios__value__is_zero = (self_55) -> {
        () -> {
            recurse_53 = (recurse_52, map_17) -> {
                __core__chooseList(map_17, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_17))))
                    }, () -> {
                        recurse_52(recurse_52, __core__tailList__safe(map_17))
                    })
                })()
            };
            recurse_53(recurse_53, self_55)
        }
    };
    __helios__value__get_policy = (self_56) -> {
        (mph_8) -> {
            mph_9 = __helios__mintingpolicyhash____to_data(mph_8);
            recurse_55 = (recurse_54, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), mph_9),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_18)))
                        },
                        () -> {
                            recurse_54(recurse_54, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_55(recurse_55, self_56)
        }
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_9, b_9) -> {
            recurse_57 = (recurse_56, keys_3, result) -> {
                __core__chooseList(keys_3, () -> {
                    result
                }, () -> {
                    key_13 = __core__headList__safe(keys_3);
                    tail_2 = recurse_56(recurse_56, __core__tailList__safe(keys_3), result);
                    sum = op(__helios__value__get_inner_map_int(a_9, key_13), __helios__value__get_inner_map_int(b_9, key_13));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_2
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_13, __core__iData(sum)), tail_2)
                        }
                    )()
                })()
            };
            recurse_57(recurse_57, __helios__value__merge_map_keys(a_9, b_9), __core__mkNilPairData(()))
        }
    };
    __helios__value__add_or_subtract = (a_10, b_10, op_1) -> {
        recurse_59 = (recurse_58, keys_4, result_1) -> {
            __core__chooseList(keys_4, () -> {
                result_1
            }, () -> {
                key_14 = __core__headList__safe(keys_4);
                tail_3 = recurse_58(recurse_58, __core__tailList__safe(keys_4), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_10, key_14), __helios__value__get_inner_map(b_10, key_14));
                __core__chooseList(item_5, () -> {
                    tail_3
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_14, __core__mapData(item_5)), tail_3)
                })()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_11, b_11) -> {
        __helios__value__add_or_subtract(a_11, b_11, __core__addInteger)
    };
    __helios__common__map = (self_57, fn_8, init) -> {
        recurse_61 = (recurse_60, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_60(recurse_60, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_61(recurse_61, self_57, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp_2) -> {
        recurse_63 = (recurse_62, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_7 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp_2(x_3, head_7),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_7, recurse_62(recurse_62, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, lst_8)
    };
    __helios__common__sort = (lst_10, comp_3) -> {
        recurse_65 = (recurse_64, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_8, tail_4) -> {
                    __helios__common__insert_in_sorted(head_8, tail_4, comp_3)
                }(__core__headList__safe(lst_11), recurse_64(recurse_64, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_65(recurse_65, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter_map = (self_58, fn_9) -> {
        __helios__common__filter(self_58, fn_9, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_12, b_12) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_12, b_12),
            b_12,
            a_12
        )
    };
    __helios__common__slice_bytearray = (self_59, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_59), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_11 = (start_1) -> {
                fn_10 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_59)
                };
                fn_10(normalize(end))
            };
            fn_11(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_60) -> {
        __helios__common__slice_bytearray(self_60, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_61) -> {
        () -> {
            __core__blake2b_256(self_61)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_62) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_62))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_63) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_63))
    };
    __helios__common__enum_fields_after_5 = (self_64) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_64))
    };
    __helios__common__enum_fields_after_6 = (self_65) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_65))
    };
    __helios__common__enum_fields_after_7 = (self_66) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_66))
    };
    __helios__common__enum_fields_after_8 = (self_67) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_67))
    };
    __helios__common__enum_field_9 = (self_68) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_68))
    };
    __helios__tx__redeemers = (self_69) -> {
        __core__unMapData(__helios__common__enum_field_9(self_69))
    };
    __helios__scriptpurpose__spending____is = (data_22) -> {
        __helios__common__enum_tag_equals(data_22, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_70) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_5, map_19) -> {
                __core__chooseList(map_19, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_19)), mintingPolicyHash),
                        () -> {
                            inner_5(inner_5, __core__unMapData(__core__sndPair(__core__headList__safe(map_19))))
                        },
                        () -> {
                            outer_2(outer_2, inner_5, __core__tailList__safe(map_19))
                        }
                    )()
                })()
            };
            inner_7 = (inner_6, map_20) -> {
                __core__chooseList(map_20, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_20)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_20)))
                        },
                        () -> {
                            inner_6(inner_6, __core__tailList__safe(map_20))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_7, self_70)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_71) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_10) -> {
                            __helios__bytearray__show(bytes_10)()
                        }))(fields_5)
                    },
                    () -> {
                        __helios__data__show(self_71)()
                    }
                )()
            })(self_71)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_23) -> {
            callback_nok_5 = __helios__data__show(data_23);
            __core__chooseData(data_23, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_6(__core__unIData__safe(data_23))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_72) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_6);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_6);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_72)()
                    }
                )()
            })(self_72)
        }
    };
    __helios__txinput__datum = (self_73) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_73))
    };
    __helios__tx__ref_inputs = (self_74) -> {
        __core__unListData(__helios__common__enum_field_1(self_74))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__bytearray__decode_utf8 = (self_75) -> {
        () -> {
            __core__decodeUtf8(self_75)
        }
    };
    __helios__string__serialize = (self_76) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_76))
        }
    };
    __helios__txinput__address = (self_77) -> {
        __helios__txoutput__address(__helios__txinput__output(self_77))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_78) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_78))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_79) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_79))
        }
    };
    __helios__struct____eq = (self_80, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_80), __helios__struct____to_data(other_3))
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_81, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_81), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_82) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_82)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_83) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_83))
    };
    __helios__spendingcredential__validator__cast = (data_24) -> {
        __helios__common__assert_constr_index(data_24, 1)
    };
    __helios__txoutput__is_locked_by = (self_84) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_84));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_85) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_85, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_86) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_86)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_25) -> {
        __core__chooseData(data_25, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_26) -> {
        __core__sndPair(__core__unConstrData(data_26))
    };
    __helios__data__constrdata__tag = (data_27) -> {
        __core__fstPair(__core__unConstrData(data_27))
    };
    __helios__common__struct_fields_after_1 = (self_87) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_87))
    };
    __helios__common__struct_fields_after_2 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_88))
    };
    __helios__common__struct_fields_after_3 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_89))
    };
    __helios__common__struct_field_4 = (self_90) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_90))
    };
    __helios__common__struct_field_3 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_91))
    };
    __helios__common__struct_field_2 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_92))
    };
    __helios__txoutput__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_29) -> {
        __helios__common__test_constr_data_2(data_29, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_7 = (self_93) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_93))
    };
    __helios__common__enum_field_6 = (self_94) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_94))
    };
    __helios__common__enum_field_5 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_95))
    };
    __helios__common__enum_field_3 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_96))
    };
    __helios__common__mStruct_field = (self_97, name_2) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_97), name_2)
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_8 = __core__unConstrData__safe(data_30);
            index_4 = __core__fstPair(pair_8);
            fields_7 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_31) -> {
        __core__chooseData(data_31, () -> {
            pair_9 = __core__unConstrData__safe(data_31);
            tag_4 = __core__fstPair(pair_9);
            fields_8 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_32) -> {
        __core__chooseData(data_32, () -> {
            pair_10 = __core__unConstrData__safe(data_32);
            index_5 = __core__fstPair(pair_10);
            fields_9 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_98, fn_13, callback_7) -> {
        recurse_67 = (recurse_66, self_99, fn_14) -> {
            __core__chooseList(self_99, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_9 = __core__headList__safe(self_99);
                __core__ifThenElse(
                    fn_14(head_9),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_9)))
                    },
                    () -> {
                        recurse_66(recurse_66, __core__tailList__safe(self_99), fn_14)
                    }
                )()
            })()
        };
        recurse_67(recurse_67, self_98, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__assetclass__is_valid_data = (data_34) -> {
        __helios__common__test_constr_data_2(data_34, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_35) -> {
        __core__chooseData(data_35, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_100) -> {
        (fn_15) -> {
            recurse_69 = (recurse_68, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_68(recurse_68, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_69(recurse_69, self_100)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_101) -> {
        __helios__common__length(self_101)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_102) -> {
        __helios__common__length(self_102)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_21) -> {
        recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                true
            }, () -> {
                head_10 = __core__headList__safe(map_22);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_10)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_10)),
                            () -> {
                                recurse_70(recurse_70, __core__tailList__safe(map_22))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_71(recurse_71, map_21)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_36) -> {
        map_23 = __core__unMapData(data_36);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_23
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_103) -> {
        (key_15) -> {
            __helios__common__map_get(self_103, __helios__scriptpurpose____to_data(key_15), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_104) -> {
        (fn_16) -> {
            recurse_73 = (recurse_72, map_24) -> {
                __core__chooseList(map_24, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_24)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_72(recurse_72, __core__tailList__safe(map_24))
                        }
                    )()
                })()
            };
            recurse_73(recurse_73, self_104)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_37) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_37, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_37, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_38) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_38),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_38
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_105) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_105, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_106) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_106, #747065))
    };
    __helios__list[__helios__data]__head = (self_107) -> {
        __helios__data__from_data(__core__headList(self_107))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_7) -> {
        __cond_1 = value_7;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_39) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_39),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_39),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_39),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_40) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_40),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_40
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_41) -> {
        __helios__common__enum_tag_equals(data_41, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_42) -> {
        __core__chooseData(data_42, () -> {
            pair_11 = __core__unConstrData__safe(data_42);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_43 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_43, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_43);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_11),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_12 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_12),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_108) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_108))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_109) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_109))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_44) -> {
        __helios__common__enum_tag_equals(data_44, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_45) -> {
        __core__chooseData(data_45, () -> {
            pair_12 = __core__unConstrData__safe(data_45);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_46 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_46, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_46);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_47) -> {
        __helios__common__enum_tag_equals(data_47, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_48) -> {
        __core__chooseData(data_48, () -> {
            pair_13 = __core__unConstrData__safe(data_48);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_49 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_49, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_49);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_50) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_50),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_50),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_50),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_50),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_50),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_50),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_50),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_50),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_51) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_51),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_51
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_52) -> {
        __helios__common__enum_tag_equals(data_52, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_53) -> {
        __core__chooseData(data_53, () -> {
            pair_14 = __core__unConstrData__safe(data_53);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_54 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_54, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_54);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_55) -> {
        __helios__common__enum_tag_equals(data_55, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_56) -> {
        __core__chooseData(data_56, () -> {
            pair_15 = __core__unConstrData__safe(data_56);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_57 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_57, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_57);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_58) -> {
        __helios__common__enum_tag_equals(data_58, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_59) -> {
        __core__chooseData(data_59, () -> {
            pair_16 = __core__unConstrData__safe(data_59);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_60 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_60, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_60);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_61) -> {
        __helios__common__enum_tag_equals(data_61, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_62) -> {
        __core__chooseData(data_62, () -> {
            pair_17 = __core__unConstrData__safe(data_62);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_63 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_63, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_63);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_64) -> {
        __helios__common__enum_tag_equals(data_64, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_65) -> {
        __core__chooseData(data_65, () -> {
            pair_18 = __core__unConstrData__safe(data_65);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_66 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_66, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_66);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_110))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_111) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_111)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_67) -> {
        __helios__common__enum_tag_equals(data_67, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_68) -> {
        __core__chooseData(data_68, () -> {
            pair_19 = __core__unConstrData__safe(data_68);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_69 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_69, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_69);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_70) -> {
        __helios__common__enum_tag_equals(data_70, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_71) -> {
        __core__chooseData(data_71, () -> {
            pair_20 = __core__unConstrData__safe(data_71);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_72 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_72, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_72);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_73) -> {
        __helios__common__enum_tag_equals(data_73, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_74) -> {
        __core__chooseData(data_74, () -> {
            pair_21 = __core__unConstrData__safe(data_74);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_75 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_75, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_75);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_76) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_76),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_76),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_76),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_76),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_76),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_77) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_77),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_77
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_78) -> {
        __helios__common__enum_tag_equals(data_78, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_79) -> {
        __core__chooseData(data_79, () -> {
            pair_22 = __core__unConstrData__safe(data_79);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_80 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_80, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_80);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_15 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_15),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_81) -> {
        __helios__common__enum_tag_equals(data_81, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_82) -> {
        __core__chooseData(data_82, () -> {
            pair_23 = __core__unConstrData__safe(data_82);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_83 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_83, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_83);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_84) -> {
        __helios__common__enum_tag_equals(data_84, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_85) -> {
        __core__chooseData(data_85, () -> {
            pair_24 = __core__unConstrData__safe(data_85);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_86 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_86, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_86);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_19),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_112) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_112))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_113) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_113))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_87) -> {
        __helios__common__enum_tag_equals(data_87, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_88) -> {
        __core__chooseData(data_88, () -> {
            pair_25 = __core__unConstrData__safe(data_88);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_89 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_89, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_89);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_90) -> {
        __core__chooseData(data_90, () -> {
            pair_26 = __core__unConstrData__safe(data_90);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_91 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_91, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_91);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_22),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_23),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_92) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_92),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_92),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_92),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_93) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_93),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_93
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_94) -> {
        __helios__common__enum_tag_equals(data_94, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_95) -> {
        __core__chooseData(data_95, () -> {
            pair_27 = __core__unConstrData__safe(data_95);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_96 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_96, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_96);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_24 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_24),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_25 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_25),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_26 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_26),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_114) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_114))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_115) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_115))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_116))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_97) -> {
        __helios__common__enum_tag_equals(data_97, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_98) -> {
        __core__chooseData(data_98, () -> {
            pair_28 = __core__unConstrData__safe(data_98);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_99 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_99, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_99);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_100) -> {
        __helios__common__enum_tag_equals(data_100, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_101) -> {
        __core__chooseData(data_101, () -> {
            pair_29 = __core__unConstrData__safe(data_101);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_102 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_102, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_102);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_27 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_27),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_28 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_28),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_29 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_29),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_30 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_30),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_120) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_120))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_103) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_103),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_103),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_103),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_103),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_103),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_103),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_103),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_104) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_104),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_104
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_105) -> {
        __helios__common__enum_tag_equals(data_105, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_106) -> {
        __core__chooseData(data_106, () -> {
            pair_30 = __core__unConstrData__safe(data_106);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_107 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_107, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_107);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_31),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_32 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_32),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_108) -> {
        __helios__common__enum_tag_equals(data_108, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_109) -> {
        __core__chooseData(data_109, () -> {
            pair_31 = __core__unConstrData__safe(data_109);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_110 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_110, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_110);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_111) -> {
        __helios__common__enum_tag_equals(data_111, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_112) -> {
        __core__chooseData(data_112, () -> {
            pair_32 = __core__unConstrData__safe(data_112);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_113 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_113, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_113);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_33 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_33),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_114) -> {
        __helios__common__enum_tag_equals(data_114, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_115) -> {
        __core__chooseData(data_115, () -> {
            pair_33 = __core__unConstrData__safe(data_115);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_116 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_116, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_116);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_117) -> {
        __helios__common__enum_tag_equals(data_117, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_118) -> {
        __core__chooseData(data_118, () -> {
            pair_34 = __core__unConstrData__safe(data_118);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_119 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_119, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_119);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_120) -> {
        __helios__common__enum_tag_equals(data_120, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_121) -> {
        __core__chooseData(data_121, () -> {
            pair_35 = __core__unConstrData__safe(data_121);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_122 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_122, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_122);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_36),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_37 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_37),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_123) -> {
        __helios__common__enum_tag_equals(data_123, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_124) -> {
        __core__chooseData(data_124, () -> {
            pair_36 = __core__unConstrData__safe(data_124);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_125 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_125, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_125);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_38),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_123) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_126) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_126),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_126),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_126),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_126),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_126),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_126),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_126),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_126),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_126),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_127) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_127),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_127
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_128) -> {
        __core__chooseData(data_128, () -> {
            pair_37 = __core__unConstrData__safe(data_128);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_129 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_129, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_129);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_39),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_130) -> {
        __helios__common__enum_tag_equals(data_130, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_131) -> {
        __core__chooseData(data_131, () -> {
            pair_38 = __core__unConstrData__safe(data_131);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_132 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_132, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_132);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_40),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_124) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_133) -> {
        __helios__common__enum_tag_equals(data_133, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_134) -> {
        __core__chooseData(data_134, () -> {
            pair_39 = __core__unConstrData__safe(data_134);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_135 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_135, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_135);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_125) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_125))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_136) -> {
        __helios__common__enum_tag_equals(data_136, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_137) -> {
        __core__chooseData(data_137, () -> {
            pair_40 = __core__unConstrData__safe(data_137);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_138 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_138, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_138);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_42),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_126) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_139) -> {
        __core__chooseData(data_139, () -> {
            pair_41 = __core__unConstrData__safe(data_139);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_140 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_140, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_140);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_43 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_43),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_141) -> {
        __helios__common__enum_tag_equals(data_141, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_142) -> {
        __core__chooseData(data_142, () -> {
            pair_42 = __core__unConstrData__safe(data_142);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_143 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_143, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_143);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_44),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_45),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_144) -> {
        __helios__common__enum_tag_equals(data_144, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_145) -> {
        __core__chooseData(data_145, () -> {
            pair_43 = __core__unConstrData__safe(data_145);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_146 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_146, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_146);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_147) -> {
        __helios__common__enum_tag_equals(data_147, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_148) -> {
        __core__chooseData(data_148, () -> {
            pair_44 = __core__unConstrData__safe(data_148);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_149 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_149, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_149);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_48),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_49 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_49),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_150) -> {
        __helios__common__enum_tag_equals(data_150, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_75 = (recurse_74, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_151) -> {
        __core__chooseData(data_151, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_151))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_152) -> {
        __core__chooseData(data_152, () -> {
            pair_45 = __core__unConstrData__safe(data_152);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_153 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_153, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_153);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_50),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_154) -> {
        lst_15 = __core__unListData(data_154);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_127) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_155) -> {
        __helios__common__enum_tag_equals(data_155, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_156) -> {
        __helios__common__enum_tag_equals(data_156, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_157) -> {
        __core__chooseData(data_157, () -> {
            pair_46 = __core__unConstrData__safe(data_157);
            index_6 = __core__fstPair(pair_46);
            fields_86 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_158) -> {
        __core__chooseData(data_158, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_158);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_51 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_51),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_52 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_52),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_53 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_53),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_159) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_159),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_159)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_128) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_128))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_160) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_160),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_160
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_129) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_129))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_130))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_131) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_132) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_132)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_132)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_132)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_133) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_133, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_134) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_135) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_135);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_135);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_136) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_136, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_137;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_137)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            pair_47 = __core__unConstrData__safe(data_166);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_167);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_54 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_54),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_55),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_56 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_56),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_168) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_168),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_168)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_138) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_138))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_139) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_139))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_169) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_169),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_169
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_140) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_140))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_170) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_170),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_170),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_171) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_171),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_171
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_172) -> {
        __helios__common__enum_tag_equals(data_172, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_173) -> {
        __core__chooseData(data_173, () -> {
            pair_48 = __core__unConstrData__safe(data_173);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_174 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_174, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_174);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_57 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_57),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_141) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_141))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_77 = (recurse_76, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_175) -> {
        __core__chooseData(data_175, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_175))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_176) -> {
        __core__chooseData(data_176, () -> {
            pair_49 = __core__unConstrData__safe(data_176);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_177 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_177, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_177);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_58 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_58),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_59 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_59),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_178) -> {
        __core__chooseData(data_178, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_178);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_60 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_60),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_61),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_62),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_179) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_179),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_179)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_142) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_142))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_143) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_143))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_144) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_144), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_144))
        }
    };
    __helios__list[__helios__txinput]__any = (self_145) -> {
        (fn_19) -> {
            __helios__common__any(self_145, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_180) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_180),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_180),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_180),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_180),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_180),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_181) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_181),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_181
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_182) -> {
        __helios__common__enum_tag_equals(data_182, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_183) -> {
        __core__chooseData(data_183, () -> {
            pair_50 = __core__unConstrData__safe(data_183);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_184 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_184, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_184);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_185) -> {
        __helios__common__enum_tag_equals(data_185, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_186) -> {
        __core__chooseData(data_186, () -> {
            pair_51 = __core__unConstrData__safe(data_186);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_187 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_187, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_187);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_63 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_63),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, () -> {
                                        false
                                    }, () -> {
                                        head_64 = __core__headList__safe(fields_107);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_64),
                                            () -> {
                                                fields_108 = __core__tailList__safe(fields_107);
                                                __core__chooseList(fields_108, () -> {
                                                    false
                                                }, () -> {
                                                    head_65 = __core__headList__safe(fields_108);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_65),
                                                        () -> {
                                                            fields_109 = __core__tailList__safe(fields_108);
                                                            __core__chooseList(fields_109, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_146) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_146))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_147) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_147))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_148) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_148))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_188) -> {
        __core__chooseData(data_188, () -> {
            pair_52 = __core__unConstrData__safe(data_188);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_189 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_189, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_189);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_66 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_66),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_67 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_67),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_190) -> {
        __core__chooseData(data_190, () -> {
            pair_53 = __core__unConstrData__safe(data_190);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_191 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_191, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_191);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_192) -> {
        __core__chooseData(data_192, () -> {
            pair_54 = __core__unConstrData__safe(data_192);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 4),
                () -> {
                    data_193 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_193, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_193);
                        __core__chooseList(fields_114, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_55 = __core__unConstrData__safe(data_194);
            index_8 = __core__fstPair(pair_55);
            fields_115 = __core__sndPair(pair_55);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_115, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_115), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_115))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_115, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_195) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_195, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_195, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_195, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_196) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_196),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_196
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_149) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_149, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_150) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_150, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_197) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_197),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_197
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_151) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_151, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_198) -> {
        __helios__common__enum_tag_equals(data_198, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_199) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_199),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_199),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_199),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_200) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_200),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_200
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_79 = (recurse_78, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_201) -> {
        __core__chooseData(data_201, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_201))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_68 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_68)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_68)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_27) -> {
        recurse_83 = (recurse_82, map_28) -> {
            __core__chooseList(map_28, () -> {
                true
            }, () -> {
                head_69 = __core__headList__safe(map_28);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_69)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_69)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_28))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_27)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_85 = (recurse_84, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_204) -> {
        __core__chooseData(data_204, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_204))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_205) -> {
        __core__chooseData(data_205, () -> {
            pair_56 = __core__unConstrData__safe(data_205);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_206 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_206, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_206);
                        __core__chooseList(fields_116, () -> {
                            false
                        }, () -> {
                            head_70 = __core__headList__safe(fields_116);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_70),
                                () -> {
                                    fields_117 = __core__tailList__safe(fields_116);
                                    __core__chooseList(fields_117, () -> {
                                        false
                                    }, () -> {
                                        head_71 = __core__headList__safe(fields_117);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_71),
                                            () -> {
                                                fields_118 = __core__tailList__safe(fields_117);
                                                __core__chooseList(fields_118, () -> {
                                                    false
                                                }, () -> {
                                                    head_72 = __core__headList__safe(fields_118);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                        () -> {
                                                            fields_119 = __core__tailList__safe(fields_118);
                                                            __core__chooseList(fields_119, () -> {
                                                                false
                                                            }, () -> {
                                                                head_73 = __core__headList__safe(fields_119);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                    () -> {
                                                                        fields_120 = __core__tailList__safe(fields_119);
                                                                        __core__chooseList(fields_120, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_74 = __core__headList__safe(fields_120);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_74),
                                                                                () -> {
                                                                                    fields_121 = __core__tailList__safe(fields_120);
                                                                                    __core__chooseList(fields_121, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_75 = __core__headList__safe(fields_121);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_75),
                                                                                            () -> {
                                                                                                fields_122 = __core__tailList__safe(fields_121);
                                                                                                __core__chooseList(fields_122, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_76 = __core__headList__safe(fields_122);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_76),
                                                                                                        () -> {
                                                                                                            fields_123 = __core__tailList__safe(fields_122);
                                                                                                            __core__chooseList(fields_123, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_77 = __core__headList__safe(fields_123);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_77),
                                                                                                                    () -> {
                                                                                                                        fields_124 = __core__tailList__safe(fields_123);
                                                                                                                        __core__chooseList(fields_124, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_207) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_207),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_207
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_152) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_152))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_208) -> {
        lst_22 = __core__unListData(data_208);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_153) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_153))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_209) -> {
        map_29 = __core__unMapData(data_209);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_29),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_29
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_154) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_154))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_155))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_156) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_156))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_157) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_157))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_210) -> {
        map_30 = __core__unMapData(data_210);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_30),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_30
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_158) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_158))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_211) -> {
        lst_23 = __core__unListData(data_211);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_159) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_159))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_212) -> {
        __core__chooseData(data_212, () -> {
            pair_57 = __core__unConstrData__safe(data_212);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_213 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_213, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_213);
                        __core__chooseList(fields_125, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_214) -> {
        __helios__common__enum_tag_equals(data_214, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_31) -> {
        recurse_87 = (recurse_86, map_32) -> {
            __core__chooseList(map_32, () -> {
                true
            }, () -> {
                head_78 = __core__headList__safe(map_32);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_78)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_78)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_32))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_31)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_215) -> {
        __core__chooseData(data_215, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_215))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_216) -> {
        __core__chooseData(data_216, () -> {
            pair_58 = __core__unConstrData__safe(data_216);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_217 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_217, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_126 = __core__unListData__safe(data_217);
                        __core__chooseList(fields_126, () -> {
                            false
                        }, () -> {
                            head_79 = __core__headList__safe(fields_126);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_79),
                                () -> {
                                    fields_127 = __core__tailList__safe(fields_126);
                                    __core__chooseList(fields_127, () -> {
                                        false
                                    }, () -> {
                                        head_80 = __core__headList__safe(fields_127);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_80),
                                            () -> {
                                                fields_128 = __core__tailList__safe(fields_127);
                                                __core__chooseList(fields_128, () -> {
                                                    false
                                                }, () -> {
                                                    head_81 = __core__headList__safe(fields_128);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_81),
                                                        () -> {
                                                            fields_129 = __core__tailList__safe(fields_128);
                                                            __core__chooseList(fields_129, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_218) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_218),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_218),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_218),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_219) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_219),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_219
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_220) -> {
        __helios__common__enum_tag_equals(data_220, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_221) -> {
        __core__chooseData(data_221, () -> {
            pair_59 = __core__unConstrData__safe(data_221);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_222 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_222, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_222);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_223) -> {
        __helios__common__enum_tag_equals(data_223, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_224) -> {
        __core__chooseData(data_224, () -> {
            pair_60 = __core__unConstrData__safe(data_224);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_225 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_225, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_225);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_160) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_160))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_161) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_161))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_226) -> {
        __helios__common__enum_tag_equals(data_226, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_227) -> {
        __core__chooseData(data_227, () -> {
            pair_61 = __core__unConstrData__safe(data_227);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_228 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_228, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_228);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_84),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_85 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_85),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_162) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_162))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_163) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_163))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_229) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_229),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_229),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_229),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_229),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_229),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_229),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_230) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_230),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_230
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_231) -> {
        __helios__common__enum_tag_equals(data_231, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_232) -> {
        __core__chooseData(data_232, () -> {
            pair_62 = __core__unConstrData__safe(data_232);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_233 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_233, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_233);
                        __core__chooseList(fields_137, () -> {
                            false
                        }, () -> {
                            head_86 = __core__headList__safe(fields_137);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_86),
                                () -> {
                                    fields_138 = __core__tailList__safe(fields_137);
                                    __core__chooseList(fields_138, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_164) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_164))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_234) -> {
        __helios__common__enum_tag_equals(data_234, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_235) -> {
        __core__chooseData(data_235, () -> {
            pair_63 = __core__unConstrData__safe(data_235);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_236 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_236, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_236);
                        __core__chooseList(fields_139, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_237) -> {
        __helios__common__enum_tag_equals(data_237, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_238) -> {
        __core__chooseData(data_238, () -> {
            pair_64 = __core__unConstrData__safe(data_238);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_239 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_239, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_140 = __core__unListData__safe(data_239);
                        __core__chooseList(fields_140, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_240) -> {
        __helios__common__enum_tag_equals(data_240, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_241) -> {
        __core__chooseData(data_241, () -> {
            pair_65 = __core__unConstrData__safe(data_241);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 3),
                () -> {
                    data_242 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_242, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_242);
                        __core__chooseList(fields_141, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_243) -> {
        __helios__common__enum_tag_equals(data_243, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_244) -> {
        __core__chooseData(data_244, () -> {
            pair_66 = __core__unConstrData__safe(data_244);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 4),
                () -> {
                    data_245 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_245, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_245);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_246) -> {
        __helios__common__enum_tag_equals(data_246, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_247) -> {
        __core__chooseData(data_247, () -> {
            pair_67 = __core__unConstrData__safe(data_247);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 5),
                () -> {
                    data_248 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_248, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_248);
                        __core__chooseList(fields_143, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_15) -> {
        charterAc = __helios__assetclass__new(mph_15, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_16, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_68 = __core__unConstrData__safe(data_249);
            index_9 = __core__fstPair(pair_68);
            fields_144 = __core__sndPair(pair_68);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_144, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_144), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_144))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_144, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_250) -> {
        __core__chooseData(data_250, () -> {
            pair_69 = __core__unConstrData__safe(data_250);
            index_10 = __core__fstPair(pair_69);
            fields_145 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_145, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_145), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_145))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_145, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_165))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_166) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_166))
    };
    __helios__option[__helios__string]__from_data = (data_251) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_251),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_251
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_167) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_167))
    };
    __helios__option[__helios__txinput]__from_data = (data_252) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_252),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_252
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_168) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_168))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_169) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_169))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_17) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_17), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_170) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_170))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_171) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_171))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_146 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_146);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_172) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_172)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_173) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_173)(), __module__CapoHelpers__DelegateInput[]__serialize(self_173)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_173)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_174) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_174)(), __module__CapoHelpers__DelegateInput[]__serialize(self_174)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_174)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_174))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_175) -> {
        (index_12) -> {
            recurse_89 = (recurse_88, self_176, i_9) -> {
                __core__chooseList(self_176, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_176)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_176), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_175, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_177) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_177, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_178) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_178)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_148 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_148)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_147 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_147)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_178)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_179) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_179);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_179)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_150 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_150));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_15);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_149 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_149));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_180) -> {
        () -> {
            __lhs_0_41 = self_180;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_18 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_18, false, (), false, ()), "no"), self_180))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_181) -> {
        () -> {
            __lhs_0_47 = self_181;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_182) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_182))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_183) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_183))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_19, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_19), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_184);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185) -> {
        (key_16) -> {
            __helios__common__map_get(self_185, __helios__string____to_data(key_16), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_186) -> {
            (key_17) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_17)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_186)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_17))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_253) -> {
        __helios__common__enum_tag_equals(data_253, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_187) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_187))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_188) -> {
            (key_18, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_188)(key_18);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_18)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_189) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_189)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_190) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_190))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_191) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_191)()))(__module__CapoHelpers__CapoCtx[]__mph(self_191), false, (), false, ()), "no way m"), self_191))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_255) -> {
        __helios__common__enum_tag_equals(data_255, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_192) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_192))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_193) -> {
        (key_19) -> {
            __helios__common__map_get(self_193, __helios__string____to_data(key_19), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_194) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_194)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_194)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_195) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_195)()))(__module__CapoHelpers__CapoCtx[]__mph(self_195));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_196) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_196)()))(__module__CapoHelpers__CapoCtx[]__mph(self_196));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_197);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_198) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_198), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_198);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_199) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_199);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_200) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_200), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_200))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_201)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_202) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_202)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_203) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_203)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_256 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_256);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_256));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_205) -> {
        (typeName_3, __useopt__id_1, id_3) -> {
            id_4 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_205)();
            (txo_1) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_1), capoAddr_2),
                    () -> {
                        data_257 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_1));
                        __cond_39 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_257);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                            () -> {
                                (__lhs_0_72) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_257));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__32) -> {
                                    false
                                }
                            }
                        )()(__cond_39)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_206) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_206)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_40 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                    () -> {
                        (__lhs_0_73) -> {
                            data_258 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_258), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_258))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_258), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_258))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__33) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_40)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_259) -> {
        __helios__common__enum_tag_equals(data_259, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_207) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_207), recId_5);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_1(self_207)();
            __cond_41 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_41),
                () -> {
                    (__lhs_0_75) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_74) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_74);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_41)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_208) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
                __cond_42 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_42),
                    () -> {
                        (__lhs_0_81) -> {
                            self_208
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_42),
                            () -> {
                                (__lhs_0_80) -> {
                                    self_208
                                }
                            },
                            () -> {
                                (__lhs_0_76) -> {
                                    __lhs_0_77 = self_208;
                                    mph_20 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_77);
                                    charterAc_3 = __helios__assetclass__new(mph_20, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_43),
                                        () -> {
                                            (__lhs_0_79) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_208)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_78) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_78);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_20, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_43)
                                }
                            }
                        )()
                    }
                )()(__cond_42))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_209) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __cond_44 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                () -> {
                    (__lhs_0_87) -> {
                        self_209
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                        () -> {
                            (__lhs_0_86) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_82) -> {
                                __lhs_0_83 = self_209;
                                mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_83);
                                charterAc_4 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_45),
                                    () -> {
                                        (__lhs_0_85) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_85);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_84) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_45)))
                            }
                        }
                    )()
                }
            )()(__cond_44))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_210) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_210);
            __cond_46 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                () -> {
                    (__lhs_0_91) -> {
                        self_210
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                        () -> {
                            (__lhs_0_90) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_88) -> {
                                __lhs_0_89 = self_210;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_89);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_22);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_46))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_211) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_211, (z_3, pair_70) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_70)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_70)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_212) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_212))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_213) -> {
        (fn_22) -> {
            fn_23 = (pair_71) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_71)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_71)))
            };
            __helios__common__all(self_213, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_214) -> {
        (fn_24) -> {
            __helios__common__all(self_214, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_215) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_215)();
            mph_23 = __module__CapoHelpers__CapoCtx[]__mph(self_215);
            __lhs_0_92 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_92);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_92);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_92);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_92);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_92);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_215)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_23, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_20, entry_1) -> {
                    __cond_48 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_48),
                        () -> {
                            (__lhs_0_95) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_95);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_23, true))()
                            }
                        },
                        () -> {
                            (__34) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_20)), true)
                            }
                        }
                    )()(__cond_48)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_21, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_21)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_23, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_47 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_23, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_47),
                () -> {
                    (__lhs_0_94) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_93) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_47)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_216) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_216, self_216)
            }), "prevent unused var"), __cond_49 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_49),
                () -> {
                    (__lhs_0_102) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_49),
                        () -> {
                            (__lhs_0_101) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_49),
                                () -> {
                                    (__lhs_0_100) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_49),
                                        () -> {
                                            (__lhs_0_99) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_49),
                                                () -> {
                                                    (__lhs_0_98) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_49),
                                                        () -> {
                                                            (__lhs_0_97) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_49))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_217) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_217)(), __module__CapoHelpers__CapoCtx[]__serialize(self_217)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_24) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__35) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 1)
    };
    __helios__option[__helios__data]__some__some = (self_218) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_218))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_219) -> {
        (key_22) -> {
            __helios__common__map_get(self_219, __helios__scriptpurpose____to_data(key_22), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_25, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_25);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_51 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_51),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__36) -> {
                            false
                        }
                    }
                )()(__cond_51)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_52 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_52),
                () -> {
                    (__lhs_0_110) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_105) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_105);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_53 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_53),
                            () -> {
                                (__lhs_0_106) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_106);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_54 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_54),
                                        () -> {
                                            (__lhs_0_109) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_108) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_107) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_54)))
                                }
                            },
                            () -> {
                                (__37) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_53)
                    }
                }
            )()(__cond_52)))
        }(__cond_50 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_50),
            () -> {
                (__lhs_0_104) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_104);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_103) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_50))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_220) -> {
        (fn_25) -> {
            recurse_91 = (recurse_90, map_33) -> {
                __core__chooseList(map_33, () -> {
                    ()
                }, () -> {
                    head_87 = __core__headList__safe(map_33);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_87)), __helios__int__from_data(__core__sndPair(head_87))), recurse_90(recurse_90, __core__tailList__safe(map_33)))
                })()
            };
            recurse_91(recurse_91, self_220)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_221) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_221, (pair_72) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_72)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_72)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_222) -> {
        (fn_27) -> {
            recurse_93 = (recurse_92, map_34) -> {
                __core__chooseList(map_34, () -> {
                    ()
                }, () -> {
                    head_88 = __core__headList__safe(map_34);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_88)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_88))), recurse_92(recurse_92, __core__tailList__safe(map_34)))
                })()
            };
            recurse_93(recurse_93, self_222)
        }
    };
    __helios__option[__helios__int]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__int]__some__some = (self_223) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_223))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_224) -> {
        (key_23) -> {
            __helios__common__map_get(self_224, __helios__bytearray____to_data(key_23), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_225) -> {
        (key_24) -> {
            key_25 = __helios__mintingpolicyhash____to_data(key_24);
            recurse_95 = (recurse_94, self_226) -> {
                __core__chooseList(self_226, () -> {
                    self_226
                }, () -> {
                    head_89 = __core__headList__safe(self_226);
                    tail_5 = __core__tailList__safe(self_226);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_89)),
                        () -> {
                            recurse_94(recurse_94, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_89, recurse_94(recurse_94, tail_5))
                        }
                    )()
                })()
            };
            recurse_95(recurse_95, self_225)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_227, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_227), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_228) -> {
        (comp_4) -> {
            __helios__common__sort(self_228, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_229) -> {
        recurse_97 = (recurse_96, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_96(recurse_96, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_97(recurse_97, self_229)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_230) -> {
        (fn_28) -> {
            __helios__common__map(self_230, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_111 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_26, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_26, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_26, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_26)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_26)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_26))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_26);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __38) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_26)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_26),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_26))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_55 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_113) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_112);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_55)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__NodeOperatorSettings__NodeOperatorSettings[]__is_valid_data = (data_263) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_263, __core__bData(#6d696e53746b), __helios__value__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_263, __core__bData(#6d696e466565), __helios__int__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_263, __core__bData(#6e64557074), __helios__int__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_263, __core__bData(#6e64486269), __helios__duration__is_valid_data),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in NodeOperatorSettings.ndHbi", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in NodeOperatorSettings.ndUpt", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in NodeOperatorSettings.minFee", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in NodeOperatorSettings.minStk", () -> {
                    false
                })()
            }
        )()
    };
    __module__NeighborhoodSettings__NeighborhoodSettings[]__is_valid_data = (data_264) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_264, __core__bData(#6d696e53746b), __helios__value__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_264, __core__bData(#6d696e526567466565), __helios__int__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in NeighborhoodSettings.minRegFee", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in NeighborhoodSettings.minStk", () -> {
                    false
                })()
            }
        )()
    };
    __module__ProtocolSettings__ProtocolSettings[]__is_valid_data = (data_265) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_265, __core__bData(#6e6268), __module__NeighborhoodSettings__NeighborhoodSettings[]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_265, __core__bData(#6e4f70), __module__NodeOperatorSettings__NodeOperatorSettings[]__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_265, __core__bData(#747065), __helios__string__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_265, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in ProtocolSettings.@id", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in ProtocolSettings.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in ProtocolSettings.nOp", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in ProtocolSettings.nbh", () -> {
                    false
                })()
            }
        )()
    };
    __module__ProtocolSettings__ProtocolSettings[]____eq = (a_17, b_16) -> {
        aFields = __core__unMapData(a_17);
        bFields = __core__unMapData(b_16);
        __core__ifThenElse(
            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #406964), __helios__common__mStruct_field_internal(bFields, #406964)),
            () -> {
                __core__ifThenElse(
                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #747065), __helios__common__mStruct_field_internal(bFields, #747065)),
                    () -> {
                        __core__ifThenElse(
                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e4f70), __helios__common__mStruct_field_internal(bFields, #6e4f70)),
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e6268), __helios__common__mStruct_field_internal(bFields, #6e6268)),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            },
            () -> {
                false
            }
        )()
    };
    __module__ProtocolSettings__ProtocolSettings[]__from_data = (data_266) -> {
        ignore_17 = __core__ifThenElse(
            __module__ProtocolSettings__ProtocolSettings[]__is_valid_data(data_266),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid ProtocolSettings data", ())
            }
        )();
        data_266
    };
    __module__ProtocolSettings__ProtocolSettings[]__validate = (self_231) -> {
        () -> {
            __helios__bool__and(() -> {
                __module__ProtocolSettings__ProtocolSettings[]____eq(self_231, self_231)
            }, () -> {
                true
            })
        }
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__is_valid_data = (__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_267) -> {
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_267),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_267),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_267),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__from_data = (__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_268) -> {
            ignore_18 = __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateDatum[]__is_valid_data(__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_268),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_268
        }
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_73 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 0),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_151, () -> {
                            false
                        }, () -> {
                            head_90 = __core__headList__safe(fields_151);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_90),
                                () -> {
                                    fields_152 = __core__tailList__safe(fields_151);
                                    __core__chooseList(fields_152, () -> {
                                        false
                                    }, () -> {
                                        head_91 = __core__headList__safe(fields_152);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_91),
                                            () -> {
                                                fields_153 = __core__tailList__safe(fields_152);
                                                __core__chooseList(fields_153, () -> {
                                                    false
                                                }, () -> {
                                                    head_92 = __core__headList__safe(fields_153);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_92),
                                                        () -> {
                                                            fields_154 = __core__tailList__safe(fields_153);
                                                            __core__chooseList(fields_154, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation____is = (data_271) -> {
        __helios__common__enum_tag_equals(data_271, 1)
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_74 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 1),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_155 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_155, () -> {
                            false
                        }, () -> {
                            head_93 = __core__headList__safe(fields_155);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_93),
                                () -> {
                                    fields_156 = __core__tailList__safe(fields_155);
                                    __core__chooseList(fields_156, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd = (self_232) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_232))
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData____is = (data_274) -> {
        __helios__common__enum_tag_equals(data_274, 2)
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_75 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 2),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_157 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_157, () -> {
                            false
                        }, () -> {
                            head_94 = __core__headList__safe(fields_157);
                            __core__ifThenElse(
                                __module__ProtocolSettings__ProtocolSettings[]__is_valid_data(head_94),
                                () -> {
                                    fields_158 = __core__tailList__safe(fields_157);
                                    __core__chooseList(fields_158, () -> {
                                        false
                                    }, () -> {
                                        head_95 = __core__headList__safe(fields_158);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_95),
                                            () -> {
                                                fields_159 = __core__tailList__safe(fields_158);
                                                __core__chooseList(fields_159, () -> {
                                                    false
                                                }, () -> {
                                                    head_96 = __core__headList__safe(fields_159);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_96),
                                                        () -> {
                                                            fields_160 = __core__tailList__safe(fields_159);
                                                            __core__chooseList(fields_160, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__data = (self_233) -> {
        __module__ProtocolSettings__ProtocolSettings[]__from_data(__helios__common__enum_field_0(self_233))
    };
    __module__ProtocolSettingsPolicy__MintingActivity[]__is_valid_data = (__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_277) -> {
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_277),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ProtocolSettingsPolicy__MintingActivity[]__from_data = (__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_278) -> {
            ignore_19 = __core__ifThenElse(
                __module__ProtocolSettingsPolicy__MintingActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_278),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_278
        }
    };
    __module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_76 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 0),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_161 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_161, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_161);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_97),
                                () -> {
                                    fields_162 = __core__tailList__safe(fields_161);
                                    __core__chooseList(fields_162, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__seed = (self_234) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_234))
    };
    __module__ProtocolSettingsPolicy__BurningActivity[]__is_valid_data = (__module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_281) -> {
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_281),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_282) -> {
        __core__chooseData(data_282, () -> {
            pair_77 = __core__unConstrData__safe(data_282);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_283 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_283, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_163 = __core__unListData__safe(data_283);
                        __core__chooseList(fields_163, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_163);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_98),
                                () -> {
                                    fields_164 = __core__tailList__safe(fields_163);
                                    __core__chooseList(fields_164, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__SpendingActivity[]__is_valid_data = (__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_284) -> {
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_284),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ProtocolSettingsPolicy__SpendingActivity[]__from_data = (__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_285) -> {
            ignore_20 = __core__ifThenElse(
                __module__ProtocolSettingsPolicy__SpendingActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_285),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_285
        }
    };
    __module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_78 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_165 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_165, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_165);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_99),
                                () -> {
                                    fields_166 = __core__tailList__safe(fields_165);
                                    __core__chooseList(fields_166, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__id = (self_235) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_235))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__is_valid_data = (__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_288),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_288),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_288),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_288),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_288),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_288),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_288),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_288),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__from_data = (__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_289) -> {
            ignore_21 = __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_289),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_289
        }
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_290) -> {
        __helios__common__enum_tag_equals(data_290, 0)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_291) -> {
        __core__chooseData(data_291, () -> {
            pair_79 = __core__unConstrData__safe(data_291);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_292 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_292, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_167 = __core__unListData__safe(data_292);
                        __core__chooseList(fields_167, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_167);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_100),
                                () -> {
                                    fields_168 = __core__tailList__safe(fields_167);
                                    __core__chooseList(fields_168, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_236) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_236))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_293) -> {
        __helios__common__enum_tag_equals(data_293, 1)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_294) -> {
        __core__chooseData(data_294, () -> {
            pair_80 = __core__unConstrData__safe(data_294);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 1),
                () -> {
                    data_295 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_295, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_169 = __core__unListData__safe(data_295);
                        __core__chooseList(fields_169, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_169);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_101),
                                () -> {
                                    fields_170 = __core__tailList__safe(fields_169);
                                    __core__chooseList(fields_170, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_237) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_237))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities____is = (data_296) -> {
        __helios__common__enum_tag_equals(data_296, 2)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_297) -> {
        __core__chooseData(data_297, () -> {
            pair_81 = __core__unConstrData__safe(data_297);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 2),
                () -> {
                    data_298 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_298, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_171 = __core__unListData__safe(data_298);
                        __core__chooseList(fields_171, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_171);
                            __core__ifThenElse(
                                __module__ProtocolSettingsPolicy__SpendingActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_102),
                                () -> {
                                    fields_172 = __core__tailList__safe(fields_171);
                                    __core__chooseList(fields_172, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__activity = (self_238) -> {
        __module__ProtocolSettingsPolicy__SpendingActivity[]__from_data(__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_238))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities____is = (data_299) -> {
        __helios__common__enum_tag_equals(data_299, 3)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_300) -> {
        __core__chooseData(data_300, () -> {
            pair_82 = __core__unConstrData__safe(data_300);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 3),
                () -> {
                    data_301 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_301, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_173 = __core__unListData__safe(data_301);
                        __core__chooseList(fields_173, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_173);
                            __core__ifThenElse(
                                __module__ProtocolSettingsPolicy__MintingActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_103),
                                () -> {
                                    fields_174 = __core__tailList__safe(fields_173);
                                    __core__chooseList(fields_174, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__activity = (self_239) -> {
        __module__ProtocolSettingsPolicy__MintingActivity[]__from_data(__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_239))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities____is = (data_302) -> {
        __helios__common__enum_tag_equals(data_302, 4)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_303) -> {
        __core__chooseData(data_303, () -> {
            pair_83 = __core__unConstrData__safe(data_303);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 4),
                () -> {
                    data_304 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_304, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_175 = __core__unListData__safe(data_304);
                        __core__chooseList(fields_175, () -> {
                            false
                        }, () -> {
                            head_104 = __core__headList__safe(fields_175);
                            __core__ifThenElse(
                                __module__ProtocolSettingsPolicy__BurningActivity[]__is_valid_data(__module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_104),
                                () -> {
                                    fields_176 = __core__tailList__safe(fields_175);
                                    __core__chooseList(fields_176, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_305) -> {
        __helios__common__enum_tag_equals(data_305, 5)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_306) -> {
        __core__chooseData(data_306, () -> {
            pair_84 = __core__unConstrData__safe(data_306);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 5),
                () -> {
                    data_307 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_307, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_177 = __core__unListData__safe(data_307);
                        __core__chooseList(fields_177, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_177);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_105),
                                () -> {
                                    fields_178 = __core__tailList__safe(fields_177);
                                    __core__chooseList(fields_178, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_178);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_106),
                                            () -> {
                                                fields_179 = __core__tailList__safe(fields_178);
                                                __core__chooseList(fields_179, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_240) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_240))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_241) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_241))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_308) -> {
        __helios__common__enum_tag_equals(data_308, 6)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_309) -> {
        __core__chooseData(data_309, () -> {
            pair_85 = __core__unConstrData__safe(data_309);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 6),
                () -> {
                    data_310 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_310, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_310);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_181);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_182 = __core__tailList__safe(fields_181);
                                                __core__chooseList(fields_182, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_242) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_242))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_243) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_243))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_311) -> {
        __helios__common__enum_tag_equals(data_311, 7)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_312) -> {
        __core__chooseData(data_312, () -> {
            pair_86 = __core__unConstrData__safe(data_312);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 7),
                () -> {
                    data_313 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_313, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_183 = __core__unListData__safe(data_313);
                        __core__chooseList(fields_183, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_183);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_109),
                                () -> {
                                    fields_184 = __core__tailList__safe(fields_183);
                                    __core__chooseList(fields_184, () -> {
                                        false
                                    }, () -> {
                                        head_110 = __core__headList__safe(fields_184);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_110),
                                            () -> {
                                                fields_185 = __core__tailList__safe(fields_184);
                                                __core__chooseList(fields_185, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_244) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_244))
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_314) -> {
        __helios__common__enum_tag_equals(data_314, 8)
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_315) -> {
        __core__chooseData(data_315, () -> {
            pair_87 = __core__unConstrData__safe(data_315);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 8),
                () -> {
                    data_316 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_316, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_316);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_111 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_111),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_245) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_245))
    };
    __helios__list[__helios__txinput]__for_each = (self_246) -> {
        (fn_29) -> {
            recurse_99 = (recurse_98, lst_25) -> {
                __core__chooseList(lst_25, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_29(__helios__txinput__from_data(__core__headList__safe(lst_25))), recurse_98(recurse_98, __core__tailList__safe(lst_25)))
                })()
            };
            recurse_99(recurse_99, self_246)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_247) -> {
        (fn_30) -> {
            __helios__common__filter_list(self_247, (item_14) -> {
                fn_30(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__additionalDelegateValidation = (self_248) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt val 
"), __helios__bool__or(() -> {
                __cond_56 = self_248;
                __core__ifThenElse(
                    __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_56),
                    () -> {
                        (__lhs_0_124) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_56),
                            () -> {
                                (__lhs_0_123) -> {
                                    __helios__error("unreachable")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities____is(__cond_56),
                                    () -> {
                                        (__lhs_0_120) -> {
                                            VMA = __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_120);
                                            __cond_59 = VMA;
                                            __lhs_0_121 = __cond_59;
                                            seed_3 = __module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_121);
                                            __core__chooseUnit(__helios__print("creating Settings record...
"), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "no gov authority"), tokenName_4 = mkTn("set");
                                            depositedValue = __module__StellarHeliosHelpers__mkTv(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), true, tokenName_4, false, (), false, ());
                                            newRec = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(cctx)(__helios__string__encode_utf8(tokenName_4)());
                                            __core__chooseUnit(__helios__assert(__helios__value__contains(__helios__txoutput__value(newRec))(depositedValue), "missing id token"), __lhs_0_122 = __helios__common__assert_constr_index(__module__ProtocolSettingsPolicy__DelegateDatum[]__from_data(__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(newRec))), 2);
                                            recData = __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__data(__lhs_0_122);
                                            __helios__bool__and(() -> {
                                                __module__ProtocolSettings__ProtocolSettings[]__validate(recData)()
                                            }, () -> {
                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("set"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ())
                                            })))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_56),
                                            () -> {
                                                (__lhs_0_115) -> {
                                                    VSA = __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_115);
                                                    __core__chooseUnit(__helios__print(__helios__string____add("capo mph: ", __helios__mintingpolicyhash__show(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)))())), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "no gov authority"), __cond_57 = VSA;
                                                    __lhs_0_116 = __cond_57;
                                                    recId_6 = __module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord__id(__lhs_0_116);
                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "set", true, recId_6);
                                                    hasDDOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("set", true, recId_6);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_2))((_utxo) -> {
                                                        (updatedUtxo) -> {
                                                            __lhs_0_119 = __module__ProtocolSettings__ProtocolSettings[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                            __helios__assert(true, "no way")
                                                        }(__cond_58 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))(hasDDOutput);
                                                        __core__ifThenElse(
                                                            __helios__option[__helios__txoutput]__some____is(__cond_58),
                                                            () -> {
                                                                (__lhs_0_118) -> {
                                                                    txo_2 = __helios__option[__helios__txoutput]__some__some(__lhs_0_118);
                                                                    txo_2
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_117) -> {
                                                                    __helios__error("record not updated as expected")
                                                                }
                                                            }
                                                        )()(__cond_58))
                                                    }), true))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities____is(__cond_56),
                                                    () -> {
                                                        (__lhs_0_114) -> {
                                                            __helios__error("no burn activity here yet")
                                                        }
                                                    },
                                                    () -> {
                                                        (__39) -> {
                                                            false
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_56)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__ProtocolSettingsPolicy__DelegateActivity[]__otherDatumValidation = (self_249) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_60 = self_249;
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_60),
                () -> {
                    (__lhs_0_126) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_60),
                        () -> {
                            (__lhs_0_125) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_60)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#50726f746f636f6c53657474696e6773506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_250) -> {
        (fn_31) -> {
            __helios__common__all(self_250, (item_15) -> {
                fn_31(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_251, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_251), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_252) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_252))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_253) -> {
        (fn_32) -> {
            __helios__common__all(self_253, (item_16) -> {
                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_254) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_254))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_255) -> {
        () -> {
            recurse_101 = (recurse_100, self_256, first) -> {
                __core__chooseList(self_256, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_112 = __core__headList__safe(self_256);
                    key_data = __core__fstPair(head_112);
                    key_26 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_112);
                    value_8 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_26((valid_7, key_27) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_27)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_8((valid_6, value_9) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_9)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_100(recurse_100, __core__tailList__safe(self_256), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_101(recurse_101, self_255, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_257) -> {
        (fn_33, a0) -> {
            __helios__common__fold(self_257, (prev_4, item_17) -> {
                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_258) -> {
        (key_28) -> {
            key_29 = __helios__bytearray____to_data(key_28);
            recurse_103 = (recurse_102, self_259) -> {
                __core__chooseList(self_259, () -> {
                    self_259
                }, () -> {
                    head_113 = __core__headList__safe(self_259);
                    tail_6 = __core__tailList__safe(self_259);
                    __core__ifThenElse(
                        __core__equalsData(key_29, __core__fstPair(head_113)),
                        () -> {
                            recurse_102(recurse_102, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_102(recurse_102, tail_6))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_258)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_317) -> {
        __helios__common__enum_tag_equals(data_317, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_260) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_260))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_261) -> {
        (key_30) -> {
            __helios__common__map_get(self_261, __helios__mintingpolicyhash____to_data(key_30), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_262) -> {
        (fn_34, a0_1, b0_1) -> {
            __helios__common__fold(self_262, (prev_5, item_18) -> {
                prev_5((a_18, b_17) -> {
                    fn_34(a_18, b_17, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_263) -> {
        __helios__common__length(self_263)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_264) -> {
        head_114 = __core__headList(self_264);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_114)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_114)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_265) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_265))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_266) -> {
        (key_31) -> {
            key_32 = __helios__string____to_data(key_31);
            recurse_105 = (recurse_104, self_267) -> {
                __core__chooseList(self_267, () -> {
                    self_267
                }, () -> {
                    head_115 = __core__headList__safe(self_267);
                    tail_7 = __core__tailList__safe(self_267);
                    __core__ifThenElse(
                        __core__equalsData(key_32, __core__fstPair(head_115)),
                        () -> {
                            recurse_104(recurse_104, tail_7)
                        },
                        () -> {
                            __core__mkCons(head_115, recurse_104(recurse_104, tail_7))
                        }
                    )()
                })()
            };
            recurse_105(recurse_105, self_266)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_268, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_268), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_269) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_269))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_270) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_270))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_61 = mdd;
            __core__ifThenElse(
                __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData____is(__cond_61),
                () -> {
                    (__lhs_0_264) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation____is(__cond_61),
                        () -> {
                            (isD) -> {
                                dd = __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd(isD);
                                __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__int__serialize(__module__BasicDelegate__rev)()), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __module__BasicDelegate__instance), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_63 = activity_3;
                                __core__ifThenElse(
                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_63),
                                    () -> {
                                        (__lhs_0_242) -> {
                                            activities_2 = __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_242);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            mintDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                    a_19 = __module__ProtocolSettingsPolicy__DelegateActivity[]__from_data(__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                    __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_112 = a_19;
                                                                    __core__ifThenElse(
                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                                        () -> {
                                                                            (__lhs_0_248) -> {
                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_19)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                                () -> {
                                                                                    (__lhs_0_247) -> {
                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_19)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                                                        () -> {
                                                                                            (__lhs_0_246) -> {
                                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                                                () -> {
                                                                                                    (__lhs_0_245) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                                        () -> {
                                                                                                            (__lhs_0_244) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_112),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_243) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__76) -> {
                                                                                                                        __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_112)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            spendDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                    a_20 = __module__ProtocolSettingsPolicy__DelegateActivity[]__from_data(__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                    __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_113 = a_20;
                                                                    __core__ifThenElse(
                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_113),
                                                                        () -> {
                                                                            (__lhs_0_254) -> {
                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                    __module__BasicDelegate__isSpendDelegate
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                                }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_113),
                                                                                () -> {
                                                                                    (__lhs_0_253) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_113),
                                                                                        () -> {
                                                                                            (__lhs_0_252) -> {
                                                                                                __helios__error("TODO: validate spending the datum for burn")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                                                                                () -> {
                                                                                                    (__lhs_0_251) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                                                                                        () -> {
                                                                                                            (__lhs_0_250) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_113),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_249) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__77) -> {
                                                                                                                        __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_113)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            dgDataPolicyCheck = __core__ifThenElse(
                                                __helios__bool__or(() -> {
                                                    __module__BasicDelegate__isMintDelegate
                                                }, () -> {
                                                    __module__BasicDelegate__isSpendDelegate
                                                }),
                                                () -> {
                                                    __core__chooseUnit(__helios__assert(__module__BasicDelegate__isDgDataPolicy, "ack! delegated-data policy can't be a mint/spend delegate"), true)
                                                },
                                                () -> {
                                                    () -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                            a_21 = __module__ProtocolSettingsPolicy__DelegateActivity[]__from_data(__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                            __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_114 = a_21;
                                                            __core__ifThenElse(
                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_114),
                                                                () -> {
                                                                    (__lhs_0_263) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_114),
                                                                        () -> {
                                                                            (__lhs_0_262) -> {
                                                                                __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_114),
                                                                                () -> {
                                                                                    (__lhs_0_261) -> {
                                                                                        __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_114),
                                                                                        () -> {
                                                                                            (__lhs_0_260) -> {
                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities____is(__cond_114),
                                                                                                () -> {
                                                                                                    (__lhs_0_259) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities____is(__cond_114),
                                                                                                        () -> {
                                                                                                            (__lhs_0_258) -> {
                                                                                                                __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_257) -> {
                                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_256) -> {
                                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_255) -> {
                                                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_114)))
                                                        }))
                                                    }()
                                                }
                                            )();
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    mintDgtCheck_1
                                                }, () -> {
                                                    spendDgtCheck_1
                                                })
                                            }, () -> {
                                                dgDataPolicyCheck
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_63),
                                            () -> {
                                                (__lhs_0_236) -> {
                                                    innerActivity = __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_236);
                                                    __cond_110 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_110),
                                                        () -> {
                                                            (__lhs_0_240) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_240);
                                                                purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_240);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_111 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_111),
                                                                    () -> {
                                                                        (__lhs_0_241) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_111)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_110),
                                                                () -> {
                                                                    (__lhs_0_239) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_237) -> {
                                                                        __lhs_0_238 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_110)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_63),
                                                    () -> {
                                                        (__lhs_0_136) -> {
                                                            dCLA = __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_136);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_108),
                                                                () -> {
                                                                    (__lhs_0_235) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_235);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_108),
                                                                        () -> {
                                                                            (__lhs_0_233) -> {
                                                                                __cond_109 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_109),
                                                                                    () -> {
                                                                                        (__lhs_0_234) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_109)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__73) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_108), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_65 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_65),
                                                                        () -> {
                                                                            (__lhs_0_229) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_229);
                                                                                purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_229);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_106 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_106),
                                                                                    () -> {
                                                                                        (__lhs_0_230) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_107 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_7);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_107),
                                                                                                () -> {
                                                                                                    (__lhs_0_232) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_231) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_231);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_107))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__72) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_106)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_65),
                                                                                () -> {
                                                                                    (__lhs_0_177) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_178 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_178);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_104 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_104),
                                                                                                () -> {
                                                                                                    (__lhs_0_227) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_105 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_105),
                                                                                                            () -> {
                                                                                                                (__lhs_0_228) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__71) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_105))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__70) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_104), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_103 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_103),
                                                                                                () -> {
                                                                                                    (__lhs_0_226) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_103),
                                                                                                        () -> {
                                                                                                            (__lhs_0_225) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_225);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_225);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_225);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_224) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_224);
                                                                                                                purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_224);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_224);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_103)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })))
                                                                                                    }(__cond_92 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_92),
                                                                                                        () -> {
                                                                                                            (__lhs_0_223) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_92),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_197) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_93 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_93),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_198) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_198);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_94 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_94),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_199) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_199);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__64) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_94)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__63) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_93)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_95 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_95),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_221) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_102 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_102),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_222) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__69) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_102), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_95),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_202) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_202);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_101 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_101),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_220) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_101),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_219) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_101),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_218) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__68) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_101), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_100 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_100),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_217) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_100),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_216) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_100),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_215) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_100),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_214) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__67) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_100)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_99 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_99),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_213) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_99),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_212) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_99),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_211) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_99),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_210) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_99),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_209) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_99),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_208) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_99),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_207) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_206) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_99)))
                                                                                                                                            }(__cond_97 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_97),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_205) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_203) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_203);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_98 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_204) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_204);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_98)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_97))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_200) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_96 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_96),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__65) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_96), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_95))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__62) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_92))
                                                                                                }(__cond_85 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_85),
                                                                                                    () -> {
                                                                                                        (__lhs_0_196) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_85),
                                                                                                            () -> {
                                                                                                                (__lhs_0_180) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_86 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_86),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_188) -> {
                                                                                                                                    __core__chooseUnit(__cond_91 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_91),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_195) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_91),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_194) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_91),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_193) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_91),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_192) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_91),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_191) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_91),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_190) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_91),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_189) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__61) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_91), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__58) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_88 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_88),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_183) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_89 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_89),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_185) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_185);
                                                                                                                                                                __lhs_0_186 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_186);
                                                                                                                                                                __cond_90 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_90),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_187) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_187);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__60) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_90)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_184) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_89), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__59) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_88)))
                                                                                                                                    }(__cond_87 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_87),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_181) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_181);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_87))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_86)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__57) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_85))
                                                                                            }))))
                                                                                        }(__cond_84 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_84),
                                                                                            () -> {
                                                                                                (__lhs_0_179) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_179);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__56) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_84)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_65),
                                                                                        () -> {
                                                                                            (__lhs_0_176) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_65),
                                                                                                () -> {
                                                                                                    (__lhs_0_153) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                        () -> {
                                                                                                                            true
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                    (pdChange) -> {
                                                                                                                                        (pendingTypeName) -> {
                                                                                                                                            __core__chooseUnit(__cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_73),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_162) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_76 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_76),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_163) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__52) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_76))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__49) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                }()
                                                                                                                                                            }
                                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                            ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_158 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_158);
                                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_158);
                                                                                                                                                            refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_158);
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                            pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                            }(__cond_74 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_74),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_160);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_75),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_161) -> {
                                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__51) -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_75), idPrefix_6))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_74),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_159) -> {
                                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_159);
                                                                                                                                                                                idPrefix_5
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__50) -> {
                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_74)))))))))
                                                                                                                                                        })))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_73), __cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_72),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_157) -> {
                                                                                                                                                        (callback_12) -> {
                                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__48) -> {
                                                                                                                                                        (callback_11) -> {
                                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_72))
                                                                                                                                        }(__cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_71),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_156) -> {
                                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_156);
                                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_4)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_71))
                                                                                                                                    }(__cond_70 = pcChange;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_70),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_155) -> {
                                                                                                                                                dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_155);
                                                                                                                                                dgtChange
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_154) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_70))
                                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                                }))
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }()
                                                                                                            }
                                                                                                        )();
                                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                            mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                            len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __helios__int____gt(len, 1),
                                                                                                                                () -> {
                                                                                                                                    __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), (observedTokenBurn) -> {
                                                                                                                                remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                        __cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_79),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                    typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_168);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_5)), __cond_80 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_80),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_175) -> {
                                                                                                                                                                foldingBurn
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__54) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_81 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_81),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_174) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_5))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_169) -> {
                                                                                                                                                                            __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_169);
                                                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                            tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                            mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                            __cond_82 = mph_28;
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __helios__option[__helios__mintingpolicyhash]__some____is(__cond_82),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_173) -> {
                                                                                                                                                                                        __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__55) -> {
                                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_170 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                        refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_170);
                                                                                                                                                                                        tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                        __cond_83 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __helios__option[__helios__int]__none____is(__cond_83),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_172) -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_171) -> {
                                                                                                                                                                                                    burningCount = __helios__option[__helios__int]__some__some(__lhs_0_171);
                                                                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                        __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                        },
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                ()
                                                                                                                                                                                                            }()
                                                                                                                                                                                                        }
                                                                                                                                                                                                    )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()(__cond_83))
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_82)
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_81))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_80))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__53) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_79)
                                                                                                                                    }(__cond_78 = pcChange_1;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_78),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_167);
                                                                                                                                                dgtChange_1
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_166) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_78)))
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                            }(__cond_77 = mintThisPolicy;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_77),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_165) -> {
                                                                                                                                        minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_165);
                                                                                                                                        minted
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_164) -> {
                                                                                                                                        __core__mkNilPairData(())
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_77)))))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )();
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                            }, () -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                            }),
                                                                                                            () -> {
                                                                                                                __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }()
                                                                                                            }
                                                                                                        )(), __helios__bool__and(() -> {
                                                                                                            mintDgtCheck
                                                                                                        }, () -> {
                                                                                                            spendDgtCheck
                                                                                                        })))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_65),
                                                                                                        () -> {
                                                                                                            (__lhs_0_143) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_143);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_66 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_66),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_152) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_66),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_151) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_66),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_145) -> {
                                                                                                                                            key_33 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_145);
                                                                                                                                            tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_145);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_146 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_67 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_67),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_150) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_33))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_147) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_147);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_27 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_33)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_69 = mph_27;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_69),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_149) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__46) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_69), __cond_68 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_68),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_148) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__45) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_68)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_67), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_66),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_144) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__44) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_66), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_65),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_142) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_141) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_65)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_64 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_64),
                                                                () -> {
                                                                    (__lhs_0_140) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_64),
                                                                        () -> {
                                                                            (__lhs_0_139) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_64),
                                                                                () -> {
                                                                                    (__lhs_0_138) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_64),
                                                                                        () -> {
                                                                                            (__lhs_0_137) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__43) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_64)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_63),
                                                            () -> {
                                                                (__lhs_0_135) -> {
                                                                    seed_4 = __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_135);
                                                                    dataTypePurpose_1 = __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_135);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                        () -> {
                                                                            __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                                purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                                newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                                })
                                                                                            }, () -> {
                                                                                                __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                                }))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_63),
                                                                    () -> {
                                                                        (__lhs_0_134) -> {
                                                                            dDataType = __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_134);
                                                                            recId_8 = __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_134);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                () -> {
                                                                                    __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_8))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_8);
                                                                                        __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                            __helios__string____eq("settings", dDataType),
                                                                                            () -> {
                                                                                                curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                    false,
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bytearray____eq(curSettingsId, recId_8),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_8)();
                                                                                                                    curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __helios__bool__and(() -> {
                                                                                            __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_8, dDataType))("  -- did output delegated data? ")
                                                                                        }, () -> {
                                                                                            true
                                                                                        }))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_63),
                                                                            () -> {
                                                                                (__lhs_0_132) -> {
                                                                                    recId_7 = __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_132);
                                                                                    __core__ifThenElse(
                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                        () -> {
                                                                                            __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_133 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_7);
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                            }()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_63),
                                                                                    () -> {
                                                                                        (__lhs_0_131) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities____is(__cond_63),
                                                                                            () -> {
                                                                                                (__lhs_0_130) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_129) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_63))))))
                            }
                        },
                        () -> {
                            (__41) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_62 = activity_3;
                                __core__ifThenElse(
                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                                    () -> {
                                        (__lhs_0_128) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                                            () -> {
                                                (__lhs_0_127) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__42) -> {
                                                    __module__ProtocolSettingsPolicy__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_62)
                            }
                        }
                    )()
                }
            )()(__cond_61)))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__ProtocolSettingsPolicy__DelegateDatum[]__from_data(__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__ProtocolSettingsPolicy__DelegateActivity[]__from_data(__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/settings/ProtocolSettingsPolicy.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f18590019053408186d0119057204186e01190572041901660218b8181f1901680218ba141901730218bb181f1902e10218c1182c19036e0218be181e19039e0218e3183a19039f0218e3183a1903a60218e4181b190456001905a1181e1904b80218eb18381904bd0218eb1834190504001906980819052d001906a118331909200119023118241910fb00190560182019114c01190464183a1912bf011901f918211912d4011901f918211912e9011901f918211912fe011901f91821191313011901f91821191328011901f91821191330011901f91821191338011901cb18271914af031901bb182e1914b0031901bb182e1914bf031901c018391914c0031901c018391915170318221619155a031901d8183719179f0019018a184b1917c10019018a184d1917df0319016018341918c50319012a181b191911001906e10819198a001906e9141919c800190168184b1919f900190168184d191a0c001906b808191a88001906c31846191a89001906c31825191b170019058b181f191b910019058c1822191caa001905250c191d10001904b809191d5a0019041815191d5b0019041815191eae0419014d0c191ee00419013e183f191fac04190145181b191fc4041901350b1920020518a20a19208b0518360eff", "variableNames": "", "termDescriptions": "a8190168646d6b546e19050467636861727465721914af62746e1914b062746e1919116763686172746572191a0c6763686172746572191d5a683c7377697463683e191d5b683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/settings/ProtocolSettingsPolicy.hl", "src/settings/ProtocolSettings.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1903e10019016718321904110019025b182a190413001902cf183a190415001902fd0b1904470019051b0819044b001905340819055b011905720419055c011905720419058b0118bf183a19058c0118bf183a19058f0118c0182e1905900118c0182e1905910118c0091905920118c0041905930118c018271905950118c018271905960118c018191905980118c018191905990118c00a1905a6011905700a1905a90119057018291905aa01190570181a1906350119055a101906430119055b18361906450119055b182d1906e00119014c181c1907c601190128181c1908940118f5181c190a1a011901a41826190b49011902311824191069011902ac18281912990119044d181c1912c301190401183719130b0119040418201914250119043318651914a70119040218351914ac0119040218311914ca0119038b18291914d10119038b18251916c50119037f18321916cf0119037e18521916d50119037d184e19182801190466183419183101190466183019183501190464183a19184001190463184f19185e0119047f182f1918650119047f182b1918eb01190496181d19191d01190203182719192401190203182319194d0119020c18271919540119020c182319197c01190214182419198301190214182019198f01190216182b1919960119021618271919ac011901f918251919b0011901f918211919b6011901cb18271919ce011904a418261919e2011904a7141919ea011904a8181f1919f1011904a8181b191a3b011904cc181f191a3e011904cd181e191a3f011904cd181e191a5b011904d7181b191a62011904d717191a6d011904dc1838191a86011904ac182e191a90011904ac182a191a93011904a71831191ac2011904f114191aca011904f2181f191ad1011904f2181b191b04011904f81820191b0e011904f8181c191b61011905201828191b8301190526182b191b8b0119050a1845191b8e0119050a182c191b950119050a1828191ba20119052d1818191ba90119052d14191bae011904ff182c191bb7011904ff1828191bbb011904f11831191be80119053514191bf001190536181f191bf701190536181b191c520119053e182d191c5b0119053e1829191c5f011905351831191ed202190113181f191efd0218ac1827191efe0218ae08191eff0218ae08191f3c0218b8181f191f450218ba14191f500218bb181f191f5f0218bc181f191fa00218d4181e191fa10218d4181e191faa0218d71825191fc80218c1182c191fce0218c11828191fe50218be181e1920130218e3183a1920140218e3183a19201b0218e4181b19202a0218e5181b1920520218fb182319207c0218ed183f1920820218ed183b1920850218eb183819208c0218eb1834192b03031212192b0d031308192d0d041901b31826192d0e041901b31831192d2b041901bb182e192d2c041901bb182e192d2e041901bc0c192d3f041901bd182c192d5b041901c01839192d5c041901c01839192d63041901c210192dc8041901d81837192e03041901e3182d192f450419016018341930e10419012a181b1930fd0419011e0e19311804190114181b19315f04185d0519316004185b182d193176041863141931a904186d1719321004184d0919321104184d182e19322b0418470619322c04184418191932a204183018441932a304183018441932c404181f021932c504181f021932df041822161932e60418230d1932f50418260e1933140019079f182719333000190799182c19334900190776101934ac0019076018321934af00190747182c1934b500190749181f1934d30019074b183b19350d001907341219350e00190734182b1935100019072a0d19351100190725182a1935350019072618301935be001906e1081935bf001906e20f1935fa001906e914193615001906b808193616001906b90f19365d001906c3184619365e001906c318251936aa00190698081936ab001906990f1936d1001906a1183319378f0019065718251937b4001906291833193869001905a1181e1938ea001905870f1938fa0019058b181f1939510019058c18221939a10019057c101939d10019056e18231939d20019056e18231939e40019056018201939ee0019055f08193a010019056210193a260019055a1828193a270019055a1841193a420019055011193a8c00190533181c193abf00190522181c193b010019052a1818193b0e001905250c193b1b0019051a1818193b570019050209193b5e00190500181d193b77001904f71820193b9d001904ef09193ba4001904ed181b193c26001904d5184d193c34001904d51844193c92001904b0181e193c93001904b1183d193c9e001904b809193cb7001904b510193ced001904460b193cee001904460b193cf400190448184c193d4600190438183f193d48001904371821193d49001904371821193d7c00190416181c193d860019041815193d870019041815193e43001902fb10193e49001902ce181b193e5c001902f51827193e65001902f6182e193e76001902f60f193e8b001902e111193eb2001902e61847193ec0001902ea1832193eca001902ea1822193eeb001902f0182d193f1c0019025809193f3a0019025a1878193f450019026208193f470019025c1826193f510019025c0e193f520019025e181b193f590019025f1841193f64001902601855193f76001902621827193f77001902621827193f7f0019027111193f95001902661838193fb0001902691843193fbb0019026a184d193fcb0019026a1845193fff00190275183d19400600190276185219401800190276182619401a001902781019401b001902a61862194026001902aa11194041001902ab185119404c001902af1119407e0019027d181d19409600190283181d1940ae0019028b181d1940da0019029318441940f500190296185019410000190297185c19410e00190298184419411000190297185419411100190297185419412b0019029d185719415a001902b3183119417400190225185d19418f00190231111941d100190236184c1941df0019023618211941e200190246185b1941ed00190247186019420000190248185019420b0019024918681942490019023c18441942930019024e18301942ef001901e918561942f1001901e8151942f2001901e8151942f6001901e9141942fb001901e90f194307001901e91844194308001901eb184f19430a001901e9184e19430b001901e9184e194317001901ec184f19432e001901ec182e19432f001901f11319433d001901de1719433e001901de1719433f001901df1856194341001901de182b194342001901de182b194346001901df1419434b001901df0f194357001901df184419435c001901df184e19435d001901df184e19436f001901d41821194389001901bf182719438c001901d10819438e001901d0091943a4001901c518531943af001901c5184b1943cb001901c8184a19459a0019018e131945aa0019018a184b1945af0019018a18301945b20019018a184d1945fb00190168184b19460000190168183019460300190168184d1958620519014d0c195881051901541837195895051901500c1958a20519015a151958a50519015a18361958a70519015a18361958a80519015a18311958d90519013e183f1958dc0519013f183419590e05190145182919590f05190145181b19592b051901350b19593d051901320a1959eb05190113161959fe0519010e13195a0405190109185a195a440518e40a196dba05182b0419720a0618a20a1972310618a5121973d40618360e1973f506183218191973fe061829181919740f06182a0819741006182a0819741a06182418181974290618260eff", "variableNames": "", "termDescriptions": "b83519058b646d61696e19058c646d61696e1906e061611907c6616119089461611919e26463637478191ac26463637478191be86463637478191ed26473656c66191efd6473656c66191efe6463637478191eff6463637478191f45646d6b546e192b036473656c66192d2b62746e192d2c62746e192d2e65746e53747219321067707572706f73651932a2781a6e6f4f7468657241637469766974696573537570706f727465641932a3781a6e6f4f7468657241637469766974696573537570706f727465641932c46b686173536565645574786f1932c56b686173536565645574786f193314696d6b4361706f4374781935be676368617274657219361567636861727465721936aa6763686172746572193a426473656c66193a8c6473656c66193abf6473656c66193b1b6473656c66193c926473656c66193ced683c7377697463683e193cee683c7377697463683e193d48636b6579193d49636b6579193d7c6473656c66193d86683c7377697463683e193d87683c7377697463683e193e436473656c66193e496473656c66193f76683c7377697463683e193f77683c7377697463683e19401a70616374734f6e546869735265636f72641942f1636d73671942f2636d736719433d6b617373657274696f6e4f6b19433e6b617373657274696f6e4f6b194341636d7367194342636d736719436f6473656c661943896473656c661973fe69617373657274696f6e19741a69617373657274696f6e" } },
      scriptHash: "5be7a06b6f2d6770eec2b647063dede0ba7bb34f24af59f7ecf6748c",
      config: { "rev": "1", "delegateName": "ProtocolSettingsPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = ProtocolSettingsPolicy_hl;
  requiresGovAuthority = true;
  get modules() {
    return [
      ProtocolSettings_hl,
      NodeOperatorSettings_hl,
      NeighborhoodSettings_hl
      /* Add other modules here */
      // FundedPurposeSettings
    ];
  }
}

export { ProtocolSettingsBundle as default };
//# sourceMappingURL=ProtocolSettings.hlb.mjs.map
