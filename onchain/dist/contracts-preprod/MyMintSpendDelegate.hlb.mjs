import { MintSpendDelegateBundle } from '@donecollectively/stellar-contracts';
import { makeSource } from '@helios-lang/compiler-utils';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';

const MyMintSpendDelegate_hl = makeSource(
  "module MyMintSpendDelegate\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\n// specialized to ...\n//   -   NOT YET SPECIALIZED (replace with your specialization notes here) - \n// original notes about (un)specialization follow:\n\n\n//  //! provides a basic version, not yet specialized,\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\nimport {\n    AnyData,\n    REQT,\n    bREQT,\n    TODO\n} from StellarHeliosHelpers\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    mkUutTnFactory\n} from CapoMintHelpers\n\nimport {\n    mkCapoCtx,\n    CapoCtx\n} from CapoHelpers\n\n// import {\n//     ProtocolSettings\n// } from ProtocolSettings\n\nenum DelegateDatum {\n    // we only have to use this if we decide Constr#0 is essential for practical CIP-68 compat\n    Cip68RefToken {  \n        // NOTE: this datum contains reference details for a user-facing token minted according to the cip-68 standard \n        //  - the asset name (in the Value of this UTXO) MUST be:  #000643b0 + tokenName\n        //     - this asset name can serve user-side tokens using the CIP-68 \"222\", \"333\" or other token types.\n        //     - the user-side asset name with its (222/333/etc) CIP-67 prefix and \n        //       ... its remaining tokenName will be matched to this asset name (#000643b0 +tokenName)\n        //       ... to locate this reference datum; this datum content will be interpreted\n        //       ... according to the semantics implied by the user-side asset-name prefix.\n        //\n        //  - The attached 'meta' field in this Datum variant contains the relevant data, depending on the token type\n        //    - for \"222\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"files\" :   // {mediaType, src (url), name?, ... otherFields)\n        //        - \"image\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //    - for \"333\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"ticker\" : String\n        //        - \"url\": String  // project URL\n        //        - \"logo\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //                    - it must have a mime type `image/png`, `image/jpeg` or `image/svg+xml`\n        //        - \"decimals\" : Int\n\n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data\n        // otherDetails: Data // can be Unit () or anything else\n    }\n\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: AnyData\n        version: Int\n        otherDetails: Data \n    }\n\n    // func validateSettings(self, settings: ProtocolSettings) -> Bool{\n    // ... get the settings object from the contract manifest via cctx\n    //     assert(false, \"not valid (stubbed)\");\n    //     settings.serialize() != self.serialize() &&\n    //     true\n    // }\n}\n\nenum MintingActivity {\n    // application can replace the sample, which is only here to \n    // avoid a syntax error in the unspecialized version\n\n    SampleMintingActivity\n    MintingFungibleTokens {\n        tokenName: ByteArray\n    }\n\n    // OtherActivityWithUniqueness{\n    //     seed: TxOutputId\n    // }\n}\n\n//! The minting delegate can also be used as a general spending \n// delegate (this is the default arrangement during the Capo \n// charter mint).  These activities are required by the Capo when\n// spending utxos having DelegatedDatum type.\nenum SpendingActivity {\n    // application can replace the placeholder, which is only here to \n    // avoid a syntax error in the unspecialized version\n    SampleSpendingActivity  {\n        recId: ByteArray\n    }\n}\n\nenum BurningActivity {\n    // application can replace the placeholder, which is only here to \n    // avoid a syntax error in the unspecialized version\n    _placeholder1BA {\n        recId: ByteArray\n    }\n}\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    // remember:M and 3 have a similar shape.\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        // application-specific burning activities, ALWAYS at Enum position 4\n        activity: BurningActivity\n    }\n\n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // id from seed\n    }\n\n    UpdatingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n\n    DeletingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        activities: []Data // actually a []DelegateActivity\n        // todo: change this back when the recursive enum's `__is_valid_data not found` error is resolved\n    }\n\n    // this function gives a general-purpose implementation of checking for \n    // valid uut minting. \n    //\n    // A specialization might modify it to use different policies\n    // or enforce additional requirements\n    // \n    // func genericUutMinting(self, \n    //     mdd: DelegateDatum,\n    // ) -> Bool {\n    //     //!!! replace with an activity using the same seed-txn pattern:\n    //     // MintingActivities::SomethingMintingUuts{seed, purposes} = self;\n    //     DelegateDatum::IsDelegation{dd} = mdd;\n    //     returnsAuthzToken : Bool = mustReturnValueToScript(dd.tvAuthorityToken());\n\n    //     o : []TxOutput = get_cont_outputs();\n    //     if (o.length != 1) { error(\"single utxo only\") };\n\n    //     print (\"in unsp_MD\");\n    //     isOk : Bool = returnsAuthzToken && \n\n    //     unmodifiedDelegation( /* isD, same as mdd */ mdd.serialize()) &&\n\n    //     // This call can serve as a template for enforcing expected mints \n    //     // of uuts (and additional token values) in validation of application-\n    //     // specific activities, given (mph, seed, purposes)\n    //     validateUutMinting(\n    //         mph: dd.mph,\n    //         seed: seed,\n    //         purposes: purposes,\n    //         // otherMintedValue: ()\n    //         mkTokenName: mkUutTnFactory(seed)\n    //     );\n\n    //     isOk\n    // }\n\n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {        \n        // print(\"  ----- checking additional delegate validation\");\n        mph : MintingPolicyHash = priorMddd.dd.mph;\n\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            CapoLifecycleActivities{CLA} => {\n                // CapoLifecycleActivites.queuePendingDgtChange is only relevant for the MINT delegate.\n                // CapoLifecycleActivites.{removing, committing}PendingDgtChange(s) are served by the SPEND delegate\n                // Capo\n                // CapoLifecycleActivites.{forcing}* are ONLY ever served by the Capo itself as an escape-hatch\n                //  assert(isMintingDelegate, \"unreachable\"); // TODO access this const defined in the main script\n\n                CLA.switch {\n                    CreatingDelegate{seed, purpose} => {\n                        self.supportedCapoDelegatePurposes().find_safe(\n                            (p : String) -> Bool { p == purpose } \n                        ).switch {\n                            None => error(\"can't mint delegate with unsupported purpose\"),\n                            Some => {\n                                validateUutMinting(\n                                    mph: priorMddd.dd.mph,\n                                    seed: seed,\n                                    purposes: []String{purpose},\n                                    // otherMintedValue: ()\n                                    mkTokenName: mkUutTnFactory(seed),\n                                    // WE ARE the mint delegate.\n                                    needsMintDelegateApproval: false \n                                )\n                            }\n                        }\n                    },\n                    _ => {\n                        REQT(\"   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here\");\n                        true\n                    }\n                 }\n            },\n            SpendingActivities{a} => {\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n\n                a.switch {\n                    SampleSpendingActivity{recId} => {\n                        print(\"SampleSpendingActivity\");\n                        assert(\n                            cctx.requiresGovAuthority().orFail(), \n                            \"^^^ that can fail, this won't\"\n                        );\n                        print(\"attempting to do sample spend: \"+ recId.decode_utf8());\n                        assert(false, \"policy not implemented\");\n                        true\n                    }\n                }\n            },\n            MintingActivities{a} => {\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n\n                a.switch {\n                    SampleMintingActivity => {\n                        assert(false, \"policy not implemented\");\n                        assert(\n                            cctx.requiresGovAuthority().orFail(), \n                            \"^^^ that can fail, this won't\"\n                        );\n                        true\n                    },\n                //     MintingParticipantToken{seed} => {\n                //         purpose : String = \"member\"; // todo: get from config\n                //         // mkTokenName = mkUutTnFactory(seed);\n\n                //         validateUutMinting(\n                //             mph: priorMddd.dd.mph,\n                //             seed: seed,\n                //             purposes: []String{purpose}, \n                //             // mkTokenName: mkTokenName,\n                //             // we ARE the mint-delegate:\n                //             needsMintDelegateApproval: false\n                //         )\n\n                //     },\n                    MintingFungibleTokens{tokenName} => {\n                        print(\"MintingFungibleToken\");\n                        assert(\n                            cctx.requiresGovAuthority().orFail(), \n                            \"^^^ that can fail, this won't\"\n                        );\n                        // check that the tokens minted in the policy are exactly according to expectations.\n                        // we don't interfere with other policies that may have a good reason to mint in this txn\n                        // const ourMint : Map[ByteArray]Int = tx.minted.get_policy(mph);\n                        // we don't allow other tokens (of ours) to be minted in this txn\n                        assert(\n                            // ourMint.length == 1, \n                            tx.minted.get_policy(mph).length == 1,\n                            \"unexpected other tokens minted\"\n                        );\n                        print(\"ok, minting fungibles: \"+ tokenName.decode_utf8());\n                        true\n                    }        \n                }\n            },\n            CreatingDelegatedData => {\n                print(\" ℹ️  mint delegate allowing CreatingDelegatedData on the say-so of its policy delegate\");\n                true\n            },\n            UpdatingDelegatedData => {\n                print(\" ℹ️  spend delegate allowing UpdatingDelegatedData on the say-so of its policy delegate\");\n                true\n            },\n            DeletingDelegatedData => {\n                print(\" ℹ️  mint delegate allowing DeletingDelegatedData on the say-so of its policy delegate\");\n                true\n            },\n            _ => {\n                assert(false, \"mint/spend delegate rejecting other activity\");\n                false\n            }\n        } || tx.serialize() == priorMddd.serialize()        \n    }\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way\" );\n         []String{ \n            // \"nothingHereYet\",\n\n            // something like this ...\n            // \"fPurpCtrl\" == purpose ||\n            // \"mktSaleCtrl\" == purpose ||\n            // \"artistVault\" == purpose ||\n            // \"listenerVault\" == purpose ||\n            // \"nodeOpVault\" == purpose ||\n\n        }\n    }\n\n    //! Used only for validating non-IsDelegation datum types and activities.\n    // if you have any special admininstrative data structures that inform \n    // ...  your minting policy, this might be useful.  Otherwise, and typically,\n    // ... you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation( self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/MyMintSpendDelegate.hl", // source filename
    moduleName:  "MyMintSpendDelegate",
});

class MyMintSpendDelegateBundle extends MintSpendDelegateBundle.usingCapoBundleClass(DredCapoBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "8cfe457712446efd045a29ccc37fdffb4502fec575f437ede11598b8f1d22bf7", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "generatedSpecializedDelegateModule": "22a2b556a71d039660ceb51bd04ae4bda329e8708647df6636f5353a5d7da9f4", "src/MyMintSpendDelegate.hl": "34d699d46007f18d3718dc0896c72b4ceef7897156ed7caef7252ad7e9873a21", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##534d794d696e745370656e6444656c6567617465;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87a80;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87a80;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87980;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common14 = __core__unConstrData(__CONTEXT);
    __common15 = __core__sndPair(__common14);
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__bytearray__show = (self_5) -> {
        recurse_5 = (recurse_4, self_6) -> {
            n_1 = __core__lengthOfByteString(self_6);
            __core__ifThenElse(
                __core__lessThanInteger(0, n_1),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);
                    recurse_3 = (recurse_2, self_4, bytes_1) -> {
                        digit = __core__modInteger(self_4, 16);
                        bytes_2 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes_1);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_4, 16),
                            () -> {
                                bytes_2
                            },
                            () -> {
                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_2)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_3, 0),
                        () -> {
                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))
                        },
                        () -> {
                            recurse_3(recurse_3, self_3, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_5(recurse_5, self_5)
    };
    __helios__value__new = (assetClass, i_1) -> {
        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))))))
    };
    __helios__scriptcontext__tx = __core__headList(__common15);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show = (self_21) -> {
        __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
            bytes_4 = __core__consByteString(__core__addInteger(__core__modInteger(i_3, 10), 48), bytes_3);
            __core__ifThenElse(
                __core__lessThanInteger(i_3, 10),
                () -> {
                    bytes_4
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_21, 0),
            () -> {
                __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
            },
            () -> {
                recurse_9(recurse_9, self_21, #)
            }
        )())
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__value__show = (self_29) -> {
        __helios__common__fold(self_29, (prev_1, pair_3) -> {
            mph_data = __core__fstPair(pair_3);
            tokens_data = __core__sndPair(pair_3);
            __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                __core__appendString(__core__ifThenElse(
                    __core__equalsByteString(mph_4, #),
                    () -> {
                        ""
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph_4), "
")
                    }
                )(), __core__chooseData(tokens_data, () -> {
                    ""
                }, () -> {
                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_4) -> {
                        token_name_data = __core__fstPair(pair_4);
                        qty_data = __core__sndPair(pair_4);
                        __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                            __core__chooseData(qty_data, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                qty = __core__unIData__safe(qty_data);
                                __core__ifThenElse(
                                    __core__equalsByteString(mph_4, #),
                                    () -> {
                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "
"))
                                    },
                                    () -> {
                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(
                                            n = __core__lengthOfByteString(token_name_2);
                                            recurse_1 = (recurse, i) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(i, n),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        b0 = __core__indexByteString__safe(token_name_2, i);
                                                        __core__ifThenElse(
                                                            __core__lessThanEqualsInteger(b0, 127),
                                                            () -> {
                                                                recurse(recurse, __core__addInteger(i, 1))
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                                                    () -> {
                                                                        inext_2 = __core__addInteger(i, 2);
                                                                        __core__ifThenElse(
                                                                            __core__lessThanEqualsInteger(inext_2, n),
                                                                            () -> {
                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                                                    __core__ifThenElse(
                                                                                        valid_5,
                                                                                        () -> {
                                                                                            c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                                                            __core__ifThenElse(
                                                                                                __core__ifThenElse(
                                                                                                    __core__lessThanEqualsInteger(128, c_2),
                                                                                                    () -> {
                                                                                                        __core__lessThanEqualsInteger(c_2, 2047)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )(),
                                                                                                () -> {
                                                                                                    recurse(recurse, inext_2)
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                })
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                                                            () -> {
                                                                                inext_1 = __core__addInteger(i, 3);
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(inext_1, n),
                                                                                    () -> {
                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                                                            __core__ifThenElse(
                                                                                                valid_3,
                                                                                                () -> {
                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            valid_4,
                                                                                                            () -> {
                                                                                                                c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__lessThanEqualsInteger(2048, c_1),
                                                                                                                        () -> {
                                                                                                                            __core__lessThanEqualsInteger(c_1, 65535)
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            false
                                                                                                                        }
                                                                                                                    )(),
                                                                                                                    () -> {
                                                                                                                        recurse(recurse, inext_1)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                false
                                                                                                            }
                                                                                                        )()
                                                                                                    })
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        })
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                                                    () -> {
                                                                                        inext = __core__addInteger(i, 4);
                                                                                        __core__ifThenElse(
                                                                                            __core__lessThanEqualsInteger(inext, n),
                                                                                            () -> {
                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        valid,
                                                                                                        () -> {
                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    valid_1,
                                                                                                                    () -> {
                                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                valid_2,
                                                                                                                                () -> {
                                                                                                                                    c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__lessThanEqualsInteger(65536, c),
                                                                                                                                            () -> {
                                                                                                                                                __core__lessThanEqualsInteger(c, 2097151)
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                false
                                                                                                                                            }
                                                                                                                                        )(),
                                                                                                                                        () -> {
                                                                                                                                            recurse(recurse, inext)
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            false
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        })
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            };
                                            recurse_1(recurse_1, 0),
                                            () -> {
                                                __core__decodeUtf8__safe(token_name_2)
                                            },
                                            () -> {
                                                __helios__bytearray__show(token_name_2)
                                            }
                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "
"))))
                                    }
                                )()
                            }, () -> {
                                ""
                            })()
                        }, () -> {
                            ""
                        })
                    }, prev_1)
                }, () -> {
                    ""
                }, () -> {
                    ""
                }, () -> {
                    ""
                })())
            }, () -> {
                ""
            }))
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common15));
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                error()
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__value__get_policy = (self_44, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_25 = (recurse_24, map_3) -> {
            __core__chooseList(map_3, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_3)))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_3))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44)
    };
    __helios__common__find_safe = (self_46, fn_3) -> {
        recurse_27 = (recurse_26, self_47, fn_4) -> {
            __core__chooseList(self_47, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_2 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_2, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(self_47), fn_4)
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46, fn_3)
    };
    __helios__value__contains_policy = (self_48, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_29 = (recurse_28, map_4) -> {
            __core__chooseList(map_4, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), mph_8),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(map_4))
                    }
                )()
            })()
        };
        recurse_29(recurse_29, self_48)
    };
    __helios__value__is_zero = (self_49) -> {
        recurse_33 = (recurse_32, map_5) -> {
            __core__chooseList(map_5, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_5)));
                    recurse_31 = (recurse_30, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_31(recurse_31, tokens_1),
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_33(recurse_33, self_49)
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__common__any = (self_50, fn_5) -> {
        recurse_39 = (recurse_38, self_51, fn_6) -> {
            __core__chooseList(self_51, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_51)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_51), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_50, fn_5)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        (aKeys) -> {
            recurse_43 = (recurse_42, keys, map_10) -> {
                __core__chooseList(map_10, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_6 = __core__fstPair(__core__headList__safe(map_10));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_6)
                        }),
                        () -> {
                            recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                        },
                        () -> {
                            __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                        }
                    )()
                })()
            };
            b_4 = recurse_43(recurse_43, aKeys, b_5);
            recurse_41 = (recurse_40, lst_6, rem) -> {
                __core__chooseList(rem, () -> {
                    lst_6
                }, () -> {
                    __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
                })()
            };
            recurse_41(recurse_41, b_4, aKeys)
        }(recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, a_5))
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value____add = (a_8, b_8) -> {
        recurse_49 = (recurse_48, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_2));
                item_5 = (a_6, b_6) -> {
                    recurse_45 = (recurse_44, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_7 = __core__headList__safe(keys_1);
                            tail = recurse_44(recurse_44, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6))
                }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(b_8, key_8));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_8))
    };
    __helios__common__filter = (self_53, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_54, fn_9) -> {
            __core__chooseList(self_54, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_54);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_54), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_54), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_53, fn_8)
    };
    __helios__common__enum_fields_after_4 = (self_60) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_60)))))))
    };
    __helios__value__get_safe = (self_67, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_13) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_14) -> {
            __core__chooseList(map_14, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_14))
                    }
                )()
            })()
        }, self_67)
    };
    __helios__txoutputdatum__inline = (self_70) -> {
        pair_5 = __core__unConstrData(self_70);
        index_1 = __core__fstPair(pair_5);
        fields_4 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_4)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__txinput__address = (self_76) -> {
        self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_76))));
        __core__headList(__core__sndPair(__core__unConstrData(self_9)))
    };
    __helios__tx__value_locked_by = (self_87, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_81 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_87))))));
        __helios__common__filter(self_81, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_84 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_84)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_9))))
        }, __core__mkNilData(())))
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        map_15 = __core__unMapData(self_98);
        name_data = __core__bData(name_1);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                error()
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_110)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_116)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_119)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130, mph_11) -> {
        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_130);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137, mph_14) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_137));
            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_136, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_137);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_155)))))))
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (self_171) -> {
        (i_8) -> {
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__core__ifThenElse(
                __core__chooseData(inputData, () -> {
                    true
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                })(),
                () -> {
                    (__lhs_0_25) -> {
                        index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                        fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                        __cond_16 = __core__headList(fields_70);
                        __core__ifThenElse(
                            __core__chooseData(__cond_16, () -> {
                                true
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })(),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                    ()
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16)
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(inputData), inputData)
        }(self_9 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_171))));
        __core__headList(__core__sndPair(__core__unConstrData(self_9))))
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_180) -> {
        link_1 = __core__unListData(__core__headList(self_180));
        input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_180))));
        mph_18 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_180))))));
        (uut_1) -> {
            validatorHash_1 = __core__headList(__core__tailList(link_1));
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, uut_1);
            returnedUnchanged = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_44))));
                        __core__chooseUnit((assertionOk) -> {
                            __core__ifThenElse(
                                assertionOk,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )()
                        }(a_12 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                        recurse_61 = (recurse_60, keys_4) -> {
                            __core__chooseList(keys_4, () -> {
                                true
                            }, () -> {
                                key_10 = __core__headList__safe(keys_4);
                                __core__ifThenElse(
                                    b = (a_10, b_10) -> {
                                        recurse_59 = (recurse_58, keys_3) -> {
                                            __core__chooseList(keys_3, () -> {
                                                true
                                            }, () -> {
                                                key_9 = __core__headList__safe(keys_3);
                                                __core__ifThenElse(
                                                    b = (a_qty, b_qty) -> {
                                                        __core__ifThenElse(
                                                            __core__lessThanInteger(a_qty, b_qty),
                                                            false,
                                                            true
                                                        )
                                                    }(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9));
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    ),
                                                    () -> {
                                                        false
                                                    },
                                                    () -> {
                                                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                                                    }
                                                )()
                                            })()
                                        };
                                        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
                                    }(__helios__value__get_inner_map(a_12, key_10), __helios__value__get_inner_map(targetValue, key_10));
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    ),
                                    () -> {
                                        false
                                    },
                                    () -> {
                                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                                    }
                                )()
                            })()
                        };
                        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, targetValue))), (__cond_27) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                () -> {
                                    (__lhs_0_46) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_45) -> {
                                        error()
                                    }
                                }
                            )()(__cond_27)
                        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_136, (o_1) -> {
                            __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_72 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                            self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))));
                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71)))))))
                        })))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        error()
                    }
                }
            )()(validatorHash_1);
            __core__chooseUnit(__core__ifThenElse(
                returnedUnchanged,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_18);
            __core__ifThenElse(
                cond,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), self_180))
        }(d = __core__headList(link_1);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {
        __cond_28 = __core__headList(__core__tailList(self_184));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),
            () -> {
                (__lhs_0_56) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),
                    () -> {
                        (__lhs_0_55) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_48) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __common50 = __core__unConstrData(activity);
                            __common51 = __core__fstPair(__common50);
                            __core__ifThenElse(
                                __core__equalsInteger(__common51, 2),
                                () -> {
                                    (__lhs_0_54) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__common51, 4),
                                        () -> {
                                            (__lhs_0_53) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common51, 1),
                                                () -> {
                                                    (__lhs_0_52) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common51, 5),
                                                        () -> {
                                                            (__lhs_0_51) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common51, 3),
                                                                () -> {
                                                                    (__lhs_0_50) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_49) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185, key_14) -> {
        __helios__common__map_get(self_185, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_191) -> {
        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_157 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_191);
        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_157))), __core__unBData(__core__headList(self_191)));
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), self_191)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, self_194, typeName) -> {
        __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_158 = __module__CapoHelpers__CapoCtx[]__getCharterData_4(self_194);
        __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_158)))), typeName);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_31)), 1),
            () -> {
                (__lhs_0_61) -> {
                    error()
                }
            },
            () -> {
                (__lhs_0_59) -> {
                    entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_59)));
                    __cond_32 = __helios__common__mStruct_field(entry, #747065);
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_32)), 1),
                        () -> {
                            (__lhs_0_60) -> {
                                policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                (idPrefix_2) -> {
                                    (callback_8) -> {
                                        callback_8(policyLink, idPrefix_2)
                                    }
                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                __core__decodeUtf8(__core__unBData(d)))
                            }
                        },
                        () -> {
                            (__27) -> {
                                error()
                            }
                        }
                    )()(__cond_32)((dgtLink, idPrefix_1) -> {
                        __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_194, dgtLink, __core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(typeName)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                    })
                }
            }
        )()(__cond_31)
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_195, __useopt__required_5) -> {
        required_11 = __core__ifThenElse(
            __useopt__required_5,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_195)), __core__unBData(__core__headList(self_195)));
        (isUsingMintDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingMintDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_11,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingMintDgt)
        }(a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_196, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_152 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_196);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_152)))), __core__unBData(__core__headList(self_196)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {
        __cond_33 = __core__headList(__core__tailList(self_197));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),
            () -> {
                (self_160) -> {
                    data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_160)));
                    __helios__common__assert_constr_index(data_137, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),
                    () -> {
                        (self_162) -> {
                            data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_162)));
                            __helios__common__assert_constr_index(data_137, 0)
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_33)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_198) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_198)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198);
        __cond_34 = __core__headList(__core__tailList(self_198));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),
            () -> {
                (__lhs_0_64) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_71) -> {
                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71)))))
                    }(self_100 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                    recurse_67 = (recurse_66, lst_12) -> {
                        __core__chooseList(lst_12, () -> {
                            error()
                        }, () -> {
                            item_6 = __core__headList__safe(lst_12);
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),
                                    () -> {
                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )(),
                                () -> {
                                    item_6
                                },
                                () -> {
                                    recurse_66(recurse_66, __core__tailList__safe(lst_12))
                                }
                            )()
                        })()
                    };
                    recurse_67(recurse_67, self_100))), 0)
                }
            },
            () -> {
                (__29) -> {
                    error()
                }
            }
        )()(__cond_34)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_200, dgtLink_1, role_1, idPrefix_3) -> {
        (input, mph_17) -> {
            __core__mkCons(__core__listData(dgtLink_1), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_17), __core__mkNilData(()))))))
        }((inputs_1, mph_13) -> {
            (uutName) -> {
                __cond_6 = __core__headList(__core__tailList(dgtLink_1));
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                    () -> {
                        (__lhs_0_8) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                            needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                            ac = __helios__assetclass__new(mph_13, __core__encodeUtf8(uutName));
                            __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                __core__ifThenElse(
                                    __core__equalsData(self_9 = __helios__txinput__address(i_7);
                                    __core__headList(__core__sndPair(__core__unConstrData(self_9))), needsAddrWithCred),
                                    () -> {
                                        a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), ac);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            });
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                () -> {
                                    (foundGood) -> {
                                        foundGood
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        error()
                                    }
                                }
                            )()(__cond_7)
                        }
                    }
                )()(__cond_6)
            }(d = __core__headList(dgtLink_1);
            __core__decodeUtf8(__core__unBData(d)))
        }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(self_200))), __core__unBData(__core__headList(self_200)))
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {
        __helios__txinput__address(__cond_35 = __core__headList(__core__tailList(self_201));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),
            () -> {
                (self_11) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
                    () -> {
                        (self_11) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))
                        }
                    },
                    () -> {
                        (__30) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_35))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204, id_1) -> {
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_159 = __helios__txoutputdatum__inline(self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),
                        () -> {
                            (__lhs_0_71) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);
                                __core__ifThenElse(
                                    __core__equalsByteString(id_1, #),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__31) -> {
                                false
                            }
                        }
                    )()(data_159)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput, self_205, newDataId, dataTypePurpose) -> {
        dgData = __helios__txoutputdatum__inline(self_71 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_205, newDataId);
        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
            () -> {
                (__lhs_0_72) -> {
                    data_160 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                    recIdStr_2 = __core__decodeUtf8(newDataId);
                    __core__ifThenElse(
                        self = __core__unBData(__helios__common__mStruct_field(data_160, #406964));
                        __core__ifThenElse(
                            __core__equalsByteString(self, newDataId),
                            false,
                            true
                        ),
                        () -> {
                            error()
                        },
                        () -> {
                            __core__ifThenElse(
                                (self_24) -> {
                                    __core__ifThenElse(
                                        __core__equalsString(self_24, dataTypePurpose),
                                        false,
                                        true
                                    )
                                }(d = __helios__common__mStruct_field(data_160, #747065);
                                __core__decodeUtf8(__core__unBData(d))),
                                () -> {
                                    error()
                                },
                                () -> {
                                    true
                                }
                            )()
                        }
                    )()
                }
            },
            () -> {
                (__32) -> {
                    error()
                }
            }
        )()(dgData)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_206, recId_5) -> {
        recIdStr_3 = __core__decodeUtf8(recId_5);
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_206)), recId_5);
        capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_206);
        (__cond_40) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_40)), 1),
                () -> {
                    (__lhs_0_74) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_73)))
                    }
                }
            )()(__cond_40)
        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_136, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_2)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_208) -> {
        charter_2 = __core__headList(__core__tailList(self_208));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_86) -> {
                    self_208
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_85) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_81) -> {
                            mph_21 = __core__unBData(__core__headList(self_208));
                            charterAc_4 = __helios__assetclass__new(mph_21, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_44) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_44)), 0),
                                    () -> {
                                        (self_9) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_44)
                            }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_133, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_209) -> {
        charter_3 = __core__headList(__core__tailList(self_209));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_90) -> {
                    self_209
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_89) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_87) -> {
                            mph_22 = __core__unBData(__core__headList(self_209));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_22, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_9) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_133, (txin) -> {
                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_219, fn_25) -> {
        recurse_87 = (recurse_86, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))
            })()
        };
        recurse_87(recurse_87, self_219)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_223, key_21) -> {
        __helios__common__map_get(self_223, __core__bData(key_21), (x_11) -> {
            __core__constrData(0, __core__mkCons(x_11, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_227, comp_4) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_54(recurse_54, __core__tailList__safe(lst_11));
                x_3 = __core__headList__safe(lst_11);
                recurse_53 = (recurse_52, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_3, lst_9)
                    }, () -> {
                        head_3 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_3)), __core__unIData(__core__sndPair(head_3))),
                            () -> {
                                __core__mkCons(x_3, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_53(recurse_53, tail_2)
            })()
        };
        recurse_55(recurse_55, self_227)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        (delegateApproval) -> {
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_228) -> {
                recurse_93 = (recurse_92, lst_24) -> {
                    __core__chooseList(lst_24, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))
                    })()
                };
                recurse_93(recurse_93, self_228)
            }(recurse_51 = (recurse_50, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    __module__StellarHeliosHelpers__mkTv(mph_26, mkTokenName_1(purpose_2))), recurse_50(recurse_50, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_51(recurse_51, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted, mph_26),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_26), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_26);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                ()
            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_38) -> {
                (b_15, __37) -> {
                    __core__ifThenElse(
                        __core__equalsByteString(b_15, mph_26),
                        false,
                        true
                    )
                }(__core__unBData(__core__fstPair(pair_38)), __core__unMapData(__core__sndPair(pair_38)))
            }, __core__mkNilPairData(())));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                });
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), otherPoliciesMintOk = __core__ifThenElse(
                b = __helios__value__is_zero(otherMintedValue_1);
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    true
                },
                () -> {
                    remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue, mph_26),
                        () -> {
                            key_23 = __core__bData(mph_26);
                            recurse_91 = (recurse_90, self_225) -> {
                                __core__chooseList(self_225, () -> {
                                    self_225
                                }, () -> {
                                    head_45 = __core__headList__safe(self_225);
                                    tail_4 = __core__tailList__safe(self_225);
                                    __core__ifThenElse(
                                        __core__equalsData(key_23, __core__fstPair(head_45)),
                                        () -> {
                                            recurse_90(recurse_90, tail_4)
                                        },
                                        () -> {
                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))
                                        }
                                    )()
                                })()
                            };
                            recurse_91(recurse_91, expectedValue)
                        },
                        () -> {
                            expectedValue
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint),
                        () -> {
                            true
                        },
                        () -> {
                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {
                                __core__chooseList(map_30, () -> {
                                    ()
                                }, () -> {
                                    head_44 = __core__headList__safe(map_30);
                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {
                                            __core__ifThenElse(
                                                (b) -> {
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    )
                                                }(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_3);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_54)), 1),
                                                    () -> {
                                                        (__lhs_0_112) -> {
                                                            false
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_111) -> {
                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_111))));
                                                            __core__equalsInteger(actualCount, expectedCount)
                                                        }
                                                    }
                                                )()(__cond_54)),
                                                () -> {
                                                    error()
                                                },
                                                () -> {
                                                    ()
                                                }
                                            )()
                                        })
                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))
                                })()
                            };
                            recurse_89(recurse_89, remainingExpectedMint), true)
                        }
                    )()
                }
            )();
            __core__chooseUnit(__core__ifThenElse(
                otherPoliciesMintOk,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    otherPoliciesMintOk
                },
                () -> {
                    false
                }
            )()))))))
        }(__lhs_0_110 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        charterAc_1 = __helios__assetclass__new(mph_26, #63686172746572);
        hasCharter_1 = (txin_1) -> {
            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_1);
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_3, 0),
                false,
                true
            )
        };
        (charterUtxo_1) -> {
            __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
            __helios__common__assert_constr_index(data_137, 0), 0)
        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
            () -> {
                (self_9) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    (__cond_14) -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                            () -> {
                                (self_9) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                }
                            },
                            () -> {
                                (__lhs_0_22) -> {
                                    error()
                                }
                            }
                        )()(__cond_14)
                    }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                    __helios__common__find_safe(self_133, hasCharter_1))
                }
            }
        )()(__cond_13)), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_110);
        true)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_263) -> {
        (key_29) -> {
            key_30 = __core__bData(__core__encodeUtf8(key_29));
            recurse_99 = (recurse_98, self_264) -> {
                __core__chooseList(self_264, () -> {
                    self_264
                }, () -> {
                    head_49 = __core__headList__safe(self_264);
                    tail_6 = __core__tailList__safe(self_264);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_49)),
                        () -> {
                            recurse_98(recurse_98, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_49, recurse_98(recurse_98, tail_6))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_263)
        }
    };
    __core__ifThenElse(
        __common8 = __core__fstPair(__core__unConstrData(__DATUM));
        __core__ifThenElse(
            __core__equalsInteger(__common8, 2),
            () -> {
                (__lhs_0_265) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common8, 1),
                    () -> {
                        __common18 = __core__fstPair(__core__unConstrData(__REDEEMER));
                        __common20 = __core__equalsInteger(__common18, 1);
                        (isD) -> {
                            __common22 = __core__sndPair(__core__unConstrData(isD));
                            __common23 = __core__headList(__common22);
                            __common24 = __core__unListData(__common23);
                            __common58 = __core__tailList(__common24);
                            __common59 = __core__headList(__common58);
                            __common60 = __core__unBData(__common59);
                            __common61 = __core__mkCons(__core__bData(__common60), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));
                            __common53 = __core__tailList(__common58);
                            __common54 = __core__headList(__common53);
                            __common55 = __core__unBData(__common54);
                            __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common55, #01),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common55, #67656e6572616c),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common55, #4d794d696e745370656e6444656c6567617465),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), myDgTkn = __helios__value__show(self_36 = __helios__scriptcontext__get_current_input();
                            self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_36))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))));
                            checkNonDelegatedActivities = __core__ifThenElse(
                                __core__equalsInteger(__common18, 8),
                                () -> {
                                    (__lhs_0_243) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __common20,
                                        () -> {
                                            (__lhs_0_237) -> {
                                                innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_237)));
                                                __common10 = __core__fstPair(__core__unConstrData(innerActivity));
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common10, 0),
                                                    () -> {
                                                        (__lhs_0_241) -> {
                                                            __common29 = __core__sndPair(__core__unConstrData(__lhs_0_241));
                                                            seed_9 = __core__headList(__common29);
                                                            (purpose_9) -> {
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common60, __common55), -1);
                                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common61);
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common60, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_9)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                                    __core__ifThenElse(
                                                                        isMintingOk,
                                                                        () -> {
                                                                            isUpdatingCharter
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }(__cond_111 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_111)), 5),
                                                                    () -> {
                                                                        (__lhs_0_242) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_111))
                                                            }(d = __core__headList(__core__tailList(__common29));
                                                            __core__decodeUtf8(__core__unBData(d)))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__common10, 1),
                                                            () -> {
                                                                (__lhs_0_240) -> {
                                                                    __core__equalsInteger(self_13 = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                    __common56 = __core__unConstrData(__helios__assetclass__new(__common60, __common55));
                                                                    __common57 = __core__sndPair(__common56);
                                                                    mph_2 = __core__headList(__common57);
                                                                    tokenName_1 = __core__headList(__core__tailList(__common57));
                                                                    outer_1 = (outer, inner, map) -> {
                                                                        __core__chooseList(map, () -> {
                                                                            error()
                                                                        }, () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                                                                                () -> {
                                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                                },
                                                                                () -> {
                                                                                    outer(outer, inner, __core__tailList__safe(map))
                                                                                }
                                                                            )()
                                                                        })()
                                                                    };
                                                                    outer_1(outer_1, (inner_1, map_1) -> {
                                                                        __core__chooseList(map_1, () -> {
                                                                            error()
                                                                        }, () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                                () -> {
                                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                                },
                                                                                () -> {
                                                                                    inner_1(inner_1, __core__tailList__safe(map_1))
                                                                                }
                                                                            )()
                                                                        })()
                                                                    }, self_13), -1)
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_238) -> {
                                                                    error()
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(innerActivity)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common18, 0),
                                                () -> {
                                                    (__lhs_0_137) -> {
                                                        dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_137)));
                                                        __common33 = __core__fstPair(__core__unConstrData(dCLA));
                                                        __common36 = __core__equalsInteger(__common33, 0);
                                                        cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common61));
                                                        __common0 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                        __common32 = __helios__common__enum_fields_after_4(__common0);
                                                        __core__chooseUnit(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                                        __common52 = __core__fstPair(__core__unConstrData(__cond_108));
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__common52, 0),
                                                            () -> {
                                                                (__lhs_0_236) -> {
                                                                    cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_236)));
                                                                    __core__ifThenElse(
                                                                        __core__equalsData(cCLA, dCLA),
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common52, 5),
                                                                    () -> {
                                                                        (__lhs_0_234) -> {
                                                                            __core__ifThenElse(
                                                                                __common36,
                                                                                () -> {
                                                                                    (__lhs_0_235) -> {
                                                                                        ()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__74) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(dCLA)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__73) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_108), neededRole = __core__ifThenElse(
                                                            __core__equalsInteger(__common33, 4),
                                                            () -> {
                                                                (__lhs_0_101) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common33, 5),
                                                                    () -> {
                                                                        (__lhs_0_100) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common33, 6),
                                                                            () -> {
                                                                                (__lhs_0_99) -> {
                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common33, 1),
                                                                                    () -> {
                                                                                        (__lhs_0_98) -> {
                                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common33, 2),
                                                                                            () -> {
                                                                                                (__lhs_0_97) -> {
                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__common33, 3),
                                                                                                    () -> {
                                                                                                        (__lhs_0_96) -> {
                                                                                                            __core__constrData(6, __core__mkNilData(()))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_95) -> {
                                                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(dCLA);
                                                        __common34 = __core__unConstrData(neededRole);
                                                        __common35 = __core__fstPair(__common34);
                                                        myCurrentRole = __core__ifThenElse(
                                                            __core__equalsInteger(__common35, 7),
                                                            () -> {
                                                                (__lhs_0_141) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common35, 1),
                                                                    () -> {
                                                                        (__lhs_0_140) -> {
                                                                            __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                            __core__ifThenElse(
                                                                                cond,
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), neededRole)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common35, 0),
                                                                            () -> {
                                                                                (__lhs_0_139) -> {
                                                                                    __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                                    __core__ifThenElse(
                                                                                        cond,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), neededRole)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common35, 6),
                                                                                    () -> {
                                                                                        (__lhs_0_138) -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                () -> {
                                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                        () -> {
                                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__43) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(neededRole);
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __common36,
                                                                () -> {
                                                                    (__lhs_0_230) -> {
                                                                        __common30 = __core__sndPair(__core__unConstrData(__lhs_0_230));
                                                                        seed_8 = __core__headList(__common30);
                                                                        (purpose_8) -> {
                                                                            mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                () -> {
                                                                                    __common13 = __core__bData(__core__encodeUtf8(purpose_8));
                                                                                    (__lhs_0_231) -> {
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __module__CapoMintHelpers__validateUutMinting(__common60, seed_8, __core__mkCons(__common13, __core__mkNilData(())), true, mkTn, false, ()),
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                ()
                                                                                            }
                                                                                        )(), (__cond_107) -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_107)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_233) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_232) -> {
                                                                                                        dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232))));
                                                                                                        __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                                        __core__decodeUtf8(__core__unBData(d)), mkTn(purpose_8));
                                                                                                        __core__ifThenElse(
                                                                                                            cond,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common60))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_107)
                                                                                        }((self_193) -> {
                                                                                            __helios__common__map_get(self_193, __common13, (x_6) -> {
                                                                                                __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                                            }, () -> {
                                                                                                __core__constrData(1, __core__mkNilData(()))
                                                                                            })
                                                                                        }(self_154 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_154)))))))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__72) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(myCurrentRole)
                                                                        }(d = __core__headList(__core__tailList(__common30));
                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common33, 1),
                                                                        () -> {
                                                                            (__lhs_0_178) -> {
                                                                                charterData_4 = __helios__common__assert_constr_index(__common0, 0);
                                                                                __common42 = __core__tailList(__helios__common__enum_fields_after_4(charterData_4));
                                                                                __common1 = __core__unListData(__core__headList(__core__tailList(__common42)));
                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                                                newChange = __core__headList(nextChangeList);
                                                                                __lhs_0_179 = __helios__common__assert_constr_index(newChange, 0);
                                                                                __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_179))));
                                                                                __common45 = __core__tailList(__lhs_0_0_2);
                                                                                action = __core__headList(__lhs_0_0_2);
                                                                                __common44 = __core__fstPair(__core__unConstrData(action));
                                                                                __common6 = __core__equalsInteger(__common44, 1);
                                                                                role_2 = __core__headList(__common45);
                                                                                __common46 = __core__unConstrData(role_2);
                                                                                __common47 = __core__fstPair(__common46);
                                                                                __common5 = __core__equalsInteger(__common47, 4);
                                                                                OdgtLink = __core__headList(__core__tailList(__common45));
                                                                                newDgtRoleName = __core__ifThenElse(
                                                                                    __common5,
                                                                                    () -> {
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                    },
                                                                                    () -> {
                                                                                        (__56) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()(role_2);
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __common6,
                                                                                    () -> {
                                                                                        (__lhs_0_228) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__70) -> {
                                                                                            ()
                                                                                        }
                                                                                    }
                                                                                )()(action), __core__chooseUnit((cond) -> {
                                                                                    __core__ifThenElse(
                                                                                        cond,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )()
                                                                                }(self_248 = __core__tailList(nextChangeList);
                                                                                __core__equalsData(__core__listData(self_248), __core__listData(__common1))), __core__ifThenElse(
                                                                                    __common6,
                                                                                    () -> {
                                                                                        (__lhs_0_227) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common44, 0),
                                                                                            () -> {
                                                                                                (__lhs_0_226) -> {
                                                                                                    __common48 = __core__sndPair(__core__unConstrData(__lhs_0_226));
                                                                                                    seed_7 = __core__headList(__common48);
                                                                                                    (purpose_7) -> {
                                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_226);
                                                                                                        (callback_14) -> {
                                                                                                            callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                                        }
                                                                                                    }(d = __core__headList(__core__tailList(__common48));
                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_225) -> {
                                                                                                    seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_225)));
                                                                                                    (purpose_6) -> {
                                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_225);
                                                                                                        (callback_13) -> {
                                                                                                            callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                                        }
                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_225))));
                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()(action)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                                    possibleMintDgtVerifications = __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                        () -> {
                                                                                            (__lhs_0_197) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                () -> {
                                                                                                    (__lhs_0_181) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __common6,
                                                                                                            () -> {
                                                                                                                (__lhs_0_189) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__58) -> {
                                                                                                                    mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                    mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common60, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_5)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());
                                                                                                                    dgtLink_2 = __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_183) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (self_192) -> {
                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_192))))
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(OdgtLink);
                                                                                                                    (__common2) -> {
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __core__equalsString(__common2, mkTokenName_2(purpose_5)),
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        )(), (delegateTakesOwnership) -> {
                                                                                                                            possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__common44, 2),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_184) -> {
                                                                                                                                        __core__chooseUnit(__cond_89 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__common42)), newDgtRoleName);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_89)), 0),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_186) -> {
                                                                                                                                                    dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_186)));
                                                                                                                                                    entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_188) -> {
                                                                                                                                                                (idPrefix_7) -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                                        () -> {
                                                                                                                                                                            ()
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_188))));
                                                                                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__60) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(entryType_1)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_185) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_89), true)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__59) -> {
                                                                                                                                        true
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(action);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__ifThenElse(
                                                                                                                                    mintedDgTkn,
                                                                                                                                    () -> {
                                                                                                                                        true
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                )(),
                                                                                                                                () -> {
                                                                                                                                    possibleExtraReplacementCheck
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common60);
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            assertion_2,
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        )(), true)))
                                                                                                                    }(d = __core__headList(dgtLink_2);
                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                }
                                                                                                            }
                                                                                                        )()(action)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__57) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(myCurrentRole);
                                                                                    otherPossibleVerifications = __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                        () -> {
                                                                                            (__lhs_0_224) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                () -> {
                                                                                                    (__lhs_0_198) -> {
                                                                                                        (isNotADuplicate) -> {
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                isNotADuplicate,
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__common42)), newDgtRoleName);
                                                                                                            possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                                                __core__equalsInteger(__common44, 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_222) -> {
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_223) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__69) -> {
                                                                                                                                    ()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(existingRoleEntryMaybe), true)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__common44, 2),
                                                                                                                        () -> {
                                                                                                                            __common49 = __core__equalsInteger(__common47, 2);
                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_203))))));
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __common49,
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_221) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__common47, 3),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_220) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__common47, 7),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_219) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__68) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_206) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_204) -> {
                                                                                                                                            __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_204)));
                                                                                                                                            entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                                                () -> {
                                                                                                                                                    (self_146) -> {
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_146))))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__66) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(entryType_2)
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(existingRoleEntryMaybe);
                                                                                                                                existingDgTkn = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__common47, 0),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                            some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common60);
                                                                                                                                            __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__common47, 1),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                    some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common60);
                                                                                                                                                    __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __common5,
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                            some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common60);
                                                                                                                                                            __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__common47, 5),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__common47, 6),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __common49,
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                    error()
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __core__equalsInteger(__common47, 3),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                                            error()
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_207) -> {
                                                                                                                                                                                            error()
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()(role_2);
                                                                                                                                __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    cond,
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), true))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_201) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(action);
                                                                                                            __core__ifThenElse(
                                                                                                                isNotADuplicate,
                                                                                                                () -> {
                                                                                                                    possibleReplacementIsCorrect
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )())
                                                                                                        }(recurse_23 = (recurse_22, self_41, fn_2) -> {
                                                                                                            __core__chooseList(self_41, () -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    fn_2(__core__headList__safe(self_41)),
                                                                                                                    () -> {
                                                                                                                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        };
                                                                                                        recurse_23(recurse_23, __common1, (pdChange_2) -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_199) -> {
                                                                                                                        __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_199))));
                                                                                                                        pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_200);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__64) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(pendingRole)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__63) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(pdChange_2)
                                                                                                        }))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__62) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(myCurrentRole);
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsInteger(__helios__common__length(__common1), 0),
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), __core__ifThenElse(
                                                                                        possibleMintDgtVerifications,
                                                                                        () -> {
                                                                                            otherPossibleVerifications
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )())
                                                                                })))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common33, 2),
                                                                                () -> {
                                                                                    (__lhs_0_177) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common33, 3),
                                                                                        () -> {
                                                                                            __common43 = __core__tailList(__common32);
                                                                                            (__lhs_0_154) -> {
                                                                                                pendingChangesList = __core__unListData(__core__headList(__core__tailList(__common43)));
                                                                                                previousManifest = __core__unMapData(__core__headList(__common43));
                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                __common38 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                                                nextManifest = __core__unMapData(__core__headList(__common38));
                                                                                                __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common38)))), 0);
                                                                                                __core__ifThenElse(
                                                                                                    cond,
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), spendDgtCheck = __core__ifThenElse(
                                                                                                    b = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                                    __core__ifThenElse(
                                                                                                        b,
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __helios__common__fold(pendingChangesList, (prev_5, item_18) -> {
                                                                                                            prev_5((a_19, b_16) -> {
                                                                                                                pdChange = __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(item_18)), 0),
                                                                                                                    () -> {
                                                                                                                        (self_141) -> {
                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_141))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_155) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(item_18);
                                                                                                                (pendingTypeName) -> {
                                                                                                                    __core__chooseUnit(__cond_73 = __core__headList(pdChange);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_73)), 1),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                __cond_76 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_16, pendingTypeName);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_76)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_164) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__52) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_76)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__49) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__helios__common__length(b_16), 0),
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                )(), head_48 = __core__headList(b_16);
                                                                                                                                (CME_key, __lhs_1) -> {
                                                                                                                                    ME_type = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                                    __lhs_0_159 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                    ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_159))));
                                                                                                                                    (ME_idPrefix) -> {
                                                                                                                                        refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_159))))));
                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __core__equalsInteger(refCount, 1),
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __core__equalsString(pendingTypeName, CME_key),
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        )(), (ME_name) -> {
                                                                                                                                            (pendingLink) -> {
                                                                                                                                                (pendingName) -> {
                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __core__equalsData(__core__listData(ME_policyLink), __core__listData(pendingLink)),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )(), (nextIdPrefix) -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }(__cond_74 = __core__headList(pdChange);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 2),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_161) -> {
                                                                                                                                                                idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_161);
                                                                                                                                                                __core__chooseUnit(__cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(b_16), pendingTypeName);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_75)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_162) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__51) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_75), idPrefix_6)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 0),
                                                                                                                                                                () -> {
                                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__50) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_74)))
                                                                                                                                                }((self_32) -> {
                                                                                                                                                    __core__appendString("'", __core__appendString(self_32, "'"))
                                                                                                                                                }(d = __core__headList(pendingLink);
                                                                                                                                                __core__decodeUtf8(__core__unBData(d))))
                                                                                                                                            }(self_262 = __core__headList(__core__tailList(__core__tailList(pdChange)));
                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_262)))))
                                                                                                                                        }((self_32) -> {
                                                                                                                                            __core__appendString("'", __core__appendString(self_32, "'"))
                                                                                                                                        }(d = __core__headList(ME_policyLink);
                                                                                                                                        __core__decodeUtf8(__core__unBData(d))))))
                                                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_159))));
                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_48))), __core__sndPair(head_48)))
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_73), __cond_72 = __core__headList(pdChange);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 0),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_158) -> {
                                                                                                                                (callback_12) -> {
                                                                                                                                    callback_12(a_19, __core__tailList(b_16))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__48) -> {
                                                                                                                                (callback_11) -> {
                                                                                                                                    callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_19)(pendingTypeName), __core__tailList(b_16))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_72))
                                                                                                                }(__cond_71 = __core__headList(__core__tailList(pdChange));
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_71)), 4),
                                                                                                                    () -> {
                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__47) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(__cond_71))
                                                                                                            })
                                                                                                        }, (callback_9) -> {
                                                                                                            callback_9(previousManifest, nextManifest)
                                                                                                        })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                            __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                                        })
                                                                                                    }
                                                                                                )();
                                                                                                mintDgtCheck = __core__ifThenElse(
                                                                                                    b = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                                    __core__ifThenElse(
                                                                                                        b,
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                                        mintThisPolicy = __helios__common__map_get(mint, __core__bData(__common60), (x_12) -> {
                                                                                                            __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
                                                                                                        }, () -> {
                                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                                        });
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __core__ifThenElse(
                                                                                                                __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                                false,
                                                                                                                true
                                                                                                            ),
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            }
                                                                                                        )(), observedTokenBurn = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                                            () -> {
                                                                                                                (self_257) -> {
                                                                                                                    __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_257))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_165) -> {
                                                                                                                    __core__mkNilPairData(())
                                                                                                                }
                                                                                                            }
                                                                                                        )()(mintThisPolicy);
                                                                                                        remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange_1) -> {
                                                                                                            pdChange_1 = __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange_1)), 0),
                                                                                                                () -> {
                                                                                                                    (self_141) -> {
                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_141))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_167) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(pcChange_1);
                                                                                                            __cond_79 = __core__headList(__core__tailList(pdChange_1));
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_79)), 4),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_169) -> {
                                                                                                                        typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_169);
                                                                                                                        __cond_80 = __core__headList(pdChange_1);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_80)), 0),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_176) -> {
                                                                                                                                    foldingBurn
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__54) -> {
                                                                                                                                    __cond_81 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_81)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_175) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                                __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_170)));
                                                                                                                                                ME_type_1 = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                                tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                                mph_29 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_29)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_174) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__55) -> {
                                                                                                                                                            __lhs_0_171 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                            refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_171))))));
                                                                                                                                                            __cond_83 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_5);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_83)), 1),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_173) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_172) -> {
                                                                                                                                                                        burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_172))));
                                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __core__equalsInteger(__core__subtractInteger(0, refCount_1), burningCount),
                                                                                                                                                                                false,
                                                                                                                                                                                true
                                                                                                                                                                            ),
                                                                                                                                                                            () -> {
                                                                                                                                                                                error()
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                ()
                                                                                                                                                                            }
                                                                                                                                                                        )(), key_27 = __core__bData(tn_5);
                                                                                                                                                                        recurse_97 = (recurse_96, self_256) -> {
                                                                                                                                                                            __core__chooseList(self_256, () -> {
                                                                                                                                                                                self_256
                                                                                                                                                                            }, () -> {
                                                                                                                                                                                head_47 = __core__headList__safe(self_256);
                                                                                                                                                                                tail_5 = __core__tailList__safe(self_256);
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __core__equalsData(key_27, __core__fstPair(head_47)),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        recurse_96(recurse_96, tail_5)
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__mkCons(head_47, recurse_96(recurse_96, tail_5))
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            })()
                                                                                                                                                                        };
                                                                                                                                                                        recurse_97(recurse_97, foldingBurn))
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_83)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(mph_29)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_81)
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_80)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__53) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_79)
                                                                                                        }, observedTokenBurn);
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )(), true))
                                                                                                    }
                                                                                                )();
                                                                                                __core__ifThenElse(
                                                                                                    mintDgtCheck,
                                                                                                    () -> {
                                                                                                        spendDgtCheck
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__common33, 6),
                                                                                                () -> {
                                                                                                    (__lhs_0_144) -> {
                                                                                                        manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144)));
                                                                                                        __common11 = __core__fstPair(__core__unConstrData(manifestActivity));
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __core__equalsInteger(__common11, 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_153) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__common11, 1),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_152) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__common11, 2),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_146) -> {
                                                                                                                                    __common37 = __core__sndPair(__core__unConstrData(__lhs_0_146));
                                                                                                                                    (key_31) -> {
                                                                                                                                        tokenName_5 = __core__unBData(__core__headList(__core__tailList(__common37)));
                                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__common0, 0);
                                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                                                        __common39 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                                        __common40 = __core__headList(__common39);
                                                                                                                                        __common41 = __core__unMapData(__common40);
                                                                                                                                        (__lhs_0_147) -> {
                                                                                                                                            __core__chooseUnit(__cond_67 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common41, key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_67)), 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_151) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_148) -> {
                                                                                                                                                        __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_148)));
                                                                                                                                                        entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                                        tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                                        mph_28 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsByteString(tn_4, tokenName_5),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_28)), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_150) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__46) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(mph_28), __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_149) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__45) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(entryType)))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_67), (cond) -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    cond,
                                                                                                                                                    () -> {
                                                                                                                                                        ()
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }(self_265 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                                            __core__equalsData(__core__mapData(self_265), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common41)(key_31)))))
                                                                                                                                        }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, tokenName_5);
                                                                                                                                        recIdStr = __core__decodeUtf8(tokenName_5);
                                                                                                                                        (__cond_36) -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_68) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_67) -> {
                                                                                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_36)
                                                                                                                                        }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                                        __helios__common__find_safe(self_133, hasDD)))
                                                                                                                                    }(d = __core__headList(__common37);
                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__common11, 3),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_145) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__44) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()(manifestActivity), true)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__common33, 5),
                                                                                                        () -> {
                                                                                                            (__lhs_0_143) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_142) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(dCLA),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common18, 5),
                                                        () -> {
                                                            (__lhs_0_136) -> {
                                                                __common25 = __core__sndPair(__core__unConstrData(__lhs_0_136));
                                                                seed_4 = __core__headList(__common25);
                                                                (dataTypePurpose_1) -> {
                                                                    cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common61);
                                                                    __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_3, false);
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )(), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_3, dataTypePurpose_1);
                                                                    tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                    (purpose_4) -> {
                                                                        __core__ifThenElse(
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoMintHelpers__validateUutMinting(__common60, seed_4, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, tnFactory, false, ()),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )(),
                                                                                    () -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_3, __core__encodeUtf8(tnFactory(purpose_4)), dataTypePurpose_1)
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )(),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )(),
                                                                            () -> {
                                                                                (self_181) -> {
                                                                                    true
                                                                                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(policyDelegateInput);
                                                                                __common31 = __core__fstPair(__core__unConstrData(__cond_17));
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common31, 3),
                                                                                    () -> {
                                                                                        (__lhs_0_30) -> {
                                                                                            ma_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_30)));
                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                __core__chooseData(ma_1, () -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                })(),
                                                                                                () -> {
                                                                                                    (__lhs_0_31) -> {
                                                                                                        fields_72 = __core__sndPair(__core__unConstrData(__lhs_0_31));
                                                                                                        cond = __core__equalsData(seed_4, __core__chooseList(fields_72, () -> {
                                                                                                            error()
                                                                                                        }, () -> {
                                                                                                            __core__headList__safe(fields_72)
                                                                                                        })());
                                                                                                        __core__ifThenElse(
                                                                                                            cond,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__21) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(ma_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common31, 8),
                                                                                            () -> {
                                                                                                (__lhs_0_27) -> {
                                                                                                    activities = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_27))));
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__lessThanEqualsInteger(__helios__common__length(activities), 0),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), foundWithThisSeed = __helios__common__filter(activities, (a_14) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_14)), 3),
                                                                                                            () -> {
                                                                                                                (__lhs_0_28) -> {
                                                                                                                    ma = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_28)));
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__chooseData(ma, () -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        })(),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_29) -> {
                                                                                                                                index_11 = __core__fstPair(__core__unConstrData(__lhs_0_29));
                                                                                                                                fields_71 = __core__sndPair(__core__unConstrData(__lhs_0_29));
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(index_11, index_11),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), __core__ifThenElse(
                                                                                                                                    __core__equalsData(seed_4, __core__headList(fields_71)),
                                                                                                                                    () -> {
                                                                                                                                        true
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                )())
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__20) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(ma)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__19) -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            }
                                                                                                        )()(a_14)
                                                                                                    }, __core__mkNilData(()));
                                                                                                    __common4 = __helios__common__length(foundWithThisSeed);
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__lessThanEqualsInteger(__common4, 0),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(__common4, 1),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__18) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()(__cond_17))
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    }(self_266 = __core__headList(__core__tailList(__core__tailList(policyDelegateInput)));
                                                                    d = __core__headList(__core__sndPair(__core__unConstrData(self_266)));
                                                                    __core__decodeUtf8(__core__unBData(d))))
                                                                }(d = __core__headList(__core__tailList(__common25));
                                                                __core__decodeUtf8(__core__unBData(d)))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common18, 6),
                                                                () -> {
                                                                    (__lhs_0_135) -> {
                                                                        __common26 = __core__sndPair(__core__unConstrData(__lhs_0_135));
                                                                        (dDataType) -> {
                                                                            recId_8 = __core__unBData(__core__headList(__core__tailList(__common26)));
                                                                            __common27 = __core__decodeUtf8(recId_8);
                                                                            cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common61);
                                                                            __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                                            __core__ifThenElse(
                                                                                cond,
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), __core__chooseUnit((cond) -> {
                                                                                ()
                                                                            }((self_181) -> {
                                                                                true
                                                                            }(self_179 = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_2, dDataType);
                                                                            __core__chooseUnit(__cond_25 = __core__headList(__core__tailList(self_179));
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                                                () -> {
                                                                                    (__lhs_0_40) -> {
                                                                                        ()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__26) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(__cond_25), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(self_179);
                                                                            __common28 = __core__fstPair(__core__unConstrData(__cond_21));
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common28, 2),
                                                                                () -> {
                                                                                    (__lhs_0_38) -> {
                                                                                        sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_38)));
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__chooseData(sa_1, () -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            })(),
                                                                                            () -> {
                                                                                                (__lhs_0_39) -> {
                                                                                                    __common9 = __core__unConstrData(__lhs_0_39);
                                                                                                    index_13 = __core__fstPair(__common9);
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(index_13, index_13),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), foundRecId_1 = __core__unBData(__core__headList(__core__sndPair(__common9)));
                                                                                                    __core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsByteString(recId_8, foundRecId_1),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }
                                                                                                    )())
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__25) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_179))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common28, 8),
                                                                                        () -> {
                                                                                            (__lhs_0_32) -> {
                                                                                                activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_15) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 5),
                                                                                                        () -> {
                                                                                                            (__lhs_0_37) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 6),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_36) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 7),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_35) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 2),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_33) -> {
                                                                                                                                        sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__chooseData(sa, () -> {
                                                                                                                                                true
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            })(),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_34) -> {
                                                                                                                                                    index_12 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                    fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(index_12, index_12),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsByteString(recId_8, foundRecId),
                                                                                                                                                            false,
                                                                                                                                                            true
                                                                                                                                                        ),
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            true
                                                                                                                                                        }
                                                                                                                                                    )())
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__24) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(sa)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__23) -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(a_15)
                                                                                                }, __core__mkNilData(()));
                                                                                                __common3 = __helios__common__length(actsOnThisRecord);
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(__common3, 0),
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__equalsInteger(__common3, 1),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_179))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__22) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()(__cond_21)))), (inputDD) -> {
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsData(inputDD, inputDD),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsString("settings", dDataType),
                                                                                    () -> {
                                                                                        (curSettingsId) -> {
                                                                                            ()
                                                                                        }((self_267) -> {
                                                                                            __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_267))))
                                                                                        }((oe) -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_58) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_57) -> {
                                                                                                        e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_57)));
                                                                                                        some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                                        __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                                                    }
                                                                                                }
                                                                                            )()(oe)
                                                                                        }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                                                    },
                                                                                    () -> {
                                                                                        ()
                                                                                    }
                                                                                )(), __core__ifThenElse(
                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_2, recId_8, dDataType),
                                                                                    () -> {
                                                                                        true
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()))
                                                                            }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, recId_8);
                                                                            (__cond_37) -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
                                                                                    () -> {
                                                                                        (__lhs_0_70) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_69) -> {
                                                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_69)))
                                                                                        }
                                                                                    }
                                                                                )()(__cond_37)
                                                                            }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                            __helios__common__find_safe(self_133, hasDD_1)))))
                                                                        }(d = __core__headList(__common26);
                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common18, 7),
                                                                        () -> {
                                                                            (__lhs_0_133) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common18, 2),
                                                                                () -> {
                                                                                    (__lhs_0_132) -> {
                                                                                        true
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common18, 3),
                                                                                        () -> {
                                                                                            (__lhs_0_131) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_130) -> {
                                                                                                true
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__REDEEMER);
                            __core__chooseUnit(__core__ifThenElse(
                                checkNonDelegatedActivities,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), (cctx_7) -> {
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __common20,
                                            () -> {
                                                (__lhs_0_125) -> {
                                                    true
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common18, 0),
                                                    () -> {
                                                        (__lhs_0_121) -> {
                                                            CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_121)));
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(CLA)), 0),
                                                                () -> {
                                                                    (__lhs_0_122) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__39) -> {
                                                                        true
                                                                    }
                                                                }
                                                            )()(CLA)
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__common18, 2),
                                                            () -> {
                                                                (__lhs_0_119) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common18, 3),
                                                                    () -> {
                                                                        (__lhs_0_116) -> {
                                                                            a_17 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_116)));
                                                                            __core__chooseUnit((cond) -> {
                                                                                ()
                                                                            }(self_216 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);
                                                                            true), __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_17)), 0),
                                                                                () -> {
                                                                                    (__lhs_0_118) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__lhs_0_117) -> {
                                                                                        tokenName_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_117))));
                                                                                        __core__chooseUnit((cond) -> {
                                                                                            ()
                                                                                        }(self_216 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_7);
                                                                                        true), __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx), __common60)), 1);
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), __core__chooseUnit(msg_1 = __core__appendString("ok, minting fungibles: ", __core__decodeUtf8(tokenName_4));
                                                                                        (), true)))
                                                                                    }
                                                                                }
                                                                            )()(a_17))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common18, 5),
                                                                            () -> {
                                                                                (__lhs_0_115) -> {
                                                                                    true
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common18, 6),
                                                                                    () -> {
                                                                                        (__lhs_0_114) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common18, 7),
                                                                                            () -> {
                                                                                                (__lhs_0_113) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__38) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__REDEEMER),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))
                                        }
                                    )(),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(charter_1 = __core__headList(__core__tailList(__common61));
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),
                                () -> {
                                    (__lhs_0_80) -> {
                                        __common61
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),
                                        () -> {
                                            (__lhs_0_79) -> {
                                                __common61
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_75) -> {
                                                mph_20 = __core__unBData(__core__headList(__common61));
                                                charterAc_3 = __helios__assetclass__new(mph_20, #63686172746572);
                                                (__cond_42) -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),
                                                        () -> {
                                                            (__lhs_0_78) -> {
                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common61)
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_77) -> {
                                                                charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)));
                                                                datum_4 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_71 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))))));
                                                                __helios__common__assert_constr_index(data_137, 0), 0);
                                                                __core__mkCons(__core__bData(mph_20), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                                            }
                                                        }
                                                    )()(__cond_42)
                                                }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                __helios__common__find_safe(self_133, (txin_5) -> {
                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_3);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(a_3, 0),
                                                        false,
                                                        true
                                                    )
                                                }))
                                            }
                                        }
                                    )()
                                }
                            )()(charter_1))))))
                        }
                    },
                    () -> {
                        __common16 = __core__unConstrData(__REDEEMER);
                        __common17 = __core__fstPair(__common16);
                        __common19 = __core__equalsInteger(__common17, 1);
                        (__41) -> {
                            __core__ifThenElse(
                                __common19,
                                () -> {
                                    (__lhs_0_129) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __common21 = __core__equalsInteger(__common17, 0);
                                    __core__ifThenElse(
                                        __common21,
                                        () -> {
                                            (__lhs_0_128) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__42) -> {
                                                __core__ifThenElse(
                                                    __common19,
                                                    () -> {
                                                        (__lhs_0_127) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __common21,
                                                            () -> {
                                                                (__lhs_0_126) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__40) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__REDEEMER)
                                            }
                                        }
                                    )()
                                }
                            )()(__REDEEMER)
                        }
                    }
                )()
            }
        )()(__DATUM),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes) -> {
        n = __core__lengthOfByteString(bytes);
        recurse_1 = (recurse, i) -> {
            __core__ifThenElse(
                __core__equalsInteger(i, n),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes, i);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse(recurse, __core__addInteger(i, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse(recurse, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse(recurse, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse(recurse, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_1(recurse_1, 0)
    };
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes_1) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_2 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes_1);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_2
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_2)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n_1 = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n_1),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__bytearray__decode_utf8_safe = (self_7) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_7),
                () -> {
                    __core__decodeUtf8__safe(self_7)
                },
                () -> {
                    __helios__bytearray__show(self_7)()
                }
            )()
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_8) -> {
        __core__sndPair(__core__unConstrData(self_8))
    };
    __helios__common__enum_field_0 = (self_9) -> {
        __core__headList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_fields_after_0 = (self_10) -> {
        __core__tailList(__helios__common__enum_fields(self_10))
    };
    __helios__common__enum_field_1 = (self_11) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__value__new = (assetClass, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_1),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_12) -> {
        __core__multiplyInteger(self_12, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_13) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_13)
        }
    };
    __helios__common__enum_fields_after_1 = (self_14) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_14))
    };
    __helios__common__enum_fields_after_2 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_15))
    };
    __helios__common__enum_fields_after_3 = (self_16) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_16))
    };
    __helios__common__enum_field_4 = (self_17) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_17))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__helios__common__enum_field_4(self_18))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_21) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
                bytes_4 = __core__consByteString(__helios__int__show_digit(i_3), bytes_3);
                __core__ifThenElse(
                    __core__lessThanInteger(i_3, 10),
                    () -> {
                        bytes_4
                    },
                    () -> {
                        recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_21, 0),
                () -> {
                    __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
                },
                () -> {
                    recurse_9(recurse_9, self_21, #)
                }
            )())
        }
    };
    __helios__data__show = (self_22) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_11, data_2) -> {
                recurse_11(recurse_11, data_2)
            }((recurse_10, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_10(recurse_10, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_10(recurse_10, __core__fstPair(pair));
                        value_1 = recurse_10(recurse_10, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_10(recurse_10, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_5 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_5)()
                })()
            }, self_22)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_13 = (recurse_12) -> {
                (lst_1, i_4) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_2(head)
                            },
                            () -> {
                                recurse_12(recurse_12)(__core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_13(recurse_13)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_3(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_23) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_23)()
                    }
                )()
            })(self_23)
        }
    };
    __helios__string____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_24, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_6, callback_ok_1, callback_nok_3) -> {
        __core__chooseData(data_6, callback_nok_3, () -> {
            callback_ok_1(__core__unMapData__safe(data_6))
        }, callback_nok_3, callback_nok_3, callback_nok_3)()
    };
    __helios__common__unIData__safe = (data_7, callback_ok_2, callback_nok_4) -> {
        __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
            callback_ok_2(__core__unIData__safe(data_7))
        }, callback_nok_4)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_25) -> {
        () -> {
            __core__divideInteger(self_25, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_26) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_26, 0),
                () -> {
                    __core__multiplyInteger(self_26, -1)
                },
                () -> {
                    self_26
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_27, n_2) -> {
        recurse_15 = (recurse_14, x_1, pos, bytes_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_6
                        },
                        () -> {
                            recurse_14(recurse_14, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_6))
                        }
                    )()
                },
                () -> {
                    recurse_14(recurse_14, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_6))
                }
            )()
        };
        recurse_15(recurse_15, self_27, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_28) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_28, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_28, -1)))
                },
                () -> {
                    show_positive(self_28)
                }
            )()
        }
    };
    __helios__value__show = (self_29) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_29, (prev_1, pair_3) -> {
                mph_data = __core__fstPair(pair_3);
                tokens_data = __core__sndPair(pair_3);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_4) -> {
                            token_name_data = __core__fstPair(pair_4);
                            qty_data = __core__sndPair(pair_4);
                            __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_4, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_2)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__int____neq = (self_30, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_30, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_31) -> {
        () -> {
            self_31
        }
    };
    __helios__string__show = (self_32) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_32, "'"))
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_33) -> {
        () -> {
            __core__ifThenElse(
                self_33,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_34) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_34)()), self_34)
        }
    };
    __helios__txoutput__value = (self_35) -> {
        __core__unMapData(__helios__common__enum_field_1(self_35))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_36) -> {
        __helios__txoutput__value(__helios__txinput__output(self_36))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_37) -> {
        __core__unListData(__helios__common__enum_field_0(self_37))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__bytearray__decode_utf8 = (self_43) -> {
        () -> {
            __core__decodeUtf8(self_43)
        }
    };
    __helios__value__get_policy = (self_44) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_25 = (recurse_24, map_3) -> {
                __core__chooseList(map_3, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_3)))
                        },
                        () -> {
                            recurse_24(recurse_24, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            recurse_25(recurse_25, self_44)
        }
    };
    __helios__common__serialize = (self_45) -> {
        () -> {
            __core__serialiseData(self_45)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__find_safe = (self_46, fn_3, callback_6) -> {
        recurse_27 = (recurse_26, self_47, fn_4) -> {
            __core__chooseList(self_47, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_2 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_6(head_2)))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(self_47), fn_4)
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46, fn_3)
    };
    __helios__string__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_11))
        })()
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_13, index_1, test_a, test_b) -> {
        __core__chooseData(data_13, () -> {
            pair_5 = __core__unConstrData__safe(data_13);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_5), index_1),
                () -> {
                    fields_2 = __core__sndPair(pair_5);
                    __core__chooseList(fields_2, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_2)),
                            () -> {
                                tail = __core__tailList__safe(fields_2);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_14) -> {
            __core__chooseData(data_14, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_14);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_6 = __core__unConstrData__safe(data_15);
            index_2 = __core__fstPair(pair_6);
            fields_3 = __core__sndPair(pair_6);
            __core__ifThenElse(
                __core__equalsInteger(0, index_2),
                () -> {
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_3), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_3))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_16) -> {
        __core__chooseData(data_16, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_17) -> {
        __helios__common__test_constr_data_2(data_17, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_18) -> {
        true
    };
    __helios__value__contains_policy = (self_48) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_29 = (recurse_28, map_4) -> {
                __core__chooseList(map_4, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), mph_8),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, self_48)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_31 = (recurse_30, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_31(recurse_31, tokens_1)
    };
    __helios__value__is_zero = (self_49) -> {
        () -> {
            recurse_33 = (recurse_32, map_5) -> {
                __core__chooseList(map_5, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_5))))
                    }, () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    })
                })()
            };
            recurse_33(recurse_33, self_49)
        }
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__value__get_map_keys = (map_8) -> {
        recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, map_8)
    };
    __helios__common__any = (self_50, fn_5) -> {
        recurse_39 = (recurse_38, self_51, fn_6) -> {
            __core__chooseList(self_51, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_51)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_51), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_50, fn_5)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_5)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_41 = (recurse_40, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_41(recurse_41, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_43 = (recurse_42, keys, map_10) -> {
            __core__chooseList(map_10, () -> {
                __helios__common__list_0
            }, () -> {
                key_6 = __core__fstPair(__core__headList__safe(map_10));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_6),
                    () -> {
                        recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                    },
                    () -> {
                        __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_43(recurse_43, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_6, b_6) -> {
            recurse_45 = (recurse_44, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_7 = __core__headList__safe(keys_1);
                    tail_1 = recurse_44(recurse_44, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {
        recurse_49 = (recurse_48, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_2 = recurse_48(recurse_48, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_8, b_8) -> {
        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)
    };
    __helios__common__map = (self_52, fn_7, init) -> {
        recurse_51 = (recurse_50, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_7(__core__headList__safe(rem_1)), recurse_50(recurse_50, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_51(recurse_51, self_52, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_53 = (recurse_52, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_3 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_3),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_53(recurse_53, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_4, tail_3) -> {
                    __helios__common__insert_in_sorted(head_4, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_54(recurse_54, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_55(recurse_55, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter = (self_53, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_54, fn_9) -> {
            __core__chooseList(self_54, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_54);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_54), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_54), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_53, fn_8)
    };
    __helios__common__filter_map = (self_55, fn_10) -> {
        __helios__common__filter(self_55, fn_10, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_9, b_9) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_9, b_9),
            b_9,
            a_9
        )
    };
    __helios__common__slice_bytearray = (self_56, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_56), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_12 = (start_1) -> {
                fn_11 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_56)
                };
                fn_11(normalize(end))
            };
            fn_12(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_57) -> {
        __helios__common__slice_bytearray(self_57, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_58) -> {
        () -> {
            __core__blake2b_256(self_58)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_59) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_59))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_60) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_60))
    };
    __helios__common__enum_fields_after_5 = (self_61) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_61))
    };
    __helios__common__enum_fields_after_6 = (self_62) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_62))
    };
    __helios__common__enum_fields_after_7 = (self_63) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_63))
    };
    __helios__common__enum_fields_after_8 = (self_64) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_64))
    };
    __helios__common__enum_field_9 = (self_65) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_65))
    };
    __helios__tx__redeemers = (self_66) -> {
        __core__unMapData(__helios__common__enum_field_9(self_66))
    };
    __helios__scriptpurpose__spending____is = (data_19) -> {
        __helios__common__enum_tag_equals(data_19, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_67) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_13) -> {
                __core__chooseList(map_13, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_14) -> {
                __core__chooseList(map_14, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_67)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_68) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_4)
                    },
                    () -> {
                        __helios__data__show(self_68)()
                    }
                )()
            })(self_68)
        }
    };
    __helios__data__show_idata = (callback_7) -> {
        (data_20) -> {
            callback_nok_5 = __helios__data__show(data_20);
            __core__chooseData(data_20, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_7(__core__unIData__safe(data_20))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_69) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_5);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_5);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_69)()
                    }
                )()
            })(self_69)
        }
    };
    __helios__txoutputdatum__inline = (self_70) -> {
        pair_7 = __core__unConstrData(self_70);
        index_3 = __core__fstPair(pair_7);
        fields_6 = __core__sndPair(pair_7);
        __core__ifThenElse(
            __core__equalsInteger(index_3, 2),
            () -> {
                __core__headList(fields_6)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_71) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_71))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__txinput__datum = (self_72) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_72))
    };
    __helios__tx__ref_inputs = (self_73) -> {
        __core__unListData(__helios__common__enum_field_1(self_73))
    };
    __helios__tx__outputs = (self_74) -> {
        __core__unListData(__helios__common__enum_field_2(self_74))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__string__serialize = (self_75) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_75))
        }
    };
    __helios__txinput__address = (self_76) -> {
        __helios__txoutput__address(__helios__txinput__output(self_76))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_77) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_77))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_78) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_78))
        }
    };
    __helios__struct____eq = (self_79, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_79), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_9 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
    };
    __helios__value__compare = (a_11, b_11, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_10 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_11, key_10))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value____geq = (a_12, b_12) -> {
        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_80) -> {
        (value_2) -> {
            __helios__value____geq(self_80, value_2)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__common__filter_list = (self_81, fn_13) -> {
        __helios__common__filter(self_81, fn_13, __helios__common__list_0)
    };
    __helios__tx__filter_outputs = (self_82, fn_14) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_82), fn_14)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_83) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_83)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_84) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_84))
    };
    __helios__spendingcredential__validator__cast = (data_21) -> {
        __helios__common__assert_constr_index(data_21, 1)
    };
    __helios__txoutput__is_locked_by = (self_85) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_85));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_86) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_86, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_87) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_87)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_23) -> {
        __core__sndPair(__core__unConstrData(data_23))
    };
    __helios__data__constrdata__tag = (data_24) -> {
        __core__fstPair(__core__unConstrData(data_24))
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_fields_after_2 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_89))
    };
    __helios__common__struct_fields_after_3 = (self_90) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_90))
    };
    __helios__common__struct_field_4 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_91))
    };
    __helios__common__struct_field_3 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_92))
    };
    __helios__common__struct_field_2 = (self_93) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_93))
    };
    __helios__txoutput__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_26) -> {
        __helios__common__test_constr_data_2(data_26, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_7 = (self_94) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_94))
    };
    __helios__common__enum_field_6 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_95))
    };
    __helios__common__enum_field_5 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_96))
    };
    __helios__common__enum_field_3 = (self_97) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_97))
    };
    __helios__common__mStruct_field_internal = (map_15, name) -> {
        name_data = __core__bData(name);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_98), name_1)
    };
    __helios__common__test_mStruct_field = (self_99, name_2, inner_test) -> {
        __core__chooseData(self_99, () -> {
            false
        }, () -> {
            map_17 = __core__unMapData__safe(self_99);
            recurse_65 = (recurse_64, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_7 = __core__headList__safe(map_18);
                    key_12 = __core__fstPair(head_7);
                    value_4 = __core__sndPair(head_7);
                    __core__ifThenElse(
                        __core__equalsData(key_12, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_64(recurse_64, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_65(recurse_65, map_17)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_27);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            pair_8 = __core__unConstrData__safe(data_28);
            index_4 = __core__fstPair(pair_8);
            fields_7 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            pair_9 = __core__unConstrData__safe(data_29);
            tag_4 = __core__fstPair(pair_9);
            fields_8 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_10 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_10);
            fields_9 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_31) -> {
        __helios__common__test_constr_data_2(data_31, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_32) -> {
            __core__chooseData(data_32, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_32);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_34) -> {
        __core__chooseData(data_34, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_100) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_100)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_101) -> {
        __helios__common__length(self_101)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_102) -> {
        __helios__common__length(self_102)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_35) -> {
        map_21 = __core__unMapData(data_35);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_103) -> {
        (key_13) -> {
            __helios__common__map_get(self_103, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_104) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_104)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_36) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_36, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_36, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_37) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_37),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_37
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_105) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_105, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_106) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_106, #747065))
    };
    __helios__list[__helios__data]__head = (self_107) -> {
        __helios__data__from_data(__core__headList(self_107))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_38) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_38),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_38),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_38),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_39) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_39),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_39
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_11 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_108) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_108))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_109) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_109))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_12 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_46) -> {
        __helios__common__enum_tag_equals(data_46, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_47) -> {
        __core__chooseData(data_47, () -> {
            pair_13 = __core__unConstrData__safe(data_47);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_48 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_48, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_48);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_49) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_49),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_49),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_49),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_49),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_49),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_49),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_49),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_49),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_50) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_50),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_50
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_14 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_15 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_16 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_17 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_18 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_110))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_111) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_111)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_19 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_20 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_72) -> {
        __helios__common__enum_tag_equals(data_72, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_73) -> {
        __core__chooseData(data_73, () -> {
            pair_21 = __core__unConstrData__safe(data_73);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_74 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_74, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_74);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_75) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_75),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_75),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_75),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_75),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_75),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_76) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_76),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_76
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_22 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_23 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_24 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_112) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_112))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_113) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_113))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_86) -> {
        __helios__common__enum_tag_equals(data_86, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_87) -> {
        __core__chooseData(data_87, () -> {
            pair_25 = __core__unConstrData__safe(data_87);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_88 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_88, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_88);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_26 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_91) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_91),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_91),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_91),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_92) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_92),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_92
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_27 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_114) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_114))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_115) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_115))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_116))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_28 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_99) -> {
        __helios__common__enum_tag_equals(data_99, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_100) -> {
        __core__chooseData(data_100, () -> {
            pair_29 = __core__unConstrData__safe(data_100);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_101 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_101, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_101);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_120) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_120))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_102) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_102),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_102),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_102),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_102),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_102),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_102),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_102),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_103) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_103),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_103
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_30 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_31 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_32 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_33 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_34 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_35 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_36 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_123) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_125) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_125),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_125),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_125),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_125),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_125),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_125),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_125),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_125),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_125),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_126) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_126),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_126
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_37 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_38 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_124) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_39 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_125) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_125))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_135) -> {
        __helios__common__enum_tag_equals(data_135, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_136) -> {
        __core__chooseData(data_136, () -> {
            pair_40 = __core__unConstrData__safe(data_136);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_137 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_137, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_137);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_126) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_41 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_42 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_43 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_147) -> {
        __core__chooseData(data_147, () -> {
            pair_44 = __core__unConstrData__safe(data_147);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_148 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_148, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_148);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_149) -> {
        __helios__common__enum_tag_equals(data_149, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_150) -> {
        __core__chooseData(data_150, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_150))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_151) -> {
        __core__chooseData(data_151, () -> {
            pair_45 = __core__unConstrData__safe(data_151);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_152 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_152, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_152);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_153) -> {
        lst_15 = __core__unListData(data_153);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_127) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_154) -> {
        __helios__common__enum_tag_equals(data_154, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_155) -> {
        __helios__common__enum_tag_equals(data_155, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_156) -> {
        __core__chooseData(data_156, () -> {
            pair_46 = __core__unConstrData__safe(data_156);
            index_6 = __core__fstPair(pair_46);
            fields_86 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_157) -> {
        __core__chooseData(data_157, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_157);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_158) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_158),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_158)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_128) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_128))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_159) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_159),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_159
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_129) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_129))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_130))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_131) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_132) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_132)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_132)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_132)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_133) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_133, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_134) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_135) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_135);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_135);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_136) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_136, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_137;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_137)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_165) -> {
        __core__chooseData(data_165, () -> {
            pair_47 = __core__unConstrData__safe(data_165);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_166);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_167) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_167),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_167)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_138) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_138))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_139) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_139))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_168) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_168),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_168
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_140) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_140))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_169) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_169),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_169),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_170) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_170),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_170
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_171) -> {
        __helios__common__enum_tag_equals(data_171, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_172) -> {
        __core__chooseData(data_172, () -> {
            pair_48 = __core__unConstrData__safe(data_172);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_173 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_173, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_173);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_141) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_141))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_174) -> {
        __core__chooseData(data_174, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_174))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_175) -> {
        __core__chooseData(data_175, () -> {
            pair_49 = __core__unConstrData__safe(data_175);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_176 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_176, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_176);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_177) -> {
        __core__chooseData(data_177, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_177);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_178) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_178),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_178)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_142) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_142))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_143) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_143))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_144) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_144), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_144))
        }
    };
    __helios__list[__helios__txinput]__any = (self_145) -> {
        (fn_19) -> {
            __helios__common__any(self_145, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_179) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_179),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_179),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_179),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_179),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_179),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_180) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_180),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_180
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_181) -> {
        __helios__common__enum_tag_equals(data_181, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_182) -> {
        __core__chooseData(data_182, () -> {
            pair_50 = __core__unConstrData__safe(data_182);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_183 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_183, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_183);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_184) -> {
        __helios__common__enum_tag_equals(data_184, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_185) -> {
        __core__chooseData(data_185, () -> {
            pair_51 = __core__unConstrData__safe(data_185);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_186 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_186, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_186);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_61),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_107);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_62),
                                            () -> {
                                                fields_108 = __core__tailList__safe(fields_107);
                                                __core__chooseList(fields_108, () -> {
                                                    false
                                                }, () -> {
                                                    head_63 = __core__headList__safe(fields_108);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_63),
                                                        () -> {
                                                            fields_109 = __core__tailList__safe(fields_108);
                                                            __core__chooseList(fields_109, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_146) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_146))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_147) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_147))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_148) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_148))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_64),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_65),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_53 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_54 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 4),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_114, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_55 = __core__unConstrData__safe(data_193);
            index_8 = __core__fstPair(pair_55);
            fields_115 = __core__sndPair(pair_55);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_115, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_115), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_115))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_115, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_194) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_194, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_194, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_194, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_195) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_195),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_195
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_149) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_149, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_150) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_150, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_196) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_196),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_196
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_151) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_151, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_197) -> {
        __helios__common__enum_tag_equals(data_197, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_198) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_198),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_198),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_198),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_199) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_199),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_199
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_77 = (recurse_76, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_200) -> {
        __core__chooseData(data_200, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_200))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_79 = (recurse_78, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_66 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_66)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_66)),
                            () -> {
                                recurse_78(recurse_78, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_201) -> {
        __core__chooseData(data_201, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_201))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_83 = (recurse_82, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_82(recurse_82, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_204) -> {
        __core__chooseData(data_204, () -> {
            pair_56 = __core__unConstrData__safe(data_204);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_205 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_205, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_205);
                        __core__chooseList(fields_116, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_116);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                () -> {
                                    fields_117 = __core__tailList__safe(fields_116);
                                    __core__chooseList(fields_117, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_117);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                            () -> {
                                                fields_118 = __core__tailList__safe(fields_117);
                                                __core__chooseList(fields_118, () -> {
                                                    false
                                                }, () -> {
                                                    head_70 = __core__headList__safe(fields_118);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                                        () -> {
                                                            fields_119 = __core__tailList__safe(fields_118);
                                                            __core__chooseList(fields_119, () -> {
                                                                false
                                                            }, () -> {
                                                                head_71 = __core__headList__safe(fields_119);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_71),
                                                                    () -> {
                                                                        fields_120 = __core__tailList__safe(fields_119);
                                                                        __core__chooseList(fields_120, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_72 = __core__headList__safe(fields_120);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                                                () -> {
                                                                                    fields_121 = __core__tailList__safe(fields_120);
                                                                                    __core__chooseList(fields_121, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_73 = __core__headList__safe(fields_121);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                                            () -> {
                                                                                                fields_122 = __core__tailList__safe(fields_121);
                                                                                                __core__chooseList(fields_122, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_74 = __core__headList__safe(fields_122);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_74),
                                                                                                        () -> {
                                                                                                            fields_123 = __core__tailList__safe(fields_122);
                                                                                                            __core__chooseList(fields_123, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_75 = __core__headList__safe(fields_123);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_75),
                                                                                                                    () -> {
                                                                                                                        fields_124 = __core__tailList__safe(fields_123);
                                                                                                                        __core__chooseList(fields_124, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_206) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_206),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_206
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_152) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_152))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_207) -> {
        lst_22 = __core__unListData(data_207);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_153) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_153))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_208) -> {
        map_27 = __core__unMapData(data_208);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_154) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_154))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_155))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_156) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_156))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_157) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_157))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_209) -> {
        map_28 = __core__unMapData(data_209);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_158) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_158))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_210) -> {
        lst_23 = __core__unListData(data_210);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_159) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_159))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_211) -> {
        __core__chooseData(data_211, () -> {
            pair_57 = __core__unConstrData__safe(data_211);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_212 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_212, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_212);
                        __core__chooseList(fields_125, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_213) -> {
        __helios__common__enum_tag_equals(data_213, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_85 = (recurse_84, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_76 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_76)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_76)),
                            () -> {
                                recurse_84(recurse_84, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_214) -> {
        __core__chooseData(data_214, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_214))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_215) -> {
        __core__chooseData(data_215, () -> {
            pair_58 = __core__unConstrData__safe(data_215);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_216 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_216, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_126 = __core__unListData__safe(data_216);
                        __core__chooseList(fields_126, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_126);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_77),
                                () -> {
                                    fields_127 = __core__tailList__safe(fields_126);
                                    __core__chooseList(fields_127, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_127);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_78),
                                            () -> {
                                                fields_128 = __core__tailList__safe(fields_127);
                                                __core__chooseList(fields_128, () -> {
                                                    false
                                                }, () -> {
                                                    head_79 = __core__headList__safe(fields_128);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_79),
                                                        () -> {
                                                            fields_129 = __core__tailList__safe(fields_128);
                                                            __core__chooseList(fields_129, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_217) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_217),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_217),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_217),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_218) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_218),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_218
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_219) -> {
        __helios__common__enum_tag_equals(data_219, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_59 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_223) -> {
        __core__chooseData(data_223, () -> {
            pair_60 = __core__unConstrData__safe(data_223);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_224 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_224, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_224);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_80),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_81 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_81),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_160) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_160))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_161) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_161))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_225) -> {
        __helios__common__enum_tag_equals(data_225, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_226) -> {
        __core__chooseData(data_226, () -> {
            pair_61 = __core__unConstrData__safe(data_226);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_227 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_227, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_227);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_162) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_162))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_163) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_163))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_228) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_228),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_228),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_228),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_228),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_228),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_228),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_229) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_229),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_229
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_230) -> {
        __helios__common__enum_tag_equals(data_230, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_231) -> {
        __core__chooseData(data_231, () -> {
            pair_62 = __core__unConstrData__safe(data_231);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_232 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_232, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_232);
                        __core__chooseList(fields_137, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_137);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_84),
                                () -> {
                                    fields_138 = __core__tailList__safe(fields_137);
                                    __core__chooseList(fields_138, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_164) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_164))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_233) -> {
        __helios__common__enum_tag_equals(data_233, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_234) -> {
        __core__chooseData(data_234, () -> {
            pair_63 = __core__unConstrData__safe(data_234);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_235 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_235, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_235);
                        __core__chooseList(fields_139, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_236) -> {
        __helios__common__enum_tag_equals(data_236, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_237) -> {
        __core__chooseData(data_237, () -> {
            pair_64 = __core__unConstrData__safe(data_237);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_238 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_238, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_140 = __core__unListData__safe(data_238);
                        __core__chooseList(fields_140, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_65 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 3),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_141, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_66 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 4),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_67 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 5),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_143, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_15) -> {
        charterAc = __helios__assetclass__new(mph_15, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_16, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_68 = __core__unConstrData__safe(data_248);
            index_9 = __core__fstPair(pair_68);
            fields_144 = __core__sndPair(pair_68);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_144, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_144), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_144))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_144, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_69 = __core__unConstrData__safe(data_249);
            index_10 = __core__fstPair(pair_69);
            fields_145 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_145, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_145), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_145))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_145, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_165))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_166) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_166))
    };
    __helios__option[__helios__string]__from_data = (data_250) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_250),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_250
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_167) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_167))
    };
    __helios__option[__helios__txinput]__from_data = (data_251) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_251),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_251
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_168) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_168))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_169) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_169))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_17) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_17), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_170) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_170))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_171) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_171))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_146 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_146);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_172) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_172)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_173) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_173)(), __module__CapoHelpers__DelegateInput[]__serialize(self_173)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_173)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_174) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_174)(), __module__CapoHelpers__DelegateInput[]__serialize(self_174)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_174)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_174))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_175) -> {
        (index_12) -> {
            recurse_87 = (recurse_86, self_176, i_9) -> {
                __core__chooseList(self_176, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_176)
                        },
                        () -> {
                            recurse_86(recurse_86, __core__tailList__safe(self_176), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_175, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_177) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_177, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_178) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_178)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_148 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_148)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_147 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_147)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_178)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_179) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_179);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_179)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_150 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_150));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_15);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_149 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_149));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_180) -> {
        () -> {
            __lhs_0_41 = self_180;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_18 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_18, false, (), false, ()), "no"), self_180))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_181) -> {
        () -> {
            __lhs_0_47 = self_181;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_182) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_182))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_183) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_183))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_19, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_19), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_184);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185) -> {
        (key_14) -> {
            __helios__common__map_get(self_185, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_186) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_186)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_252) -> {
        __helios__common__enum_tag_equals(data_252, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_187) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_187))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_253) -> {
        __helios__common__enum_tag_equals(data_253, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_188) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_188)(key_16);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_189) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_189)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_190) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_190))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_191) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_191)()))(__module__CapoHelpers__CapoCtx[]__mph(self_191), false, (), false, ()), "no way m"), self_191))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_192) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_192))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_193) -> {
        (key_17) -> {
            __helios__common__map_get(self_193, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_194) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_194)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_194)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_195) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_195)()))(__module__CapoHelpers__CapoCtx[]__mph(self_195));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_196) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_196)()))(__module__CapoHelpers__CapoCtx[]__mph(self_196));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_197);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_198) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_198), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_198);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_199) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_199);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_200) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_200), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_200))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_201)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_202) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_202)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_203) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_203)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_255 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_255);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_255));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_205) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_205)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_39 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                    () -> {
                        (__lhs_0_72) -> {
                            data_256 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_256), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_256))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_256), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_256))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__32) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_39)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_257) -> {
        __helios__common__enum_tag_equals(data_257, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_206) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_206), recId_5);
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_206)();
            __cond_40 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_2))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_40),
                () -> {
                    (__lhs_0_74) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_73);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_40)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_207) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_207);
                __cond_41 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_41),
                    () -> {
                        (__lhs_0_80) -> {
                            self_207
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_41),
                            () -> {
                                (__lhs_0_79) -> {
                                    self_207
                                }
                            },
                            () -> {
                                (__lhs_0_75) -> {
                                    __lhs_0_76 = self_207;
                                    mph_20 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_76);
                                    charterAc_3 = __helios__assetclass__new(mph_20, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_42 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_42),
                                        () -> {
                                            (__lhs_0_78) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_207)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_77) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_77);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_20, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_42)
                                }
                            }
                        )()
                    }
                )()(__cond_41))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_208) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
            __cond_43 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_43),
                () -> {
                    (__lhs_0_86) -> {
                        self_208
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_43),
                        () -> {
                            (__lhs_0_85) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_81) -> {
                                __lhs_0_82 = self_208;
                                mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_82);
                                charterAc_4 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_44 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_44),
                                    () -> {
                                        (__lhs_0_84) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_84);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_44)))
                            }
                        }
                    )()
                }
            )()(__cond_43))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_209) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __cond_45 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_45),
                () -> {
                    (__lhs_0_90) -> {
                        self_209
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_45),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_87) -> {
                                __lhs_0_88 = self_209;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_88);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_22);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_45))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_210) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_210, (z_3, pair_70) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_70)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_70)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_211) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_211))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_212) -> {
        (fn_22) -> {
            fn_23 = (pair_71) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_71)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_71)))
            };
            __helios__common__all(self_212, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_213) -> {
        (fn_24) -> {
            __helios__common__all(self_213, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_258) -> {
        __helios__common__enum_tag_equals(data_258, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_214) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_214)();
            mph_23 = __module__CapoHelpers__CapoCtx[]__mph(self_214);
            __lhs_0_91 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_91);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_91);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_91);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_91);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_91);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_214)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_23, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_47 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_47),
                        () -> {
                            (__lhs_0_94) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_94);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_23, true))()
                            }
                        },
                        () -> {
                            (__33) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_47)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_23, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_46 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_23, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_46),
                () -> {
                    (__lhs_0_93) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_92) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_46)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_215) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_215, self_215)
            }), "prevent unused var"), __cond_48 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_48),
                () -> {
                    (__lhs_0_101) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_48),
                        () -> {
                            (__lhs_0_100) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_48),
                                () -> {
                                    (__lhs_0_99) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_48),
                                        () -> {
                                            (__lhs_0_98) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_48),
                                                () -> {
                                                    (__lhs_0_97) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_48),
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_95) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_216) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_216)(), __module__CapoHelpers__CapoCtx[]__serialize(self_216)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_24) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__34) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_259) -> {
        __helios__common__enum_tag_equals(data_259, 1)
    };
    __helios__option[__helios__data]__some__some = (self_217) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_217))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_218) -> {
        (key_20) -> {
            __helios__common__map_get(self_218, __helios__scriptpurpose____to_data(key_20), (x_8) -> {
                __core__constrData(0, __helios__common__list_1(x_8))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_25, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_25);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_50 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_50),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__35) -> {
                            false
                        }
                    }
                )()(__cond_50)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_51 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_51),
                () -> {
                    (__lhs_0_109) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_104) -> {
                        x_10 = __helios__option[__helios__data]__some__some(__lhs_0_104);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_10);
                        __cond_52 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_52),
                            () -> {
                                (__lhs_0_105) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_105);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_53 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_53),
                                        () -> {
                                            (__lhs_0_108) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_53),
                                                () -> {
                                                    (__lhs_0_107) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_106) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_53)))
                                }
                            },
                            () -> {
                                (__36) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_52)
                    }
                }
            )()(__cond_51)))
        }(__cond_49 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_49),
            () -> {
                (__lhs_0_103) -> {
                    x_9 = __helios__option[__helios__txinput]__some__some(__lhs_0_103);
                    __helios__txinput__output_id(x_9)
                }
            },
            () -> {
                (__lhs_0_102) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_49))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_219) -> {
        (fn_25) -> {
            recurse_89 = (recurse_88, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_85 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_85)), __helios__int__from_data(__core__sndPair(head_85))), recurse_88(recurse_88, __core__tailList__safe(map_31)))
                })()
            };
            recurse_89(recurse_89, self_219)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_220) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_220, (pair_72) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_72)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_72)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_221) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_86 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_86)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_86))), recurse_90(recurse_90, __core__tailList__safe(map_32)))
                })()
            };
            recurse_91(recurse_91, self_221)
        }
    };
    __helios__option[__helios__int]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __helios__option[__helios__int]__some__some = (self_222) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_222))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_223) -> {
        (key_21) -> {
            __helios__common__map_get(self_223, __helios__bytearray____to_data(key_21), (x_11) -> {
                __core__constrData(0, __helios__common__list_1(x_11))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_224) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_93 = (recurse_92, self_225) -> {
                __core__chooseList(self_225, () -> {
                    self_225
                }, () -> {
                    head_87 = __core__headList__safe(self_225);
                    tail_4 = __core__tailList__safe(self_225);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_87)),
                        () -> {
                            recurse_92(recurse_92, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_87, recurse_92(recurse_92, tail_4))
                        }
                    )()
                })()
            };
            recurse_93(recurse_93, self_224)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_226, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_226), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_227) -> {
        (comp_4) -> {
            __helios__common__sort(self_227, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_228) -> {
        recurse_95 = (recurse_94, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_94(recurse_94, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_95(recurse_95, self_228)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_229) -> {
        (fn_28) -> {
            __helios__common__map(self_229, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_110 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_26, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_110);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_26, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_26, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_26)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_26)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_26))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_26);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __37) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_26)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_26),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_26))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_111);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_54)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__is_valid_data = (__module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data, __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_261) -> {
            __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data(data_261),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data(data_261),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data(data_261),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__from_data = (__module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_262) -> {
            ignore_17 = __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateDatum[]__is_valid_data(__module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_262),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_262
        }
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_263) -> {
        __core__chooseData(data_263, () -> {
            pair_73 = __core__unConstrData__safe(data_263);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 0),
                () -> {
                    data_264 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_264, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_264);
                        __core__chooseList(fields_151, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_151);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_88),
                                () -> {
                                    fields_152 = __core__tailList__safe(fields_151);
                                    __core__chooseList(fields_152, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_152);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_89),
                                            () -> {
                                                fields_153 = __core__tailList__safe(fields_152);
                                                __core__chooseList(fields_153, () -> {
                                                    false
                                                }, () -> {
                                                    head_90 = __core__headList__safe(fields_153);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_90),
                                                        () -> {
                                                            fields_154 = __core__tailList__safe(fields_153);
                                                            __core__chooseList(fields_154, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation____is = (data_265) -> {
        __helios__common__enum_tag_equals(data_265, 1)
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_266) -> {
        __core__chooseData(data_266, () -> {
            pair_74 = __core__unConstrData__safe(data_266);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 1),
                () -> {
                    data_267 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_267, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_155 = __core__unListData__safe(data_267);
                        __core__chooseList(fields_155, () -> {
                            false
                        }, () -> {
                            head_91 = __core__headList__safe(fields_155);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_91),
                                () -> {
                                    fields_156 = __core__tailList__safe(fields_155);
                                    __core__chooseList(fields_156, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__dd = (self_230) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_230))
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 2)
    };
    __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_75 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 2),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_157 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_157, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_157);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_92),
                                () -> {
                                    fields_158 = __core__tailList__safe(fields_157);
                                    __core__chooseList(fields_158, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_158);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_159 = __core__tailList__safe(fields_158);
                                                __core__chooseList(fields_159, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_159);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_160 = __core__tailList__safe(fields_159);
                                                            __core__chooseList(fields_160, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__MintingActivity[]__is_valid_data = (__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data, __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data) -> {
        (data_271) -> {
            __core__ifThenElse(
                __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data(data_271),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data(data_271),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__MyMintSpendDelegate__MintingActivity[]__from_data = (__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data_1, __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_1) -> {
        (data_272) -> {
            ignore_18 = __core__ifThenElse(
                __module__MyMintSpendDelegate__MintingActivity[]__is_valid_data(__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data_1, __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_1)(data_272),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_272
        }
    };
    __module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity____is = (data_273) -> {
        __helios__common__enum_tag_equals(data_273, 0)
    };
    __module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data_2 = (data_274) -> {
        __core__chooseData(data_274, () -> {
            pair_76 = __core__unConstrData__safe(data_274);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 0),
                () -> {
                    data_275 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_275, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_161 = __core__unListData__safe(data_275);
                        __core__chooseList(fields_161, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2 = (data_276) -> {
        __core__chooseData(data_276, () -> {
            pair_77 = __core__unConstrData__safe(data_276);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 1),
                () -> {
                    data_277 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_277, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_162 = __core__unListData__safe(data_277);
                        __core__chooseList(fields_162, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_162);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_95),
                                () -> {
                                    fields_163 = __core__tailList__safe(fields_162);
                                    __core__chooseList(fields_163, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__tokenName = (self_231) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_231))
    };
    __module__MyMintSpendDelegate__SpendingActivity[]__is_valid_data = (__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data) -> {
        (data_278) -> {
            __core__ifThenElse(
                __module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data(data_278),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__MyMintSpendDelegate__SpendingActivity[]__from_data = (__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data_1) -> {
        (data_279) -> {
            ignore_19 = __core__ifThenElse(
                __module__MyMintSpendDelegate__SpendingActivity[]__is_valid_data(__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data_1)(data_279),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_279
        }
    };
    __module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data_2 = (data_280) -> {
        __core__chooseData(data_280, () -> {
            pair_78 = __core__unConstrData__safe(data_280);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_281 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_281, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_164 = __core__unListData__safe(data_281);
                        __core__chooseList(fields_164, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_164);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_96),
                                () -> {
                                    fields_165 = __core__tailList__safe(fields_164);
                                    __core__chooseList(fields_165, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__recId = (self_232) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_232))
    };
    __module__MyMintSpendDelegate__BurningActivity[]__is_valid_data = (__module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA__is_valid_data) -> {
        (data_282) -> {
            __core__ifThenElse(
                __module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA__is_valid_data(data_282),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_79 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_166, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_166);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_97),
                                () -> {
                                    fields_167 = __core__tailList__safe(fields_166);
                                    __core__chooseList(fields_167, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]____eq = __helios__common____eq;
    __module__MyMintSpendDelegate__DelegateActivity[]__is_valid_data = (__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_285) -> {
            __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_285),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_285),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_285),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_285),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data(data_285),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data(data_285),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data(data_285),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_285),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_285),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__from_data = (__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_286) -> {
            ignore_20 = __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateActivity[]__is_valid_data(__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_286),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_286
        }
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is = (data_287) -> {
        __helios__common__enum_tag_equals(data_287, 0)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_288) -> {
        __core__chooseData(data_288, () -> {
            pair_80 = __core__unConstrData__safe(data_288);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_289 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_289, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_168 = __core__unListData__safe(data_289);
                        __core__chooseList(fields_168, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_168);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_98),
                                () -> {
                                    fields_169 = __core__tailList__safe(fields_168);
                                    __core__chooseList(fields_169, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__activity = (self_233) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_233))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is = (data_290) -> {
        __helios__common__enum_tag_equals(data_290, 1)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_291) -> {
        __core__chooseData(data_291, () -> {
            pair_81 = __core__unConstrData__safe(data_291);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 1),
                () -> {
                    data_292 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_292, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_292);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_99),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_234) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_234))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities____is = (data_293) -> {
        __helios__common__enum_tag_equals(data_293, 2)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_294) -> {
        __core__chooseData(data_294, () -> {
            pair_82 = __core__unConstrData__safe(data_294);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 2),
                () -> {
                    data_295 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_295, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_295);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__SpendingActivity[]__is_valid_data(__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data_2)(head_100),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__activity = (self_235) -> {
        __module__MyMintSpendDelegate__SpendingActivity[]__from_data(__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__is_valid_data_2)(__helios__common__enum_field_0(self_235))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities____is = (data_296) -> {
        __helios__common__enum_tag_equals(data_296, 3)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_297) -> {
        __core__chooseData(data_297, () -> {
            pair_83 = __core__unConstrData__safe(data_297);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 3),
                () -> {
                    data_298 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_298, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_298);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__MintingActivity[]__is_valid_data(__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data_2, __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2)(head_101),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__activity = (self_236) -> {
        __module__MyMintSpendDelegate__MintingActivity[]__from_data(__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity__is_valid_data_2, __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2)(__helios__common__enum_field_0(self_236))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities____is = (data_299) -> {
        __helios__common__enum_tag_equals(data_299, 4)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_300) -> {
        __core__chooseData(data_300, () -> {
            pair_84 = __core__unConstrData__safe(data_300);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 4),
                () -> {
                    data_301 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_301, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_301);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__BurningActivity[]__is_valid_data(__module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1)(head_102),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is = (data_302) -> {
        __helios__common__enum_tag_equals(data_302, 5)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_303) -> {
        __core__chooseData(data_303, () -> {
            pair_85 = __core__unConstrData__safe(data_303);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 5),
                () -> {
                    data_304 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_304, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_304);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_103),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, () -> {
                                        false
                                    }, () -> {
                                        head_104 = __core__headList__safe(fields_179);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_104),
                                            () -> {
                                                fields_180 = __core__tailList__safe(fields_179);
                                                __core__chooseList(fields_180, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__seed = (self_237) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_237))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__dataType = (self_238) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_238))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is = (data_305) -> {
        __helios__common__enum_tag_equals(data_305, 6)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_306) -> {
        __core__chooseData(data_306, () -> {
            pair_86 = __core__unConstrData__safe(data_306);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 6),
                () -> {
                    data_307 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_307, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_181 = __core__unListData__safe(data_307);
                        __core__chooseList(fields_181, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_181);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_105),
                                () -> {
                                    fields_182 = __core__tailList__safe(fields_181);
                                    __core__chooseList(fields_182, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_182);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_106),
                                            () -> {
                                                fields_183 = __core__tailList__safe(fields_182);
                                                __core__chooseList(fields_183, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_239) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_239))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__recId = (self_240) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_240))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is = (data_308) -> {
        __helios__common__enum_tag_equals(data_308, 7)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_309) -> {
        __core__chooseData(data_309, () -> {
            pair_87 = __core__unConstrData__safe(data_309);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 7),
                () -> {
                    data_310 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_310, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_184 = __core__unListData__safe(data_310);
                        __core__chooseList(fields_184, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_184);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_185 = __core__tailList__safe(fields_184);
                                    __core__chooseList(fields_185, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_185);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_186 = __core__tailList__safe(fields_185);
                                                __core__chooseList(fields_186, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__recId = (self_241) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_241))
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities____is = (data_311) -> {
        __helios__common__enum_tag_equals(data_311, 8)
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_312) -> {
        __core__chooseData(data_312, () -> {
            pair_88 = __core__unConstrData__safe(data_312);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 8),
                () -> {
                    data_313 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_313, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_187 = __core__unListData__safe(data_313);
                        __core__chooseList(fields_187, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_187);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_109),
                                () -> {
                                    fields_188 = __core__tailList__safe(fields_187);
                                    __core__chooseList(fields_188, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__activities = (self_242) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_242))
    };
    __helios__option[__helios__string]__none____is = (data_314) -> {
        __helios__common__enum_tag_equals(data_314, 1)
    };
    __helios__list[__helios__string]__find_safe = (self_243) -> {
        (fn_29) -> {
            __helios__common__find_safe(self_243, (item_14) -> {
                fn_29(__helios__string__from_data(item_14))
            }, __helios__common__identity)
        }
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__additionalDelegateValidation = (__module__MyMintSpendDelegate__DelegateActivity[]__supportedCapoDelegatePurposes) -> {
        (self_244) -> {
            (priorMddd, cctx) -> {
                mph_27 = __module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__dd(priorMddd));
                __helios__bool__or(() -> {
                    __cond_55 = self_244;
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_55),
                        () -> {
                            (__lhs_0_125) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_55),
                                () -> {
                                    (__lhs_0_121) -> {
                                        CLA = __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_121);
                                        __cond_58 = CLA;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_58),
                                            () -> {
                                                (__lhs_0_122) -> {
                                                    seed_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_122);
                                                    purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_122);
                                                    __cond_59 = __helios__list[__helios__string]__find_safe(__module__MyMintSpendDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_244)())((p_1) -> {
                                                        __helios__string____eq(p_1, purpose_3)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__string]__none____is(__cond_59),
                                                        () -> {
                                                            (__lhs_0_124) -> {
                                                                __helios__error("can't mint delegate with unsupported purpose")
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_123) -> {
                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_3), false, (), false, (), true, false, false, (), false, ())
                                                            }
                                                        }
                                                    )()(__cond_59)
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here", false, ()), true)
                                                }
                                            }
                                        )()(__cond_58)
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities____is(__cond_55),
                                        () -> {
                                            (__lhs_0_119) -> {
                                                a_18 = __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__activity(__lhs_0_119);
                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __cond_57 = a_18;
                                                __lhs_0_120 = __cond_57;
                                                recId_6 = __module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity__recId(__lhs_0_120);
                                                __core__chooseUnit(__helios__print("SampleSpendingActivity"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "^^^ that can fail, this won't"), __core__chooseUnit(__helios__print(__helios__string____add("attempting to do sample spend: ", __helios__bytearray__decode_utf8(recId_6)())), __core__chooseUnit(__helios__assert(false, "policy not implemented"), true)))))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_116) -> {
                                                        a_17 = __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__activity(__lhs_0_116);
                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __cond_56 = a_17;
                                                        __core__ifThenElse(
                                                            __module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity____is(__cond_56),
                                                            () -> {
                                                                (__lhs_0_118) -> {
                                                                    __core__chooseUnit(__helios__assert(false, "policy not implemented"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "^^^ that can fail, this won't"), true))
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_117) -> {
                                                                    tokenName_4 = __module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens__tokenName(__lhs_0_117);
                                                                    __core__chooseUnit(__helios__print("MintingFungibleToken"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "^^^ that can fail, this won't"), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(__helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx))(mph_27)), 1), "unexpected other tokens minted"), __core__chooseUnit(__helios__print(__helios__string____add("ok, minting fungibles: ", __helios__bytearray__decode_utf8(tokenName_4)())), true))))
                                                                }
                                                            }
                                                        )()(__cond_56))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_55),
                                                        () -> {
                                                            (__lhs_0_115) -> {
                                                                __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing CreatingDelegatedData on the say-so of its policy delegate"), true)
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_55),
                                                                () -> {
                                                                    (__lhs_0_114) -> {
                                                                        __core__chooseUnit(__helios__print(" \u2139\uFE0F  spend delegate allowing UpdatingDelegatedData on the say-so of its policy delegate"), true)
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_55),
                                                                        () -> {
                                                                            (__lhs_0_113) -> {
                                                                                __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing DeletingDelegatedData on the say-so of its policy delegate"), true)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__38) -> {
                                                                                __core__chooseUnit(__helios__assert(false, "mint/spend delegate rejecting other activity"), false)
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_55)
                }, () -> {
                    __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
                })
            }
        }
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1 = (self_245) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__MyMintSpendDelegate__DelegateActivity[]____eq(self_245, self_245)
            }), "no way"), __core__mkNilData(()))
        }
    };
    __module__MyMintSpendDelegate__DelegateActivity[]__otherDatumValidation = (self_246) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_60 = self_246;
            __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_60),
                () -> {
                    (__lhs_0_127) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_60),
                        () -> {
                            (__lhs_0_126) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_60)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#4d794d696e745370656e6444656c6567617465));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_247) -> {
        (fn_30) -> {
            __helios__common__all(self_247, (item_15) -> {
                fn_30(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_248, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_248), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_249) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_249))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_250) -> {
        (fn_31) -> {
            __helios__common__all(self_250, (item_16) -> {
                fn_31(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_251) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_251))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_252) -> {
        () -> {
            recurse_97 = (recurse_96, self_253, first) -> {
                __core__chooseList(self_253, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_110 = __core__headList__safe(self_253);
                    key_data = __core__fstPair(head_110);
                    key_24 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_110);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_24((valid_7, key_25) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_25)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_96(recurse_96, __core__tailList__safe(self_253), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_97(recurse_97, self_252, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_254) -> {
        (fn_32, a0) -> {
            __helios__common__fold(self_254, (prev_4, item_17) -> {
                fn_32(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_255) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_99 = (recurse_98, self_256) -> {
                __core__chooseList(self_256, () -> {
                    self_256
                }, () -> {
                    head_111 = __core__headList__safe(self_256);
                    tail_5 = __core__tailList__safe(self_256);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_111)),
                        () -> {
                            recurse_98(recurse_98, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_111, recurse_98(recurse_98, tail_5))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_255)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_315) -> {
        __helios__common__enum_tag_equals(data_315, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_257) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_257))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_258) -> {
        (key_28) -> {
            __helios__common__map_get(self_258, __helios__mintingpolicyhash____to_data(key_28), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_259) -> {
        (fn_33, a0_1, b0_1) -> {
            __helios__common__fold(self_259, (prev_5, item_18) -> {
                prev_5((a_19, b_16) -> {
                    fn_33(a_19, b_16, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_260) -> {
        __helios__common__length(self_260)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_261) -> {
        head_112 = __core__headList(self_261);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_112)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_112)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_262) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_262))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_263) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_101 = (recurse_100, self_264) -> {
                __core__chooseList(self_264, () -> {
                    self_264
                }, () -> {
                    head_113 = __core__headList__safe(self_264);
                    tail_6 = __core__tailList__safe(self_264);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_113)),
                        () -> {
                            recurse_100(recurse_100, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_100(recurse_100, tail_6))
                        }
                    )()
                })()
            };
            recurse_101(recurse_101, self_263)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_265, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_265), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_266) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_266))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_267) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_267))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_61 = mdd;
            __core__ifThenElse(
                __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData____is(__cond_61),
                () -> {
                    (__lhs_0_265) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation____is(__cond_61),
                        () -> {
                            (isD) -> {
                                dd = __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__dd(isD);
                                __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__int__serialize(__module__BasicDelegate__rev)()), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __module__BasicDelegate__instance), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__MyMintSpendDelegate__DelegateActivity[]__additionalDelegateValidation(__module__MyMintSpendDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1)(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_63 = activity_3;
                                __core__ifThenElse(
                                    __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_63),
                                    () -> {
                                        (__lhs_0_243) -> {
                                            activities_2 = __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_243);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            mintDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                    a_20 = __module__MyMintSpendDelegate__DelegateActivity[]__from_data(__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                    __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_112 = a_20;
                                                                    __core__ifThenElse(
                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                                        () -> {
                                                                            (__lhs_0_249) -> {
                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                                () -> {
                                                                                    (__lhs_0_248) -> {
                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                                                        () -> {
                                                                                            (__lhs_0_247) -> {
                                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                                                () -> {
                                                                                                    (__lhs_0_246) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                                        () -> {
                                                                                                            (__lhs_0_245) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_112),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_244) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__76) -> {
                                                                                                                        __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_112)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            spendDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                    a_21 = __module__MyMintSpendDelegate__DelegateActivity[]__from_data(__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                    __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_113 = a_21;
                                                                    __core__ifThenElse(
                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_113),
                                                                        () -> {
                                                                            (__lhs_0_255) -> {
                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                    __module__BasicDelegate__isSpendDelegate
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                                }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_113),
                                                                                () -> {
                                                                                    (__lhs_0_254) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_113),
                                                                                        () -> {
                                                                                            (__lhs_0_253) -> {
                                                                                                __helios__error("TODO: validate spending the datum for burn")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                                                                                () -> {
                                                                                                    (__lhs_0_252) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                                                                                        () -> {
                                                                                                            (__lhs_0_251) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_113),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_250) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__77) -> {
                                                                                                                        __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_113)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            dgDataPolicyCheck = __core__ifThenElse(
                                                __helios__bool__or(() -> {
                                                    __module__BasicDelegate__isMintDelegate
                                                }, () -> {
                                                    __module__BasicDelegate__isSpendDelegate
                                                }),
                                                () -> {
                                                    __core__chooseUnit(__helios__assert(__module__BasicDelegate__isDgDataPolicy, "ack! delegated-data policy can't be a mint/spend delegate"), true)
                                                },
                                                () -> {
                                                    () -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                            a_22 = __module__MyMintSpendDelegate__DelegateActivity[]__from_data(__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                            __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_114 = a_22;
                                                            __core__ifThenElse(
                                                                __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_114),
                                                                () -> {
                                                                    (__lhs_0_264) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_114),
                                                                        () -> {
                                                                            (__lhs_0_263) -> {
                                                                                __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_114),
                                                                                () -> {
                                                                                    (__lhs_0_262) -> {
                                                                                        __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities____is(__cond_114),
                                                                                        () -> {
                                                                                            (__lhs_0_261) -> {
                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities____is(__cond_114),
                                                                                                () -> {
                                                                                                    (__lhs_0_260) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities____is(__cond_114),
                                                                                                        () -> {
                                                                                                            (__lhs_0_259) -> {
                                                                                                                __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_258) -> {
                                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_257) -> {
                                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_256) -> {
                                                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_114)))
                                                        }))
                                                    }()
                                                }
                                            )();
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    mintDgtCheck_1
                                                }, () -> {
                                                    spendDgtCheck_1
                                                })
                                            }, () -> {
                                                dgDataPolicyCheck
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_63),
                                            () -> {
                                                (__lhs_0_237) -> {
                                                    innerActivity = __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_237);
                                                    __cond_110 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_110),
                                                        () -> {
                                                            (__lhs_0_241) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_241);
                                                                purpose_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_241);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_9), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_9), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_111 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_111),
                                                                    () -> {
                                                                        (__lhs_0_242) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_111)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_110),
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        __lhs_0_239 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_110)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_63),
                                                    () -> {
                                                        (__lhs_0_137) -> {
                                                            dCLA = __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_137);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_108),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_236);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_108),
                                                                        () -> {
                                                                            (__lhs_0_234) -> {
                                                                                __cond_109 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_109),
                                                                                    () -> {
                                                                                        (__lhs_0_235) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_109)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__73) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_108), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_65 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_65),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_230);
                                                                                purpose_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_230);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_106 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_106),
                                                                                    () -> {
                                                                                        (__lhs_0_231) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_107 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_8);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_107),
                                                                                                () -> {
                                                                                                    (__lhs_0_233) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_232) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_232);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn(purpose_8)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_107))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__72) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_106)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_65),
                                                                                () -> {
                                                                                    (__lhs_0_178) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_179 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_179);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_104 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_104),
                                                                                                () -> {
                                                                                                    (__lhs_0_228) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_105 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_105),
                                                                                                            () -> {
                                                                                                                (__lhs_0_229) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__71) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_105))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__70) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_104), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_103 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_103),
                                                                                                () -> {
                                                                                                    (__lhs_0_227) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_103),
                                                                                                        () -> {
                                                                                                            (__lhs_0_226) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_226);
                                                                                                                purpose_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_226);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_226);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_225) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_225);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_225);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_225);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_103)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })))
                                                                                                    }(__cond_92 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_92),
                                                                                                        () -> {
                                                                                                            (__lhs_0_224) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_92),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_198) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_93 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_93),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_199) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_199);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_94 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_94),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_200);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__64) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_94)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__63) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_93)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_95 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_95),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_222) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_102 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_102),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_223) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__69) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_102), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_95),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_203);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_101 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_101),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_221) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_101),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_220) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_101),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__68) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_101), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_100 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_100),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_218) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_100),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_100),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_100),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__67) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_100)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_99 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_99),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_99),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_99),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_99),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_99),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_99),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_99),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_207) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_99)))
                                                                                                                                            }(__cond_97 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_97),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_204);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_98 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_205);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_98)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_97))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_201) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_96 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_96),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__65) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_96), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_95))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__62) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_92))
                                                                                                }(__cond_85 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_85),
                                                                                                    () -> {
                                                                                                        (__lhs_0_197) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_85),
                                                                                                            () -> {
                                                                                                                (__lhs_0_181) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_86 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_86),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_189) -> {
                                                                                                                                    __core__chooseUnit(__cond_91 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_91),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_196) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_91),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_91),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_91),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_193) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_91),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_91),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_191) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_91),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__61) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_91), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__58) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_5);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_5), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_88 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_88),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_184) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_89 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_89),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_186) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_186);
                                                                                                                                                                __lhs_0_187 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_187);
                                                                                                                                                                __cond_90 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_90),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_188);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__60) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_90)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_185) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_89), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__59) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_88)))
                                                                                                                                    }(__cond_87 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_87),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_183) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_182);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_87))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_86)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__57) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_85))
                                                                                            }))))
                                                                                        }(__cond_84 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_84),
                                                                                            () -> {
                                                                                                (__lhs_0_180) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_180);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__56) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_84)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_65),
                                                                                        () -> {
                                                                                            (__lhs_0_177) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_65),
                                                                                                () -> {
                                                                                                    (__lhs_0_154) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                        () -> {
                                                                                                                            true
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                    (pdChange) -> {
                                                                                                                                        (pendingTypeName) -> {
                                                                                                                                            __core__chooseUnit(__cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_73),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_163) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_76 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_76),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_164) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__52) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_76))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__49) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                }()
                                                                                                                                                            }
                                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                            ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_159 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_159);
                                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_159);
                                                                                                                                                            refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_159);
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                            pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                            }(__cond_74 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_74),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_161) -> {
                                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_161);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_75),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_162) -> {
                                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__51) -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_75), idPrefix_6))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_74),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_160) -> {
                                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_160);
                                                                                                                                                                                idPrefix_5
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__50) -> {
                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_74)))))))))
                                                                                                                                                        })))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_73), __cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_72),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_158) -> {
                                                                                                                                                        (callback_12) -> {
                                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__48) -> {
                                                                                                                                                        (callback_11) -> {
                                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_72))
                                                                                                                                        }(__cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_71),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_157) -> {
                                                                                                                                                    typeName_3 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_157);
                                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_3)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_71))
                                                                                                                                    }(__cond_70 = pcChange;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_70),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_156) -> {
                                                                                                                                                dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_156);
                                                                                                                                                dgtChange
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_155) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_70))
                                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                                }))
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }()
                                                                                                            }
                                                                                                        )();
                                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                            mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                            len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __helios__int____gt(len, 1),
                                                                                                                                () -> {
                                                                                                                                    __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), (observedTokenBurn) -> {
                                                                                                                                remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                        __cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_79),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_169);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_80 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_80),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_176) -> {
                                                                                                                                                                foldingBurn
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__54) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_81 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_81),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_175) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_170) -> {
                                                                                                                                                                            __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_170);
                                                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                            tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                            mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                            __cond_82 = mph_29;
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __helios__option[__helios__mintingpolicyhash]__some____is(__cond_82),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_174) -> {
                                                                                                                                                                                        __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__55) -> {
                                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_171 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                        refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_171);
                                                                                                                                                                                        tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                        __cond_83 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __helios__option[__helios__int]__none____is(__cond_83),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_173) -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_172) -> {
                                                                                                                                                                                                    burningCount = __helios__option[__helios__int]__some__some(__lhs_0_172);
                                                                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                        __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                        },
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                ()
                                                                                                                                                                                                            }()
                                                                                                                                                                                                        }
                                                                                                                                                                                                    )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()(__cond_83))
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_82)
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_81))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_80))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__53) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_79)
                                                                                                                                    }(__cond_78 = pcChange_1;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_78),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_168) -> {
                                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_168);
                                                                                                                                                dgtChange_1
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_78)))
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                            }(__cond_77 = mintThisPolicy;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_77),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_166) -> {
                                                                                                                                        minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_166);
                                                                                                                                        minted
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_165) -> {
                                                                                                                                        __core__mkNilPairData(())
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_77)))))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )();
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                            }, () -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                            }),
                                                                                                            () -> {
                                                                                                                __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }()
                                                                                                            }
                                                                                                        )(), __helios__bool__and(() -> {
                                                                                                            mintDgtCheck
                                                                                                        }, () -> {
                                                                                                            spendDgtCheck
                                                                                                        })))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_65),
                                                                                                        () -> {
                                                                                                            (__lhs_0_144) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_144);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_66 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_66),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_153) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_66),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_66),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_146) -> {
                                                                                                                                            key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_146);
                                                                                                                                            tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_146);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_147 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_67 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_67),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_151) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_148) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_148);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_69 = mph_28;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_69),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_150) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__46) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_69), __cond_68 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_68),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_149) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__45) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_68)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_67), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_66),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__44) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_66), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_65),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_143) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_142) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_65)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_64 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_64),
                                                                () -> {
                                                                    (__lhs_0_141) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_64),
                                                                        () -> {
                                                                            (__lhs_0_140) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_64),
                                                                                () -> {
                                                                                    (__lhs_0_139) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_64),
                                                                                        () -> {
                                                                                            (__lhs_0_138) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__43) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_64)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_63),
                                                            () -> {
                                                                (__lhs_0_136) -> {
                                                                    seed_4 = __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_136);
                                                                    dataTypePurpose_1 = __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_136);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                        () -> {
                                                                            __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                                purpose_4 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                                newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_4))();
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                                })
                                                                                            }, () -> {
                                                                                                __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                                }))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_63),
                                                                    () -> {
                                                                        (__lhs_0_135) -> {
                                                                            dDataType = __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_135);
                                                                            recId_8 = __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_135);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                () -> {
                                                                                    __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_8))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_8);
                                                                                        __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                            __helios__string____eq("settings", dDataType),
                                                                                            () -> {
                                                                                                curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                    false,
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bytearray____eq(curSettingsId, recId_8),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_8)();
                                                                                                                    curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __helios__bool__and(() -> {
                                                                                            __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_8, dDataType))("  -- did output delegated data? ")
                                                                                        }, () -> {
                                                                                            true
                                                                                        }))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_63),
                                                                            () -> {
                                                                                (__lhs_0_133) -> {
                                                                                    recId_7 = __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_133);
                                                                                    __core__ifThenElse(
                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                        () -> {
                                                                                            __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_134 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_7);
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                            }()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities____is(__cond_63),
                                                                                    () -> {
                                                                                        (__lhs_0_132) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities____is(__cond_63),
                                                                                            () -> {
                                                                                                (__lhs_0_131) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_130) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_63))))))
                            }
                        },
                        () -> {
                            (__41) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_62 = activity_3;
                                __core__ifThenElse(
                                    __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                                    () -> {
                                        (__lhs_0_129) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                                            () -> {
                                                (__lhs_0_128) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__42) -> {
                                                    __module__MyMintSpendDelegate__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_62)
                            }
                        }
                    )()
                }
            )()(__cond_61)))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__MyMintSpendDelegate__DelegateDatum[]__from_data(__module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__MyMintSpendDelegate__DelegateActivity[]__from_data(__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/MyMintSpendDelegate.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1859001902fd0b18650019051b0818690019053408188501190572041886011905720419019802190136181b1901be0219015218201901ef0219015e184e190249001906980819027a001906a118331904b901190463184f1904ba01190463184f190570011902311824190c01011904041820190de00119038b1829190de60119038b182519103a0119037f183219115e0019056018201911af01190464183a19123e0119020318271912440119020318231912650119020c182719126b0119020c182319128101190214182419128701190214182019129101190216182b191297011902161827191305011901f9182119130901190463184f191310011901cb182719131e011901f9182119133a011904a4182619133e011904a714191350011904a8181f191356011904a8181b19137e011904cc181f191381011904cd181e191382011904cd181e191392011904d7181b1913a6011904dc18381913bd001902311119142800190236184c191448001902471860191450001901df184e191451001901df184e19146200190249186819146a001901df184e19146b001901df184e1914b80019023c184419150c0019024e183019153a011904ac182e191542011904ac182a191543011904a71831191576011904f114191588011904f2181f19158e011904f2181b19159b00190258091915ca0019026218271915cb0019026218271915d500190271111915fa001902661838191622001902691843191658001902761852191660001901df184e191661001901df184e1916750019027810191678001902aa11191680001901df184e191681001901df184e191692001902af1119169a001901df184e19169b001901df184e1916c50019027d181d1916da00190283181d1916ef0019028b181d19172700190293184419174f0019029618501917680019029d1857191787001902b31831191793011904f8182019179b011904f8181c1917c40119050a18451917d9001904460b1917da001904460b1917e800190448184c19182d0119052d18181918340119052d14191878011904f11831191a12031901bb182e191a13031901bb182e191a22031901c01839191a23031901c01839191a7a03182216191abd031901d81837191cf10019018a184b191d130019018a184d191d31031901601834191e2f0319012a181b191e7b001906e108191ef4001906e914191f3200190168184b191f6300190168184d191f76001906b808191ff2001906c31846191ff3001906c318251920f30019062918331921840019058b181f1921de0019058c18221922b804190113161923ed001905250c19245c00190502091924df001904ef091925bf04182b041925fa001904b809192644001904181519264500190418151926f1001902f51827192700001902f6182e19272d001902e111192737001901df184e192738001901df184e1927f5001902e618471927f8001902ea1832192863001902f0182d1928a4001901d1081928a6001901d0091929600419014d0c1929920419013e183f1929950419013f18341929e804190145181b192a00041901350b192a6e0518a20a192b6d0518360eff", "variableNames": "", "termDescriptions": "ae190249676368617274657219133e646363747819157664636374781915ca683c7377697463683e1915cb683c7377697463683e19167570616374734f6e546869735265636f72641917d9683c7377697463683e1917da683c7377697463683e191a1262746e191a1362746e191e7b6763686172746572191f766763686172746572192644683c7377697463683e192645683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/MyMintSpendDelegate.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1903dd00190167183219040d0019025b182a19040f001902cf183a190411001902fd0b1904430019051b08190447001905340819054f0119057204190550011905720419057f0118bf183a1905800118bf183a1905830118c0182e1905840118c0182e1905850118c0091905860118c0041905870118c018271905890118c0182719058a0118c0181919058c0118c0181919058d0118c00a19059a011905700a19059d01190570182919059e01190570181a1906290119055a101906370119055b18361906390119055b182d1906d60119014c181c1907bc01190128181c19088a0118f5181c190a10011901a41826190b3f01190231182419105f011902ac182819128f0119044d181c1912b901190401183719130101190404182019141b01190433186519149d0119040218351914a20119040218311914c00119038b18291914c70119038b18251916bb0119037f18321916c50119037e18521916cb0119037d184e19181e01190466183419182701190466183019182b01190464183a19183601190463184f1918540119047f182f19185b0119047f182b1918e101190496181d19191301190203182719191a0119020318231919430119020c182719194a0119020c182319197201190214182419197901190214182019198501190216182b19198c0119021618271919a2011901f918251919a6011901f918211919ac011901cb18271919c4011904a418261919d8011904a7141919e0011904a8181f1919e7011904a8181b191a31011904cc181f191a34011904cd181e191a35011904cd181e191a51011904d7181b191a58011904d717191a63011904dc1838191a7c011904ac182e191a86011904ac182a191a89011904a71831191ab8011904f114191ac0011904f2181f191ac7011904f2181b191afa011904f81820191b04011904f8181c191b57011905201828191b7901190526182b191b810119050a1845191b840119050a182c191b8b0119050a1828191b980119052d1818191b9f0119052d14191ba4011904ff182c191bad011904ff1828191bb1011904f11831191bde0119053514191be601190536181f191bed01190536181b191c480119053e182d191c510119053e1829191c55011905351831191ec80219018a181f191ef3021901751827191f06021901761835191f0c0218fa1827191f0d0218fc08191f0e0218fc08191f410219010d1825191f6f02190115182a191f7002190115182a191f890219010e181c191fc402190126181b191fe00219012c1820191ff10219012f1841191ff70219012f1852191ff80219012f185219201f02190136181b1920450219013c182019206202190152182019208c0219015e184e192c05031901b31826192c06031901b31831192c23031901bb182e192c24031901bb182e192c26031901bc0c192c37031901bd182c192c53031901c01839192c54031901c01839192c5b031901c210192cc0031901d81837192cfb031901e3182d192e3d031901601834192fd90319012a181b192ff50319011e0e19301003190114181b19305703185d0519305803185b182d19306e031863141930a103186d1719310803184d0919310903184d182e19312303184706193124031844181919319a031830184419319b03183018441931bc03181f021931bd03181f021931d7031822161931de0318230d1931ed0318260e19320c0019079f182719322800190799182c19324100190776101933a40019076018321933a700190747182c1933ad00190749181f1933cb0019074b183b193405001907341219340600190734182b1934080019072a0d19340900190725182a19342d0019072618301934b6001906e1081934b7001906e20f1934f2001906e91419350d001906b80819350e001906b90f193555001906c31846193556001906c318251935a200190698081935a3001906990f1935c9001906a118331936870019065718251936ac001906291833193772001905870f1937820019058b181f1937d90019058c18221938290019057c101938590019056e182319385a0019056e182319386c0019056018201938760019055f0819388900190562101938ae0019055a18281938af0019055a18411938ca001905501119391400190533181c19394700190522181c1939890019052a1818193996001905250c1939a30019051a18181939df00190502091939e600190500181d1939ff001904f71820193a25001904ef09193a2c001904ed181b193aae001904d5184d193abc001904d51844193b1a001904b0181e193b1b001904b1183d193b26001904b809193b3f001904b510193b75001904460b193b76001904460b193b7c00190448184c193bce00190438183f193bd0001904371821193bd1001904371821193c0400190416181c193c0e0019041815193c0f0019041815193ccb001902fb10193cd1001902ce181b193ce4001902f51827193ced001902f6182e193cfe001902f60f193d13001902e111193d3a001902e61847193d48001902ea1832193d52001902ea1822193d73001902f0182d193da40019025809193dc20019025a1878193dcd0019026208193dcf0019025c1826193dd90019025c0e193dda0019025e181b193de10019025f1841193dec001902601855193dfe001902621827193dff001902621827193e070019027111193e1d001902661838193e38001902691843193e430019026a184d193e530019026a1845193e8700190275183d193e8e001902761852193ea0001902761826193ea20019027810193ea3001902a61862193eae001902aa11193ec9001902ab1851193ed4001902af11193f060019027d181d193f1e00190283181d193f360019028b181d193f62001902931844193f7d001902961850193f8800190297185c193f96001902981844193f98001902971854193f99001902971854193fb30019029d1857193fe2001902b31831193ffc00190225185d194017001902311119405900190236184c19406700190236182119406a00190246185b1940750019024718601940880019024818501940930019024918681940d10019023c184419411b0019024e1830194177001901e91856194179001901e81519417a001901e81519417e001901e914194183001901e90f19418f001901e91844194190001901eb184f194192001901e9184e194193001901e9184e19419f001901ec184f1941b6001901ec182e1941b7001901f1131941c5001901de171941c6001901de171941c7001901df18561941c9001901de182b1941ca001901de182b1941ce001901df141941d3001901df0f1941df001901df18441941e4001901df184e1941e5001901df184e1941f7001901d41821194211001901bf1827194214001901d108194216001901d00919422c001901c51853194237001901c5184b194253001901c8184a1944220019018e131944320019018a184b1944370019018a183019443a0019018a184d19448300190168184b19448800190168183019448b00190168184d1956ea0419014d0c19570904190154183719571d041901500c19572a0419015a1519572d0419015a183619572f0419015a18361957300419015a18311957610419013e183f1957640419013f183419579604190145182919579704190145181b1957b3041901350b1957c5041901320a19587304190113161958860419010e1319588c04190109185a1958cc0418e40a196c4204182b041970920518a20a1970b90518a51219725c0518360e19727d0518321819197286051829181919729705182a0819729805182a081972a205182418181972b10518260eff", "variableNames": "b90d0300675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046f5f5f68656c696f735f5f6572726f72066f5f5f68656c696f735f5f7072696e7408775f5f68656c696f735f5f737472696e675f5f5f5f6164640a705f5f68656c696f735f5f6173736572740c755f5f68656c696f735f5f626f6f6c5f5f5f5f6e6f740e78195f5f68656c696f735f5f6279746561727261795f5f5f5f657110781a5f5f68656c696f735f5f6279746561727261795f5f5f5f6e65711278185f5f68656c696f735f5f696e745f5f5f5f746f5f646174611478185f5f68656c696f735f5f696e745f5f73657269616c697a6516781d5f5f68656c696f735f5f737472696e675f5f656e636f64655f757466381818735f5f68656c696f735f5f626f6f6c5f5f616e64181a725f5f68656c696f735f5f626f6f6c5f5f6f72181c781b5f5f68656c696f735f5f737472696e675f5f5f5f746f5f64617461181e78265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f627974651820781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f757466381822755f5f68656c696f735f5f696e745f5f746f5f686578182478195f5f68656c696f735f5f6279746561727261795f5f73686f77182678255f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466385f736166651828755f5f68656c696f735f5f76616c75655f5f5a45524f182a781d5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c6473182c781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f30182e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f301830781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f311832745f5f68656c696f735f5f76616c75655f5f6e6577183478185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f30183678185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f31183878185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f32183a781e5f5f68656c696f735f5f6279746561727261795f5f5f5f746f5f64617461183c78265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f746f5f64617461183e78195f5f68656c696f735f5f6173736574636c6173735f5f6e65771840745f5f68656c696f735f5f696e745f5f5f5f6e65671842735f5f68656c696f735f5f696e745f5f5f5f6571184478215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f73686f771846745f5f68656c696f735f5f76616c75655f5f676574184878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f31184a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f32184c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f33184e781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f341850745f5f68656c696f735f5f74785f5f6d696e7465641852781d5f5f68656c696f735f5f736372697074636f6e746578745f5f646174611854781b5f5f68656c696f735f5f736372697074636f6e746578745f5f7478185678255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e6465781858765f5f68656c696f735f5f737472696e675f5f5f5f6571185a765f5f68656c696f735f5f636f6d6d6f6e5f5f5f5f6571185c781a5f5f68656c696f735f5f6173736574636c6173735f5f5f5f6571185e765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c64186078195f5f68656c696f735f5f696e745f5f73686f775f64696769741862735f5f68656c696f735f5f696e745f5f73686f771864745f5f68656c696f735f5f646174615f5f73686f77186678205f5f68656c696f735f5f646174615f5f73686f775f636f6e7374725f646174611868781a5f5f68656c696f735f5f646174615f5f73686f775f6669656c64186a781a5f5f68656c696f735f5f646174615f5f73686f775f6264617461186c781a5f5f68656c696f735f5f6173736574636c6173735f5f73686f77186e775f5f68656c696f735f5f737472696e675f5f5f5f6e65711870735f5f68656c696f735f5f696e745f5f5f5f67741872781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f73616665187478215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6571187678215f5f68656c696f735f5f636f6d6d6f6e5f5f756e4d6170446174615f5f736166651878781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e49446174615f5f73616665187a735f5f68656c696f735f5f7265616c5f5f4f4e45187c755f5f68656c696f735f5f7265616c5f5f666c6f6f72187e725f5f68656c696f735f5f696e745f5f6162731880735f5f68656c696f735f5f7265616c5f5f6162731882781a5f5f68656c696f735f5f696e745f5f73686f775f7061646465641884745f5f68656c696f735f5f696e745f5f5f5f6d6f64188678195f5f68656c696f735f5f7265616c5f5f505245434953494f4e1888745f5f68656c696f735f5f7265616c5f5f73686f77188a755f5f68656c696f735f5f76616c75655f5f73686f77188c745f5f68656c696f735f5f696e745f5f5f5f6e6571188e745f5f68656c696f735f5f696e745f5f5f5f7375621890775f5f68656c696f735f5f76616c75655f5f746f5f6d61701892765f5f68656c696f735f5f737472696e675f5f73686f771894775f5f68656c696f735f5f7478696e7075745f5f5f5f65711896745f5f68656c696f735f5f626f6f6c5f5f73686f771898755f5f68656c696f735f5f626f6f6c5f5f7472616365189a78195f5f68656c696f735f5f74786f75747075745f5f76616c7565189c78195f5f68656c696f735f5f7478696e7075745f5f6f7574707574189e78185f5f68656c696f735f5f7478696e7075745f5f76616c756518a078205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f736518a278375f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f7370656e64696e675f707572706f73655f6f75747075745f696418a4781c5f5f68656c696f735f5f7478696e7075745f5f6f75747075745f696418a6745f5f68656c696f735f5f74785f5f696e7075747318a8782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e70757418aa781e5f5f68656c696f735f5f6279746561727261795f5f66726f6d5f6461746118ac781b5f5f68656c696f735f5f737472696e675f5f66726f6d5f6461746118ae78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e67746818b078195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f67657418b278215f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f7461675f657175616c7318b4781b5f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e455f46554e4318b6781b5f5f68656c696f735f5f6f7074696f6e5f5f534f4d455f46554e4318b878235f5f68656c696f735f5f6279746561727261795f5f66726f6d5f646174615f7361666518ba781d5f5f68656c696f735f5f696e745f5f66726f6d5f646174615f7361666518bc755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c18be781a5f5f68656c696f735f5f636f6d6d6f6e5f5f6964656e7469747918c0781f5f5f68656c696f735f5f6173736574636c6173735f5f5f5f746f5f6461746118c2781f5f5f68656c696f735f5f6173736574636c6173735f5f66726f6d5f6461746118c478195f5f68656c696f735f5f646174615f5f66726f6d5f6461746118c678195f5f68656c696f735f5f626f6f6c5f5f66726f6d5f6461746118c878185f5f68656c696f735f5f696e745f5f66726f6d5f6461746118ca78205f5f68656c696f735f5f6279746561727261795f5f6465636f64655f7574663818cc781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c69637918ce781b5f5f68656c696f735f5f636f6d6d6f6e5f5f73657269616c697a6518d0775f5f68656c696f735f5f74785f5f73657269616c697a6518d2781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f7361666518d4781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f6461746118d678225f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f6461746118d8781f5f5f68656c696f735f5f74786f757470757469645f5f66726f6d5f6461746118da78245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f636f6e7374725f646174615f3218dc782f5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f66697865645f6c656e67746818de781d5f5f68656c696f735f5f747869645f5f69735f76616c69645f6461746118e0781c5f5f68656c696f735f5f696e745f5f69735f76616c69645f6461746118e278235f5f68656c696f735f5f74786f757470757469645f5f69735f76616c69645f6461746118e4781d5f5f68656c696f735f5f646174615f5f69735f76616c69645f6461746118e678205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c69637918e878195f5f68656c696f735f5f76616c75655f5f66726f6d5f6d617018ea78225f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6e657118ec781e5f5f68656c696f735f5f76616c75655f5f69735f7a65726f5f696e6e657218ee78185f5f68656c696f735f5f76616c75655f5f69735f7a65726f18f078225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e7418f2781d5f5f68656c696f735f5f76616c75655f5f6765745f6d61705f6b65797318f4755f5f68656c696f735f5f636f6d6d6f6e5f5f616e7918f678265f5f68656c696f735f5f636f6d6d6f6e5f5f69735f696e5f6279746561727261795f6c69737418f878185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e63617418fa781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b65797318fc78265f5f68656c696f735f5f76616c75655f5f6164645f6f725f73756274726163745f696e6e657218fe781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d617019010078205f5f68656c696f735f5f76616c75655f5f6164645f6f725f7375627472616374190102765f5f68656c696f735f5f76616c75655f5f5f5f616464190104755f5f68656c696f735f5f636f6d6d6f6e5f5f6d6170190106781a5f5f68656c696f735f5f76616c75655f5f5f5f746f5f64617461190108765f5f68656c696f735f5f76616c75655f5f76616c756519010a781a5f5f68656c696f735f5f76616c75655f5f66726f6d5f6461746119010c78225f5f68656c696f735f5f636f6d6d6f6e5f5f696e736572745f696e5f736f7274656419010e765f5f68656c696f735f5f636f6d6d6f6e5f5f736f727419011078265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f66726f6d5f6461746119011278185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572190114781c5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6d617019011678195f5f68656c696f735f5f6279746561727261795f5f5f5f6c74190118725f5f68656c696f735f5f696e745f5f6d617819011a78215f5f68656c696f735f5f636f6d6d6f6e5f5f736c6963655f62797465617272617919011c781a5f5f68656c696f735f5f6279746561727261795f5f736c69636519011e781c5f5f68656c696f735f5f6279746561727261795f5f626c616b653262190120781b5f5f68656c696f735f5f6279746561727261795f5f6c656e677468190122781a5f5f68656c696f735f5f6279746561727261795f5f5f5f61646419012478195f5f68656c696f735f5f747869645f5f73657269616c697a65190126781b5f5f68656c696f735f5f74786f757470757469645f5f696e646578190128781b5f5f68656c696f735f5f74786f757470757469645f5f74785f696419012a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3419012c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3519012e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3619013078255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3719013278255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f38190134781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f39190136775f5f68656c696f735f5f74785f5f72656465656d65727319013878275f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f5f5f697319013a781a5f5f68656c696f735f5f74786f757470757469645f5f5f5f657119013c782c5f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f6f75747075745f696419013e78195f5f68656c696f735f5f76616c75655f5f6765745f7361666519014078225f5f68656c696f735f5f736372697074707572706f73655f5f5f5f746f5f64617461190142745f5f68656c696f735f5f747869645f5f73686f77190144781a5f5f68656c696f735f5f646174615f5f73686f775f6964617461190146781a5f5f68656c696f735f5f74786f757470757469645f5f73686f77190148781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e6519014a781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3219014c78195f5f68656c696f735f5f74786f75747075745f5f646174756d19014e78185f5f68656c696f735f5f7478696e7075745f5f646174756d19015078185f5f68656c696f735f5f74785f5f7265665f696e70757473190152755f5f68656c696f735f5f74785f5f6f757470757473190154775f5f68656c696f735f5f616464726573735f5f5f5f6571190156781b5f5f68656c696f735f5f74786f75747075745f5f61646472657373190158781b5f5f68656c696f735f5f737472696e675f5f73657269616c697a6519015a781a5f5f68656c696f735f5f7478696e7075745f5f6164647265737319015c765f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e4519015e781d5f5f68656c696f735f5f74786f75747075745f5f66726f6d5f6461746119016078275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3019016278205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3119016478205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f30190166781b5f5f68656c696f735f5f7374727563745f5f5f5f746f5f64617461190168781b5f5f68656c696f735f5f7374727563745f5f73657269616c697a6519016a765f5f68656c696f735f5f7374727563745f5f5f5f657119016c781e5f5f68656c696f735f5f76616c75655f5f636f6d706172655f696e6e657219016e78185f5f68656c696f735f5f76616c75655f5f636f6d70617265190170765f5f68656c696f735f5f76616c75655f5f5f5f67657119017278195f5f68656c696f735f5f76616c75655f5f636f6e7461696e73190174781e5f5f68656c696f735f5f74786f75747075745f5f73756d5f76616c756573190176781d5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6c697374190178781c5f5f68656c696f735f5f74785f5f66696c7465725f6f75747075747319017a781d5f5f68656c696f735f5f616464726573735f5f63726564656e7469616c19017c782a5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c696461746f7219017e781d5f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f657119018078225f5f68656c696f735f5f76616c696461746f72686173685f5f66726f6d5f64617461190182782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f68617368190184782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f6361737419018678205f5f68656c696f735f5f74786f75747075745f5f69735f6c6f636b65645f6279190188781f5f5f68656c696f735f5f74785f5f6f7574707574735f6c6f636b65645f627919018a781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f627919018c78225f5f68656c696f735f5f74786f7574707574646174756d5f5f73657269616c697a6519018e78205f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f5f5f697319019078225f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f6669656c6473190192781f5f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f746167190194781c5f5f68656c696f735f5f7478696e7075745f5f66726f6d5f6461746119019678275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3119019878275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3219019a78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3319019c78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3419019e78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f331901a078205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f321901a278215f5f68656c696f735f5f74786f75747075745f5f69735f76616c69645f646174611901a478205f5f68656c696f735f5f7478696e7075745f5f69735f76616c69645f646174611901a6781c5f5f68656c696f735f5f7478696e7075745f5f5f5f746f5f646174611901a8781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f371901aa781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f361901ac781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f351901ae781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f331901b078285f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c645f696e7465726e616c1901b2781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c641901b478245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6d5374727563745f6669656c641901b6782a5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f69735f76616c69645f646174611901b878265f5f68656c696f735f5f76616c696461746f72686173685f5f69735f76616c69645f646174611901ba78235f5f68656c696f735f5f7075626b6579686173685f5f69735f76616c69645f646174611901bc782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c69645f646174611901be78255f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f686561645f646174611901c078245f5f68656c696f735f5f7374616b696e67686173685f5f69735f76616c69645f646174611901c278215f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f656d7074791901c4782a5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f69735f76616c69645f646174611901c6783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f69735f76616c69645f646174611901c878205f5f68656c696f735f5f616464726573735f5f69735f76616c69645f646174611901ca781d5f5f68656c696f735f5f76616c696461746f72686173685f5f73686f771901cc78225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f5f5f65711901ce78225f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f746f5f646174611901d0782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f6e65775f76616c696461746f721901d278195f5f68656c696f735f5f626f6f6c5f5f5f5f746f5f646174611901d4782d5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f6d61785f6c656e6774681901d678235f5f68656c696f735f5f6173736574636c6173735f5f69735f76616c69645f646174611901d8781d5f5f68656c696f735f5f646174615f5f6d6170646174615f5f5f5f69731901da78225f5f68656c696f735f5f736372697074707572706f73655f5f66726f6d5f646174611901dc64544f444f1901de64524551541901e06562524551541901e2646d6b54761901e478285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e641901e678635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6c656e6774681901e878385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6c656e6774681901ea78485f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f69735f76616c69645f646174615f696e7465726e616c1901ec783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f66726f6d5f646174611901ee783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765741901f0783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f66696e645f6b65791901f2756d75737446696e64496e70757452656465656d65721901f478385f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69735f76616c69645f646174611901f678345f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f66726f6d5f646174611901f8782d5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69641901fa782f5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f747970651901fc78245f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f686561641901fe7066726f6d43697036385772617070657219020078495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119020278455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190204784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f5f5f697319020678585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f32190208784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f7365656419020a78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f707572706f736519020c784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f5f5f697319020e78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f3219021078545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f5f5f6973190212785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f3219021478385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5f5f746f5f64617461190216783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f69735f76616c69645f6461746119021878385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f66726f6d5f6461746119021a783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f697319021c78475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f3219021e783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f6e6577190220783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f697319022278485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f32190224783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f6e657719022678425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f5f5f6973190228784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f3219022a78435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f5f5f697319022c784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219022e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6973190230784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219023278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d6519023478425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6e657719023678425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f5f5f6973190238784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f3219023a78485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f697319023c78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f3219023e78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f6e657719024078465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f5f5f697319024278515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f3219024478405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f69735f76616c69645f64617461190246783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f66726f6d5f6461746119024878465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f5f5f697319024a78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f3219024c78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f5f5f697319024e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f3219025078445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f5f5f6973190252784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f3219025478435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f6b657919025678495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f746f6b656e4e616d65190258784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f5f5f697319025a78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219025c78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219025e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f69735f76616c69645f6461746119026078415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f66726f6d5f6461746119026278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f5f5f6973190264784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f3219026678415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f7365656419026878445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f707572706f736519026a78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f696450726566697819026c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f5f5f697319026e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f3219027078455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f5f5f697319027278505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f3219027478455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7365656419027678485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f707572706f736519027878495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f696450726566697819027a784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7265706c6163657344677419027c783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f5f5f657119027e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119028078415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190282784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f5f5f697319028478595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f32190286784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f7365656419028878515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f707572706f736519028a78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f5f5f697319028c785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f3219028e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f5f5f6973190290785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f3219029278525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f5f5f6973190294785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3219029678555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f5f5f697319029878605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f3219029a78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f697319029c785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3219029e784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f5f5f69731902a078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f321902a278525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f61637469766974791902a4784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f69735f76616c69645f646174611902a6784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f66726f6d5f646174611902a878695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902aa78625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731902ac786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902ae78665f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791902b078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f5f5f69731902b278645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f321902b4785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f61637469766974791902b678585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f5f5f69731902b878635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f321902ba785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f61637469766974791902bc78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f321902be785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f69731902c078675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902c2785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f69731902c478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902c6785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f69731902c878675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902ca78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f69731902cc78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c1902ce782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611902d0786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f321902d278295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66726f6d5f646174611902d478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f616374697669746965731902d678415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f69731902d878425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f6e65771902da78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f69731902dc78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f6e65771902de78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f69735f76616c69645f646174611902e078445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f69735f76616c69645f646174611902e2783b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f65711902e478405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f66726f6d5f646174611902e678405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f746f5f646174611902e8783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f7575744e616d651902ea78345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f66726f6d5f646174611902ec784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f64656c656761746556616c696461746f72486173681902ee782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e1902f0782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f69731902f2782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f6e6f6e655f5f5f5f6e65771902f4782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f6e65771902f6782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f736f6d651902f8782e52656c617469766544656c65676174654c696e6b3a3a76616c6964617465735570646174656453657474696e67731902fa78355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f6e6f6e655f5f5f5f69731902fc78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6e65771902fe782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f5f5f6973190300782c5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696e645f7361666519030278355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f736f6d65190304782652656c617469766544656c65676174654c696e6b3a3a68617344656c6567617465496e70757419030678355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f5f5f697319030878305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f5f5f697319030a782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e645f7361666519030c782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f757470757419030e78565f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119031078455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f69735f76616c69645f6461746119031278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f66726f6d5f64617461190314783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f616374696f6e190316783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f726f6c6519031878525f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119031a783f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f6467744c696e6b19031c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f69735f76616c69645f6461746119031e78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f66726f6d5f64617461190320784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f5f5f697319032278565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f32190324784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f6368616e676519032678555f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c190328784c5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f6461746119032a785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3219032c78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f69735f76616c69645f6461746119032e783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f66726f6d5f6461746119033078365f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f6d706819033278355f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f746e190334782244656c65676174696f6e44657461696c3a3a6163417574686f72697479546f6b656e19033678265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f616e7919033878395f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f69735f76616c69645f6461746119033a78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f66726f6d5f6461746119033c783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f5f5f697319033e784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f32190340783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f5f5f697319034278495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219034478445f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f706f6c6963794c696e6b19034678425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f696450726566697819034878425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f726566436f756e7419034a784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f3219034c784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f3219034e784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f32190350783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f69735f76616c69645f6461746119035278395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f69735f76616c69645f6461746119035478355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f66726f6d5f6461746119035678355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f656e7472795479706519035878355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f746f6b656e4e616d6519035a78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f66726f6d5f6461746119035c782f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f6d706819035e78395f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f736f6d655f5f5f5f697319036078315f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f69735f76616c69645f64617461190362782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f66726f6d5f64617461190364785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19036678545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f64617461190368786d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19036a78645f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119036c78625f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19036e78595f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f64617461190370785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19037278545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f6461746119037478405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f32190376783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f66726f6d5f64617461190378783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f5f5f746f5f6461746119037a78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e6444656c65676174654c696e6b19037c78505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119037e78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e64496e76617269616e747319038078605f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119038278445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6f746865724e616d656444656c65676174657319038478415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b190386783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e74496e76617269616e747319038878415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f676f76417574686f726974794c696e6b19038a78555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f66726f6d5f6461746119038c78395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d616e696665737419038e78505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f66726f6d5f64617461190390783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f70656e64696e674368616e67657319039278555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f746f5f6461746119039478505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f746f5f6461746119039678445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f3219039878375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f5f5f697319039a78465f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c19039c783d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f6461746119039e78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f321903a078395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f5f5f746f5f646174611903a2783d5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f69735f76616c69645f646174611903a478395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f66726f6d5f646174611903a678395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f69731903a878445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f321903aa783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f6e65771903ac783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f69731903ae78495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f321903b0783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f646174756d1903b2783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f7574786f1903b4783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f6e65771903b6783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f69731903b878465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f321903ba783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f646174756d1903bc783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f7574786f1903be783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f6e65771903c078345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f69735f76616c69645f646174611903c278305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f66726f6d5f646174611903c478425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f5f5f69731903c6784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f321903c878465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f61637469766974791903ca783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f69731903cc78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f321903ce783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f6e65771903d0783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f5f5f69731903d278495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f321903d478415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f69731903d6784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f321903d878435f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f5f5f69731903da784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f321903dc783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f5f5f69731903de78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f321903e071676574526566436861727465725574786f1903e270676574547843686172746572446174611903e478315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f646174611903e678325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f69735f76616c69645f646174611903e878315f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f73657269616c697a651903ea782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6c696e6b1903ec782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f726f6c651903ee782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f66726f6d5f646174611903f078305f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f69645072656669781903f2782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f66726f6d5f646174611903f4782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f696e7075741903f6782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6d70681903f8782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f5f5f746f5f646174611903fa782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f5f5f746f5f646174611903fc782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f5f5f6e65771903fe782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f756e77726170190400782c44656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479417344617461190402782644656c6567617465496e7075743a3a67656e6572696344656c656761746541637469766974791904047544656c6567617465496e7075743a3a6173736572741904067444656c6567617465496e7075743a3a6572726f7219040878235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f67657419040a78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6c656e67746819040c78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66696c74657219040e782e44656c6567617465496e7075743a3a77697468556e697175655365656465644d696e74696e674163746976697479190410782b44656c6567617465496e7075743a3a77697468556e6971756544445370656e64696e674163746976697479190412782044656c6567617465496e7075743a3a64656c6567617465556e6368616e6765641904147544656c6567617465496e7075743a3a6f724661696c19041678265f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6571190418782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f73657269616c697a6519041a78255f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d706819041c78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6368617274657219041e78275f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6e6577190420781b4361706f4374783a3a6765744368617274657252656465656d657219042278545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f73616665190424781a4361706f4374783a3a66696e644d616e6966657374456e74727919042678485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f5f5f697319042878485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f736f6d6519042a78485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6e6f6e655f5f5f5f697319042c78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f6e6f6e655f5f5f5f6e657719042e78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f5f5f6e6577190430781e4361706f4374783a3a66696e644d616e6966657374546f6b656e4e616d65190432764361706f4374783a3a67657453657474696e6773496419043478305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f736f6d65190436781d4361706f4374783a3a7265717569726573476f76417574686f7269747919043878535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6e6f6e655f5f5f5f697319043a78535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f736f6d655f5f736f6d6519043c785f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6765745f7361666519043e782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f736f6d655f5f5f5f6e657719044078224361706f4374783a3a7265717569726573446744617461506f6c696379496e707574190442781b4361706f4374783a3a6e6f77416374696e6741734d696e74446774190444781c4361706f4374783a3a6e6f77416374696e6741735370656e64446774190446774361706f4374783a3a6765744368617274657244617461190448781b4361706f4374783a3a6765744e657874436861727465724461746119044a781b4361706f4374783a3a7265736f6c7665436861727465725574786f19044c782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f6e657719044e781e4361706f4374783a3a726571756972657344656c6567617465496e707574190450704361706f4374783a3a6164647265737319045278194361706f4374783a3a64656c65676174656444617461526566190454781d4361706f4374783a3a64656c656761746564446174615478496e70757419045678214361706f4374783a3a6d6b44656c6567617465644461746150726564696361746519045878204361706f4374783a3a6d7573744f757470757444656c6567617465644461746119045a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f6e6f6e655f5f5f5f697319045c781a4361706f4374783a3a64656c65676174656454784f757470757419045e754361706f4374783a3a6e656564734368617274657219046078194361706f4374783a3a7769746843686172746572496e707574190462774361706f4374783a3a7769746843686172746572526566190464786b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f666f6c645b5f5f68656c696f735f5f626f6f6c5d19046678285f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f756e77726170190468784f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f616c6c19046a784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f616c6c19046c782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f697319046e782a4361706f4374783a3a616c6c44656c65676174657341726556616c69646174696e6753657474696e677319047078254361706f4374783a3a646774526f6c6573466f724c6966656379636c6541637469766974791904726f4361706f4374783a3a6f724661696c190474696d6b4361706f4374781904766b686173536565645574786f190478781a6e6f4f7468657241637469766974696573537570706f7274656419047a782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f6e6f6e655f5f5f5f697319047c782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f736f6d655f5f736f6d6519047e783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765745f73616665190480781f726571756972657344656c6567617465417574686f72697a696e674d696e741904826e6d6b557574546e466163746f7279190484781b736f7274506f6c69637956616c7565735072656469637461626c79190486783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f6561636819048878635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c74657219048a78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f666f725f6561636819048c782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f6e6f6e655f5f5f5f697319048e782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f736f6d655f5f736f6d65190490783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f7361666519049278635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f64656c657465190494783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f746f5f6461746119049678365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f657119049878365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f727419049a78255f5f68656c696f735f5f76616c75655f5f73756d5b5f5f68656c696f735f5f76616c75655d19049c78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f76616c75655d19049e7276616c69646174655575744d696e74696e671904a0783d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f69735f76616c69645f646174611904a278395f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f66726f6d5f646174611904a4784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f321904a678475f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f73657269616c697a651904a878425f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f5f5f69731904aa784d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f321904ac78405f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f64641904ae78445f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f5f5f69731904b0784f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f321904b2783f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f69735f76616c69645f646174611904b4783b5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f66726f6d5f646174611904b6784d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f53616d706c654d696e74696e6741637469766974795f5f5f5f69731904b878585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f53616d706c654d696e74696e6741637469766974795f5f69735f76616c69645f646174615f321904ba78585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f4d696e74696e6746756e6769626c65546f6b656e735f5f69735f76616c69645f646174615f321904bc78525f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f4d696e74696e6746756e6769626c65546f6b656e735f5f746f6b656e4e616d651904be78405f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f69735f76616c69645f646174611904c0783c5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f66726f6d5f646174611904c2785a5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f53616d706c655370656e64696e6741637469766974795f5f69735f76616c69645f646174615f321904c478505f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f53616d706c655370656e64696e6741637469766974795f5f72656349641904c6783f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f69735f76616c69645f646174611904c878525f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f5f706c616365686f6c6465723142415f5f69735f76616c69645f646174615f311904ca78375f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5f5f65711904cc78405f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f69735f76616c69645f646174611904ce783c5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f66726f6d5f646174611904d078505f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f5f5f69731904d2785b5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321904d478545f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f61637469766974791904d678545f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731904d8785f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321904da78585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791904dc784b5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f5f5f69731904de78565f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f321904e0784f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f61637469766974791904e2784a5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f5f5f69731904e478555f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f321904e6784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f61637469766974791904e8784a5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f5f5f69731904ea78555f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f321904ec784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f69731904ee78595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321904f0784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f736565641904f278525f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f64617461547970651904f4784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f69731904f678595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321904f878525f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f64617461547970651904fa784f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f72656349641904fc784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f69731904fe78595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190500784f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f726563496419050278535f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f6973190504785e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219050678595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f61637469766974696573190508782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f697319050a782b5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f66696e645f7361666519050c782e44656c656761746541637469766974793a3a6164646974696f6e616c44656c656761746556616c69646174696f6e19050e782f44656c656761746541637469766974793a3a737570706f727465644361706f44656c6567617465507572706f736573190510782644656c656761746541637469766974793a3a6f74686572446174756d56616c69646174696f6e1905126372657619051468696e7374616e63651905166c64656c65676174654e616d651905186e69734d696e7444656c656761746519051a6f69735370656e6444656c656761746519051c6e6973446744617461506f6c69637919051e747265717569726573476f76417574686f7269747919052078235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f616c6c190522784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f6571190524784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f7461696c190526784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6c656e677468190528782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f756e7772617019052a78335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f736f6d655f5f5f5f6e657719052c784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f616c6c19052e784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6865616419053078365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f73686f77190532787d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c645b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d19053478385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f64656c657465190536784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f5f5f6973190538784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f736f6d6519053a78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6765745f7361666519053c78e35f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c64325b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5d19053e78525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6c656e67746819054078505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6865616419054278505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f7461696c190544784f5f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f756e7772617019054678525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c65746519054878505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f657119054a782a5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f756e7772617019054c782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f756e7772617019054e646d61696e19057e781d5f5f6d6f64756c655f5f426173696344656c65676174655f5f6d61696e19057f636d646419058068616374697669747919059168726573756c745f321905a3695f5f636f6e645f36311905af6b5f5f6c68735f305f3236351905be636973441905c06264641905f5676d794467546b6e190602781b636865636b4e6f6e44656c6567617465644163746976697469657319061866636374785f3719068a695f5f636f6e645f36331906966b5f5f6c68735f305f3234331906986c616374697669746965735f3219069a66636374785f3619069c6e6d696e74446774436865636b5f3119069e6f7370656e64446774436865636b5f311906a071646744617461506f6c696379436865636b1906d46d72617741637469766974795f321906d664615f32321906ea6a5f5f636f6e645f3131341906f66b5f5f6c68735f305f3236341907056b5f5f6c68735f305f3236331907146b5f5f6c68735f305f3236321907236b5f5f6c68735f305f3236311907366b5f5f6c68735f305f3236301907496b5f5f6c68735f305f3235391907656b5f5f6c68735f305f3235381907746b5f5f6c68735f305f3235371907796b5f5f6c68735f305f3235361907ba6d72617741637469766974795f311907bc64615f32311907d06a5f5f636f6e645f3131331907dc6b5f5f6c68735f305f3235351908066b5f5f6c68735f305f3235341908156b5f5f6c68735f305f3235331908246b5f5f6c68735f305f3235321908336b5f5f6c68735f305f3235311908426b5f5f6c68735f305f323530190847645f5f37371908886b726177416374697669747919088a64615f323019089e6a5f5f636f6e645f3131321908aa6b5f5f6c68735f305f3234391908bd6b5f5f6c68735f305f3234381908d06b5f5f6c68735f305f3234371908df6b5f5f6c68735f305f3234361908ee6b5f5f6c68735f305f3234351908fd6b5f5f6c68735f305f323434190902645f5f37361909336b5f5f6c68735f305f3233371909356d696e6e657241637469766974791909376a5f5f636f6e645f3131301909436b5f5f6c68735f305f32343119094566736565645f3919094769707572706f73655f39190949664255524e454419094b726f746865724d696e74656456616c75655f3219094d67746e5374725f3319097466636374785f351909767169735570646174696e67436861727465721909786b69734d696e74696e674f6b1909ab6a5f5f636f6e645f3131311909b76b5f5f6c68735f305f3234321909ba645f5f37351909f06b5f5f6c68735f305f323430190a186b5f5f6c68735f305f323338190a1a6b5f5f6c68735f305f323339190a4f6b5f5f6c68735f305f313337190a516464434c41190a5e66636374785f34190a6f6a5f5f636f6e645f313038190a7b6b5f5f6c68735f305f323336190a7d6463434c41190a9c6b5f5f6c68735f305f323334190a9e6a5f5f636f6e645f313039190aaa6b5f5f6c68735f305f323335190aaf645f5f3734190ab6645f5f3733190ac06a6e6565646564526f6c65190ac26d6d7943757272656e74526f6c65190ac8695f5f636f6e645f3635190ad46b5f5f6c68735f305f323330190ad666736565645f38190ad869707572706f73655f38190aec646d6b546e190aee6a5f5f636f6e645f313036190afa6b5f5f6c68735f305f323331190b4e6a5f5f636f6e645f313037190b5a6b5f5f6c68735f305f323333190b5f6b5f5f6c68735f305f323332190b61696467744c696e6b5f33190b96645f5f3732190bb06b5f5f6c68735f305f313738190bbd6d63686172746572446174615f34190bca716f6c6450656e64696e674368616e676573190bcc716e65787443686172746572446174615f32190bce6e6e6578744368616e67654c697374190bd0696e65774368616e6765190bd96b5f5f6c68735f305f313739190bdb6b5f5f6c68735f305f305f32190bdd66616374696f6e190bdf66726f6c655f32190be1684f6467744c696e6b190be36e6e6577446774526f6c654e616d65190be96a5f5f636f6e645f313034190bf56b5f5f6c68735f305f323238190bfe6a5f5f636f6e645f313035190c0a6b5f5f6c68735f305f323239190c1a645f5f3731190c21645f5f3730190c456a5f5f636f6e645f313033190c516b5f5f6c68735f305f323237190c606b5f5f6c68735f305f323236190c6266736565645f37190c6469707572706f73655f37190c666a69645072656669785f39190c676b63616c6c6261636b5f3134190c796b5f5f6c68735f305f323235190c7b66736565645f36190c7d69707572706f73655f36190c7f6a69645072656669785f38190c806b63616c6c6261636b5f3133190c9366736565645f35190c9469707572706f73655f35190c957570656e64696e67416374696f6e4964507265666978190c97781c706f737369626c654d696e74446774566572696669636174696f6e73190c99781a6f74686572506f737369626c65566572696669636174696f6e73190cc2695f5f636f6e645f3932190cce6b5f5f6c68735f305f323234190ce56b5f5f6c68735f305f313938190cf26f69734e6f74414475706c6963617465190d01766578697374696e67526f6c65456e7472794d61796265190d03781c706f737369626c655265706c6163656d656e744973436f7272656374190d12695f5f636f6e645f3935190d1e6b5f5f6c68735f305f323232190d2f6a5f5f636f6e645f313032190d3b6b5f5f6c68735f305f323233190d44645f5f3639190d546b5f5f6c68735f305f323033190d566b7265706c61636573446774190d726a5f5f636f6e645f313031190d7e6b5f5f6c68735f305f323231190d8d6b5f5f6c68735f305f323230190d9c6b5f5f6c68735f305f323139190da1645f5f3638190db3716578697374696e674467744c696e6b5f31190dc06d6578697374696e674467546b6e190ddb6a5f5f636f6e645f313030190de76b5f5f6c68735f305f323138190df46b5f5f6c68735f305f323137190e016b5f5f6c68735f305f323136190e0e6b5f5f6c68735f305f323135190e11645f5f3637190e1c695f5f636f6e645f3939190e286b5f5f6c68735f305f323134190e3f6b5f5f6c68735f305f323133190e566b5f5f6c68735f305f323132190e766b5f5f6c68735f305f323131190e856b5f5f6c68735f305f323130190e946b5f5f6c68735f305f323039190ea36b5f5f6c68735f305f323038190ea86b5f5f6c68735f305f323037190eaf695f5f636f6e645f3937190ebb6b5f5f6c68735f305f323036190ec46b5f5f6c68735f305f323034190ec66b5f5f6c68735f305f305f34190ec86b656e747279547970655f32190eca695f5f636f6e645f3938190ed66b5f5f6c68735f305f323035190ed86f6578697374696e674467744c696e6b190ede645f5f3636190ef86b5f5f6c68735f305f323031190f09695f5f636f6e645f3936190f156b5f5f6c68735f305f323032190f1e645f5f3635190f346a70644368616e67655f32190f36695f5f636f6e645f3933190f426b5f5f6c68735f305f313939190f446b5f5f6c68735f305f305f33190f466b70656e64696e67526f6c65190f48695f5f636f6e645f3934190f546b5f5f6c68735f305f323030190f566f6368616e67696e674467744e616d65190f60645f5f3634190f6d645f5f3633190f74645f5f3632190f7b695f5f636f6e645f3835190f876b5f5f6c68735f305f313937190f946b5f5f6c68735f305f313831190fa2695f5f636f6e645f3836190fae6b5f5f6c68735f305f313839190fb4695f5f636f6e645f3931190fc06b5f5f6c68735f305f313936190fcf6b5f5f6c68735f305f313935190fde6b5f5f6c68735f305f313934190fed6b5f5f6c68735f305f313933190ffc6b5f5f6c68735f305f31393219100d6b5f5f6c68735f305f31393119101e6b5f5f6c68735f305f313930191023645f5f3631191044645f5f35381910636d6d6b546f6b656e4e616d655f32191065696467546b6e4e616d651910676b6d696e7465644467546b6e191074696467744c696e6b5f321910937664656c656761746554616b65734f776e657273686970191095781d706f737369626c6545787472615265706c6163656d656e74436865636b1910a4695f5f636f6e645f38381910b06b5f5f6c68735f305f3138341910c8695f5f636f6e645f38391910d46b5f5f6c68735f305f3138361910d6636464651910d86b5f5f6c68735f305f3138371910da6b656e747279547970655f311910dc695f5f636f6e645f39301910e86b5f5f6c68735f305f3138381910ea6a69645072656669785f37191119645f5f363019112f6b5f5f6c68735f305f313835191141645f5f353919115c695f5f636f6e645f38371911686b5f5f6c68735f305f31383319116d6b5f5f6c68735f305f31383219116f62646c1911b7645f5f35371911be695f5f636f6e645f38341911ca6b5f5f6c68735f305f3138301911cc676467744e616d651911d2645f5f353619120d6b5f5f6c68735f305f3137371912356b5f5f6c68735f305f31353419124d7270656e64696e674368616e6765734c69737419124f7070726576696f75734d616e6966657374191251716e65787443686172746572446174615f311912536c6e6578744d616e69666573741912726d7370656e64446774436865636b1912746c6d696e74446774436865636b1912d2646d696e741912d46e6d696e7454686973506f6c6963791912d6636c656e191305716f62736572766564546f6b656e4275726e1913076d72656d61696e696e674d696e7419133a6b666f6c64696e674275726e19133b6a70634368616e67655f311913486a70644368616e67655f3119134a695f5f636f6e645f37391913566b5f5f6c68735f305f3136391913586a747970654e616d655f34191365695f5f636f6e645f38301913716b5f5f6c68735f305f313736191374645f5f3534191381695f5f636f6e645f383119138d6b5f5f6c68735f305f3137351913966b5f5f6c68735f305f3137301913986b5f5f6c68735f305f305f3119139a694d455f747970655f3119139c64746e5f3519139e666d70685f32391913a0695f5f636f6e645f38321913ac6b5f5f6c68735f305f3137341913b6645f5f35351913c36b5f5f6c68735f305f3137311913c56a726566436f756e745f311913c767746e5374725f321913c9695f5f636f6e645f38331913d56b5f5f6c68735f305f3137331913de6b5f5f6c68735f305f3137321913e06c6275726e696e67436f756e74191457645f5f3533191460695f5f636f6e645f373819146c6b5f5f6c68735f305f31363819146e6b6467744368616e67655f311914746b5f5f6c68735f305f31363719147c695f5f636f6e645f37371914886b5f5f6c68735f305f31363619148a666d696e7465641914906b5f5f6c68735f305f3136351914e077707265764d616e696665737452656d61696e6465725f311914e1686e657874434d45731914e26870634368616e67651914e46870644368616e67651914e66f70656e64696e67547970654e616d651914ec695f5f636f6e645f37331914f86b5f5f6c68735f305f313633191505695f5f636f6e645f37361915116b5f5f6c68735f305f31363419151a645f5f3532191523645f5f343919154c67434d455f6b657919154d675f5f6c68735f3119154f674d455f7479706519155c6b5f5f6c68735f305f31353919155e6d4d455f706f6c6963794c696e6b1915606b4d455f696450726566697819156268726566436f756e74191585674d455f6e616d651915926b70656e64696e674c696e6b1915946b70656e64696e674e616d651915ae6c6e65787449645072656669781915c4695f5f636f6e645f37341915d06b5f5f6c68735f305f3136311915d26a69645072656669785f361915e3695f5f636f6e645f37351915ef6b5f5f6c68735f305f3136321915f8645f5f35311916116b5f5f6c68735f305f3136301916136a69645072656669785f35191619645f5f3530191649695f5f636f6e645f37321916556b5f5f6c68735f305f3135381916566b63616c6c6261636b5f313219165f645f5f34381916606b63616c6c6261636b5f3131191671695f5f636f6e645f373119167d6b5f5f6c68735f305f31353719167f6a747970654e616d655f3319168c645f5f3437191695695f5f636f6e645f37301916a16b5f5f6c68735f305f3135361916a3696467744368616e67651916a96b5f5f6c68735f305f3135351916b175707265764d616e696665737452656d61696e6465721916b2756e6578744d616e696665737452656d61696e6465721916da6b5f5f6c68735f305f3134341916dc706d616e696665737441637469766974791916ed695f5f636f6e645f36361916f96b5f5f6c68735f305f31353319172b6b5f5f6c68735f305f31353219174e6b5f5f6c68735f305f313436191750666b65795f33311917526b746f6b656e4e616d655f351917546d63686172746572446174615f331917566f6e65787443686172746572446174611917636b5f5f6c68735f305f313437191774695f5f636f6e645f36371917806b5f5f6c68735f305f3135311917896b5f5f6c68735f305f31343819178b695f5f6c68735f305f3019178d69656e7472795479706519178f64746e5f34191791666d70685f32381917ba695f5f636f6e645f36391917c66b5f5f6c68735f305f3135301917cb645f5f34361917d0695f5f636f6e645f36381917dc6b5f5f6c68735f305f3134391917e1645f5f343519184c6b5f5f6c68735f305f31343519189b645f5f34341918ae6b5f5f6c68735f305f3134331918be6b5f5f6c68735f305f3134321918e5695f5f636f6e645f36341918f16b5f5f6c68735f305f3134311919006b5f5f6c68735f305f3134301919306b5f5f6c68735f305f3133391919606b5f5f6c68735f305f31333819199c645f5f34331919c26b5f5f6c68735f305f3133361919c466736565645f341919c6716461746154797065507572706f73655f311919d866636374785f33191a0173706f6c69637944656c6567617465496e707574191a0369746e466163746f7279191a0569707572706f73655f34191a076b6e65774461746149645f31191aa26b5f5f6c68735f305f313335191aa469644461746154797065191aa66772656349645f38191ab866636374785f32191b0a67696e7075744444191b296d63757253657474696e67734964191b636a72656349645374725f34191b657063757253657474696e67734964537472191bca6b5f5f6c68735f305f313333191bcc6772656349645f37191bde66636374785f31191c286b5f5f6c68735f305f313334191c6b6b5f5f6c68735f305f313332191c786b5f5f6c68735f305f313331191c7b6b5f5f6c68735f305f313330191c8d645f5f3431191c8f756b61626f6f6d496e76616c696452656465656d6572191c91695f5f636f6e645f3632191c9d6b5f5f6c68735f305f313239191cab6b5f5f6c68735f305f313238191caf645f5f3432191cbd6873656c665f323637191cc46873656c665f323636191ccb6873656c665f323635191ccc676f746865725f36191cd66873656c665f323633191cd7666b65795f3239191cd9666b65795f3330191cdb6b726563757273655f313031191ce16b726563757273655f313030191ce26873656c665f323634191cef68686561645f313133191cf1667461696c5f36191d1d6873656c665f323632191d266873656c665f323631191d2868686561645f313132191d296b63616c6c6261636b5f3130191d3f6873656c665f323630191d436873656c665f323539191d4465666e5f3333191d456461305f31191d466462305f31191d4c66707265765f35191d4d676974656d5f3138191d5064615f3139191d5164625f3136191d5f6a63616c6c6261636b5f39191d656873656c665f323538191d66666b65795f3238191d7064785f3132191d7e6873656c665f323537191d8468646174615f333135191d8a6873656c665f323535191d8b666b65795f3236191d8d666b65795f3237191d8f6a726563757273655f3939191d956a726563757273655f3938191d966873656c665f323536191da368686561645f313131191da5667461696c5f35191dd16873656c665f323534191dd265666e5f3332191dd3626130191dd966707265765f34191dda676974656d5f3137191de76873656c665f323532191dea6a726563757273655f3937191dfa6a726563757273655f3936191dfb6873656c665f323533191dfc656669727374191e1468686561645f313130191e16686b65795f64617461191e18666b65795f3234191e1a6a76616c75655f64617461191e1c6776616c75655f36191e286776616c69645f37191e29666b65795f3235191e3e6776616c69645f36191e3f6776616c75655f37191e6f6873656c665f323531191e7a6873656c665f323530191e7b65666e5f3331191e80676974656d5f3136191e8a66736f6d655f34191e946873656c665f323439191e9e6873656c665f323438191e9f676f746865725f35191ea96873656c665f323437191eaa65666e5f3330191eaf676974656d5f3135191ec86873656c665f323436191ec9695f7072696f724d6464191ecb6e6e65766572547269676765726564191ecd695f5f636f6e645f3630191ed96b5f5f6c68735f305f313237191ee76b5f5f6c68735f305f313236191eeb645f5f3430191ef36873656c665f323435191f0b78505f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f737570706f727465644361706f44656c6567617465507572706f736573191f0c6873656c665f323434191f0d697072696f724d646464191f0e6463637478191f10666d70685f3237191f16695f5f636f6e645f3535191f226b5f5f6c68735f305f313235191f2f6b5f5f6c68735f305f313231191f3163434c41191f33695f5f636f6e645f3538191f3f6b5f5f6c68735f305f313232191f4166736565645f33191f4369707572706f73655f33191f45695f5f636f6e645f3539191f516b5f5f6c68735f305f313234191f566b5f5f6c68735f305f313233191f8d63705f31191f9a645f5f3339191fb76b5f5f6c68735f305f313139191fb964615f3138191fca695f5f636f6e645f3537191fcc6b5f5f6c68735f305f313230191fce6772656349645f361920126b5f5f6c68735f305f31313619201464615f3137192025695f5f636f6e645f35361920316b5f5f6c68735f305f31313819204e6b5f5f6c68735f305f3131371920506b746f6b656e4e616d655f341920a06b5f5f6c68735f305f3131351920b46b5f5f6c68735f305f3131341920c86b5f5f6c68735f305f3131331920d2645f5f33381920f06873656c665f3234331920f165666e5f32391920f7676974656d5f31341920fe68646174615f3331341921046873656c665f32343219210a68646174615f33313219211767706169725f383819212968646174615f33313319213a6a6669656c64735f31383719214768686561645f3130391921536a6669656c64735f31383819218268646174615f3331311921886873656c665f32343119218e68646174615f33303919219b67706169725f38371921ad68646174615f3331301921be6a6669656c64735f3138341921cb68686561645f3130371921d76a6669656c64735f3138351921e468686561645f3130381921f06a6669656c64735f31383619222968646174615f33303819222f6873656c665f3234301922356873656c665f32333919223b68646174615f33303619224867706169725f383619225a68646174615f33303719226b6a6669656c64735f31383119227868686561645f3130351922846a6669656c64735f31383219229168686561645f31303619229d6a6669656c64735f3138331922d668646174615f3330351922dc6873656c665f3233381922e26873656c665f3233371922e868646174615f3330331922f567706169725f383519230768646174615f3330341923186a6669656c64735f31373819232568686561645f3130331923316a6669656c64735f31373919233e68686561645f31303419234a6a6669656c64735f31383019238368646174615f33303219238968646174615f33303019239667706169725f38341923a868646174615f3330311923b96a6669656c64735f3137361923c668686561645f3130321923d46a6669656c64735f31373719240368646174615f3239391924096873656c665f32333619241368646174615f32393719242067706169725f383319243268646174615f3239381924436a6669656c64735f31373419245068686561645f3130311924606a6669656c64735f31373519248f68646174615f3239361924956873656c665f32333519249d68646174615f3239341924aa67706169725f38321924bc68646174615f3239351924cd6a6669656c64735f3137321924da68686561645f3130301924e86a6669656c64735f31373319251768646174615f32393319251d6873656c665f32333419252968646174615f32393119253667706169725f383119254868646174615f3239321925596a6669656c64735f31373019256667686561645f39391925786a6669656c64735f3137311925a768646174615f3239301925ad6873656c665f3233331925c168646174615f3238381925ce67706169725f38301925e068646174615f3238391925f16a6669656c64735f3136381925fe67686561645f39381926186a6669656c64735f31363919264768646174615f32383719264d785b5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119264e785f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119264f78565f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3119265078555f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3119265178555f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3119265278595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119265378595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119265478595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192655785e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3119265668646174615f3238361926586969676e6f72655f323019267e78595f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f6461746119267f785d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f6461746119268078545f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f6461746119268178535f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f6461746119268278535f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f6461746119268378575f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119268478575f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119268578575f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461192686785c5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f6461746119268768646174615f3238351926f668646174615f32383319270367706169725f373919271568646174615f3238341927266a6669656c64735f31363619273367686561645f393719273f6a6669656c64735f31363719276e78505f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f5f706c616365686f6c6465723142415f5f69735f76616c69645f6461746119276f68646174615f32383219277d6873656c665f32333219278368646174615f32383019279067706169725f37381927a268646174615f3238311927b36a6669656c64735f3136341927c067686561645f39361927cc6a6669656c64735f3136351927fb785a5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f53616d706c655370656e64696e6741637469766974795f5f69735f76616c69645f646174615f311927fc68646174615f3237391927fe6969676e6f72655f313919281478585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f53616d706c655370656e64696e6741637469766974795f5f69735f76616c69645f6461746119281568646174615f3237381928236873656c665f32333119282968646174615f32373619283667706169725f373719284868646174615f3237371928596a6669656c64735f31363219286667686561645f39351928726a6669656c64735f3136331928a168646174615f3237341928ae67706169725f37361928c068646174615f3237351928d16a6669656c64735f3136311928f668646174615f3237331928fc78585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f53616d706c654d696e74696e6741637469766974795f5f69735f76616c69645f646174615f311928fd78585f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f4d696e74696e6746756e6769626c65546f6b656e735f5f69735f76616c69645f646174615f311928fe68646174615f3237321929006969676e6f72655f313819291878565f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f53616d706c654d696e74696e6741637469766974795f5f69735f76616c69645f6461746119291978565f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f4d696e74696e6746756e6769626c65546f6b656e735f5f69735f76616c69645f6461746119291a68646174615f32373119293468646174615f32363919294167706169725f373519295368646174615f3237301929646a6669656c64735f31353719297167686561645f393219297d6a6669656c64735f31353819298a67686561645f39331929966a6669656c64735f3135391929a367686561645f39341929af6a6669656c64735f3136301929f268646174615f3236381929f86873656c665f3233301929fe68646174615f323636192a0b67706169725f3734192a1d68646174615f323637192a2e6a6669656c64735f313535192a3b67686561645f3931192a476a6669656c64735f313536192a7668646174615f323635192a7d68646174615f323633192a8a67706169725f3733192a9c68646174615f323634192aad6a6669656c64735f313531192aba67686561645f3838192ac66a6669656c64735f313532192ad367686561645f3839192adf6a6669656c64735f313533192aec67686561645f3930192af86a6669656c64735f313534192b3b784e5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f31192b3c784d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f31192b3d784f5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f31192b3e68646174615f323632192b406969676e6f72655f3137192b5a784c5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f64617461192b5b784b5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f64617461192b5c784d5f5f6d6f64756c655f5f4d794d696e745370656e6444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f64617461192b5d68646174615f323631192b83666d70685f3236192b8466736565645f32192b856473656564192b86755f5f7573656f70745f5f6d6b546f6b656e4e616d65192b876b6d6b546f6b656e4e616d65192b88781a5f5f7573656f70745f5f626f6f74737472617043686172746572192b8970626f6f74737472617043686172746572192b8a781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565192b8b706f746865724d696e74656456616c7565192b8c78235f5f7573656f70745f5f6e656564734d696e7444656c6567617465417070726f76616c192b8d78196e656564734d696e7444656c6567617465417070726f76616c192b8e782a5f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b5f31192b8f782065787472614d696e7444656c656761746552656465656d6572436865636b5f32192b9078205f5f7573656f70745f5f636865636b4d696e7444677441637469766974795f31192b9176636865636b4d696e7444677441637469766974795f32192b936d6d6b546f6b656e4e616d655f31192b9572626f6f747374726170436861727465725f31192b97726f746865724d696e74656456616c75655f31192b99781b6e656564734d696e7444656c6567617465417070726f76616c5f31192b9b782065787472614d696e7444656c656761746552656465656d6572436865636b5f33192b9d76636865636b4d696e7444677441637469766974795f33192b9f6f6973426f6f74737472617070696e67192ba17064656c6567617465417070726f76616c192ba36b76616c75654d696e746564192ba56d657870656374656456616c7565192bb9666d7068537472192bbb6676616c537472192be874657870656374656456616c756573536f72746564192bf164746e5f33192bf264695f3132192bf467746e5374725f31192c0c7461637475616c54686973506f6c6963794d696e74192c0e781a61637475616c54686973506f6c6963794d696e74536f72746564192c2364746e5f32192c2464695f3131192c2665746e537472192c5364625f3135192c54645f5f3337192c6c7074686973506f6c6963794d696e744f4b192c92736f74686572506f6c69636965734d696e744f6b192cd17572656d61696e696e6745787065637465644d696e74192d1e686f746865724d7068192d1f78186578706563746564546f6b656e7354686973506f6c696379192d21706d696e74656454686973506f6c696379192d266b746f6b656e4e616d655f33192d276d6578706563746564436f756e74192d31695f5f636f6e645f3534192d3d6b5f5f6c68735f305f313132192d406b5f5f6c68735f305f313131192d426b61637475616c436f756e74192d5368746e537472696e67192db469707572706f73655f32192dd66b5f5f6c68735f305f313130192dd8676d696e74446774192e4a6873656c665f323239192e4b65666e5f3238192e51676974656d5f3133192e5c6873656c665f323238192e5e6a726563757273655f3935192e646a726563757273655f3934192e65666c73745f3234192e846873656c665f323237192e8566636f6d705f34192e8a64615f3136192e8b64625f3134192ead6873656c665f323236192eae676f746865725f34192eb96873656c665f323234192eba666b65795f3232192ebc666b65795f3233192ebe6a726563757273655f3933192ec46a726563757273655f3932192ec56873656c665f323235192ed267686561645f3837192ed4667461696c5f34192f006873656c665f323233192f01666b65795f3231192f0b64785f3131192f196873656c665f323232192f1f68646174615f323630192f256873656c665f323231192f2665666e5f3237192f286a726563757273655f3931192f2e6a726563757273655f3930192f2f666d61705f3332192f3c67686561645f3836192f5e6873656c665f323230192f5f65666e5f3236192f6467706169725f3732192f766873656c665f323139192f7765666e5f3235192f796a726563757273655f3839192f7f6a726563757273655f3838192f80666d61705f3331192f8d67686561645f3835192faf626b31192fb0635f7631192fb1626b32192fb2635f7632192fb866736565645f31192fba687365656454784964192fbc6773656564496478192fbe686964784279746573192fc06772617754784964192fc26774786f496e666f192fc4686d696e6948617368192fc6636d6873192fc7617019301a6c64656c65676174654c696e6b19301b666d70685f323519301c78285f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b19301d781e65787472614d696e7444656c656761746552656465656d6572436865636b19301e781e5f5f7573656f70745f5f636865636b4d696e74446774416374697669747919301f74636865636b4d696e744467744163746976697479193021782065787472614d696e7444656c656761746552656465656d6572436865636b5f3119302376636865636b4d696e7444677441637469766974795f3119302567617574687a416319303f6a74617267657449645f31193048727370656e6473417574686f7269747955757419304a6365727219304c78216d61796265436865636b65644d696e7444656c6567617465417574686f7269747919304e7464656c6567617465446964417574686f72697a65193058695f5f636f6e645f35311930646b5f5f6c68735f305f3130391930696b5f5f6c68735f305f31303419306b64785f313019306d6a61637469766974795f3219306f695f5f636f6e645f353219307b6b5f5f6c68735f305f31303519307d63444c411930a2695f5f636f6e645f35331930ae6b5f5f6c68735f305f3130381930c26b5f5f6c68735f305f3130371930c76b5f5f6c68735f305f3130361930d1645f5f333619310869707572706f73655f3119310a695f5f636f6e645f35301931166473705f3119311f645f5f3335193124695f5f636f6e645f34391931306b5f5f6c68735f305f31303319313263785f3919313a6b5f5f6c68735f305f31303219314b64695f31301931726873656c665f323138193173666b65795f323019317d63785f3819318b6873656c665f32313719319168646174615f323539193197645f5f33341931b86274781931b968736565645574786f1931d767696e7075745f34193209666d70685f32341932106873656c665f32313619322c6873656c665f32313519322d6a61637469766974795f31193242695f5f636f6e645f343819324e6b5f5f6c68735f305f31303119325d6b5f5f6c68735f305f31303019326c6a5f5f6c68735f305f39391932856a5f5f6c68735f305f393819329e6a5f5f6c68735f305f39371932b76a5f5f6c68735f305f39361932c66a5f5f6c68735f305f39351932dd6873656c665f3231341932e06d63686172746572446174615f321932e2666d70685f32331932e46a5f5f6c68735f305f39311932e66f7370656e64496e76617269616e74731932e8736f746865724e616d656444656c6567617465731932ea6e6d696e74496e76617269616e74731932ec6b676f7644656c65676174651932ee686d616e69666573741932f068696e707574735f321932fd78197370656e6444656c6567617465497356616c69646174696e67193315781a676f7644656c65676174654d6179626556616c69646174696e6719331771636865636b4f6e65496e76617269616e74193324781c7370656e64496e76617269616e747341726556616c69646174696e67193331781b6d696e74496e76617269616e747341726556616c69646174696e6719333e781b646744617461506f6c696369657341726556616c69646174696e6719334b781b6e616d656444656c65676174657341726556616c69646174696e6719337b626f6b19337c666b65795f313919337d626f6b1933ab666b65795f31381933ac67656e7472795f311933ae695f5f636f6e645f34371933ba6a5f5f6c68735f305f39341933bc6c706f6c6963794c696e6b5f311933d1645f5f33331933ec666f6e65446774193409695f5f636f6e645f34361934156a5f5f6c68735f305f39331934186a5f5f6c68735f305f393219345668646174615f32353819345c6873656c665f32313319345d65666e5f3234193462676974656d5f31321934686873656c665f32313219346965666e5f323219346b65666e5f323319347167706169725f37311934836873656c665f32313119348a6873656c665f32313019348b65666e5f323119348c637a5f32193492637a5f3319349367706169725f37301934a86873656c665f3230391934b669636861727465725f331934b8695f5f636f6e645f34351934c46a5f5f6c68735f305f39301934d16a5f5f6c68735f305f38391934d66a5f5f6c68735f305f38371934d86a5f5f6c68735f305f38381934da666d70685f32321934dc667574786f5f351934de67646174756d5f361934ff6873656c665f32303819350d69636861727465725f3219350f695f5f636f6e645f343319351b6a5f5f6c68735f305f38361935286a5f5f6c68735f305f383519352d6a5f5f6c68735f305f383119352f6a5f5f6c68735f305f3832193531666d70685f32311935336b6368617274657241635f341935356c686173436861727465725f3319353e6d636861727465725574786f5f3319354067646174756d5f35193556695f5f636f6e645f34341935626a5f5f6c68735f305f38341935646463685f3319356a6a5f5f6c68735f305f3833193576667478696e5f3619359378325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7769746843686172746572496e7075741935946873656c665f3230371935a269636861727465725f311935a4695f5f636f6e645f34311935b06a5f5f6c68735f305f38301935bd6a5f5f6c68735f305f37391935c06a5f5f6c68735f305f37351935c26a5f5f6c68735f305f37361935c4666d70685f32301935c66b6368617274657241635f331935c86c686173436861727465725f321935ca695f5f636f6e645f34321935d66a5f5f6c68735f305f37381935e36a5f5f6c68735f305f37371935e56d636861727465725574786f5f321935ee67646174756d5f3419360e667478696e5f3519362b6873656c665f32303619362c6772656349645f3519362e6a72656349645374725f331936306461635f321936326a6361706f416464725f32193634695f5f636f6e645f34301936406a5f5f6c68735f305f37341936496a5f5f6c68735f305f373319364b6774786f75745f311936626574786f757419369768646174615f32353719369d78335f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f64656c65676174656454784f757470757419369e6873656c665f32303519369f696e65774461746149641936a0696e65774461746149641936ad666467446174611936af676467446174756d1936bc695f5f636f6e645f33391936c86a5f5f6c68735f305f37321936ca68646174615f3235361936cc6a72656349645374725f321936e76b61637475616c4964537472193733645f5f333219374b6873656c665f32303419374c725f5f7573656f70745f5f747970654e616d6519374d6a747970654e616d655f3119374e6c5f5f7573656f70745f5f696419374f6469645f3119375178214361706f4374783a3a6d6b44656c656761746564446174615072656469636174651937536469645f321937556a6361706f416464725f31193774667478696e5f3419378468646174615f323535193786695f5f636f6e645f33381937926a5f5f6c68735f305f373119379463785f371937c8645f5f33311937f7783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174655f311937f86873656c665f3230331937f9715f5f7573656f70745f5f72656349645f311937fa6772656349645f331937fb765f5f7573656f70745f5f726563496442797465735f311937fc6c726563496442797465735f321937fe781d4361706f4374783a3a64656c656761746564446174615478496e7075741938006c726563496442797465735f331938026768617344445f31193804683c61737369676e3e193811695f5f636f6e645f333719381d6a5f5f6c68735f305f37301938226a5f5f6c68735f305f3639193824667478696e5f33193860783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174651938616873656c665f3230321938626473656c661938636772656349645f31193864745f5f7573656f70745f5f726563496442797465731938656a726563496442797465731938676772656349645f321938696c726563496442797465735f3119386b65686173444419386d68726563496453747219387a695f5f636f6e645f33361938866a5f5f6c68735f305f363819388b6a5f5f6c68735f305f363719388d667478696e5f321938c96873656c665f3230311938cc64616464721938d46873656c665f3230301938d5696467744c696e6b5f311938d666726f6c655f311938d7745f5f7573656f70745f5f72657175697265645f371938d86b72657175697265645f31341938d9725f5f7573656f70745f5f69645072656669781938da6a69645072656669785f331938dc6b72657175697265645f31351938de6a69645072656669785f341939136873656c665f313939193916695f5f636f6e645f33351939226a5f5f6c68735f305f3636193924667574786f5f341939346a5f5f6c68735f305f3635193936667574786f5f3319393c645f5f333019394478345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7265736f6c7665436861727465725574786f19394578295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f616464726573731939466873656c665f3139381939496b6368617274657241635f3219394b686361706f4164647219394d683c61737369676e3e1939596a5f5f6c68735f305f363419395b6d63686172746572446174615f311939726374786f19398c645f5f32391939a26873656c665f3139371939a5695f5f636f6e645f33331939b16a5f5f6c68735f305f36331939b367646174756d5f331939c36a5f5f6c68735f305f36321939c567646174756d5f321939cb645f5f32381939d378325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f361939d46873656c665f3139361939d5745f5f7573656f70745f5f72657175697265645f361939d66b72657175697265645f31321939d86b72657175697265645f31331939da67696e7075745f331939dc6a61635370656e644467741939de683c61737369676e3e193a1978325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f35193a1a6873656c665f313935193a1b745f5f7573656f70745f5f72657175697265645f35193a1c6b72657175697265645f3130193a1e6b72657175697265645f3131193a2067696e7075745f32193a226961634d696e74446774193a24683c61737369676e3e193a5f78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f34193a6078375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e707574193a616873656c665f313934193a6268747970654e616d65193a63745f5f7573656f70745f5f72657175697265645f34193a646a72657175697265645f38193a666a72657175697265645f39193a68695f5f636f6e645f3331193a746a5f5f6c68735f305f3631193a7d6a5f5f6c68735f305f3539193a7f65656e747279193a82695f5f636f6e645f3332193a8e6a5f5f6c68735f305f3630193a906a706f6c6963794c696e6b193a926a69645072656669785f32193a936a63616c6c6261636b5f38193aa0645f5f3237193aac676467744c696e6b193aad6a69645072656669785f31193ae966736f6d655f33193af36873656c665f313933193af4666b65795f3137193afe63785f36193b0c6873656c665f313932193b1268646174615f323534193b1878325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f33193b196873656c665f313931193b436873656c665f313930193b4978325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f32193b4a6873656c665f313839193b4b745f5f7573656f70745f5f72657175697265645f33193b4c6a72657175697265645f36193b4e6a72657175697265645f37193b6578325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f31193b666873656c665f313838193b67666b65795f3136193b68745f5f7573656f70745f5f72657175697265645f32193b696a72657175697265645f34193b6b6a72657175697265645f35193b6d626f65193b6f626f65193b7b6a5f5f6c68735f305f3538193b8e6a5f5f6c68735f305f3537193b9063655f31193bad66736f6d655f32193bb968646174615f323533193bbf6873656c665f313837193bc568646174615f323532193bcb78305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6765744368617274657244617461193bcc6873656c665f313836193bcd666b65795f3135193bda6b6368617274657244617461193bea6873656c665f313835193beb666b65795f3134193bf563785f35193c036873656c665f313834193c066165193c08695f5f636f6e645f3238193c146a5f5f6c68735f305f3536193c236a5f5f6c68735f305f3535193c286a5f5f6c68735f305f3438193c2a667574786f5f32193c2c686163746976697479193c2e6d77726f6e674163746976697479193c30695f5f636f6e645f3239193c3c6a5f5f6c68735f305f3534193c4a6a5f5f6c68735f305f3533193c586a5f5f6c68735f305f3532193c656a5f5f6c68735f305f3531193c726a5f5f6c68735f305f3530193c756a5f5f6c68735f305f3439193ca3666d70685f3139193ca46763686172746572193cb66873656c665f313833193cc26873656c665f313832193cca6873656c665f313831193ccd6a5f5f6c68735f305f3437193cd06873656c665f313830193cd36a5f5f6c68735f305f3431193cd5666c696e6b5f31193cd76a3c64657374727563743e193cd96a3c64657374727563743e193cdb6a3c64657374727563743e193cdd683c61737369676e3e193cdf6f76616c696461746f72486173685f31193ce16b74617267657456616c7565193ce37172657475726e6564556e6368616e676564193d04695f5f636f6e645f3236193d106a5f5f6c68735f305f3434193d126476685f34193d2d695f5f636f6e645f3237193d396a5f5f6c68735f305f3436193d476a5f5f6c68735f305f3435193d5b636f5f31193d726a5f5f6c68735f305f3433193da1783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765645f31193da26873656c665f313739193da3657265634964193da9695f5f636f6e645f3235193db56a5f5f6c68735f305f3430193dba645f5f3236193dce657374724964193df8695f5f636f6e645f3231193e046a5f5f6c68735f305f3338193e066473615f31193e0c695f5f636f6e645f3234193e186a5f5f6c68735f305f3339193e1a68696e6465785f3135193e1c6a6669656c64735f313530193e2b6c666f756e6452656349645f31193e6c645f5f3235193e846a5f5f6c68735f305f3332193e866c616374697669746965735f31193ea270616374734f6e546869735265636f7264193ef764615f3135193ef9695f5f636f6e645f3232193f056a5f5f6c68735f305f3337193f1d6a5f5f6c68735f305f3336193f356a5f5f6c68735f305f3335193f4d6a5f5f6c68735f305f3333193f4f627361193f51695f5f636f6e645f3233193f5d6a5f5f6c68735f305f3334193f5f68696e6465785f3134193f616a6669656c64735f313439193f706a666f756e645265634964193fb2645f5f3234193fc5645f5f3233193fe1645f5f3232193ff978395f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e676564193ffa6873656c665f313738193ffb6473656564194008695f5f636f6e645f31371940146a5f5f6c68735f305f3330194016646d615f3119401c695f5f636f6e645f32301940286a5f5f6c68735f305f333119402a6a6669656c64735f31343819403e645f5f32311940566a5f5f6c68735f305f32371940586a6163746976697469657319406971666f756e645769746854686973536565641940ae64615f31341940b0695f5f636f6e645f31381940bc6a5f5f6c68735f305f32381940be626d611940c0695f5f636f6e645f31391940cc6a5f5f6c68735f305f32391940ce68696e6465785f31331940d06a6669656c64735f3134371940f4645f5f32301940fe645f5f313919411a645f5f313819412e6873656c665f31373719412f65666e5f3230194134676974656d5f313119413b6873656c665f31373519413c68696e6465785f313219413e6a726563757273655f38371941466a726563757273655f38361941476873656c665f31373619414863695f391941756873656c665f313734194176656d73675f341941c3782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6572726f721941c46873656c665f3137331941c56b617373657274696f6e4f6b1941c6656d73675f331941f5783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f67656e6572696344656c656761746541637469766974791941f66873656c665f3137321942106873656c665f31373119421363695f3819421569696e7075744461746119421b695f5f636f6e645f31351942276a5f5f6c68735f305f323519422968696e6465785f313119422b6a6669656c64735f31343619423b695f5f636f6e645f31361942476a5f5f6c68735f305f323619424966696e64657832194258645f5f3137194265645f5f31361942736873656c665f31373019427a646c696e6b19427b64726f6c6519427c68696450726566697819427d65696e70757419427e666d70685f31371942a76873656c665f3136391942ad6873656c665f3136381942b368646174615f3235311942b5645f5f31351942c96873656c665f3136371942cf68646174615f3235301942d1645f5f31341942e56873656c665f3136361942fb6873656c665f31363519430268646174615f32343919430f67706169725f363919431168696e6465785f31301943136a6669656c64735f31343519436c68646174615f32343819437967706169725f363819437b67696e6465785f3919437d6a6669656c64735f3134341943d6666d70685f31361943d7735f5f7573656f70745f5f726566496e707574731943d869726566496e707574731943da6b726566496e707574735f311943dc6b6368617274657241635f311943de6c686173436861727465725f311943e06d636861727465725574786f5f311943e2636374641943f0695f5f636f6e645f31331943fc6a5f5f6c68735f305f32341943fe6463685f321944046a5f5f6c68735f305f3231194406695f5f636f6e645f31341944126a5f5f6c68735f305f32331944146463685f3119441a6a5f5f6c68735f305f323219442c667478696e5f3119444d666d70685f313519444f696368617274657241631944516a6861734368617274657219445a6b636861727465725574786f19445d695f5f636f6e645f31321944696a5f5f6c68735f305f323019446b6263681944716a5f5f6c68735f305f313919447d647478696e19449168646174615f32343619449e67706169725f36371944b068646174615f3234371944c16a6669656c64735f3134331944e668646174615f3234351944ec68646174615f3234331944f967706169725f363619450b68646174615f32343419451c6a6669656c64735f31343219454168646174615f32343219454768646174615f32343019455467706169725f363519456668646174615f3234311945776a6669656c64735f31343119459c68646174615f3233391945a268646174615f3233371945af67706169725f36341945c168646174615f3233381945d26a6669656c64735f3134301945f768646174615f32333619460568646174615f32333419461267706169725f363319462468646174615f3233351946356a6669656c64735f31333919465a68646174615f3233331946606873656c665f31363419467468646174615f32333119468167706169725f363219469368646174615f3233321946a46a6669656c64735f3133371946b167686561645f38341946cb6a6669656c64735f3133381946fa68646174615f323330194700784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3119470178465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3119470278495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f31194703784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f31194704784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3119470578475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3119470668646174615f3232391947086969676e6f72655f3136194728784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f6461746119472978445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f6461746119472a78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f6461746119472b784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f6461746119472c784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f6461746119472d78455f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f6461746119472e68646174615f32323819477867646174756d5f31194779667574786f5f3119478f6873656c665f3136331947956873656c665f31363219479b68646174615f3232361947a867706169725f36311947ba68646174615f3232371947cb6a6669656c64735f3133341947d867686561645f38321947e46a6669656c64735f3133351947f167686561645f38331947fd6a6669656c64735f31333619483668646174615f32323519483c65646174756d19483d647574786f1948536873656c665f3136311948596873656c665f31363019485f68646174615f32323319486c67706169725f363019487e68646174615f32323419488f6a6669656c64735f31333119489c67686561645f38301948a86a6669656c64735f3133321948b567686561645f38311948c16a6669656c64735f3133331948fa68646174615f32323219490868646174615f32323019491567706169725f353919492768646174615f3232311949386a6669656c64735f31333019495d68646174615f32313919496378445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f3119496478495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f3119496578465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f3119496668646174615f3231381949686969676e6f72655f313519498278425f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f6461746119498378475f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f6461746119498478445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f6461746119498568646174615f3231371949ac68646174615f3231351949b967706169725f35381949cb68646174615f3231361949dc6a6669656c64735f3132361949e967686561645f37371949f56a6669656c64735f313237194a0267686561645f3738194a0e6a6669656c64735f313238194a1b67686561645f3739194a276a6669656c64735f313239194a6a68646174615f323134194a83666d61705f3239194a856a726563757273655f3835194a8b6a726563757273655f3834194a8c666d61705f3330194a9967686561645f3736194ac668646174615f323133194acc68646174615f323131194ad967706169725f3537194aeb68646174615f323132194afc6a6669656c64735f313235194b236873656c665f313539194b2968646174615f323130194b2b666c73745f3233194b2d645f5f3133194b446873656c665f313538194b4a68646174615f323039194b4c666d61705f3238194b4e645f5f3132194b656873656c665f313537194b6b6873656c665f313536194b716873656c665f313535194b776873656c665f313534194b7d68646174615f323038194b7f666d61705f3237194b81645f5f3131194b986873656c665f313533194b9e68646174615f323037194ba0666c73745f3232194ba2645f5f3130194bb96873656c665f313532194bc068646174615f323036194bc26969676e6f72655f3134194bd668646174615f323034194be367706169725f3536194bf568646174615f323035194c066a6669656c64735f313136194c1367686561645f3638194c1f6a6669656c64735f313137194c2c67686561645f3639194c386a6669656c64735f313138194c4567686561645f3730194c516a6669656c64735f313139194c5e67686561645f3731194c6a6a6669656c64735f313230194c7767686561645f3732194c836a6669656c64735f313231194c9067686561645f3733194c9c6a6669656c64735f313232194ca967686561645f3734194cb56a6669656c64735f313233194cc267686561645f3735194cce6a6669656c64735f313234194d4368646174615f323033194d5c666c73745f3230194d5e6a726563757273655f3833194d646a726563757273655f3832194d65666c73745f3231194d8c68646174615f323032194da5666d61705f3235194da76a726563757273655f3831194dad6a726563757273655f3830194dae666d61705f3236194dbb67686561645f3637194de868646174615f323031194e01666d61705f3233194e036a726563757273655f3739194e096a726563757273655f3738194e0a666d61705f3234194e1767686561645f3636194e4468646174615f323030194e5d666c73745f3138194e5f6a726563757273655f3737194e656a726563757273655f3736194e66666c73745f3139194e8978405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f31194e8a78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f31194e8b78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f31194e8c68646174615f313939194e8e6969676e6f72655f3133194ea8783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f64617461194ea978425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f64617461194eaa78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f64617461194eab68646174615f313938194ed168646174615f313937194ed76873656c665f313531194edf68646174615f313936194ee1635f5f39194ef56873656c665f313530194efd6873656c665f313439194f0f68646174615f313935194f116969676e6f72655f3132194f2568646174615f313934194f7c68646174615f313933194f8967706169725f3535194f8b67696e6465785f38194f8d6a6669656c64735f313135194fe668646174615f313931194ff367706169725f353419500568646174615f3139321950166a6669656c64735f31313419503b68646174615f31383919504867706169725f353319505a68646174615f31393019506b6a6669656c64735f31313319509068646174615f31383719509d67706169725f35321950af68646174615f3138381950c06a6669656c64735f3131301950cd67686561645f36341950e96a6669656c64735f3131311950f667686561645f36351951026a6669656c64735f31313219513b6873656c665f3134381951416873656c665f3134371951476873656c665f31343619514d68646174615f31383519515a67706169725f353119516c68646174615f31383619517d6a6669656c64735f31303619518a67686561645f36311951966a6669656c64735f3130371951a367686561645f36321951af6a6669656c64735f3130381951bc67686561645f36331951c86a6669656c64735f31303919520b68646174615f31383419521168646174615f31383219521e67706169725f353019523068646174615f3138331952416a6669656c64735f31303519526668646174615f31383119526c784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f3119526d78495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3119526e784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f3119526f784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f31195270784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f3119527168646174615f3138301952736969676e6f72655f313119529178485f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f6461746119529278475f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461195293784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f64617461195294784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f64617461195295784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f6461746119529668646174615f3137391952d46873656c665f3134351952d565666e5f31391952da676974656d5f31301952e06873656c665f3134341952eb6873656c665f3134331952f16873656c665f3134321952f768646174615f3137381952f96969676e6f72655f313019530f68646174615f3137371953206a6669656c64735f31303119532d67686561645f35381953396a6669656c64735f31303219534667686561645f35391953526a6669656c64735f31303319535f67686561645f363019536b6a6669656c64735f31303419539a68646174615f3137351953a767706169725f34391953b968646174615f3137361953ca696669656c64735f39381953d767686561645f35361953ed696669656c64735f39391953fa67686561645f35371954066a6669656c64735f31303019543f68646174615f313734195458666c73745f313619545a6a726563757273655f37351954606a726563757273655f3734195461666c73745f31371954946873656c665f31343119549a68646174615f3137321954a767706169725f34381954b968646174615f3137331954ca696669656c64735f39361954d767686561645f35351954e3696669656c64735f393719551268646174615f31373119551878565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f31195519785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3119551a68646174615f31373019551c6869676e6f72655f3919553478545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f6461746119553578595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f6461746119553668646174615f3136391955506873656c665f31343019555668646174615f313638195558635f5f3819556c6873656c665f3133391955826873656c665f31333819558e68646174615f3136371955906869676e6f72655f381955a668646174615f3136361955b7696669656c64735f39321955c467686561645f35321955d6696669656c64735f39331955e367686561645f35331955ff696669656c64735f393419560c67686561645f3534195618696669656c64735f393519564768646174615f31363519565467706169725f343719565667696e6465785f37195658696669656c64735f39311956b16873656c665f3133371956b2666d70685f31341956b3745f5f7573656f70745f5f72657175697265645f311956b46a72657175697265645f321956b5781b5f5f7573656f70745f5f637265617465644f7252657475726e65641956b671637265617465644f7252657475726e65641956b86a72657175697265645f331956ba73637265617465644f7252657475726e65645f311956bc695f5f6c68735f305f391956be637575741956c06d76616c696461746f72486173681956c26461635f311956c464634f72521956d96b68617344656c65676174651956ef695f5f636f6e645f31311956fb6a5f5f6c68735f305f31381957046a5f5f6c68735f305f31361957066a5f5f6c68735f305f313719573b685f5f636f6e645f391957476a5f5f6c68735f305f31351957496476685f3319576d6a5f5f6c68735f305f3132195776695f5f636f6e645f31301957826a5f5f6c68735f305f31341957856a5f5f6c68735f305f313319578e616f19579d685f5f636f6e645f381957a96a5f5f6c68735f305f31311957ac6a5f5f6c68735f305f31301957d66873656c665f3133361957d765666e5f31381957dd666974656d5f391957e468646174615f3136341957ea68646174615f3136331957f06873656c665f3133351957f168696e707574735f311957f2666d70685f31331957f3725f5f7573656f70745f5f72657175697265641957f46872657175697265641957f66a72657175697265645f311957f8677575744e616d651957fa685f5f636f6e645f36195806695f5f6c68735f305f3819581c695f5f6c68735f305f3619581e6476685f32195820716e6565647341646472576974684372656419582262616319582f685f5f636f6e645f3719583b69666f756e64476f6f64195845695f5f6c68735f305f3719586663695f371958a06873656c665f3133341958a66873656c665f3133331958a765666e5f31371958ad666974656d5f381958b468646174615f3136321958bc68646174615f3136311958c278475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617344656c6567617465496e7075741958c378455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617356616c69644f75747075741958c46873656c665f3133321958c566696e707574731958c6666d70685f31321958c76d696e70757452657175697265641958c9685f5f636f6e645f331958d5695f5f6c68735f305f351958d9695f5f6c68735f305f321958db727370656e6444656c6567617465496e7075741958dd747370656e6444656c6567617465497356616c69641958eb685f5f636f6e645f341958f7695f5f6c68735f305f331958f964615f31331958fb685f5f636f6e645f35195907695f5f6c68735f305f34195916635f5f37195926635f5f361959516873656c665f31333119595766736f6d655f3119596368646174615f3136301959696873656c665f31333019596a666d70685f31311959756873656c665f31323919597b68646174615f31353919597d635f5f351959916873656c665f31323819599868646174615f31353819599a6869676e6f72655f371959b168646174615f3135371959c2696669656c64735f38371959cf67686561645f34391959db696669656c64735f38381959e867686561645f35301959f4696669656c64735f3839195a0167686561645f3531195a0d696669656c64735f3930195a3c68646174615f313536195a4967706169725f3436195a4b67696e6465785f36195a4d696669656c64735f3836195aae68646174615f313535195abc68646174615f313534195ac26873656c665f313237195ac868646174615f313533195aca666c73745f3135195acc635f5f34195ae368646174615f313531195af067706169725f3435195b0268646174615f313532195b13696669656c64735f3834195b2067686561645f3438195b2c696669656c64735f3835195b5b68646174615f313530195b74666c73745f3133195b766a726563757273655f3733195b7c6a726563757273655f3732195b7d666c73745f3134195ba068646174615f313439195ba668646174615f313437195bb367706169725f3434195bc568646174615f313438195bd6696669656c64735f3831195be367686561645f3436195bef696669656c64735f3832195bfc67686561645f3437195c08696669656c64735f3833195c4168646174615f313436195c4768646174615f313434195c5467706169725f3433195c6668646174615f313435195c77696669656c64735f3738195c8467686561645f3434195c90696669656c64735f3739195c9d67686561645f3435195ca9696669656c64735f3830195ce268646174615f313433195ce868646174615f313431195cf567706169725f3432195d0768646174615f313432195d18696669656c64735f3735195d2567686561645f3432195d31696669656c64735f3736195d3e67686561645f3433195d4a696669656c64735f3737195d8368646174615f313430195d8968646174615f313338195d9667706169725f3431195da868646174615f313339195db9696669656c64735f3733195dc667686561645f3431195dd2696669656c64735f3734195e016873656c665f313236195e0768646174615f313336195e1467706169725f3430195e2668646174615f313337195e37696669656c64735f3731195e4467686561645f3430195e50696669656c64735f3732195e7f68646174615f313335195e856873656c665f313235195e8b68646174615f313333195e9867706169725f3339195eaa68646174615f313334195ebb696669656c64735f3639195ec867686561645f3339195ed4696669656c64735f3730195f0368646174615f313332195f096873656c665f313234195f1568646174615f313330195f2267706169725f3338195f3468646174615f313331195f45696669656c64735f3637195f5267686561645f3338195f64696669656c64735f3638195f9368646174615f313239195f9968646174615f313237195fa667706169725f3337195fb868646174615f313238195fc9696669656c64735f3635195fd667686561645f3337195ff0696669656c64735f363619601f78695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31196020786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119602178645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3119602278635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3119602378635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3119602478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119602578675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119602678675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31196027786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3119602868646174615f31323619602a6869676e6f72655f3619605078675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461196051786b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f6461746119605278625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f6461746119605378615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f6461746119605478615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f6461746119605578655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119605678655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119605778655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461196058786a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f6461746119605968646174615f3132351960c76873656c665f3132331960d768646174615f3132331960e467706169725f33361960f668646174615f313234196107696669656c64735f363319611467686561645f333619612a696669656c64735f363419615968646174615f31323219615f68646174615f31323019616c67706169725f333519617e68646174615f31323119618f696669656c64735f363019619c67686561645f33341961a8696669656c64735f36311961b567686561645f33351961c1696669656c64735f36321961fa68646174615f31313919620068646174615f31313719620d67706169725f333419621f68646174615f313138196230696669656c64735f353719623d67686561645f3332196249696669656c64735f353819625667686561645f3333196262696669656c64735f353919629b68646174615f3131361962a168646174615f3131341962ae67706169725f33331962c068646174615f3131351962d1696669656c64735f35361962f668646174615f3131331962fc68646174615f31313119630967706169725f333219631b68646174615f31313219632c696669656c64735f353419633967686561645f3331196355696669656c64735f353519638468646174615f31313019638a68646174615f31303819639767706169725f33311963a968646174615f3130391963ba696669656c64735f35331963df68646174615f3130371963e56873656c665f3132321963eb6873656c665f3132311963f168646174615f3130351963fe67706169725f333019641068646174615f313036196421696669656c64735f353019642e67686561645f323919643a696669656c64735f353119644767686561645f3330196453696669656c64735f353219648c68646174615f31303419649278595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f31196493785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196494785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196495785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3119649678605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f31196497785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3119649878595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f3119649968646174615f31303319649b6869676e6f72655f351964bd78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174611964be78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174611964bf785a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174611964c0785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174611964c1785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174611964c2785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174611964c378575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174611964c468646174615f31303219651b6873656c665f3132301965216873656c665f3131391965276873656c665f31313819652d6873656c665f31313719653368646174615f31303019654067706169725f323919655268646174615f313031196563696669656c64735f343519657067686561645f323519657c696669656c64735f343619658967686561645f3236196595696669656c64735f34371965a267686561645f32371965ae696669656c64735f34381965bb67686561645f32381965c7696669656c64735f343919661467646174615f393919661a67646174615f393719662767706169725f323819663967646174615f393819664a696669656c64735f343419666f67646174615f39361966756873656c665f31313619667b6873656c665f3131351966816873656c665f31313419668767646174615f393419669467706169725f32371966a667646174615f39351966b7696669656c64735f34301966c467686561645f32321966d0696669656c64735f34311966dd67686561645f32331966e9696669656c64735f34321966f667686561645f3234196702696669656c64735f343319674567646174615f393319674b784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f3119674c784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f3119674d78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f3119674e67646174615f39321967506869676e6f72655f3419676a784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f6461746119676b784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f6461746119676c784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f6461746119676d67646174615f393119679367646174615f38391967a067706169725f32361967b267646174615f39301967c3696669656c64735f33371967d067686561645f32301967dc696669656c64735f33381967e967686561645f32311967f5696669656c64735f333919682e67646174615f383719683b67706169725f323519684d67646174615f383819685e696669656c64735f333419686b67686561645f3138196877696669656c64735f333519688467686561645f3139196890696669656c64735f33361968c967646174615f38361968cf6873656c665f3131331968d56873656c665f3131321968db67646174615f38341968e867706169725f32341968fa67646174615f383519690b696669656c64735f333119691867686561645f3136196924696669656c64735f333219693167686561645f313719693d696669656c64735f333319697667646174615f383319697c67646174615f383119698967706169725f323319699b67646174615f38321969ac696669656c64735f32381969b967686561645f31341969c5696669656c64735f32391969d267686561645f31351969de696669656c64735f3330196a1767646174615f3830196a1d67646174615f3738196a2a67706169725f3232196a3c67646174615f3739196a4d696669656c64735f3236196a5a67686561645f3133196a66696669656c64735f3237196a9567646174615f3737196a9b78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f31196a9c78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f31196a9d784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f31196a9e78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f31196a9f78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f31196aa067646174615f3736196aa26869676e6f72655f33196ac0784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f64617461196ac1784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f64617461196ac2784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f64617461196ac378545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f64617461196ac478545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f64617461196ac567646174615f3735196b0367646174615f3733196b1067706169725f3231196b2267646174615f3734196b33696669656c64735f3235196b5867646174615f3732196b6667646174615f3730196b7367706169725f3230196b8567646174615f3731196b96696669656c64735f3234196bbb67646174615f3639196bc167646174615f3637196bce67706169725f3139196be067646174615f3638196bf1696669656c64735f3232196bfe67686561645f3132196c0a696669656c64735f3233196c3967646174615f3636196c3f6873656c665f313131196c496873656c665f313130196c4f67646174615f3634196c5c67706169725f3138196c6e67646174615f3635196c7f696669656c64735f3230196c8c67686561645f3131196c98696669656c64735f3231196cc767646174615f3633196ccd67646174615f3631196cda67706169725f3137196cec67646174615f3632196cfd696669656c64735f3139196d2267646174615f3630196d2867646174615f3538196d3567706169725f3136196d4767646174615f3539196d58696669656c64735f3138196d7d67646174615f3537196d8b67646174615f3535196d9867706169725f3135196daa67646174615f3536196dbb696669656c64735f3137196de067646174615f3534196dee67646174615f3532196dfb67706169725f3134196e0d67646174615f3533196e1e696669656c64735f3136196e4367646174615f3531196e4978475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f31196e4a78485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f31196e4b784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f31196e4c784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f31196e4d784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f31196e4e784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f31196e4f78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f31196e5078515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f31196e5167646174615f3530196e536869676e6f72655f32196e7778455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f64617461196e7878465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f64617461196e79784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f64617461196e7a784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f64617461196e7b784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461196e7c784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f64617461196e7d78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f64617461196e7e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f64617461196e7f67646174615f3439196ee267646174615f3437196eef67706169725f3133196f0167646174615f3438196f12696669656c64735f3135196f3767646174615f3436196f3d67646174615f3434196f4a67706169725f3132196f5c67646174615f3435196f6d696669656c64735f3134196f9267646174615f3433196f986873656c665f313039196f9e6873656c665f313038196fa467646174615f3431196fb167706169725f3131196fc367646174615f3432196fd4696669656c64735f3131196fe166686561645f39196fed696669656c64735f3132196ffa67686561645f3130197006696669656c64735f313319703f67646174615f343019704578585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f3119704678555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f31197047785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f3119704867646174615f333919704a6869676e6f72655f3119706478565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f6461746119706578535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f64617461197066785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f6461746119706767646174615f333819708d6776616c75655f3519708f685f5f636f6e645f3119709b675f5f6c68735f3019709d696669656c64735f313019709f685f5f636f6e645f321970ab695f5f6c68735f305f311970b0635f5f331970bc635f5f321970c26873656c665f3130371970c96873656c665f3130361970d16873656c665f3130351970d967646174615f33371970db6669676e6f72651970ef67646174615f3336197123677478496e7075741971256874617267657449641971276972656465656d657273197129737370656e64734578706563746564496e70757419713367707572706f7365197135665f5f636f6e6419714162737019714a635f5f311971546873656c665f31303419715565666e5f31361971576a726563757273655f373119715d6a726563757273655f373019715e666d61705f323219716d666974656d5f3719718c6873656c665f31303319718d666b65795f313319719763785f3419719f67646174615f33351971a1666d61705f32311971a3615f1971ba666d61705f31391971bc6a726563757273655f36391971c26a726563757273655f36381971c3666d61705f32301971d066686561645f381971fd6873656c665f3130321972016873656c665f3130311972056873656c665f31303019720665666e5f31351972086a726563757273655f363719720e6a726563757273655f363619720f666c73745f313219721e666974656d5f36197239666d70685f313019723a6c5f5f7573656f70745f5f746e19723b62746e19723c715f5f7573656f70745f5f746e427974657319723d67746e427974657319723e62746e19723f65636f756e7419724164746e5f3119724369746e42797465735f3119724567636f756e745f3119728266726571745f31197283755f5f7573656f70745f5f617373657274696f6e5f311972846b617373657274696f6e5f321972866b617373657274696f6e5f3319729e647265717419729f735f5f7573656f70745f5f617373657274696f6e1972a069617373657274696f6e1972a26b617373657274696f6e5f311972c2647461736b1972cf67646174615f33341972e467646174615f33331972f0636e5f351972f167646174615f33321973066862797465735f313019731b64625f313319732866686173685f3119733567646174615f333119733f67646174615f333019734c67706169725f313019734e67696e6465785f35197350686669656c64735f391973a967646174615f32391973b666706169725f391973b8657461675f341973ba686669656c64735f38197401666c6973745f3319740c69746573745f6865616419740d69746573745f7461696c19740e666c6973745f3219742f67646174615f323819743c66706169725f3819743e67696e6465785f34197440686669656c64735f371974b567646174615f32371974ca6762797465735f391974cc636e5f341974ed6773656c665f39391974ee666e616d655f321974ef6a696e6e65725f746573741974fe666d61705f31371975006a726563757273655f36351975066a726563757273655f3634197507666d61705f313819752366686561645f37197525666b65795f31321975276776616c75655f341975576773656c665f3938197558666e616d655f31197560666d61705f3135197561646e616d65197563696e616d655f646174611975656a726563757273655f363319756b6a726563757273655f363219756c666d61705f313619758566686561645f36197587666b65795f31311975896776616c75655f331975b16773656c665f39371975b86773656c665f39361975bf6773656c665f39351975c66773656c665f39341975ce67646174615f32361975d867646174615f32351975ed6773656c665f39331975f46773656c665f39321975fb6773656c665f39311976026773656c665f39301976096773656c665f38391976106773656c665f383819761867646174615f323419762067646174615f323319762867646174615f323219763e6773656c665f383719763f6476685f311976476773656c665f383619764862766819764d666f75747075741976536773656c665f383519765464686173681976566a63726564656e7469616c19767167646174615f32311976776773656c665f383419767f6773656c665f383319768c6773656c665f383219768d65666e5f31341976956773656c665f383119769665666e5f313319769e676f7574707574731976a466707265765f331976a56874784f75747075741976ae6773656c665f38301976af6776616c75655f321976b564615f31321976b664625f31321976bd65615f7174791976be65625f7174791976c664615f31311976c764625f31311976c866636f6d705f331976ca6a726563757273655f36311976d46a726563757273655f36301976d5666b6579735f341976e2666b65795f313019770966636f6d705f3219770a64615f313019770b64625f313019770d6a726563757273655f35391977176a726563757273655f3538197718666b6579735f33197725656b65795f3919774a6773656c665f373919774b676f746865725f331977556773656c665f373819775f6773656c665f373719776e6773656c665f37361977746773656c665f373519777d6773656c665f37341977836773656c665f37331977896773656c665f37321977906773656c665f37311977976773656c665f373019779966706169725f3719779b67696e6465785f3319779d686669656c64735f361977bf6773656c665f36391977c4657461675f331977c5686669656c64735f351977d36974785f69645f7374721977d569696e6465785f7374721977e663695f361977f16a74785f69645f646174611977fd6a63616c6c6261636b5f371977fe67646174615f32301978006e63616c6c6261636b5f6e6f6b5f351978186773656c665f363819781d657461675f3219781e686669656c64735f341978326762797465735f3819783f6773656c665f36371978406c6173736574436c6173735f32197842716d696e74696e67506f6c696379486173681978446b746f6b656e4e616d655f32197846676f757465725f3319784867696e6e65725f3519785067696e6e65725f34197851666d61705f3134197883676f757465725f3219788467696e6e65725f33197885666d61705f31331978c567646174615f31391978cb6773656c665f36361978d16773656c665f36351978d86773656c665f36341978df6773656c665f36331978e66773656c665f36321978ed6773656c665f36311978f46773656c665f36301978fc6773656c665f35391979056773656c665f353819790a6773656c665f35371979106773656c665f35361979116c73656c664c656e677468466e19791265737461727419791363656e64197915696e6f726d616c697a6519791765666e5f313219791d6773746172745f3119791f65666e5f313119792565656e645f3119793565706f735f3119794f63615f3919795063625f3919795e6773656c665f353519795f65666e5f31301979696773656c665f353319796a64666e5f3819796b636e696c19796d6a726563757273655f35371979756a726563757273655f35361979766773656c665f353419797764666e5f3919798466686561645f351979ae666c73745f31301979af66636f6d705f311979b16a726563757273655f35351979b76a726563757273655f35341979b8666c73745f31311979c666686561645f341979c7667461696c5f331979db63785f331979dc656c73745f381979dd64636f6d701979df6a726563757273655f35331979e56a726563757273655f35321979e6656c73745f391979f866686561645f33197a206773656c665f3532197a2164666e5f37197a2264696e6974197a246a726563757273655f3531197a2c6a726563757273655f3530197a2d6572656d5f31197a2e656c73745f37197a4e63615f38197a4f63625f38197a5763615f37197a5863625f37197a59646f705f31197a5b6a726563757273655f3439197a696a726563757273655f3438197a6a666b6579735f32197a6b68726573756c745f31197a78656b65795f38197a7a667461696c5f32197a7c666974656d5f35197ab1666d61705f3131197ab2656d70685f39197ab46a726563757273655f3437197aba6a726563757273655f3436197abb666d61705f3132197aef626f70197af063615f36197af163625f36197af36a726563757273655f3435197b016a726563757273655f3434197b02666b6579735f31197b0366726573756c74197b10656b65795f37197b12667461696c5f31197b146373756d197b4a63615f35197b4b63625f35197b4d65614b657973197b4f6a726563757273655f3433197b516b756e69717565424b657973197b5e6a726563757273655f3432197b5f646b657973197b60666d61705f3130197b6d656b65795f36197b9f63615f34197ba063625f34197ba26a726563757273655f3431197baa6a726563757273655f3430197bab656c73745f36197bac6372656d197bca656c73745f35197bcb656b65795f35197bd0666974656d5f34197bd66773656c665f3530197bd764666e5f35197bd96a726563757273655f3339197be16a726563757273655f3338197be26773656c665f3531197be364666e5f36197c08656d61705f38197c0a6a726563757273655f3337197c106a726563757273655f3336197c11656d61705f39197c31656d61705f36197c32656b65795f33197c346a726563757273655f3335197c3c6a726563757273655f3334197c3d656d61705f37197c3e656b65795f34197c726773656c665f3439197c756a726563757273655f3333197c7b6a726563757273655f3332197c7c656d61705f35197ca168746f6b656e735f31197ca36a726563757273655f3331197ca96a726563757273655f3330197caa68746f6b656e735f32197cd36773656c665f3438197cd4656d70685f37197cd6656d70685f38197cd86a726563757273655f3239197cde6a726563757273655f3238197cdf656d61705f34197d0b67646174615f3138197d0d67646174615f3137197d1767646174615f3136197d2667646174615f3135197d3366706169725f36197d3567696e6465785f32197d37686669656c64735f33197d7c636e5f33197d7d67646174615f3134197d926762797465735f37197da767646174615f3133197da867696e6465785f31197da966746573745f61197daa66746573745f62197db766706169725f35197dc9686669656c64735f32197de3647461696c197e2667646174615f3132197e3567646174615f3131197e4e6773656c665f3436197e4f64666e5f33197e506a63616c6c6261636b5f36197e526a726563757273655f3237197e5a6a726563757273655f3236197e5b6773656c665f3437197e5c64666e5f34197e6d66686561645f32197e916773656c665f3435197e966773656c665f3434197e97656d70685f35197e99656d70685f36197e9b6a726563757273655f3235197ea16a726563757273655f3234197ea2656d61705f33197ed96773656c665f3433197edf63645f31197ef56773656c665f3432197ef76773656c665f3430197ef864666e5f31197efa6a726563757273655f3233197f026a726563757273655f3232197f036773656c665f3431197f0464666e5f32197f2967646174615f3130197f4266646174615f39197f5b64736f6d65197f5c6a63616c6c6261636b5f35197f626a63616c6c6261636b5f34197f6866646174615f38197f6963695f35197f756773656c665f3338197f76656b65795f31197f7767666e466f756e64197f786a666e4e6f74466f756e64197f7a6a726563757273655f3231197f826a726563757273655f3230197f836773656c665f3339197f84656b65795f32197f9066686561645f31197fb7656c73745f33197fb96a726563757273655f3139197fbf6a726563757273655f3138197fc0656c73745f34197fd86164197fe1626964197fe36a726563757273655f3137197feb6a726563757273655f3136197fec656c73745f32197ffb666974656d5f3319801a6773656c665f33371980286773656c665f333619802f6773656c665f33351980356773656c665f3334198036667072656669781980446773656c665f333319804f6773656c665f333219805a6773656c665f333119805e6773656c665f333019805f676f746865725f321980676773656c665f32391980686d5f5f7573656f70745f5f6164611980696361646119806f66707265765f3119807066706169725f33198072686d70685f646174611980746b746f6b656e735f6461746119807e656d70685f3419809d66746f6b656e731980a366707265765f321980a466706169725f341980a66f746f6b656e5f6e616d655f646174611980a8687174795f646174611980ae6c746f6b656e5f6e616d655f321980b46371747919811e6773656c665f32381981216d73686f775f706f73697469766519813d63785f3219815c6773656c665f323719815d636e5f3219815f6a726563757273655f31351981696a726563757273655f313419816a63785f3119816b63706f7319816c6762797465735f361981b16773656c665f32361981c66773656c665f32351981ce66646174615f371981cf6d63616c6c6261636b5f6f6b5f321981d06e63616c6c6261636b5f6e6f6b5f341981e566646174615f361981e66d63616c6c6261636b5f6f6b5f311981e76e63616c6c6261636b5f6e6f6b5f331981fd66646174615f351981fe6b63616c6c6261636b5f6f6b1981ff6e63616c6c6261636b5f6e6f6b5f3219821463615f3319821563625f3319821d6773656c665f323419821e676f746865725f311982266773656c665f323319822b657461675f3119822c686669656c64735f3119823a676d70685f73747219823c6e746f6b656e5f6e616d655f73747219824d6c746f6b656e5f6e616d655f3119825a656d70685f331982666a63616c6c6261636b5f3319826766646174615f341982696e63616c6c6261636b5f6e6f6b5f3119828165696e6465781982826a63616c6c6261636b5f32198283666c6973745f311982856a726563757273655f313319828d6a726563757273655f313219828e656c73745f3119828f63695f341982a864686561641982bf6a63616c6c6261636b5f311982c066646174615f331982c26c63616c6c6261636b5f6e6f6b1982cf66706169725f321982e76773656c665f32321982ea6e73686f775f646174615f6c6973741982ed6a726563757273655f31311982ee66646174615f321982f46a726563757273655f31301982f566646174615f3119830266706169725f3119830463746167198306666669656c6473198319666974656d5f3219832f656d61705f3219833b647061697219833d636b657919833f6776616c75655f31198361636c737419836d666974656d5f311983796576616c75651983836762797465735f3519838c646c69737419838d6973686f775f6974656d1983936470726576198394646974656d1983b16773656c665f32311983b669726563757273655f391983da69726563757273655f381983db63695f331983dc6762797465735f331983de6762797465735f341983ff61781984096773656c665f313919840a62666e19840b617a19840d69726563757273655f3719841569726563757273655f361984166773656c665f3230198417637a5f31198437646461746119843863695f321984546773656c665f313819845a6773656c665f31371984616773656c665f31361984686773656c665f313519846f6773656c665f31341984766773656c665f31331984776c6173736574436c6173735f31198479656d70685f3219847b6b746f6b656e4e616d655f3119847d676f757465725f3119847f67696e6e65725f3219848767696e6e65725f31198488656d61705f311984bc656f757465721984bd65696e6e65721984be636d617019850d6773656c665f3132198513656d70685f311985146a746f6b656e5f6e616d651985246461726730198525646172673119852e63615f321985386a6173736574436c61737319853963695f31198549636d706819854b69746f6b656e4e616d6519856d6773656c665f31311985746773656c665f313019857b6673656c665f391985826673656c665f3819858d6673656c665f371985a16673656c665f351985a469726563757273655f351985aa69726563757273655f341985ab6673656c665f361985ad636e5f311985c0696865785f62797465731985ed6673656c665f331985f069726563757273655f3319861669726563757273655f321986176673656c665f341986186762797465735f3119861a65646967697419861c6762797465735f32198653656279746573198655616e19865769726563757273655f3119865d677265637572736519865e616919866e62623019869667696e6578745f321986af6776616c69645f351986b06463315f321986ba63635f3219870067696e6578745f311987196776616c69645f3319871a6463315f3119872f6776616c69645f341987306463325f3119873a63635f3119878a65696e6578741987a36576616c69641987a46263311987b96776616c69645f311987ba6263321987cf6776616c69645f321987d06263331987da616319882c646279746519882d6863616c6c6261636b19884d617319885363615f3119885463625f32198862616119886363625f311988716673656c665f321988766673656c665f3119887e6473656c6619887f656f74686572198888616219889164636f6e64198892656d73675f321988a6656d73675f311988ad636d7367", "termDescriptions": "b83419057f646d61696e190580646d61696e1906d661611907bc616119088a61611919d86463637478191ab86463637478191bde6463637478191ec86473656c66191ef36473656c66191f0c6473656c66191f0d6463637478191f0e6463637478192c2362746e192c2462746e192c2665746e53747219310867707572706f736519319a781a6e6f4f7468657241637469766974696573537570706f7274656419319b781a6e6f4f7468657241637469766974696573537570706f727465641931bc6b686173536565645574786f1931bd6b686173536565645574786f19320c696d6b4361706f4374781934b6676368617274657219350d67636861727465721935a267636861727465721938ca6473656c661939146473656c661939476473656c661939a36473656c66193b1a6473656c66193b75683c7377697463683e193b76683c7377697463683e193bd0636b6579193bd1636b6579193c046473656c66193c0e683c7377697463683e193c0f683c7377697463683e193ccb6473656c66193cd16473656c66193dfe683c7377697463683e193dff683c7377697463683e193ea270616374734f6e546869735265636f7264194179636d736719417a636d73671941c56b617373657274696f6e4f6b1941c66b617373657274696f6e4f6b1941c9636d73671941ca636d73671941f76473656c661942116473656c6619728669617373657274696f6e1972a269617373657274696f6e" } },
      scriptHash: "bd3f0df722d8781a6ce6d59d40f49df2181650c466ab99030f4bc226",
      config: { "rev": "1", "delegateName": "MyMintSpendDelegate", "isMintDelegate": true, "isSpendDelegate": true, "isDgDataPolicy": false, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = MyMintSpendDelegate_hl;
  requiresGovAuthority = true;
  get delegateName() {
    return "MyMintSpendDelegate";
  }
}

export { MyMintSpendDelegateBundle as default };
//# sourceMappingURL=MyMintSpendDelegate.hlb.mjs.map
