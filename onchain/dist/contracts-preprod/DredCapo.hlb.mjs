import { CapoHeliosBundle } from '@donecollectively/stellar-contracts';
import '../NodeOperatorSettings.mjs';
import '../NeighborhoodSettings.mjs';
import '@helios-lang/compiler-utils';

class DredCapoBundle extends CapoHeliosBundle {
  preConfigured = {
    capo: {
      programBundle: { "programElements": { "src/DefaultCapo.hl": "77d585c2a3b62dd8ffa09ddbe53c7b5c448803f703f34050c596163167023d42", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "src/TypeMapMetadata.hl": "6b2e8d518b38644ca648efa5de4529469c5cdeb09360bdf4987e463078be4e4f", "params": { "Capo::mph": "const mph: MintingPolicyHash = ##581c39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed;", "Capo::rev": "const rev: Int = ##01;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "5978b05978adc4061cc06666666609a09609008c08a0860821ca062930987081a4811976616c69646174696f6e2072657475726e65642066616c7365002233573661c20692010cf09f9aa5e29d934361706f0a003233573661c406661c2069211b20202d2d204361706f3a20636865636b73207370656e64206f6620003330c90330c3030014a09319191919ab9b330c503002490117736f6d6520646174756d2d636865636b206661696c6564003357366618a0600292011b736f6d65207265646565656d65722d636865636b206661696c6564003357366618a0666188062661b406200420022661c206a618206018a61820601892010b756e726561636861626c650033573661ca0692011f0af09f9aa5f09f9fa2204361706f2076616c696461746f723a206f6b210a0a00330da0310021001323533357346092002246466ae6cccc25409241676a36626d66763a20616c6c20616e64204f4e4c592044656c6567617465644461746120646174756d73206d757374206265207370656e74207769746820746865204361706f2773207370656e64696e6744656c656761746564446174756d206163746976697479004a09319ab9b30e7034912a20202e2e2e77697468206163746976697479207370656e64696e6744656c656761746564446174756d0a003233573666612c0492014767756172647320616761696e7374207570646174696e672061207265636f72642069662069747320696420646f65736e2774206d617463682069747320746f6b656e2d6e616d65004a093191919ab9b309902491556465616c20776974682044656c6574696e6744656c656761746564446174612061637469766974792028656e73757265207370656e6444677420414e44206d696e7444677420646f20746865697220706172747329003232335736613604920122564552494659207468652061626f766520766572737573207468652062656c6f7721003232323233573661e00692013b20202d2d20767676767620524544554e44414e5420636865636b7320666f722064656c6567617465206163746976697479202872696768743f290a00323233573661e40692013220202d2d205e5e5e5e5e20524544554e44414e5420636865636b7320666f722064656c65676174652061637469766974790a00330e7031330e7031330e70314a2201220022008646a666ae68c3540400448c8cd5cd9986a01a50330f303330f30349013e657870656374656420746865205370656e642064656c656761746520746f20757365202a44656c656761746564446174612a20616374697669746965730a0049014820202e2e2e20746f20646573637269626520746865206f7065726174696f6e73207468617420617265206265696e6720706572666f726d6564206279206e6578742d6c6576656c200049011d20202e2e2e2044674461746120506f6c6963792064656c6567617465730032335736661aa06661e20600201c92013b7370656e64446774205370656e64696e674163746976697479206d75737420616374206f6e2074686520636f7272656374207265636f72642d6964004a2600800261a8020022a666ae68c33c0400448c8cd5cd9986a019987801800806a481347370656e6444677420557064446744617461206d75737420616374206f6e2074686520636f7272656374207265636f72642d69640033573661e80692012c20202d2d206f6b3a206163746976697479206d6174636865732064617461206265696e672075706461746564004a2619c020022a666ae68c32c0400448c8c8cd5cd9852012490b54455354205448495320760033573661ea06661e8069210772656349643a2000530ee0300e335736666146049201317370656e64446774206d75737420626520616374696e67206f6e20746865206d61746368696e67207265636f72642d6964004a09319ab9b330d503330cf03330cd0330480014800124011f666f756e6420616374697669747920666f7220746869732072656349643f200049012de29d97206e6f207370656e642064656c6567617465206163746976697479206f6e2074686973206467446174610033573661480492010f54455354205448495320746f6f2076003357366661460492013a7370656e64446774206661696c732077697468206d756c7469706c65206163746976697469657320666f72207468652073616d65207265634964004a09319ab9b330d503330cf03330cc033048001480092401236861732065786163746c79206f6e65206d61746368696e672061637469766974793f2000330f40349140e29d97494d504f535349424c4520286361756768742062792044656c6567617465496e7075742e7769746844445370656e64696e6741637469766974792829290049013f207370656e642064656c656761746520747269656420746f2061637420696e206d756c7469706c652077617973206f6e207468652073616d6520746f6b656e00330ea03100a14a26608c0024646a666ae68c3640400448c8cd5cd9986c01a50330f703330f7034913e657870656374656420746865205370656e642064656c656761746520746f20757365202a44656c656761746564446174612a20616374697669746965730a0049014820202e2e2e20746f20646573637269626520746865206f7065726174696f6e73207468617420617265206265696e6720706572666f726d6564206279206e6578742d6c6576656c200049011d20202e2e2e2044674461746120506f6c6963792064656c6567617465730032330f503001012300800130d80100115333573461a6020022464661e80600202261a40200224940004cccccccccc37c04374043680435c04354043500434c043440433c0432c04004c31c0400448c8d4ccd5cd18650180089191919ab9b30f703330f60349115756e65787065637465642072656465656d65723a2000530ea0300233573661ee069201010a00335736661ae06661ac0629444cc33c0cc12800520004910b756e726561636861626c650030f8034901357370656e642064656c6567617465206e6f742074726967676572656420776974682061205370656e64696e672061637469766974790030cb0300230c9030011230f60349010b756e726561636861626c650000100400133333333330db010d9010d6010d3010d1010d0010cf010cd010cb010c70100223235333573461900600224646466ae6ccc3540ccc3500c5288998660180100124810b756e726561636861626c650032353335734619206002246466ae6cc3e00ccc3dc0d2411220202d2d20666f756e642072656349643a2000530f10300100130c9030011230f8034901367370656e64696e67206163746976697479206d75737420686176652061207265636f72642d6964206173206669727374206669656c640000130980200130c90300230c7030011230f40349010b756e726561636861626c6500001001309602002330c8033333330a6010020154a09325049924011a202d2d2064656c65676174652072657475726e6564206f6b3f200053043333330a90100130bd030bb030144a09318410080319981e19999818818017000a504992824ca66056054604e02266182066616c0661940601000290001985801807800991a999ab9a306c00112323533357346180060022464612004612204611e040026180060022461d8069210b756e726561636861626c650000100a1230ea0349013d6163746976697479207370656e64696e6744656c656761746564446174756d2075736564206f6e206d69736d61746368656420646174756d207479706500001005330ad0333304600d4a093240002a666ae68c11c00448cd5cd987301a492320202e2e2e77697468206163746976697479207570646174696e67436861727465720a00335736612a049201386d616b652074686973206f62736f6c65746520627920696d706c656d656e74696e67206361706f4c6966656379636c65416374697669747900323232323232323232323232323232323232323232323232323232323232335736a666ae6928899ab9b30840433083044901176973207370656e6444677420756e6368616e6765643f2000530df030043357366108086610608661060866106089210920202d206f6c643a200030cd0101149104203d3e2000323533357346180020022464a619a06002618602002249210b2028616e792061646472290000130cb0101132335736610a0866108089210d202020202020202b206366672000001335736610a0866108086610808661080892010920202d206e65773a200030ce0101b49104203d3e2000323533357346182020022464a619c06002618802002249210b2028616e792061646472290000130cc0101b32335736610c086610a089210d202020202020202b206366672000001335736610c086610a0892011b202d2d206973206d696e7444677420756e6368616e6765643f202000530e103005335736610c086610a086610a086610a089210920202d206f6c643a200030cf0101049104203d3e2000323533357346184020022464a619e06002618a02002249210b2028616e792061646472290000130cd0101032335736610e086610c089210d202020202020202b206366672000001335736610e086610c086610c086610c0892010920202d206e65773a200030d00101a49104203d3e2000323533357346186020022464a61a006002618c02002249210b2028616e792061646472290000130ce0101a323357366110086610e089210d202020202020202b20636667200000130880449100530ef0330cd0101a530ee0330cc01010530ed0330cb0101b530ec0330ca01011151498c8cd5cd99872819986e01800a4004661080866108089213265787065637465642065786163746c79206f6e65206974656d207570646174656420696e20636861727465722c20676f742000530f803001490100330fa031330fa031330fa031330fa031330fa031330fa031330fa031330fa031330fa031330fa031330fa03100613330b20249011c6d757374206e6f74206368616e676520746865206d616e6966657374004a2010260509210131001533357340082661f40626050921023262001323533357346192020022494448c8c8cd5cd9844822491a6d696e742064656c656761746520696e70757420666f756e640a003235333573461e6020022464646a666ae68c2280800448cd5cd9847022494054454d504f524152593a20616c6c6f77696e672064656c6567617465206372656174696f6e207768696c65202a2a7570646174696e67436861727465722a2a0a00335736617a0492013a6d6f76652064656c65676174652d6372656174696f6e20746f2062652073657061726174652066726f6d207570646174696e674368617274657200335736617a04920143203f3f20757365206361706f2041637469766174696e675878787844656c6567617465206163746976697479207768656e2061646f7074696e672064656c6567617465003333330c6010210354a09325049848c23c112401526d75737420757365206361706f4c6966656379636c654163746976697479206469726563746c7920696e204361706f2c206e6f7420776974682067656e65726963207570646174696e6753657474696e67730000100130f20100112308c0449132696e76616c696420757365206f66206d696e742064656c656761746520647572696e6720636861727465722075706461746500001001330cd0101b00130c901001001333330c10101830d5030d30302c4a2940544cd5cd999859812481457468652075706461746564206d696e7444677420746f6b656e206d757374206265206465706f736974656420746f20697473206f776e207363726970742061646472657373004a09319999985e8080c0162504992824c2a666ae680144cc3e80c4c0a12401023462001330b40101b02c15133573666616604921467468652075706461746564207370656e6444677420746f6b656e206d757374206265206465706f736974656420746f20697473206f776e207363726970742061646472657373004a0931987d01898142490234610013333330bd0101b02c4a0932504984c0a1240101350015333573461bc060062944544cc3e80c4c0a1241023562001333044019222330fd03100313235333573460a60022466ae6cc22810cc2241124011c202d2061646f7074696e67206e616d65642064656c65676174653a2000004335736611408921010a004a22464a666ae68cc21c114c35c040054c35c040104cc2e8040100c8544cd5cd985d01248157746865206f6c64206e616d65642064656c6567617465206d75737420626520726574697265642c206f7220626520666f7263652d7265706c616365642028696e206120646966666572656e742061637469766974793f29003333330c3010040324a294528a86d809829800800998280098012511002100a10091302b01d130284901013600330800101d022330ff035302501253025009330c7035307f0165307f00d330fd03530cd01014530cd0100b330fc03530cc01016530cc0100d330de0314a22661e8062661e80626044921296d7573742062652076616c696461746564206279206578697374696e6720676f7644656c65676174650013333330b7010100264a0932504984cc3780c40044c8d4ccd5cd186180800891841022490b756e726561636861626c6500124a2002666661760200e619e0619a0604c945289987d01a986500807a9865008031987c81a983e806a983e8021983d8088041983d0068021842808041843008039843808031843808029843808021843808019844008011844808009985c818082400060f801060fa00e60fc00c60fc00a60fc00860fc00660fe004610002002661600600490001985781991a999ab9a308b01001120011230eb034913d77726f6e6720757365206f66207570646174696e674368617274657220616374696f6e20666f72206e6f6e2d436861727465724461746120646174756d0000100648000c1fcc2ac0cc2a00c004c02c2d00c54ccd5cd1828800891919ab9b30e70349012920202e2e2e77697468206163746976697479206361706f4c6966656379636c6541637469766974790a0032323233573666613004920134616c6c206361706f4c6966656379636c654163746976697469657320726571756972652074686520676f76417574686f72697479004a09319191a999ab9a30dd0100112323233573666613a049213d7768656e20666f7263696e674e65774d696e7444656c65676174652c204f4e4c5920746865206d696e7444656c65676174652069732075706461746564004a09319ab9b330cf03330b403530bb01308001008530bb01308001006491186d75737420757064617465206d696e7444656c6567617465003357366619e066618c06660d601000c90012492c6d757374206e6f742075706461746520616e797468696e6720657863657074206d696e7444656c6567617465003357366619e066615c0661700261000201061700261000200c9201396e6577206d696e7444656c656761746520746f6b656e206d75737420626520646966666572656e742066726f6d20746865206f6c64206f6e65003233573666613c04920127746865206e6577206d696e74446774206d757374206861766520746865206e6577206467546b6e004a0931919ab9b330d103330b10330ba01308201008001330f003330f003330f00349011f77726f6e67206d696e7444656c656761746520746f6b656e206e616d6520270030ba013082010084911f2720616464656420746f20636861727465723b2073686f756c642062653a200000133573666613e049213e746865206e6577206d696e7444656c6567617465206d7573742062652070726573656e7420696e20697473206f776e207363726970742061646472657373004a09319873018998730189999998548098410080400c2514a29454304044ccc27809240133456e737572657320746865206e6577206d696e744467742d2a20757574206973206d696e746564207769746820612073656564004a093099999999999999980c80c00219aba030af030033762932510024a09325049928a504a093250498c004008c094008c37004008c3700400454ccd5cd18708080089191919ab9b33309d024913f7768656e20666f7263696e674e65775370656e6444656c65676174652c204f4e4c5920746865207370656e6444656c65676174652069732075706461746564004a09319ab9b330cf03330b403530bb01308501008530bb01308501006491196d75737420757064617465207370656e6444656c6567617465003357366619e066618c06660d601000c90012492d6d757374206e6f742075706461746520616e797468696e6720657863657074207370656e6444656c6567617465003357366619e066615c06617002610a02010617002610a0200c92013a6e6577207370656e6444656c656761746520746f6b656e206d75737420626520646966666572656e742066726f6d20746865206f6c64206f6e65003233573666613c04920128746865206e6577207370656e64446774206d757374206861766520746865206e6577206467546b6e004a0931919ab9b330d103330b10330ba01308701008001330f003330f003330f00349012077726f6e67207370656e6444656c656761746520746f6b656e206e616d6520270030ba013087010084911f2720616464656420746f20636861727465723b2073686f756c642062653a200000133573666613e049213f746865206e6577207370656e6444656c6567617465206d7573742062652070726573656e7420696e20697473206f776e207363726970742061646472657373004a09319873018998730189999998548098438080400c2514a29454304044ccc27809240134456e737572657320746865206e6577207370656e644467742d2a20757574206973206d696e746564207769746820612073656564004a093099999999999999980c80c00219aba030af030033762932510024a09325049928a504a093250498c004008c094008c38004008c3800400448c8c8c8c8d4ccd5cd187e8080089187981a490b756e726561636861626c650015333573461140400224a0082a666ae68c21c0800449400c54ccd5cd1840010008919873818a8020a80189187981a48150646774526f6c6573466f724c6966656379636c6541637469766974792073686f756c6420696e646963617465206f6e6c79206d696e742f7370656e642f626f74682064656c65676174652d726f6c6573000013302e00600a133573666613a049212b20202d20656e666f726365732070726573656e6365206f6620746865207370656e642064656c6567617465004a0931919ab9b330d0033330410014a09324811c3c2d2d2074686174206661696c732c207468697320646f65736e2774003003533044044001333330350340320054a093099ab9b33309c024912a20202d20656e666f726365732070726573656e6365206f6620746865206d696e742064656c6567617465004a0931919ab9b330cf033330400014a09324811c3c2d2d2074686174206661696c732c207468697320646f65736e2774003002533043043001333330350330310044a0931191a999ab9a30d801001123233309e024914420202d207468652064656c65676174652773206163746976697479206d757374206d6174636820746865206361706f2773206c6966656379636c65206163746976697479004a2661e20200201661ae020022461e2069212964656c6567617465206d75737420757365204361706f4c6966656379636c65416374697669746965730000100100100553303502f5302a3027011330b00330810130ad0330aa0300148000c0342d80ccc2b80cc8d4ccd5cd1845008008900089187501a4813d77726f6e6720757365206f66207570646174696e674368617274657220616374696f6e20666f72206e6f6e2d436861727465724461746120646174756d0000100548000c14000454ccd5cd18260008919ab9b30e6034912520202e2e2e77697468206163746976697479207265746972696e675265665363726970740a003232330dd031330dd031002100114a266608c01c941263235333573460da0022494448c3a40d24013d77726f6e6720757365206f66207265746972696e6752656653637269707420616374696f6e20666f72206e6f6e2d53637269707452656620646174756d00001004153335734609c0022466ae6cc3980d24012220202e2e2e77697468206163746976697479207573696e67417574686f726974790a003235333573461120200224601c0022461d2069213c77726f6e6720757365206f66207573696e67417574686f7269747920616374696f6e20666f72206e6f6e2d436861727465724461746120646174756d000010041230e703490112756e68616e646c65642061637469766974790000100432353335734610c020022464646a666ae68c12400449288a999ab9a3053001124a22a666ae68c12c00448c3a40c00c48cd5cd987401a49397468697320636861727465722061637469766974792069736e277420616c6c6f77656420746f206368616e676520746865206368617274657200300c0040010064911f696e76616c6964206163746976697479206f6e2043686172746572446174610015333573460d400224646a666ae68c134004492889187401a48123696e76616c6964206163746976697479206f6e205363726970745265666572656e63650000100512335736666126049201676a36626d66763a20616c6c20616e64204f4e4c592044656c6567617465644461746120646174756d73206d757374206265207370656e74207769746820746865204361706f2773207370656e64696e6744656c656761746564446174756d206163746976697479004a093191a999ab9a304a001124a22461d006920121696e76616c6964206163746976697479206f6e2044656c656761746564446174610000100500100133330860107b067063003509b0321376660cc002466ae6cc3780ccc3740d24010c636865636b706f696e743a200000133573661bc06921010a004a2464646466ae6d4ccd5cd1984c01984b81984b018018008987081a492f6368617274657220746f6b656e206d7573742062652072657475726e656420746f2074686520636f6e7472616374200015130e003491036f6b0a0032533357346614c06a61080200aa610e02002261c406920122696e76616c69642075706461746520746f20636861727465722073657474696e6773001514a26666108020f20ca0c2614806614206006612606002a11a06600415606464646a666ae68c08000448c3800d2401367468697320636f756c64206f6e6c792068617070656e20696620746865206368617274657220746f6b656e206973206275726e65642e001232001302b0010013309601308b030022330820330c103001002330fd02330a403003530fc02491076368617274657200480088cccccc24c04c1a80040092824c9412630f8024c11e581c39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed0022222222222222232323232323232323232335736a666ae68c3280ccc23c0c0080644c8c8cd5cd9879819987901a491d20202d2d206e6f206d696e742066726f6d206f757220706f6c696379200000233573661e60600266ae6cc3cc0d2401105e5e202076616c7565206d696e7465640030f403490134e29d8ce29d8c2076616c69646174655575744d696e74696e6728293a206e6f206d696e742066726f6d206f757220706f6c696379003330d9030034a093298748180c8a8a4c6466ae6ccc09800488c8c3d40ccc3d00ccc3d00ccc3d00d2411a20202020e284b9efb88f20f09f909e2065787065637465643a2000530e803002490102782000001530dc030023232335736a666ae6928899ab9b33028001223230f703330f603330f603330f6034911a20202020e284b9efb88f20f09f909e20202061637475616c3a2000530ea03002490102782000001530de0300233573661e8069211d6f7468657220706f6c6963792076616c756573206d696e7465643a200a0030f4033330db0330910333027530900300522330910300201e4a0930a8a4c66ae6cccc2880924141456e737572657320746865206d696e7420666f72207468697320706f6c6963792d69642069732065786163746c79207468652065787065637465642076616c7565004a0931919ab9b330d503001491146d69736d6174636820696e20555554206d696e740033573661ea0692011820202d2d20746869732d706f6c696379206d696e74206f6b00335736661aa0666062186060389201076e6f20736565640033573661ea0692013520202d2d206f6b3a20686173207365656420616e6420657870656374656420746869732d706f6c696379206d696e742076616c75650032335736661ac06661a0060029211e20202d2d206f746865722d65787065637465642d6d696e7473206f6b3f200049012a756e726561636861626c6520657863657074696f6e3a206f74686572506f6c69636965734d696e744f6b0033573661ec0692011e20e29c852076616c69646174655575744d696e74696e673a20206f6b210a00330eb031330eb0310081002100153335734619c06a611c060182944544cd5cd999851812492b2e2e2e207769746820616e206164646974696f6e616c206d696e742d76616c756520696e64696361746564004a093192999ab9a5308f0300114a22a266ae6cccc290092401262e2e2e77697468206f746865722d706f6c6963792076616c7565732065787065637465643a20004a09319ab9b30f603330f5033330dd030014a09324811b5e206f746865722d6d696e742076616c7565206578706563746564003357366661480492013049742073686f756c64206d696e742065786163746c792074686520696e6469636174656420746f6b656e206e616d6573004a09319ab9b3330a40249144446f65736e277420636f6e73747261696e20616e79206d656e74696f6e656420706f6c6963792773206d696e74696e67206f6620616e79206f7468657220746f6b656e73004a09319ab9b33028530920300122323302d002225333573461a806646a666ae68c0b4004492809191986a81800802181680080099815001801099187e819987d819987d819987d81a4812ce29d8ce29d8c2076616c69646174655575744d696e74696e6728293a2077726f6e67206d696e7420666f722000530f4030064901013a00001530e303002151498cc2400c02400928a999ab9a330930300501d130920333023530910300501d151005330200010033301e0010283308a0300301a3301c330890300101902633085033308503008007301a330190162333333309d020194a26014002941264a09318400185e81a999ab9a00114a22a26464a666ae680184cccccc09c00406128802a510041514a26100020026616a0666609c02c9412648000c3180d4c2180c0154ccd5cd00388030813a999ab9a008100714a2a666ae680244020528a999ab9a00a1009108c03533357340162014211606a666ae68030402c4c07403888ccc3a4080088c3a408c008c3a008004dd8a4c4646600200200444a666aae7c00443f0084cc3b808c39808c39408d5d0800998010011aba200122330e102002223333003308c0335573a00461c4046aae78008c2300cd55ce8009871011aab9e001223375e60060046006002e9888c8c8cc004004010894ccd55cf8008800899192999ab9a3375e00a6aae740084cc0100100044cd5d0001198020020009aba200235742002613a060024466661b604004616206002466e952000309f0300113374a900104f819186d0118510180091986b81000a400444646600200200644a666aae7c0045261323357366600861e4046aae74004c3f404d55cf000998018019aba20023574200244661a80400446600461de046aae74004c3e804d55cf000911919800800801912999aab9f00114984c8cd5cd998021842019aab9d00130da0235573c002660060066ae88008d5d080091111986981002001119191919191919119869019986901800a49012d00002530ca030013330d102530d00200148001200c533357346614e06619c040049009099ab9b330af034a09211663626f722874786f496429206c656e203e203920212100002151330cd02330cd02001530ef0249010140000023330cf02530ca0200348029204a530c80200130c60200230c4020012222223232323357366661000492014472657175697265732074686520636861727465722773206d696e742d64656c656761746520746f20617574686f72697a652074686973206d696e74206163746976697479004a09319ab9b30d203330d10349011a20202d2d2066696e64696e6720696e707574206467546b6e3a2000309b010093233573661a60692124202020202d2d20e29c8520e29ea1efb88f2020f09f9281666f756e64206467546b6e205e0032323232330cc03100110024a2646a666ae68c04000448c3600c00c48c8c8c8d4ccd5cd186000800891919ab9b308b02490147564552494659207765202d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d20646f6e2774206e656564207468652066756e6e792072656465656d65722d636865636b20736b697070696e6700335736a666ae68c2d40c0344cd5cd986e01a494a207676762077686572657665722069742069732c2070726f6261626c79206265737420697420757365732074686520636865636b4d696e744467744163746976697479206f7074696f6e0030dd0349013c77686572652069732065787472614d696e7444656c656761746552656465656d6572436865636b3d66616c7365207265616c6c79206e65656465643f00151498c8d4ccd5cd187e808008919ab9b30de034911520202d2d206f6b2c206467546b6e207370656e740a004a22a666ae68c3ec0400448c37c0d24119444c413a3a5265746972696e672063616e2774206d696e7421001230df03490123444c413a3a56616c69646174696e6753657474696e67732063616e2774206d696e74210000100130bf0100112300b00300100133333333330c2010c0010bd010ba010b8010b7010b6010b4010b2010ae0100130100010013300d30c7020a303002330d303330d3034901066467546b6e2000309d0100b4911c206e6f74206265696e67207370656e7420617320657870656374656400330fb0130c5020a103232353335734618c04002246618a0461880400200824940004004c8d4ccd5cd1849008008919184801800984b0080089186a819986981a49172020e29d8ce29d8c206d697373696e67206467546b6e2000309d0100b001330900130a2030a0032330ab03330a00330b40300100248000cc2540402001d4ccd5cd00188010805a999ab9a004100314a24466661a404004616e04002466e95200030960300113374a900104b019186501984c8180091986701000a4004466ae6cc3180d24016f79696b65732c206578706563746564207468652064656c656761746520746f207573652061637469766974792044656c65676174654c6966656379636c65416374697669746965733a5265706c6163696e674d65206f7220617574686f72697a696e6744656c65676174652e2e2e0a00335736618c066618a066618a069201512020202d2d206e6f74653a20666f72206f746865722063617365732c206120636f6e746578742d737065636966696320636865636b207669612076616c69646174655575744d696e74696e67277320280a0049014820202e2e2e0a2020636865636b4d696e7444677441637469766974793a2028416273747261637444656c656761746541637469766974696573456e756d29202d3e20426f6f6c290a0049013329206f7074696f6e2063616e206265207573656420746f2073746565722061726f756e642074686973206661696c7572652e0a003357366614c0694124011c756e65787065637465642064656c6567617465206163746976697479004a04466ae6cccc3d005241254974206d757374207370656e642074686520696e646963617465642073656564205554584f004a09319ab9b53335734613e06660ec612c0600446616c04610406002004266ae6cc3180d240116202d20657870656374656420736565645574786f3a2000335736618c06a61580400266ae6cc3180d2401010a00330a6034a09201276d697373696e67206578706563746564207365656420696e70757420666f72206d696e74696e6700151498cd5cd986301a491420202d2d206861732073656564202d3e206f6b0a004a2466022002a0764466ae6ccc2900ccc28c0c52889980a0010012491270726576656e7420756e7573656420766172003235333573461740200224618e0692015874686520666f7263696e674e65775370656e6444656c6567617465206573636170652d686174636820616374697669747920697320616c776179732068616e646c6564206469726563746c7920627920746865204361706f00153335734616c0200224618e0692015774686520666f7263696e674e65774d696e7444656c6567617465206573636170652d686174636820616374697669747920697320616c776179732068616e646c6564206469726563746c7920627920746865204361706f001533357346164020022466ae6cccc3d0052401252e2e2e20666f72207570646174696e6720746865204361706f206d616e69666573742e2e2e004a093286d008a999ab9a30c001001123357366661e802921272e2e2e20666f722071756575696e6720612070656e64696e67206467742d6368616e67652e2e2e004a093286e808a999ab9a30be01001123357366661e8029212e2e2e2e20666f722072656d6f76696e6720612070656e64696e67206467742d6368616e676520656e7472792e2e2e004a093286d008a999ab9a30bc01001123357366661e802921292e2e2e20666f7220636f6d6d697474696e672070656e64696e67206467742d6368616e6765732e2e2e004a0932869808919ab9b3330f401491342e2e2e20666f72206372656174696e672061206e65772064656c65676174652028646570726563617465642070617468292e2e2e004a09319ab9b30f5014912664657072656361746520757365206f6620434c413a3a4372656174696e6744656c65676174650050dd010010012223330c2030032233300400230d40235573a0026122026aae7800400484cd5cd99987780a492e726571756972657320746865206368617274657220746f206265207370656e7420696e2074686520696e70757473004a09319191a999ab9a303500112004153335734607200224618a069201304361706f4374782e7769746843686172746572496e70757428293a20636861727465722069732066726f6d2072656621001232323232335736619006920129202020202d2d204361706f4374782066696e64696e67206368617274657220696e20696e707574730a003232330170053303900100233090033061308d0330ae0200148000c8d4ccd5cd184400800891900098460080089186581a491e4d697373696e67207265717569726564206368617274657220696e707574000013308601309803096030012330a003330950330a90300100248000cc2380c0054c398092410763686172746572003014001004001001300f0012213357366661de02920146726571756972657320746865206368617274657220746f20626520617661696c61626c6520696e20746865207472616e73616374696f6e2028696e707574206f722072656629004a09319191a999ab9a303900112004153335734606a002240082464646464646a666ae68c2300400448cd5cd986501a4813d4361706f437478206e656564734368617274657228293a206e6f2063686172746572207265663b206d75737420626520696e20696e707574732e2e2e0a005300b00a123233573661960692012a4361706f437478206e656564734368617274657228293a20666f756e642063686172746572207265660a0032330190073303f00100233092033063308f0330b00200148000c23004004004cc21804c2b0082580c0048cc2800ccc2540cc2a40c00400920003308e03001530e6024910763686172746572003014001004001001300f0012330c602001480088888888c8c8ccccc07402001c004ccccc20804020c2580c2500cc05402528801180a804a999ab9a0031002150095333573400820062944427c0884c8d4ccd5cd1819800891900098190008a999ab9a302f0011232001302e0011230bf034901984361706f4374782e676574436861727465724461746128293a20756e6b6e6f776e20636861727465722073747261746567793b2075736520726573756c74206f66207769746843686172746572496e70757428292c20776974684368617274657252656628292c206f72206e6565647343686172746572282920746f207265736f6c7665206368617274657220646174756d20666972737400001300a001222223232333333300600500150d5014a200494126305653006004533357340042002294488888c8c8ccccccc018014005435c0528801250498c1414c0180114ccd5cd00108008a512233330c20200230f80200123374a9000184301800899ba5480082180c8c20c04c2240c0048cc2f80800520022213357366661ca029212d6974206d757374206861766520746865204361706f277320676f76417574686f7269747920617070726f76616c004a09319ab9b330970333333306f30465300200130060014a093250499241086e6f20776179206d0000123097023086030012233574061fc0400466ae80c0c0004dd8a4c46666058056050048612604002461a20461220400211a04444646666660d66020008601a00894528a510015333573400420022a10802446611804004460046166060021100444266666666661300212c02126021200211c0211a0211802114021100210802a600600242646466ae6cc8d4ccd5cd18428180089191919ab9b30b203330b1034912e202020202d2df09f909e2067656e657269632064656c656761746520616374697669747920617420696e6465782000530a503002323533357346112060022464616a06661680692124202020202d2df09f909e206e657374656420616374697669747920617420696e6465782000530a80300130880300112498004c35404004c2180c008c2100c004492600100100130d4010015300230070012130850230fc020012222233574060f000a66ae80c32404010cd5d0180380199aba0300600233574061ee040026ec5260ab030aa03230c60230fd010012300230fb01001232002533357346006002293099ab9c4911c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988c1bcc20c0800494cccccd5d200089919192999ab9a3370e00490000a999aab9f00114a02a666aae7cd5d10008987a009aba100114a02a666ae68cdc3801240042666aae7c00528a5014a06aae78008d55ce8009baa00114a029405280a502223233333305d30340010044a0932504994ccd5cd00108008999802001a50498888c8c8c8c8c8004cc3b808c0fcc3ac08c2300800520003235333573460cc002246400260d400224646a666ae68c1a000448c8004c1b000448c2ac0d241234d697373696e67206368617274657220696e70757473202f207265665f696e70757473000013306630f8020f602003001330640030012330fe02330f30230870300100248000cc3b0080114c310092410763686172746572005333573400420022610e041e2044a666666ae900044c94ccd5cd19b8735573a00290050992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a502330a6020014802894cccccd5d20008992999ab9a3370e6aae740052008132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046614804002900412999999aba40011325333573466e1cd55ce800a400c264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008992999ab9a3370e6aae740052004132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046614204002900212999999aba40011325333573466e1cd55ce800a4004264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc27c08005200223333333309501093010910108f0108d0108b01087010830130e802001253333335748002264a666ae68cdc39aab9d001480004c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a33333333099010960109401092010900108e0108a01086010011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661380400290001111111190012999ab9a333333300800700600500400300200114984cd5ce2481225761726e696e673a20696e76616c6964204361706f416374697669747920646174610049888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e00229445281119ba548010cd5d0181500119aba030e0010013762931181498710100092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd18168008992999aab9f00114a0264a666ae68c390040044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc258080052004223374a900119aba0302600233574061b8020026ec5262302530de02001253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a302900113253335573e00229404c94ccd5cd187000800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811984901000a4004266e95200037629312999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408888c80094ccd5cd19998028020018010008a4c266ae712412b5761726e696e673a20696e76616c696420636374785f43686172746572496e7075745479706520646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a01100644646a666ae68c0a400448c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8cc3a804cc3a804cc3a804cc3a804cc3a804cc3a8054ccd5cd1987c01003a48116202d2d207370656e64446774206368616e6765643f2000148008545200053335734661f00400c92117202d2d207370656e64496e7673206368616e6765643f2000148008545200053335734661f00400a92116202d2d206e616d6564446774206368616e6765643f2000148008545200053335734661f00400892115202d2d206d696e74446774206368616e6765643f2000148008545200053335734661f00400692116202d2d206d696e74496e7673206368616e6765643f2000148008545200053335734661f00400492114202d2d20676f76446774206368616e6765643f2000148008545200053335734661f00400292116202d2d206d616e6966657374206368616e6765643f20001480085452000330e2025301d00f5301d007330e1025306800f530680073301900f007330df025306600f53066007330de025301600f530160073301600f007330dc025306300f530630073023007302400630240053024004302400330250023026001330d60200a48000c06c01cc070018c070014c070010c07000cc074008c07800448c2240d2412f6f6e6c7920436861727465724461746120646174756d2063616e20636f756e742075706461746564207468696e677300001002213766601a0024461ba04660060040024466ebcc034008c03400484dd9980480092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd18030008992999aab9f00114a0264a666ae68c35c040044c94ccd55cf8008a501325333573461a602002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a5025333333574800229404c008dd58008a5014a029408c8cc004004008894ccd55cf8008a51132533357346196026aae7400454ccd5cd1866009aab9e0011330030033574400429405281aba1001233084020014801094cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661040400290013a774ce99d391801185f80800919190012999ab9a301100114984cd5ce2491a5761726e696e673a20696e76616c6964206c697374206461746100498dd600091801185e00800919190012999ab9a301100114984cd5ce2481195761726e696e673a20696e76616c6964206d6170206461746100498dd58009181e985c80800918031841810009181d985b0080091801185881000919190012999ab9a300e00114984cd5ce2481195761726e696e673a20696e76616c6964206d6170206461746100498dd580091801186881000919190012999ab9a300e00114984cd5ce24811a5761726e696e673a20696e76616c6964206c697374206461746100498dd60009181b185e01000876011190012999ab9a300200114984cd5ce249215761726e696e673a20696e76616c696420436861727465724461746120646174610049894cccccd5d20008992999ab9a3370e6aae7400520001325333333574800229405280992999aab9f00114a0264a666ae68c0e80044c94ccd55cf8008a5013253335734601c002264a666aae7c0045280992999ab9a300e00113253335573e00229404c94ccd5cd18200008992999aab9f00114a0264a666ae68c0500044c94ccd55cf8008a50132533357346088002264a666aae7c0045280992999ab9a301400113253335573e00229404c94ccd5cd180a000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001357440042940d5d08009aba200214a06ae84004d5d10010a50357420026ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900045280a50130023758002294052811919800800801112999aab9f00114a22a666ae68ccc074070064d5d08008998010011aba200114a04a666666ae90004528098011bab00114a0294052811919800800801112999aab9f00114a2264a666ae68c2c404d55ce8008a999ab9a300e35573c0022660060066ae880085280a50357420024a666666ae90004528098011bab00114a0294052811919800800801112999aab9f00114a2264a666ae68c2bc04d55ce8008a999ab9a303335573c0022660060066ae880085280a50357420024a666666ae900045280a50130023758002294052811919800800801112999aab9f00114a22a666ae68c0c0d5d08008998010011aba200114a04661cc02002900006d009111190012999ab9a333300500400300200114984cd5ce24811f5761726e696e673a20696e76616c6964204361706f446174756d20646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a01ae024a666ae68ccc27c04004dd4a441036d70680000215333573466613e020026ea522102746e0009e0115333573466613e020026ea522103747065003333300800700600500400314a22a66ae71241275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a02a66ae712401275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a02a66ae712401275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c27c04d5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a0294052812999999aba40011325333573466e1cd55ce800a4010264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a50132533357346666666660e80e40de0da0d80d60d40d00ca002264a666aae7c0045280992999ab9a30ad010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a302700113253335573e00229404c94ccd5cd1852808008992999aab9f00114a0264a666ae68c2b8040044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a50222222533357346004002294454ccd5cd18018008a511533357346008002294454ccd5cd18028008a51153335734600c002294452811192999ab9a3300430a4020a2022330ad02330a20230b602001002480004c35408cc34c092411b6d757374206e6f742068617665206467546b6e20696e7075743a2000301d00315133573661a804661a604921146f6b3a206e6f206467546b6e20696e7075743a2000301d0034a26602e00400244661fa0200446004615a020024a666666ae900044c94ccd5cd19b8735573a00290010992999999aba400114a029404c94ccd55cf8008a50132533357346666660bc0ba0b80b60b40b2002264a666aae7c0045280992999ab9a30080011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502533333357480022940528098011bac00114a029408c8cc004004008894ccd55cf8008a511533357346666666660d40d00ca0c60c40c20c00bc0b66ae840044cc008008d5d10008a50253333335748002264a666ae68cdc39aab9d001480004c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30070011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a0444a666ae68c0080045288a999ab9a300300114a2294094cccccd5d20008a5014a0264a666aae7c0045280992999ab9a333305105004f04e00113253335573e00229404c94ccd5cd19999999983483383203103083002f82e82d0008992999aab9f00114a0264a666ae68c0200044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c06cd5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a029405281111111919191919191919ab9b30d502330d402330d402330d4024911f20e2ac85efb88f20f09f948e20f09f928120657870656374206467546b6e2000001491023a200000432335736a666ae68cc32c084c2bc0800440204c8d4ccd5cd181400089186c811986b8124923e2ac85efb88f20e29d8c20f09f9281206467546b6e206e6f7420637265617465643a2000007123230da02330d802490124e2ac85efb88f20e29d8c20f09f9281206467546b6e206e6f742072657475726e65643a20000083333301401030a8020a60200f4a294400401c5454ccd5cd0008986b011986a811986a8124812220e2ac85efb88f20e29c8520f09f9281206f6b3a20205e206467546b6e2068617320000024911020612076616c6964206f75747075740a0015130d6024913220e2ac85efb88f20f09f9aab20f09f9281206e6f2064656c656761746520627574206e6f742072657127643b2066616c736500001323533357346022002246466ae6cc36008cc35c08cc35c092411b20202e2e2e205e2073656e7420746f2076616c696461746f723a20005309e020014901010a00330b002330a50233094010a60200100548000c05000448cd5cd986b812491020202028746f20616e79776865726529003235333573460240022494449280009980818428105281119858011985281185d81000802a4000002006646a666ae68c0a00044924010872657475726e6564001249010763726561746564000010053309b0200a530f3010023019002301a0010085333573400620042a042a666ae68010400c5289119984200801118011856008008660111986700800a400046619a020029000111111919191a999ab9a300d00112533357340082619c046619804920135e29d8ce29d8c20e29ea1efb88f20f09f9281206d697373696e6720726571756972656420696e7075742077697468206467546b6e2000003151500d1232323233573661a0046619e049211a20202d2d207365656b696e6720696e707574206467546b6e3a20000063235333573460200022466ae6cc34809241262020e29c8520e29ea1efb88f2020f09f928120666f756e64205e20696e707574206467546b6e000011253335734012261a604661a20492013d5fe29d8c20e29ea1efb88f2020f09f9281206d697373696e6720726571276420696e707574206467546b6e2028617420736372697074206164647229200000815133573661a404920147203c2d20f09f9aab20e29ea1efb88f20f09f9281206e6f20696e7075742077697468205e206467546b6e3b206e6f742072657127643b2072657475726e696e672066616c73650a0050120013300e00b2330c60213308b01308802308a010010031330a9023309e0230b20200100248000cc25c080254c3bc04014c20808004c028004004c04801cc04c0194ccd5cd00108008a51230f6013095020012233307f00223002309f010010c7022330c90100148000428c048cc31c04005200223099013090020012330c5010014800888cc218080054c37804c01c00888cd5cd9984e811984e010a5113300a0020024901086e6f20776179207300333333333302702502201f01d01c01b0190170133064001230ee01307300123002309a01001232002533357346010002293099ab9c49011c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988c31804c25c04004250048c8dd60012999ab9a300400114984cd5ce24812a5761726e696e673a20696e76616c69642052656c617469766544656c65676174654c696e6b2064617461004981ac2400494cccccd5d20008a5014a0264a666aae7c0045280992999ab9a307f00113253335573e00229404c94ccd5cd18030008992999aab9f00114a0264a666ae68c1f40044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c1acd5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a02940528099ba548008dd8a4c46616e020029001099ba548000dd8a4c46616a02002900011801187f00800919190012999ab9a300500114984cd5ce2491a5761726e696e673a20696e76616c6964206c697374206461746100498dd600092999999aba40011325333573466e1cd55ce800a4020264a666666ae900045280a5013253335573e00229404c94ccd5cd1803000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502533333357480022940528098011bac00114a029408c8cc004004008894ccd55cf8008a5115333573460ec6ae840044cc008008d5d10008a502330af010014804094cccccd5d20008992999ab9a3370e6aae74005200e1325333333574800229405280992999aab9f00114a0264a666ae68c1d40044c94ccd55cf8008a501325333573460e2002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a0461b2026114040024a666666ae900044c94ccd5cd19b8735573a00290060992999999aba400114a029404c94ccd55cf8008a501325333573460e6002264a666aae7c0045280992999ab9a306f0011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330ab010014803094cccccd5d20008992999ab9a3370e6aae74005200a1325333333574800229405280992999aab9f00114a0264a666ae68c1dc0044c94ccd55cf8008a501325333573460e6002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a501325333573460e2002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008992999ab9a3370e6aae7400520061325333333574800229405280992999aab9f00114a0264a666ae68c1c00044c8ccd55cf800a514a06ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a02940528118510118788080092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd1837000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330a501001480108cccc0f80f00e80e4c3b80400494cccccd5d20008992999ab9a3370e6aae7400520021325333333574800229405280992999aab9f00114a0264a666ae68cccc1080fc0f40f00044c8ccd55cf800a514a06ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811985100800a400446666666603002c02802402001c01400c61d6020024a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a50132533357346666666603803202e02a02602201a012002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc27c04005200022222222223200253335734666666666601601401201000e00c00a008006004002293099ab9c4901345761726e696e673a20696e76616c696420416273747261637444656c656761746541637469766974696573456e756d20646174610049888888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a511533357346012002294454ccd5cd18050008a5114a04a666666ae900044c94ccd5cd19b8735573a00290060992999999aba400114a029404c94ccd55cf8008a501325333573466666604604404204003e03c002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc26c04005200c230a10130f7010012304730e301001253333335748002264a666ae68cdc39aab9d001480284c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a306500113253335573e00229404c94ccd5cd1830800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811984b80800a40144613a0261e6020024608661be020024a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a501325333573460c2002264a666aae7c0045280992999ab9a305d0011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50233093010014802094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046612202002900312999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd19999999981381281101000f80f00e80d80c000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a5023308f010014801094cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046611a02002900112999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd182c8008992999aab9f00114a0264a666ae68c1540044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc22c0400520002222222232002533357346666666601201000e00c00a008006004002293099ab9c49012b5761726e696e673a20696e76616c6964204361706f4c6966656379636c654163746976697479206461746100498888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a5114a00e04a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a501325333573460a8002264a666aae7c0045280992999ab9a305000113253335573e00229404c94ccd5cd18290008992999aab9f00114a0264a666ae68c0f40044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a0294052812999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd18290008992999aab9f00114a0264a666ae68c1380044c94ccd55cf8008a501325333573460a0002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502222533357346004002294454ccd5cd18018008a511533357346008002294452812999999aba40011325333573466e1cd55ce800a4010264a666666ae900045280a5013253335573e00229404c94ccd5cd18250008992999aab9f00114a0264a666ae68c14c0044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008992999ab9a3370e6aae7400520061325333333574800229405280992999aab9f00114a0264a666ae68c1240044c94ccd55cf8008a501325333573460a4002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a50132533357346090002264a666aae7c0045280992999ab9a30440011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a304700113253335573e00229404c94ccd5cd1821800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052812999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd1823000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50222222533357346004002294454ccd5cd18018008a511533357346008002294454ccd5cd18028008a51153335734600c002294452812999999aba40011325333573466e1cd55ce800a401c264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc1f0005200e13374a90061bb149894cccccd5d20008992999ab9a3370e6aae74005200c132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04660f2002900612999999aba40011325333573466e1cd55ce800a4014264a666666ae900045280a5013253335573e00229404c94ccd5cd181f800899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480204c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a303e0011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290030992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480104c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a02940528099ba548008dd8a4c4a666666ae900044c94ccd5cd19b8735573a00290010992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a50233072001480084cdd2a40006ec526253333335748002264a666ae68cdc39aab9d001480004c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a02940528119837800a4000444444444a666ae68c0080045288a999ab9a300300114a22a666ae68c0100045288a999ab9a300500114a22a666ae68c0180045288a999ab9a300700114a22a666ae68c0200045288a999ab9a300900114a229403a00494cccccd5d20008992999ab9a3370e6aae740052004132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290010992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a5023306a0014800894cccccd5d20008992999ab9a3370e6aae7400520001325333333574800229405280992999aab9f00114a0264a666ae68c0d80044c94ccd55cf8008a50132533357346064002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04660d000290001111190012999ab9a333300500400300200114984cd5ce2492f5761726e696e673a20696e76616c69642044656c65676174654c6966656379636c65416374697669747920646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a0461c0026ae840048c24004cc03800522010340696400232002533357346004002293099ab9c4911d5761726e696e673a20696e76616c696420416e794461746120646174610049894ccd5cd1998100009ba9488103747065000251533357346660400026ea5221034069640001f14a22a66ae712411d5761726e696e673a20696e76616c696420416e794461746120646174610014a02a66ae7124011d5761726e696e673a20696e76616c696420416e794461746120646174610014a046464646600c004002660080024646a666ae68c13c00448cc138c1340040144928000800982685480984a80800911919800800801912999aab9f001130dd014901096e6f7420666f756e640013253335734600800220022660060066ae88008c030d55ce9aba10012233330610023046001230dc01001130da0149010d6b6579206e6f7420666f756e640023232002533357346006002293099ab9c491195761726e696e673a20696e76616c6964206d6170206461746100498dd580091919800800801112999aab9f00114a2264a666ae68c074d55ce8008a999ab9a302a35573c0022660060066ae880085280a5035742002444444464646466ae6ccc2f804cc2d804c174009200049011a6d697373696e67207265716420746e206f7220746e4279746573003307f330a60100a002001533357340082006290012999ab9a005100415307c0015333573400c200a2921002223233573666600a00894400528a999ab9a002100114a24446466ae6cc35804cc3540524104e29d972000004330b601001330d5014901132020e29d8ce29d8c205e206661696c65643a200000453335734004200229448c34804cc34404cc34405241182020f09f9fa52020f09f98b3f09f92a62020544f444f3a2000001491010a000d301223300337560040024464646600200200844a666aae7c0044c35004cdcb1b99375c6ea4011241113a206669656c64206e6f7420666f756e640013232325333573466ebc00801840044cc014014d5d10021aab9e00235573a0026ae84004dd480091999811000a400002260049020112999999aba400114a029405280a501325333573466e24dc68008018a5114a06eb800433804c0752038213766605000246ae84c0880048c1f8c2a8040040d8888c8ccc00400401000c8894ccd55cf801099ba54800825c044c94ccd5cd1801000899ba548000c25c04c0140044ccc010010d5d10018011aba1002223008330030020012233006002233004001002223253335734600a00226600800460ec60ea0022940c1ecc1e80082f4048cdc39aab9d37540029001111980e9837801000919985e80800911982b00118520080083112999999aba400114a029405280a50132325333573466e1c005200014a22666ae68cdc3800a4070945281b8d001375c0024666666ae90005282504a0941289112999999aba400314a0264646600200200444a666aae7c00454cd5ce19b9649011a5761726e696e673a206669656c64206e6f7420666f756e643a200037326eb801452809919192999ab9a3375e0040102600e00226600a00a6ae88010d55cf0011aab9d001357420026eac00c5280a5014a046ae84c13c0048d5d0981900091aba13030001235742605c0024a666666ae900045280a5014a029404c28004dd7000925170016c024666600e002900000180112999999aba400114a229405280a5014a04666600a00290000018011199999aba40014a0941282514a04a666666ae900044c8c8c94ccd5cd19b874800000854ccd55cf8008a50153335573e6ae880044cc01520403574200229405281aab9e00235573a0026ea80045280a5014a02940894cccccd5d20008a5014a029405280992999ab9a3370e6e3400400c5288a50375c0024444a666666ae900104c94ccd5cd19b8735573a002008264a666aae7c0045280a999ab9a300435742002264a666aae7c0045280a999ab9a3004357420022a666aae7cd5d10008a5114a02940d5d10008a5035573c0022940dd50020a5014a0294052811aba13004001235742600400246ae88c0080048d5d1180100091aba230090010a901232330010010022253335573e00229000099b8033002002357440029001111998160010008391119baf3003002300300174eae848d5d09801000aba20a1013374a900103491bac3081010012305d307e0012133006225333573466e1c0092000132323372c00466e5924101230000133300848008c01494c24804004008ccc01d2000253006001001153009003001223253333335748004002002002260066eb4008004c01c00484cc010894ccd5cd19b87002480004ccc0152000300425309501001001153007003001223253333335748004002002002002260066eb8008c014004888c8ccc0040040080108894ccd55cf8010a49093c6d697373696e673e0015333573466e1c005200013230060013574200426660060066ae88008cdc0800a40044464a666666ae900084c8cc010d55ce8009aab9e00137540040020020020026006002426466446600400400244a666666ae900044c8c8c8cc268054c23804008cc268052401017b003309a0133006001233006006001491017d0035573c0046aae74004dd50008991984c00a481017b00330980133004001232323309b010023309b01491013a000013300500535573c004660080086aae74005241017d0037560022646613002921015b00330980133004001233004004001491015d003758002264a6118020026eb40044c94c24804004dd70008011119984a80801112999ab9a33059002490100130030011330980100233098014901012c003003001491000960106300175e46602e002900111bab3002001235742600400246ae88c0080048d5d1180100091aba23002001235744600400246ae88c0700041608c040c1ac00484dd99814000800909bb3001714e3484dca000919801000b8d222232323001300200423230013003004233371800466e04004cc020009200000725333573466e20005200013370066e00c0100152002001100122333573466e20008004004009c8111998018010009bb2498888c8ccc00400401000c8894ccd55cf80108020992999ab9a300200113357400026660080086ae8800c0084ccc010010d5d10018011aba1002223370e6aae74dd50010009111191998008008028021112999aab9f0020041325333573466ebc008d55ce800898031aab9e0011333004004357440060046ae84009d6911919800800801912999aab9f00110011332233300700200100535742002660040046ae88004888c8cc00400400c894ccd55cf800899aba0005001132533357346600800c002266ae800180084cd5d0000998018019aba200235742002eac1d88dcc9bae00174c44464666002002008004444a666aae7c00840044cd5d018029aba10023330030033574400400246eacc0080048d5d0980100091aba23002001235744606000244666006004002e00888c8ccc004004cc05801000cdd924c444a666aae7c00840044c8c8c94ccd55cf8008801099aba0337600066e98004008ccc024018cc060020008cc06001c008ccc010010d5d10018011aba100222232333001001330150030023764931112999aab9f002100113232325333573466e1c00520001002133574066ec000cdd4000801198041980f0038011980f0030011998020021aba2003002357420044464646600200200844a666aae7c0044c1b924110706f6c696379206e6f7420666f756e640015333573466ebcd55ce9aba1001003137566aae78d5d08008998010011aba200130330012132330010010022253335573e00229444cc17c4c010dd59aab9e357420022660040046ae880048c8cc004004008894ccd55cf8008a5113305e13370e6eb4d55cf1aba1001480004cc008008d5d10008151080083311191919800800802112999aab9f00114a02a666ae68cdd79aab9d3574200200629444cc008008d5d1000981680080a109b98001225333573466e1d200000110041323233574066ec0008dd319aba033760002600a0066ec926376493182300198190013a83764931119980180100091181c99b880020012223233001001330070040032253335573e00229444c94ccd5cd181d19980400219803803000998038028008a50133003003357440046ae8400488c8cc00400400c894ccd55cf80089bb249854ccd5cd19baf35573a6ae8400400c4dd59aab9e357420022660040046ae88004888c8cc004004cc01400c008894ccd55cf8008a511325333573460706600c6601800a0026601800800229404cc00c00cd5d10011aba1001223232323300600300133300100100200322253335573e0022054264a666ae68cc0240140044ccc01001000cd5d1001099aba0001333004004003357440046aae74d5d0800980300111191998008008010019112999aab9f001100213357406ae84004ccc00c00c008d5d10009119801801119baf001002223233300100100300222253335573e004294054ccd5cd18009aba100214a226660060066ae880080048c8cc004004008894ccd55cf8008811899aba035573a6ae84004cc008008d5d100091191998008008018011112999aab9f00214800054ccd5cd19baf35573a6ae840080044dd69aab9e3574200426660060066ae880080048dd6180a800898011800980418039819a80591980c000a4004460046042002002eb88cdd2a40046030600400205203603400244604466ebc0080044c8c8cc004004c060058894ccd55cf80089825249096e6f7420666f756e64001325333573466ebcc01400401040044cc00c00cd5d10011aba10015002016130150013027012237526e6000488c070cc00c008005cb80091aba1300200123574460460024646464a666ae68cdc38012400826ae840044c105241136e6f7420616e20696e6c696e6520646174756d0035573c0046aae74004dd500091180b1981c801000819912999ab9a3370e6aae74dd500100088010981e2491c756e657870656374656420636f6e7374727563746f7220696e64657800223374a9000198021801801180c00080a9119aba0002300300123357400020046ec52622323232323330020020010062253335573e002290000a999ab9a3375e6aae74d5d080080209bad35573c6ae840044cc008008d5d10009112999aab9f00114800054ccd5cd19baf35573a6ae840040144cc008008dd59aab9e3574200226660060060046ae88004c068008c018004c00c0040d48dd6180100091aba130160012375c0024a666666ae900045280a5014a0294052891aab9d375400246aae78dd500092999999aba400114a229405280a5014a0e1c88c00ccdc48010009199ab9a0014a094488cd5ce19813800a980180100110999ab9a00149104747275650049010566616c7365000012137666004002ea4894ccd5cd28010a511500122533357340042930a99ab9c0011623003300200100223756600400246ae84c0080048d5d1180100091aab9e37540024446660340064464646603e00866603a004466040a666ae68cc07000522100149100133020530190014901010a003330180022333020001223232333023002233301d00225333573466046010911001533357346603a201c201a26604e92010461646120003302753013001491010a001330274901096c6f76656c6163652000330275301b001491010a0013302749010320202e003302753010002330274901012000330275301b001491010a0014910014910035573c0046aae74004018524010014910035573c0046aae740052401002153335734600400226e6400454c0480048c8c8cc0040052000225333573466e1c00400c5288992999ab9a33712002907f0089980180199b800024800854ccd5cd19b8733706002902024018264a666ae68cdc480080289980399b8e006337000069001112999ab9a002132533357346602a266e25208002001133712002907f0f8998038038020a503370066e08cdc3002240809040008008a5014a066e00009200415333573466e1ccdc1800a4040900e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd0010992999ab9a33017133712904010000899b89001483fbfc1c4cc02402401852819b803370466e1801920204820100cdc019b8200348200040045280a5014a066e00009200615333573466e1ccdc1800a4020901e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd00109980599b8e00a3370000e9003112999ab9a0021325333573466032266e2520808008001133712002907f7fff808998058058040a503370066e08cdc3004240209040401019b803370400a90402019b80337040069040008008a5014a0294052819b800024802052819b8e004001371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a0900010992999ab9a33710004900009980b249012d0030013370400490008980080111980b2980529804298030009980b249012e0037326600a660080020120069006386223233330010010034800122010022225333573466e1c00d200015333573466e2401400840044cccc010011200033700004900119b8b481800044cccc010010cdc1801a402866e00009200233716601800600200242a666ae68cdc4000a4000266e08005200110012133706002004904044bd109b99325333573466e200092000133716902d19980080099b820024800522100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b300500200123370066e18005201448180894ccd5cd28010a8008a5022253333335748006002002002260046eb400c0048894cccccd5d2001800898011bab00300100100100121323300100100222325333573466e21200000113372c6e64c8ccd5cd19b87371a002900119b8b48180004004dcc2980299b8e00248000cc00c00cccdc624004002004292100371a00242646e654ccd5cd19b88002480004cdc5a40b466600200266e08009200148810013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc300124040002e3c8894cccccd5d2001800800800800898011bae0032223233300100100400222253335573e004200226660060066ae88008cc014004d5d08013962335738002931299ab9c0011600120011", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common7 = __core__fstPair(__core__unConstrData(__DATUM));
    __common8 = __core__equalsInteger(__common7, 0);
    __common11 = __core__fstPair(__core__unConstrData(__REDEEMER));
    __common12 = __core__equalsInteger(__common11, 4);
    __common5 = __core__unConstrData(__CONTEXT);
    __common6 = __core__sndPair(__common5);
    __helios__common__fold = (self_1, fn, z) -> {
        recurse_1 = (recurse, self_2, z_1) -> {
            __core__chooseList(self_2, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_2), fn(z_1, __core__headList__safe(self_2)))
            })()
        };
        recurse_1(recurse_1, self_1, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__bytearray__show = (self_5) -> {
        recurse_5 = (recurse_4, self_6) -> {
            n = __core__lengthOfByteString(self_6);
            __core__ifThenElse(
                __core__lessThanInteger(0, n),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);
                    recurse_3 = (recurse_2, self_4, bytes) -> {
                        digit = __core__modInteger(self_4, 16);
                        bytes_1 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_4, 16),
                            () -> {
                                bytes_1
                            },
                            () -> {
                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_1)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_3, 0),
                        () -> {
                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))
                        },
                        () -> {
                            recurse_3(recurse_3, self_3, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_6)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_5(recurse_5, self_5)
    };
    __helios__int__show = (self_7) -> {
        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);
            __core__ifThenElse(
                __core__lessThanInteger(i, 10),
                () -> {
                    bytes_3
                },
                () -> {
                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_7, 0),
            () -> {
                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_7, -1), #))
            },
            () -> {
                recurse_7(recurse_7, self_7, #)
            }
        )())
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __core__lessThanEqualsInteger(128, c_2),
                                                                () -> {
                                                                    __core__lessThanEqualsInteger(c_2, 2047)
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(2048, c_1),
                                                                                    () -> {
                                                                                        __core__lessThanEqualsInteger(c_1, 65535)
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )(),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(65536, c),
                                                                                                        () -> {
                                                                                                            __core__lessThanEqualsInteger(c, 2097151)
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )(),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__value__show = (self_13) -> {
        __helios__common__fold(self_13, (prev, pair) -> {
            mph_data = __core__fstPair(pair);
            tokens_data = __core__sndPair(pair);
            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                __core__appendString(__core__ifThenElse(
                    __core__equalsByteString(mph, #),
                    () -> {
                        ""
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph), "
")
                    }
                )(), __core__chooseData(tokens_data, () -> {
                    ""
                }, () -> {
                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {
                        token_name_data = __core__fstPair(pair_1);
                        qty_data = __core__sndPair(pair_1);
                        __helios__common__unBData__safe(token_name_data, (token_name) -> {
                            __core__chooseData(qty_data, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                qty = __core__unIData__safe(qty_data);
                                __core__ifThenElse(
                                    __core__equalsByteString(mph, #),
                                    () -> {
                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "
"))
                                    },
                                    () -> {
                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(
                                            __helios__string__is_valid_utf8(token_name),
                                            () -> {
                                                __core__decodeUtf8__safe(token_name)
                                            },
                                            () -> {
                                                __helios__bytearray__show(token_name)
                                            }
                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "
"))))
                                    }
                                )()
                            }, () -> {
                                ""
                            })()
                        }, () -> {
                            ""
                        })
                    }, prev)
                }, () -> {
                    ""
                }, () -> {
                    ""
                }, () -> {
                    ""
                })())
            }, () -> {
                ""
            }))
        }, "")
    };
    __helios__scriptcontext__tx = __core__headList(__common6);
    __common9 = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)));
    __common10 = __core__unListData(__common9);
    __helios__value__get_safe = (self_24, assetClass) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        outer_1 = (outer, inner, map) -> {
            __core__chooseList(map, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map)), mintingPolicyHash),
                    () -> {
                        inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                    },
                    () -> {
                        outer(outer, inner, __core__tailList__safe(map))
                    }
                )()
            })()
        };
        outer_1(outer_1, (inner_1, map_1) -> {
            __core__chooseList(map_1, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                    },
                    () -> {
                        inner_1(inner_1, __core__tailList__safe(map_1))
                    }
                )()
            })()
        }, self_24)
    };
    __helios__assetclass__new = (mph_1, token_name_1) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))
    };
    __helios__common__assert_constr_index = (data_8, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_2),
            () -> {
                data_8
            },
            () -> {
                error()
            }
        )()
    };
    __helios__txoutputdatum__inline = (self_26) -> {
        pair_2 = __core__unConstrData(self_26);
        index = __core__fstPair(pair_2);
        fields = __core__sndPair(pair_2);
        __core__ifThenElse(
            __core__equalsInteger(index, 2),
            () -> {
                __core__headList(fields)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common6));
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                error()
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __common10)
    };
    __helios__value__get_inner_map_int = (map_2, key) -> {
        recurse_15 = (recurse_14, map_3, key_1) -> {
            __core__chooseList(map_3, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), key_1),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_3)))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(map_3), key_1)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, map_2, key)
    };
    __helios__common__any = (self_32, fn_1) -> {
        recurse_19 = (recurse_18, self_33, fn_2) -> {
            __core__chooseList(self_33, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_33)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_33), fn_2)
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_32, fn_1)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        (aKeys) -> {
            recurse_23 = (recurse_22, keys, map_6) -> {
                __core__chooseList(map_6, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_3 = __core__fstPair(__core__headList__safe(map_6));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_1) -> {
                            __core__equalsData(item_1, key_3)
                        }),
                        () -> {
                            recurse_22(recurse_22, keys, __core__tailList__safe(map_6))
                        },
                        () -> {
                            __core__mkCons(key_3, recurse_22(recurse_22, keys, __core__tailList__safe(map_6)))
                        }
                    )()
                })()
            };
            b_5 = recurse_23(recurse_23, aKeys, b_6);
            recurse_21 = (recurse_20, lst_2, rem) -> {
                __core__chooseList(rem, () -> {
                    lst_2
                }, () -> {
                    __core__mkCons(__core__headList__safe(rem), recurse_20(recurse_20, lst_2, __core__tailList__safe(rem)))
                })()
            };
            recurse_21(recurse_21, b_5, aKeys)
        }(recurse_17 = (recurse_16, map_5) -> {
            __core__chooseList(map_5, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_5)), recurse_16(recurse_16, __core__tailList__safe(map_5)))
            })()
        };
        recurse_17(recurse_17, a_6))
    };
    __helios__value__get_inner_map = (map_7, mph_2) -> {
        recurse_27 = (recurse_26, map_8) -> {
            __core__chooseList(map_8, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_8)), mph_2),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_8)))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_8))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_7)
    };
    __helios__value__contains_policy = (self_35) -> {
        recurse_31 = (recurse_30, map_9) -> {
            __core__chooseList(map_9, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), __core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_9))
                    }
                )()
            })()
        };
        recurse_31(recurse_31, self_35)
    };
    __helios__value__get_policy = (self_38, mph_6) -> {
        mph_7 = __core__bData(mph_6);
        recurse_37 = (recurse_36, map_11) -> {
            __core__chooseList(map_11, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_7),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_11))
                    }
                )()
            })()
        };
        recurse_37(recurse_37, self_38)
    };
    __helios__value____add = (a_12, b_12) -> {
        recurse_41 = (recurse_40, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_7 = __core__headList__safe(keys_4);
                tail_1 = recurse_40(recurse_40, __core__tailList__safe(keys_4));
                item_2 = (a_10, b_10) -> {
                    recurse_39 = (recurse_38, keys_3) -> {
                        __core__chooseList(keys_3, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_6 = __core__headList__safe(keys_3);
                            tail = recurse_38(recurse_38, __core__tailList__safe(keys_3));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_10, key_6), __helios__value__get_inner_map_int(b_10, key_6));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_6, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_39(recurse_39, __helios__value__merge_map_keys(a_10, b_10))
                }(__helios__value__get_inner_map(a_12, key_7), __helios__value__get_inner_map(b_12, key_7));
                __core__chooseList(item_2, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_7, __core__mapData(item_2)), tail_1)
                })()
            })()
        };
        recurse_41(recurse_41, __helios__value__merge_map_keys(a_12, b_12))
    };
    __helios__common__enum_field_4 = (self_41) -> {
        __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_41)))))))
    };
    __helios__common__map_get = (self_44, key_8, fnFound, fnNotFound) -> {
        recurse_49 = (recurse_48, self_45, key_9) -> {
            __core__chooseList(self_45, fnNotFound, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    __core__equalsData(key_9, __core__fstPair(head_2)),
                    () -> {
                        fnFound(__core__sndPair(head_2))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(self_45), key_9)
                    }
                )()
            })()
        };
        recurse_49(recurse_49, self_44, key_8)
    };
    __helios__common__filter = (self_46, fn_4, nil) -> {
        recurse_51 = (recurse_50, self_47, fn_5) -> {
            __core__chooseList(self_47, () -> {
                nil
            }, () -> {
                head_3 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_5(head_3),
                    () -> {
                        __core__mkCons(head_3, recurse_50(recurse_50, __core__tailList__safe(self_47), fn_5))
                    },
                    () -> {
                        recurse_50(recurse_50, __core__tailList__safe(self_47), fn_5)
                    }
                )()
            })()
        };
        recurse_51(recurse_51, self_46, fn_4)
    };
    __helios__common__enum_fields_after_4 = (self_55) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_55)))))))
    };
    __helios__common__find_safe = (self_85, fn_11) -> {
        recurse_61 = (recurse_60, self_86, fn_12) -> {
            __core__chooseList(self_86, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_6 = __core__headList__safe(self_86);
                __core__ifThenElse(
                    fn_12(head_6),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_6, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(self_86), fn_12)
                    }
                )()
            })()
        };
        recurse_61(recurse_61, self_85, fn_11)
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_67 = (recurse_66, map_20) -> {
            __core__chooseList(map_20, () -> {
                error()
            }, () -> {
                item_6 = __core__fstPair(__core__headList__safe(map_20));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_6)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_6),
                    () -> {
                        item_6
                    },
                    () -> {
                        recurse_66(recurse_66, __core__tailList__safe(map_20))
                    }
                )()
            })()
        };
        recurse_67(recurse_67, redeemers))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput = (self_112, inputs, mph_10, __useopt__required, required) -> {
        required_1 = __core__ifThenElse(
            __useopt__required,
            () -> {
                required
            },
            () -> {
                true
            }
        )();
        (uutName) -> {
            __cond_1 = __core__headList(__core__tailList(self_112));
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_1)), 1),
                () -> {
                    (__lhs_0_2) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                error()
                            },
                            () -> {
                                __core__constrData(1, __core__mkNilData(()))
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0) -> {
                        vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0))));
                        needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                        ac = __helios__assetclass__new(mph_10, __core__encodeUtf8(uutName));
                        __cond_2 = __helios__common__find_safe(inputs, (i_7) -> {
                            __core__ifThenElse(
                                __core__equalsData((self_22) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                                }(self_22 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                __core__headList(__core__sndPair(__core__unConstrData(self_22)))), needsAddrWithCred),
                                () -> {
                                    a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), ac);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(a_2, 0),
                                        false,
                                        true
                                    )
                                },
                                () -> {
                                    false
                                }
                            )()
                        });
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_2)), 0),
                            () -> {
                                (foundGood) -> {
                                    foundGood
                                }
                            },
                            () -> {
                                (__lhs_0_1) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            error()
                                        },
                                        () -> {
                                            __core__constrData(1, __core__mkNilData(()))
                                        }
                                    )()
                                }
                            }
                        )()(__cond_2)
                    }
                }
            )()(__cond_1)
        }(d = __core__headList(self_112);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput = (self_114, mph_11) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_114));
            ac_1 = __helios__assetclass__new(mph_11, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_9) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_9))));
                        a_2 = __helios__value__get_safe((outputs) -> {
                            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
                            }, __core__mkNilPairData(()))
                        }(self_69 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__filter(self_69, (output) -> {
                            (credential) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                                    () -> {
                                        __core__equalsByteString(vh_3, self_30 = __helios__common__assert_constr_index(credential, 1);
                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_30)))))
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            }(self_22 = __core__headList(__core__sndPair(__core__unConstrData(output)));
                            __core__headList(__core__sndPair(__core__unConstrData(self_22))))
                        }, __core__mkNilData(()))), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_2, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        (__cond_5) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_5)), 0),
                                () -> {
                                    (__lhs_0_8) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        false
                                    }
                                }
                            )()(__cond_5)
                        }(self_113 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_113, (o) -> {
                            a_2 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_2, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_114);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoDelegateHelpers__requiresNoDelegateInput = (delegateLink) -> {
        ac_2 = __helios__assetclass__new(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed, __core__encodeUtf8(d = __core__headList(delegateLink);
        __core__decodeUtf8(__core__unBData(d))));
        __core__ifThenElse(
            __helios__common__any(__common10, (i_8) -> {
                a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_8))));
                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), ac_2);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(a_2, 0),
                    false,
                    true
                )
            }),
            () -> {
                error()
            },
            () -> {
                __core__chooseUnit(msg_1 = __core__appendString("ok: no dgTkn input: ", d = __core__headList(delegateLink);
                __core__decodeUtf8(__core__unBData(d)));
                (), true)
            }
        )()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_118) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_118))))))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_119) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_119)))))))
    };
    __module__CapoHelpers__CapoDatum[]__countUpdatedThings = (self_128, oldDatum) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(self_128)), 0),
            () -> {
                (__lhs_0_13) -> {
                    nextSpendDelegate = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_13))));
                    nextSpendInvariants = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_13)))));
                    nextNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_13);
                    nextMintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_13);
                    nextMintInvariants = __core__unListData(__helios__common__enum_field_4(__lhs_0_13));
                    nextGovDelegate = __core__unListData(__core__headList(__helios__common__enum_fields_after_4(__lhs_0_13)));
                    nextManifest = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(__lhs_0_13))));
                    __lhs_0_14 = __helios__common__assert_constr_index(oldDatum, 0);
                    oldSpendDelegate = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_14))));
                    oldSpendInvariants = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_14)))));
                    oldNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_14);
                    oldMintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_14);
                    oldMintInvariants = __core__unListData(__helios__common__enum_field_4(__lhs_0_14));
                    oldGovDelegate = __core__unListData(__core__headList(__helios__common__enum_fields_after_4(__lhs_0_14)));
                    oldManifest = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(__lhs_0_14))));
                    __core__addInteger(__core__addInteger(__core__addInteger(__core__addInteger(__core__addInteger(__core__addInteger(__core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsByteString(__core__serialiseData(__core__listData(nextSpendDelegate)), __core__serialiseData(__core__listData(oldSpendDelegate))),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )(), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsData(__core__listData(nextSpendInvariants), __core__listData(oldSpendInvariants)),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )()), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsByteString(__core__serialiseData(__core__mapData(nextNamedDelegates)), __core__serialiseData(__core__mapData(oldNamedDelegates))),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )()), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsByteString(__core__serialiseData(__core__listData(nextMintDelegate)), __core__serialiseData(__core__listData(oldMintDelegate))),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )()), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsData(__core__listData(nextMintInvariants), __core__listData(oldMintInvariants)),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )()), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsByteString(__core__serialiseData(__core__listData(nextGovDelegate)), __core__serialiseData(__core__listData(oldGovDelegate))),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )()), __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsByteString(__core__serialiseData(__core__mapData(nextManifest)), __core__serialiseData(__core__mapData(oldManifest))),
                            false,
                            true
                        ),
                        () -> {
                            1
                        },
                        () -> {
                            0
                        }
                    )())
                }
            },
            () -> {
                (__8) -> {
                    error()
                }
            }
        )()(self_128)
    };
    __module__CapoHelpers__getTxCharterData = () -> {
        refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        hasCharter = (txin) -> {
            a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), __core__constrData(0, __core__mkCons(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mkCons(__core__bData(#63686172746572), __core__mkNilData(())))));
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_2, 0),
                false,
                true
            )
        };
        (charterUtxo) -> {
            __helios__common__assert_constr_index(data_117 = __helios__txoutputdatum__inline(self_28 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_28))))));
            __helios__common__assert_constr_index(data_117, 0), 0)
        }(__cond_8 = __helios__common__find_safe(refInputs_1, hasCharter);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_8)), 0),
            () -> {
                (self_22) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                }
            },
            () -> {
                (__lhs_0_15) -> {
                    __cond_9 = __helios__common__find_safe(__common10, hasCharter);
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_9)), 0),
                        () -> {
                            (self_22) -> {
                                __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                            }
                        },
                        () -> {
                            (__lhs_0_16) -> {
                                error()
                            }
                        }
                    )()(__cond_9)
                }
            }
        )()(__cond_8))
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (self_136) -> {
        (i_9) -> {
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_9);
            __core__chooseUnit(__core__ifThenElse(
                __core__chooseData(inputData, () -> {
                    true
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                })(),
                () -> {
                    (__lhs_0_19) -> {
                        index_8 = __core__fstPair(__core__unConstrData(__lhs_0_19));
                        fields_67 = __core__sndPair(__core__unConstrData(__lhs_0_19));
                        __cond_11 = __core__headList(fields_67);
                        __core__ifThenElse(
                            __core__chooseData(__cond_11, () -> {
                                true
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })(),
                            () -> {
                                (__lhs_0_20) -> {
                                    index2 = __core__fstPair(__core__unConstrData(__lhs_0_20));
                                    ()
                                }
                            },
                            () -> {
                                (__11) -> {
                                    ()
                                }
                            }
                        )()(__cond_11)
                    }
                },
                () -> {
                    (__10) -> {
                        ()
                    }
                }
            )()(inputData), inputData)
        }(self_22 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_136))));
        __core__headList(__core__sndPair(__core__unConstrData(self_22))))
    };
    __helios__list[__helios__data]__length = (lst_10) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_56(recurse_56, __core__tailList__safe(lst_11)), 1)
            })()
        };
        recurse_57(recurse_57, lst_10)
    };
    __module__CapoHelpers__DelegateInput[]__requiresValidOutput = (self_139) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__core__unListData(__core__headList(self_139)), __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_139)))))))
    };
    __module__CapoHelpers__CapoCtx[]____new = (charter) -> {
        __core__mkCons(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mkCons(charter, __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_2, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, self_147) -> {
        (dgtLink_1) -> {
            __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1(self_147, dgtLink_1, __core__constrData(1, __core__mkNilData(())))
        }(self_116 = __module__CapoHelpers__CapoCtx[]__getCharterData_2(self_147);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_116)))))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_3 = (self_148) -> {
        __cond_12 = __core__headList(__core__tailList(self_148));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 1),
            () -> {
                (self_129) -> {
                    data_117 = __core__headList(__core__sndPair(__core__unConstrData(self_129)));
                    __helios__common__assert_constr_index(data_117, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 2),
                    () -> {
                        (self_130) -> {
                            data_117 = __core__headList(__core__sndPair(__core__unConstrData(self_130)));
                            __helios__common__assert_constr_index(data_117, 0)
                        }
                    },
                    () -> {
                        (__12) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_12)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2 = (self_149, dgtLink_2, role_1) -> {
        (input_1, mph_15) -> {
            __core__mkCons(__core__listData(dgtLink_2), __core__mkCons(role_1, __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkCons(input_1, __core__mkCons(__core__bData(mph_15), __core__mkNilData(()))))))
        }(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(dgtLink_2, __common10, __core__unBData(__core__headList(self_149)), true, true), __core__unBData(__core__headList(self_149)))
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = () -> {
        (charterUtxo_2) -> {
            datum_5 = __helios__common__assert_constr_index(data_117 = __helios__txoutputdatum__inline(self_28 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_28))))));
            __helios__common__assert_constr_index(data_117, 0), 0);
            __module__CapoHelpers__CapoCtx[]____new(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_2, __core__mkNilData(())))))
        }(__cond_16 = __helios__common__find_safe(__common10, (txin_2) -> {
            a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_2))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), __core__constrData(0, __core__mkCons(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mkCons(__core__bData(#63686172746572), __core__mkNilData(())))));
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_2, 0),
                false,
                true
            )
        });
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_16)), 0),
            () -> {
                (self_22) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                }
            },
            () -> {
                (__lhs_0_31) -> {
                    error()
                }
            }
        )()(__cond_16))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(__core__sliceByteString(5, 32, __core__serialiseData(seedTxId)), #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_156, fn_19) -> {
        recurse_81 = (recurse_80, map_27) -> {
            __core__chooseList(map_27, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_27);
                __core__chooseUnit(fn_19(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_80(recurse_80, __core__tailList__safe(map_27)))
            })()
        };
        recurse_81(recurse_81, self_156)
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_164, comp_4) -> {
        recurse_47 = (recurse_46, lst_7) -> {
            __core__chooseList(lst_7, () -> {
                lst_7
            }, () -> {
                tail_2 = recurse_46(recurse_46, __core__tailList__safe(lst_7));
                x_3 = __core__headList__safe(lst_7);
                recurse_45 = (recurse_44, lst_5) -> {
                    __core__chooseList(lst_5, () -> {
                        __core__mkCons(x_3, lst_5)
                    }, () -> {
                        head = __core__headList__safe(lst_5);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head)), __core__unIData(__core__sndPair(head))),
                            () -> {
                                __core__mkCons(x_3, lst_5)
                            },
                            () -> {
                                __core__mkCons(head, recurse_44(recurse_44, __core__tailList__safe(lst_5)))
                            }
                        )()
                    })()
                };
                recurse_45(recurse_45, tail_2)
            })()
        };
        recurse_47(recurse_47, self_164)
    };
    __module__CapoMintHelpers__validateUutMinting = (seed_1, purposes, mkTokenName) -> {
        (delegateApproval) -> {
            valueMinted = __core__unMapData(__helios__common__enum_field_4(__helios__scriptcontext__tx));
            expectedValue = __helios__value____add(__core__mkNilPairData(()), (self_165) -> {
                recurse_87 = (recurse_86, lst_23) -> {
                    __core__chooseList(lst_23, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_23)), recurse_86(recurse_86, __core__tailList__safe(lst_23)))
                    })()
                };
                recurse_87(recurse_87, self_165)
            }(recurse_43 = (recurse_42, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    tnBytes_1 = __core__encodeUtf8(mkTokenName(purpose_2));
                    __core__chooseUnit(__core__ifThenElse(
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                            false,
                            true
                        ),
                        () -> {
                            ()
                        },
                        () -> {
                            error()
                        }
                    )(), assetClass_1 = __helios__assetclass__new(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed, tnBytes_1);
                    mph_3 = __core__headList(__core__sndPair(__core__unConstrData(assetClass_1)));
                    tokenName_1 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_1))));
                    __core__mkCons(__core__mkPairData(mph_3, __core__mapData(__core__mkCons(__core__mkPairData(tokenName_1, __core__iData(1)), __core__mkNilPairData(())))), __core__mkNilPairData(())))), recurse_42(recurse_42, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_43(recurse_43, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                ()
            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_36) -> {
                (b_15, __16) -> {
                    __core__ifThenElse(
                        __core__equalsByteString(b_15, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed),
                        false,
                        true
                    )
                }(__core__unBData(__core__fstPair(pair_36)), __core__unMapData(__core__sndPair(pair_36)))
            }, __core__mkNilPairData(())));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b_2 = __helios__common__any(__common10, (input_2) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_2))), seed_1)
                });
                __core__ifThenElse(
                    b_2,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), (otherPoliciesMintOk) -> {
                __core__chooseUnit(__core__ifThenElse(
                    otherPoliciesMintOk,
                    () -> {
                        ()
                    },
                    () -> {
                        error()
                    }
                )(), __core__ifThenElse(
                    thisPolicyMintOK,
                    () -> {
                        otherPoliciesMintOk
                    },
                    () -> {
                        false
                    }
                )())
            }(remainingExpectedMint = __core__ifThenElse(
                __helios__value__contains_policy(expectedValue),
                () -> {
                    recurse_85 = (recurse_84, self_162) -> {
                        __core__chooseList(self_162, () -> {
                            self_162
                        }, () -> {
                            head_45 = __core__headList__safe(self_162);
                            tail_4 = __core__tailList__safe(self_162);
                            __core__ifThenElse(
                                __core__equalsData(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__fstPair(head_45)),
                                () -> {
                                    recurse_84(recurse_84, tail_4)
                                },
                                () -> {
                                    __core__mkCons(head_45, recurse_84(recurse_84, tail_4))
                                }
                            )()
                        })()
                    };
                    recurse_85(recurse_85, expectedValue)
                },
                () -> {
                    expectedValue
                }
            )();
            __core__ifThenElse(
                recurse_35 = (recurse_34, map_10) -> {
                    __core__chooseList(map_10, () -> {
                        true
                    }, () -> {
                        __core__ifThenElse(
                            tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_10)));
                            recurse_33 = (recurse_32, tokens_2) -> {
                                __core__chooseList(tokens_2, () -> {
                                    true
                                }, () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                        () -> {
                                            recurse_32(recurse_32, __core__tailList__safe(tokens_2))
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            };
                            recurse_33(recurse_33, tokens_1),
                            () -> {
                                recurse_34(recurse_34, __core__tailList__safe(map_10))
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                };
                recurse_35(recurse_35, remainingExpectedMint),
                () -> {
                    true
                },
                () -> {
                    __core__chooseUnit(recurse_83 = (recurse_82, map_28) -> {
                        __core__chooseList(map_28, () -> {
                            ()
                        }, () -> {
                            head_44 = __core__headList__safe(map_28);
                            __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_2, expectedCount) -> {
                                    __core__ifThenElse(
                                        (b_2) -> {
                                            __core__ifThenElse(
                                                b_2,
                                                false,
                                                true
                                            )
                                        }(__cond_23 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_2), (x_9) -> {
                                            __core__constrData(0, __core__mkCons(x_9, __core__mkNilData(())))
                                        }, () -> {
                                            __core__constrData(1, __core__mkNilData(()))
                                        });
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_23)), 1),
                                            () -> {
                                                (__lhs_0_52) -> {
                                                    false
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_51) -> {
                                                    actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_51))));
                                                    __core__equalsInteger(actualCount, expectedCount)
                                                }
                                            }
                                        )()(__cond_23)),
                                        () -> {
                                            error()
                                        },
                                        () -> {
                                            ()
                                        }
                                    )()
                                })
                            }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_82(recurse_82, __core__tailList__safe(map_28)))
                        })()
                    };
                    recurse_83(recurse_83, remainingExpectedMint), true)
                }
            )()))))))
        }(__lhs_0_50 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_50);
        true)
    };
    __module__Capo__requiresAuthorization = (ctd_1) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__core__unListData(__core__headList(__helios__common__enum_fields_after_4(ctd_1))), #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)
    };
    __module__Capo__getCharterOutput = (tx_1) -> {
        (__cond_24) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_24)), 1),
                () -> {
                    (__lhs_0_54) -> {
                        error()
                    }
                },
                () -> {
                    (self_22) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                    }
                }
            )()(__cond_24)
        }(self_113 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(tx_1))))));
        __helios__common__find_safe(self_113, (txo) -> {
            a_9 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo)))));
            recurse_29 = (recurse_28, keys_2) -> {
                __core__chooseList(keys_2, () -> {
                    true
                }, () -> {
                    key_5 = __core__headList__safe(keys_2);
                    __core__ifThenElse(
                        b_2 = (a_7, b_7) -> {
                            recurse_25 = (recurse_24, keys_1) -> {
                                __core__chooseList(keys_1, () -> {
                                    true
                                }, () -> {
                                    key_4 = __core__headList__safe(keys_1);
                                    __core__ifThenElse(
                                        b_2 = (a_qty, b_qty) -> {
                                            __core__ifThenElse(
                                                __core__lessThanInteger(a_qty, b_qty),
                                                false,
                                                true
                                            )
                                        }(__helios__value__get_inner_map_int(a_7, key_4), __helios__value__get_inner_map_int(b_7, key_4));
                                        __core__ifThenElse(
                                            b_2,
                                            false,
                                            true
                                        ),
                                        () -> {
                                            false
                                        },
                                        () -> {
                                            recurse_24(recurse_24, __core__tailList__safe(keys_1))
                                        }
                                    )()
                                })()
                            };
                            recurse_25(recurse_25, __helios__value__merge_map_keys(a_7, b_7))
                        }(__helios__value__get_inner_map(a_9, key_5), __helios__value__get_inner_map(__core__mkCons(__core__mkPairData(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mapData(__core__mkCons(__core__mkPairData(__core__bData(#63686172746572), __core__iData(1)), __core__mkNilPairData(())))), __core__mkNilPairData(())), key_5));
                        __core__ifThenElse(
                            b_2,
                            false,
                            true
                        ),
                        () -> {
                            false
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(keys_2))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, __helios__value__merge_map_keys(a_9, __core__mkCons(__core__mkPairData(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mapData(__core__mkCons(__core__mkPairData(__core__bData(#63686172746572), __core__iData(1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))))
        }))
    };
    __core__ifThenElse(
        input_3 = __helios__scriptcontext__get_current_input();
        __core__chooseUnit(msg_1 = __core__appendString("  -- Capo: checks spend of ", __helios__value__show(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17)))))));
        (), allDatumSpecificChecks = __core__ifThenElse(
            __common8,
            () -> {
                (ctd_2) -> {
                    __core__ifThenElse(
                        __core__equalsInteger(__common11, 5),
                        () -> {
                            (__lhs_0_61) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__common11, 0),
                                () -> {
                                    (__lhs_0_60) -> {
                                        true
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __common12,
                                        () -> {
                                            (__lhs_0_59) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__19) -> {
                                                charterOutput = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
                                                __common13 = __core__unConstrData(charterOutput);
                                                __common14 = __core__sndPair(__common13);
                                                (cvh) -> {
                                                    __core__chooseUnit(__core__ifThenElse(
                                                        (a_4) -> {
                                                            __core__ifThenElse(
                                                                __core__equalsData(a_4, __core__constrData(1, __core__mkCons(__core__bData(cvh), __core__mkNilData(())))),
                                                                false,
                                                                true
                                                            )
                                                        }(self_22 = __core__headList(__common14);
                                                        __core__headList(__core__sndPair(__core__unConstrData(self_22)))),
                                                        () -> {
                                                            error()
                                                        },
                                                        () -> {
                                                            ()
                                                        }
                                                    )(), newDatum = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__common14))));
                                                    __core__ifThenElse(
                                                        __core__ifThenElse(
                                                            __core__equalsByteString(__core__serialiseData(ctd_2), __core__serialiseData(newDatum)),
                                                            false,
                                                            true
                                                        ),
                                                        () -> {
                                                            error()
                                                        },
                                                        () -> {
                                                            true
                                                        }
                                                    )())
                                                }((self_30) -> {
                                                    __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_30))))
                                                }((data_9) -> {
                                                    __helios__common__assert_constr_index(data_9, 1)
                                                }((self_22) -> {
                                                    __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                                                }((self_22) -> {
                                                    __core__headList(__core__sndPair(__core__unConstrData(self_22)))
                                                }(self_16 = __helios__scriptcontext__get_current_input();
                                                __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_16)))))))))
                                            }
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__REDEEMER)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common7, 1),
                    () -> {
                        (__lhs_0_57) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__common11, 2),
                                () -> {
                                    (__lhs_0_58) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__18) -> {
                                        error()
                                    }
                                }
                            )()(__REDEEMER)
                        }
                    },
                    () -> {
                        (__lhs_0_55) -> {
                            __core__ifThenElse(
                                __common12,
                                () -> {
                                    (__lhs_0_56) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__17) -> {
                                        error()
                                    }
                                }
                            )()(__REDEEMER)
                        }
                    }
                )()
            }
        )()(__DATUM);
        allActivitySpecificChecks = __core__ifThenElse(
            __common12,
            () -> {
                (__lhs_0_92) -> {
                    charterData_2 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(), 0);
                    datumId = __core__ifThenElse(
                        __core__equalsInteger(__common7, 2),
                        () -> {
                            (__lhs_0_93) -> {
                                __core__ifThenElse(
                                    __core__chooseData(__DATUM, () -> {
                                        true
                                    }, () -> {
                                        false
                                    }, () -> {
                                        false
                                    }, () -> {
                                        false
                                    }, () -> {
                                        false
                                    })(),
                                    () -> {
                                        (__lhs_0_94) -> {
                                            fields_68 = __core__sndPair(__core__unConstrData(__lhs_0_94));
                                            self_93 = __core__headList(fields_68);
                                            __core__unBData(map_15 = __core__unMapData(self_93);
                                            recurse_63 = (recurse_62, map_16) -> {
                                                __core__chooseList(map_16, () -> {
                                                    error()
                                                }, () -> {
                                                    head_7 = __core__headList__safe(map_16);
                                                    key_12 = __core__fstPair(head_7);
                                                    value_3 = __core__sndPair(head_7);
                                                    __core__ifThenElse(
                                                        __core__equalsData(key_12, __core__bData(#406964)),
                                                        () -> {
                                                            value_3
                                                        },
                                                        () -> {
                                                            recurse_62(recurse_62, __core__tailList__safe(map_16))
                                                        }
                                                    )()
                                                })()
                                            };
                                            recurse_63(recurse_63, map_15))
                                        }
                                    },
                                    () -> {
                                        (__31) -> {
                                            error()
                                        }
                                    }
                                )()(__DATUM)
                            }
                        },
                        () -> {
                            (__30) -> {
                                error()
                            }
                        }
                    )()(__DATUM);
                    (hasMatchingValue) -> {
                        (cctx_1) -> {
                            checkThingOne = __module__CapoHelpers__DelegateInput[]__requiresValidOutput(__module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2, cctx_1));
                            spendDelegate_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_2))));
                            (spendDelegateInput) -> {
                                delegateReturned = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDelegate_1, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed);
                                spendDgtInputRedeemer = __module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput);
                                __common36 = __core__fstPair(__core__unConstrData(spendDgtInputRedeemer));
                                uniqMatchingSpendDgtActivity = __core__ifThenElse(
                                    __core__equalsInteger(__common36, 2),
                                    () -> {
                                        (__lhs_0_102) -> {
                                            error()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__common36, 6),
                                            () -> {
                                                (__lhs_0_101) -> {
                                                    recId_3 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_101)))));
                                                    __core__chooseUnit(__core__ifThenElse(
                                                        __core__equalsByteString(recId_3, datumId),
                                                        () -> {
                                                            ()
                                                        },
                                                        () -> {
                                                            error()
                                                        }
                                                    )(), true)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common36, 8),
                                                    () -> {
                                                        (__lhs_0_98) -> {
                                                            activities = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_98))));
                                                            found = __helios__common__filter(activities, (act) -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(act)), 2),
                                                                    () -> {
                                                                        (__lhs_0_100) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(act)), 6),
                                                                            () -> {
                                                                                (__lhs_0_99) -> {
                                                                                    recId_1 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_99)))));
                                                                                    __core__equalsByteString(recId_1, datumId)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__36) -> {
                                                                                    false
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(act)
                                                            }, __core__mkNilData(()));
                                                            __core__chooseUnit(__core__ifThenElse(
                                                                __core__ifThenElse(
                                                                    __core__lessThanEqualsInteger(__helios__list[__helios__data]__length(found), 0),
                                                                    false,
                                                                    true
                                                                ),
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                __core__equalsInteger(__helios__list[__helios__data]__length(found), 1),
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), __core__ifThenElse(
                                                                checkThingOne,
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()))
                                                        }
                                                    },
                                                    () -> {
                                                        (__34) -> {
                                                            error()
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(spendDgtInputRedeemer);
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        hasMatchingValue,
                                        () -> {
                                            uniqMatchingSpendDgtActivity
                                        },
                                        () -> {
                                            false
                                        }
                                    )(),
                                    () -> {
                                        delegateReturned
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            }(self_22 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(spendDelegate_1, __common10, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed, false, ());
                            __core__headList(__core__sndPair(__core__unConstrData(self_22))))
                        }((__cond_14) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 1),
                                () -> {
                                    (__lhs_0_26) -> {
                                        __module__CapoHelpers__CapoCtx[]__withCharterInput_1()
                                    }
                                },
                                () -> {
                                    (__lhs_0_25) -> {
                                        charterUtxo_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_25)));
                                        datum_4 = __helios__common__assert_constr_index(data_117 = __helios__txoutputdatum__inline(self_28 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_28))))));
                                        __helios__common__assert_constr_index(data_117, 0), 0);
                                        __module__CapoHelpers__CapoCtx[]____new(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_1, __core__mkNilData(())))))
                                    }
                                }
                            )()(__cond_14)
                        }(self_110 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                        __helios__common__find_safe(self_110, (txin_1) -> {
                            a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), __core__constrData(0, __core__mkCons(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed), __core__mkCons(__core__bData(#63686172746572), __core__mkNilData(())))));
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_2, 0),
                                false,
                                true
                            )
                        })))
                    }(a_2 = __helios__value__get_safe(self_17 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_17))))), __helios__assetclass__new(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed, datumId));
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(a_2, 0),
                        false,
                        true
                    ))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common11, 5),
                    () -> {
                        __common2 = __core__ifThenElse(
                            __common8,
                            () -> {
                                (octd_1) -> {
                                    octd_1
                                }
                            },
                            () -> {
                                (__27) -> {
                                    error()
                                }
                            }
                        )()(__DATUM);
                        __common15 = __core__unConstrData(__common2);
                        __common31 = __core__sndPair(__common15);
                        __common32 = __helios__common__enum_fields_after_4(__common2);
                        __common33 = __core__tailList(__common32);
                        (__lhs_0_73) -> {
                            charterOutput_2 = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
                            (newCtDatum_1) -> {
                                oldCtDatum_1 = __helios__common__assert_constr_index(__common2, 0);
                                __lhs_0_74 = __helios__common__assert_constr_index(newCtDatum_1, 0);
                                __common21 = __core__unConstrData(__lhs_0_74);
                                __common23 = __core__sndPair(__common21);
                                __common29 = __helios__common__enum_fields_after_4(__lhs_0_74);
                                __common30 = __core__tailList(__common29);
                                spendDelegate = __core__unListData(__core__headList(__common23));
                                __common27 = __core__tailList(spendDelegate);
                                spendInvariants = __core__unListData(__core__headList(__core__tailList(__common23)));
                                otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_74);
                                mintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_74);
                                __common28 = __core__tailList(mintDelegate);
                                mintInvariants = __core__unListData(__helios__common__enum_field_4(__lhs_0_74));
                                nextGovDelegate_1 = __core__unListData(__core__headList(__common29));
                                nextManifest_1 = __core__unMapData(__core__headList(__common30));
                                nextPendingPolicies = __core__unListData(__core__headList(__core__tailList(__common30)));
                                oldSpendDelegate_1 = __core__unListData(__core__headList(__common31));
                                __common34 = __core__tailList(oldSpendDelegate_1);
                                oldSpendInvariants_1 = __core__unListData(__core__headList(__core__tailList(__common31)));
                                oldOtherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__common2);
                                oldMintDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common2);
                                __common35 = __core__tailList(oldMintDelegate_1);
                                oldMintInvariants_1 = __core__unListData(__helios__common__enum_field_4(__common2));
                                oldGovDelegate_1 = __core__unListData(__core__headList(__common32));
                                oldManifest_1 = __core__unMapData(__core__headList(__common33));
                                oldPendingPolicies = __core__unListData(__core__headList(__core__tailList(__common33)));
                                __core__chooseUnit(__core__chooseUnit(msg_1 = __core__appendString(__core__appendString(__core__appendString("  - old: ", d = __core__headList(oldSpendDelegate_1);
                                __core__decodeUtf8(__core__unBData(d))), " => "), __cond_45 = __core__headList(__common34);
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 0),
                                    () -> {
                                        (__lhs_0_91) -> {
                                            __helios__bytearray__show(__core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_91)))))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_90) -> {
                                            " (any addr)"
                                        }
                                    }
                                )()(__cond_45));
                                (), (oldSDConfigStr) -> {
                                    __core__chooseUnit(msg_1 = __core__appendString(__core__appendString(__core__appendString("  - new: ", d = __core__headList(spendDelegate);
                                    __core__decodeUtf8(__core__unBData(d))), " => "), __cond_44 = __core__headList(__common27);
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_44)), 0),
                                        () -> {
                                            (__lhs_0_89) -> {
                                                __helios__bytearray__show(__core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_89)))))
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_88) -> {
                                                " (any addr)"
                                            }
                                        }
                                    )()(__cond_44));
                                    (), (newSDConfigStr) -> {
                                        __core__chooseUnit(msg_1 = __core__appendString(__core__appendString(__core__appendString("  - old: ", d = __core__headList(oldMintDelegate_1);
                                        __core__decodeUtf8(__core__unBData(d))), " => "), __cond_43 = __core__headList(__common35);
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 0),
                                            () -> {
                                                (__lhs_0_87) -> {
                                                    __helios__bytearray__show(__core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_87)))))
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_86) -> {
                                                    " (any addr)"
                                                }
                                            }
                                        )()(__cond_43));
                                        (), (oldMDConfigStr) -> {
                                            __core__chooseUnit(msg_1 = __core__appendString(__core__appendString(__core__appendString("  - new: ", d = __core__headList(mintDelegate);
                                            __core__decodeUtf8(__core__unBData(d))), " => "), __cond_42 = __core__headList(__common28);
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 0),
                                                () -> {
                                                    (__lhs_0_85) -> {
                                                        __helios__bytearray__show(__core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_85)))))
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_84) -> {
                                                        " (any addr)"
                                                    }
                                                }
                                            )()(__cond_42));
                                            (), (newMDConfigStr) -> {
                                                ()
                                            }(self_12 = __core__unBData(__core__headList(__core__tailList(__common28)));
                                            __core__ifThenElse(
                                                __helios__string__is_valid_utf8(self_12),
                                                () -> {
                                                    __core__decodeUtf8__safe(self_12)
                                                },
                                                () -> {
                                                    __helios__bytearray__show(self_12)
                                                }
                                            )()))
                                        }(self_12 = __core__unBData(__core__headList(__core__tailList(__common35)));
                                        __core__ifThenElse(
                                            __helios__string__is_valid_utf8(self_12),
                                            () -> {
                                                __core__decodeUtf8__safe(self_12)
                                            },
                                            () -> {
                                                __helios__bytearray__show(self_12)
                                            }
                                        )()))
                                    }(self_12 = __core__unBData(__core__headList(__core__tailList(__common27)));
                                    __core__ifThenElse(
                                        __helios__string__is_valid_utf8(self_12),
                                        () -> {
                                            __core__decodeUtf8__safe(self_12)
                                        },
                                        () -> {
                                            __helios__bytearray__show(self_12)
                                        }
                                    )()))
                                }(self_12 = __core__unBData(__core__headList(__core__tailList(__common34)));
                                __core__ifThenElse(
                                    __helios__string__is_valid_utf8(self_12),
                                    () -> {
                                        __core__decodeUtf8__safe(self_12)
                                    },
                                    () -> {
                                        __helios__bytearray__show(self_12)
                                    }
                                )())), countUpdatedThings = __module__CapoHelpers__CapoDatum[]__countUpdatedThings(newCtDatum_1, __DATUM);
                                __core__chooseUnit(__core__ifThenElse(
                                    __core__equalsInteger(countUpdatedThings, 1),
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )(), __core__ifThenElse(
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __core__ifThenElse(
                                                __core__ifThenElse(
                                                    __core__ifThenElse(
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                            __core__equalsByteString(__core__serialiseData(__core__mapData(nextManifest_1)), __core__serialiseData(__core__mapData(oldManifest_1))),
                                                                            () -> {
                                                                                ()
                                                                            },
                                                                            () -> {
                                                                                error()
                                                                            }
                                                                        )(), true),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        ()
                                                                    )(),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsByteString(__core__serialiseData(__core__listData(mintDelegate)), __core__serialiseData(__core__listData(oldMintDelegate_1))),
                                                                            () -> {
                                                                                __cond_39 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(mintDelegate, __common10, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed, true, false);
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 1),
                                                                                    () -> {
                                                                                        (__lhs_0_83) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_80) -> {
                                                                                            mintDgtInput = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_80)));
                                                                                            delegateActivity = __module__StellarHeliosHelpers__mustFindInputRedeemer(mintDgtInput);
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(delegateActivity)), 0),
                                                                                                () -> {
                                                                                                    (__lhs_0_81) -> {
                                                                                                        CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_81)));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(CLA)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_82) -> {
                                                                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDelegate, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__29) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(CLA)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__28) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(delegateActivity)
                                                                                        }
                                                                                    }
                                                                                )()(__cond_39)
                                                                            },
                                                                            () -> {
                                                                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDelegate, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)
                                                                            }
                                                                        )()
                                                                    },
                                                                    ()
                                                                )(),
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsByteString(__core__serialiseData(__core__listData(spendDelegate)), __core__serialiseData(__core__listData(oldSpendDelegate_1))),
                                                                        () -> {
                                                                            __module__CapoDelegateHelpers__requiresNoDelegateInput(spendDelegate)
                                                                        },
                                                                        () -> {
                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDelegate, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)
                                                                        }
                                                                    )()
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )(),
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __core__equalsByteString(__core__serialiseData(__core__mapData(otherNamedDelegates)), __core__serialiseData(__core__mapData(oldOtherNamedDelegates))),
                                                                        false,
                                                                        true
                                                                    ),
                                                                    false,
                                                                    true
                                                                ),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __helios__common__fold(otherNamedDelegates, (z_3, pair_35) -> {
                                                                        (name_3, dgt) -> {
                                                                            __core__ifThenElse(
                                                                                z_3,
                                                                                () -> {
                                                                                    __cond_38 = __helios__common__map_get(oldOtherNamedDelegates, __core__bData(__core__encodeUtf8(name_3)), (x_5) -> {
                                                                                        __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
                                                                                    }, () -> {
                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                    });
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_38)), 1),
                                                                                        () -> {
                                                                                            (__lhs_0_79) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_78) -> {
                                                                                                oldDgt = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_78))));
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsByteString(__core__serialiseData(__core__listData(oldDgt)), __core__serialiseData(__core__listData(dgt))),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__requiresNoDelegateInput(dgt)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(dgt, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed)
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_38)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }(__core__decodeUtf8(__core__unBData(__core__fstPair(pair_35))), __core__unListData(__core__sndPair(pair_35)))
                                                                    }, true)
                                                                }
                                                            )()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )(),
                                                    () -> {
                                                        __core__equalsByteString(__core__serialiseData(__core__listData(nextPendingPolicies)), __core__serialiseData(__core__listData(oldPendingPolicies)))
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )(),
                                                () -> {
                                                    __core__equalsData(__core__listData(mintInvariants), __core__listData(oldMintInvariants_1))
                                                },
                                                () -> {
                                                    false
                                                }
                                            )(),
                                            () -> {
                                                __core__equalsData(__core__listData(spendInvariants), __core__listData(oldSpendInvariants_1))
                                            },
                                            () -> {
                                                false
                                            }
                                        )(),
                                        () -> {
                                            __module__Capo__requiresAuthorization(oldCtDatum_1)
                                        },
                                        () -> {
                                            false
                                        }
                                    )(),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        false
                                    }
                                )()))
                            }(data_117 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(charterOutput_2))))));
                            __helios__common__assert_constr_index(data_117, 0))
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__common11, 0),
                            () -> {
                                (__lhs_0_65) -> {
                                    myCLActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_65)));
                                    __common16 = __core__fstPair(__core__unConstrData(myCLActivity));
                                    __common17 = __core__equalsInteger(__common16, 5);
                                    oldCtDatum = __helios__common__assert_constr_index(__core__ifThenElse(
                                        __common8,
                                        () -> {
                                            (octd) -> {
                                                octd
                                            }
                                        },
                                        () -> {
                                            (__23) -> {
                                                error()
                                            }
                                        }
                                    )()(__DATUM), 0);
                                    charterOutput_1 = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
                                    newCtDatum = __helios__common__assert_constr_index(data_117 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(charterOutput_1))))));
                                    __helios__common__assert_constr_index(data_117, 0), 0);
                                    (cctx) -> {
                                        __core__ifThenElse(
                                            __common17,
                                            () -> {
                                                (__lhs_0_72) -> {
                                                    __common19 = __core__sndPair(__core__unConstrData(__lhs_0_72));
                                                    seed_3 = __core__headList(__common19);
                                                    (purpose_4) -> {
                                                        __core__chooseUnit(cond = (self_25, other) -> {
                                                            __core__ifThenElse(
                                                                __core__equalsByteString(self_25, other),
                                                                false,
                                                                true
                                                            )
                                                        }(self_89 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(oldCtDatum);
                                                        __core__serialiseData(__core__listData(self_89)), self_89 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum);
                                                        __core__serialiseData(__core__listData(self_89)));
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), __core__chooseUnit(cond = __core__equalsInteger(__module__CapoHelpers__CapoDatum[]__countUpdatedThings(oldCtDatum, newCtDatum), 1);
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), __core__chooseUnit(cond = (self_29, other_1) -> {
                                                            __core__ifThenElse(
                                                                __core__equalsString(self_29, other_1),
                                                                false,
                                                                true
                                                            )
                                                        }(self_104 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(oldCtDatum);
                                                        d = __core__headList(self_104);
                                                        __core__decodeUtf8(__core__unBData(d)), self_104 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum);
                                                        d = __core__headList(self_104);
                                                        __core__decodeUtf8(__core__unBData(d)));
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), tnFactory_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                                        expectedTn_1 = tnFactory_1(purpose_4);
                                                        __core__chooseUnit((cond, msg_2) -> {
                                                            __core__ifThenElse(
                                                                cond,
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )()
                                                        }(__core__equalsString(self_104 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum);
                                                        d = __core__headList(self_104);
                                                        __core__decodeUtf8(__core__unBData(d)), expectedTn_1), __core__appendString(__core__appendString(__core__appendString("wrong mintDelegate token name '", self_104 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum);
                                                        d = __core__headList(self_104);
                                                        __core__decodeUtf8(__core__unBData(d))), "' added to charter; should be: "), expectedTn_1)), __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum), #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                __module__CapoMintHelpers__validateUutMinting(seed_3, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), tnFactory_1)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()))))
                                                    }(d = __core__headList(__core__tailList(__common19));
                                                    __core__decodeUtf8(__core__unBData(d)))
                                                }
                                            },
                                            () -> {
                                                __common18 = __core__equalsInteger(__common16, 4);
                                                __core__ifThenElse(
                                                    __common18,
                                                    () -> {
                                                        __common22 = __core__unConstrData(newCtDatum);
                                                        __common25 = __core__headList(__core__sndPair(__common22));
                                                        __common26 = __core__unListData(__common25);
                                                        __common37 = __core__headList(__common26);
                                                        __common38 = __core__unBData(__common37);
                                                        __common39 = __core__decodeUtf8(__common38);
                                                        __common0 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(oldCtDatum))));
                                                        (__lhs_0_71) -> {
                                                            __common20 = __core__sndPair(__core__unConstrData(__lhs_0_71));
                                                            seed_2 = __core__headList(__common20);
                                                            (purpose_3) -> {
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __core__equalsByteString(__core__serialiseData(__core__listData(__common0)), __core__serialiseData(__core__listData(__common26))),
                                                                        false,
                                                                        true
                                                                    ),
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), __core__chooseUnit(cond = __core__equalsInteger(__module__CapoHelpers__CapoDatum[]__countUpdatedThings(oldCtDatum, newCtDatum), 1);
                                                                __core__ifThenElse(
                                                                    cond,
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), __core__chooseUnit((cond) -> {
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )()
                                                                }((self_29) -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsString(self_29, __common39),
                                                                        false,
                                                                        true
                                                                    )
                                                                }(d = __core__headList(__common0);
                                                                __core__decodeUtf8(__core__unBData(d)))), tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_2);
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __core__equalsString(__common39, tnFactory(purpose_3)),
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), __core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__common26, #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )(),
                                                                    () -> {
                                                                        __module__CapoMintHelpers__validateUutMinting(seed_2, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_3)), __core__mkNilData(())), tnFactory)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()))))
                                                            }(d = __core__headList(__core__tailList(__common20));
                                                            __core__decodeUtf8(__core__unBData(d)))
                                                        }
                                                    },
                                                    () -> {
                                                        (__24) -> {
                                                            matchesActivity = (dgtActivity) -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dgtActivity)), 0),
                                                                    () -> {
                                                                        (__lhs_0_66) -> {
                                                                            cla = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_66)));
                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                __core__equalsData(cla, myCLActivity),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), true)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__25) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()(dgtActivity)
                                                            };
                                                            needsMintDgt = () -> {
                                                                (mintDgt_1) -> {
                                                                    __core__chooseUnit(cond = __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgt_1);
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )(), matchesActivity(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(mintDgt_1)))
                                                                }(dgtLink = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(cctx));
                                                                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2(cctx, dgtLink, __core__constrData(0, __core__mkNilData(()))))
                                                            };
                                                            needsSpendDgt = () -> {
                                                                spendDgt = __module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2, cctx);
                                                                __core__chooseUnit(cond = __module__CapoHelpers__DelegateInput[]__requiresValidOutput(spendDgt);
                                                                __core__ifThenElse(
                                                                    cond,
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), matchesActivity(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(spendDgt)))
                                                            };
                                                            __cond_35 = __core__ifThenElse(
                                                                __common18,
                                                                () -> {
                                                                    (__lhs_0_41) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __common17,
                                                                        () -> {
                                                                            (__lhs_0_40) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common16, 6),
                                                                                () -> {
                                                                                    (__lhs_0_39) -> {
                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common16, 1),
                                                                                        () -> {
                                                                                            (__lhs_0_38) -> {
                                                                                                __core__constrData(0, __core__mkNilData(()))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__common16, 2),
                                                                                                () -> {
                                                                                                    (__lhs_0_37) -> {
                                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__common16, 3),
                                                                                                        () -> {
                                                                                                            (__lhs_0_36) -> {
                                                                                                                __core__constrData(6, __core__mkNilData(()))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_35) -> {
                                                                                                                __core__constrData(0, __core__mkNilData(()))
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(myCLActivity);
                                                            __common3 = __core__unConstrData(__cond_35);
                                                            __common4 = __core__fstPair(__common3);
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common4, 7),
                                                                () -> {
                                                                    (__lhs_0_70) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common4, 0),
                                                                        () -> {
                                                                            (__lhs_0_69) -> {
                                                                                needsMintDgt()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common4, 1),
                                                                                () -> {
                                                                                    (__lhs_0_68) -> {
                                                                                        needsSpendDgt()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common4, 6),
                                                                                        () -> {
                                                                                            (__lhs_0_67) -> {
                                                                                                __core__ifThenElse(
                                                                                                    needsMintDgt(),
                                                                                                    needsSpendDgt,
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__26) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_35)
                                                        }
                                                    }
                                                )()
                                            }
                                        )()(myCLActivity)
                                    }(self_143 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1();
                                    __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_121 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_143);
                                    __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_121))), __core__unBData(__core__headList(self_143)));
                                    __core__ifThenElse(
                                        cond,
                                        () -> {
                                            ()
                                        },
                                        () -> {
                                            error()
                                        }
                                    )(), self_143))
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__common11, 2),
                                    () -> {
                                        (__lhs_0_63) -> {
                                            isSpendingRefScript = __core__ifThenElse(
                                                __core__equalsInteger(__common7, 1),
                                                () -> {
                                                    (__lhs_0_64) -> {
                                                        true
                                                    }
                                                },
                                                () -> {
                                                    (__22) -> {
                                                        error()
                                                    }
                                                }
                                            )()(__DATUM);
                                            (hasGovAuthority) -> {
                                                __core__ifThenElse(
                                                    __core__ifThenElse(
                                                        isSpendingRefScript,
                                                        () -> {
                                                            hasGovAuthority
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )(),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            }(charterData_1 = __module__CapoHelpers__getTxCharterData();
                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__core__unListData(__core__headList(__helios__common__enum_fields_after_4(charterData_1))), #39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__common11, 1),
                                            () -> {
                                                (__lhs_0_62) -> {
                                                    __core__ifThenElse(
                                                        __common8,
                                                        () -> {
                                                            __module__Capo__requiresAuthorization
                                                        },
                                                        () -> {
                                                            (__21) -> {
                                                                error()
                                                            }
                                                        }
                                                    )()(__DATUM)
                                                }
                                            },
                                            () -> {
                                                (__20) -> {
                                                    error()
                                                }
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()
            }
        )()(__REDEEMER);
        __core__chooseUnit(__core__ifThenElse(
            allDatumSpecificChecks,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __core__chooseUnit(__core__ifThenElse(
            allActivitySpecificChecks,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __core__ifThenElse(
            allDatumSpecificChecks,
            () -> {
                allActivitySpecificChecks
            },
            () -> {
                false
            }
        )()))),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__common__identity = (self) -> {
        self
    };
    __helios__data__from_data = __helios__common__identity;
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__common__fold = (self_1, fn, z) -> {
        recurse_1 = (recurse, self_2, z_1) -> {
            __core__chooseList(self_2, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_2), fn(z_1, __core__headList__safe(self_2)))
            })()
        };
        recurse_1(recurse_1, self_1, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {
        __core__chooseData(data_1, callback_nok_1, () -> {
            callback_ok_1(__core__unMapData__safe(data_1))
        }, callback_nok_1, callback_nok_1, callback_nok_1)()
    };
    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {
        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok_2(__core__unIData__safe(data_2))
        }, callback_nok_2)()
    };
    __helios__bool__and = (a, b) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b()
            },
            () -> {
                false
            }
        )()
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_7) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_7, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_7, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_7, #)
                }
            )())
        }
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_8) -> {
        () -> {
            __core__divideInteger(self_8, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_9) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_9, 0),
                () -> {
                    __core__multiplyInteger(self_9, -1)
                },
                () -> {
                    self_9
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_10, n_1) -> {
        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_1, pos),
                        () -> {
                            bytes_4
                        },
                        () -> {
                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))
                        }
                    )()
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))
                }
            )()
        };
        recurse_9(recurse_9, self_10, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_11) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_11, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_11, -1)))
                },
                () -> {
                    show_positive(self_11)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_12) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_12),
                () -> {
                    __core__decodeUtf8__safe(self_12)
                },
                () -> {
                    __helios__bytearray__show(self_12)()
                }
            )()
        }
    };
    __helios__value__show = (self_13) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_13, (prev, pair) -> {
                mph_data = __core__fstPair(pair);
                tokens_data = __core__sndPair(pair);
                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_1, pair_1) -> {
                            token_name_data = __core__fstPair(pair_1);
                            qty_data = __core__sndPair(pair_1);
                            __helios__common__unBData__safe(token_name_data, (token_name) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__common__enum_fields = (self_14) -> {
        __core__sndPair(__core__unConstrData(self_14))
    };
    __helios__common__enum_fields_after_0 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields(self_15))
    };
    __helios__common__enum_field_1 = (self_16) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_16))
    };
    __helios__txoutput__value = (self_17) -> {
        __core__unMapData(__helios__common__enum_field_1(self_17))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_18) -> {
        __helios__txoutput__value(__helios__txinput__output(self_18))
    };
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool__or = (a_1, b_1) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_1()
            }
        )()
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__bytearray__serialize = (self_19) -> {
        () -> {
            __core__serialiseData(__helios__bytearray____to_data(self_19))
        }
    };
    __helios__mintingpolicyhash__serialize = __helios__bytearray__serialize;
    __helios__bool__show = (self_20) -> {
        () -> {
            __core__ifThenElse(
                self_20,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_21) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_21)()), self_21)
        }
    };
    __helios__bool____not = (b_2) -> {
        __core__ifThenElse(
            b_2,
            false,
            true
        )
    };
    __helios__int____gt = (a_2, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_2, b_3))
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__data__constrdata____is = (data_3) -> {
        __core__chooseData(data_3, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_4) -> {
        __core__sndPair(__core__unConstrData(data_4))
    };
    __helios__data__constrdata__tag = (data_5) -> {
        __core__fstPair(__core__unConstrData(data_5))
    };
    __helios__data__bytearraydata____is = (data_6) -> {
        __core__chooseData(data_6, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            true
        })()
    };
    __helios__data__bytearraydata__value = (data_7) -> {
        __core__unBData(data_7)
    };
    __helios__common__enum_field_0 = (self_22) -> {
        __core__headList(__helios__common__enum_fields(self_22))
    };
    __helios__tx__inputs = (self_23) -> {
        __core__unListData(__helios__common__enum_field_0(self_23))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__value__get_safe = (self_24) -> {
        (assetClass) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass);
            tokenName = __helios__common__enum_field_1(assetClass);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mintingPolicyHash),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_24)
        }
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_3) -> {
        __core__mkCons(a_3, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name_1) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name_1)))
    };
    __helios__common__assert_constr_index = (data_8, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_2),
            () -> {
                data_8
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__bytearray____neq = (self_25, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self_25, other))
    };
    __helios__txoutputdatum__inline = (self_26) -> {
        pair_2 = __core__unConstrData(self_26);
        index = __core__fstPair(pair_2);
        fields = __core__sndPair(pair_2);
        __core__ifThenElse(
            __core__equalsInteger(index, 2),
            () -> {
                __core__headList(fields)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_fields_after_1 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_27))
    };
    __helios__common__enum_field_2 = (self_28) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_28))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__string____eq = __core__equalsString;
    __helios__string____neq = (self_29, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_29, other_1))
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                __helios__error("not found")
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__common____neq = (a_4, b_4) -> {
        __helios__bool____not(__core__equalsData(a_4, b_4))
    };
    __helios__spendingcredential____neq = __helios__common____neq;
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash)))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_30) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_30))
    };
    __helios__spendingcredential__validator__cast = (data_9) -> {
        __helios__common__assert_constr_index(data_9, 1)
    };
    __helios__scriptcontext__get_current_validator_hash = () -> {
        __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(__helios__address__credential(__helios__txoutput__address(__helios__txinput__output(__helios__scriptcontext__get_current_input())))))
    };
    __helios__tx__outputs = (self_31) -> {
        __core__unListData(__helios__common__enum_field_2(self_31))
    };
    __helios__value__get_inner_map_int = (map_2, key) -> {
        recurse_15 = (recurse_14, map_3, key_1) -> {
            __core__chooseList(map_3, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), key_1),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_3)))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(map_3), key_1)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, map_2, key)
    };
    __helios__value__get_map_keys = (map_4) -> {
        recurse_17 = (recurse_16, map_5) -> {
            __core__chooseList(map_5, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_5)), recurse_16(recurse_16, __core__tailList__safe(map_5)))
            })()
        };
        recurse_17(recurse_17, map_4)
    };
    __helios__common__any = (self_32, fn_1) -> {
        recurse_19 = (recurse_18, self_33, fn_2) -> {
            __core__chooseList(self_33, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_33)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_33), fn_2)
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_32, fn_1)
    };
    __helios__common__is_in_bytearray_list = (lst_1, key_2) -> {
        __helios__common__any(lst_1, (item_1) -> {
            __core__equalsData(item_1, key_2)
        })
    };
    __helios__common__concat = (a_5, b_5) -> {
        recurse_21 = (recurse_20, lst_2, rem) -> {
            __core__chooseList(rem, () -> {
                lst_2
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_20(recurse_20, lst_2, __core__tailList__safe(rem)))
            })()
        };
        recurse_21(recurse_21, b_5, a_5)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        aKeys = __helios__value__get_map_keys(a_6);
        recurse_23 = (recurse_22, keys, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__common__list_0
            }, () -> {
                key_3 = __core__fstPair(__core__headList__safe(map_6));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_3),
                    () -> {
                        recurse_22(recurse_22, keys, __core__tailList__safe(map_6))
                    },
                    () -> {
                        __core__mkCons(key_3, recurse_22(recurse_22, keys, __core__tailList__safe(map_6)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_23(recurse_23, aKeys, b_6);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__compare_inner = (comp, a_7, b_7) -> {
        recurse_25 = (recurse_24, keys_1) -> {
            __core__chooseList(keys_1, () -> {
                true
            }, () -> {
                key_4 = __core__headList__safe(keys_1);
                __core__ifThenElse(
                    __helios__bool____not(comp(__helios__value__get_inner_map_int(a_7, key_4), __helios__value__get_inner_map_int(b_7, key_4))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(keys_1))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, __helios__value__merge_map_keys(a_7, b_7))
    };
    __helios__value__get_inner_map = (map_7, mph_2) -> {
        recurse_27 = (recurse_26, map_8) -> {
            __core__chooseList(map_8, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_8)), mph_2),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_8)))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_8))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_7)
    };
    __helios__value__compare = (a_8, b_8, comp_1) -> {
        recurse_29 = (recurse_28, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                true
            }, () -> {
                key_5 = __core__headList__safe(keys_2);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_1, __helios__value__get_inner_map(a_8, key_5), __helios__value__get_inner_map(b_8, key_5))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(keys_2))
                    }
                )()
            })()
        };
        recurse_29(recurse_29, __helios__value__merge_map_keys(a_8, b_8))
    };
    __helios__value____geq = (a_9, b_9) -> {
        __helios__value__compare(a_9, b_9, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__int____to_data = __core__iData;
    __helios__value__new = (assetClass_1, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_3),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_3 = __helios__common__enum_field_0(assetClass_1);
                tokenName_1 = __helios__common__enum_field_1(assetClass_1);
                __core__mkCons(__core__mkPairData(mph_3, __core__mapData(__core__mkCons(__core__mkPairData(tokenName_1, __helios__int____to_data(i_3)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__string__encode_utf8 = (self_34) -> {
        () -> {
            __core__encodeUtf8(self_34)
        }
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__value__contains_policy = (self_35) -> {
        (mph_4) -> {
            mph_5 = __helios__mintingpolicyhash____to_data(mph_4);
            recurse_31 = (recurse_30, map_9) -> {
                __core__chooseList(map_9, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_5),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_30(recurse_30, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, self_35)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__value__to_map = (self_36) -> {
        () -> {
            self_36
        }
    };
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_33 = (recurse_32, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_32(recurse_32, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_33(recurse_33, tokens_1)
    };
    __helios__value__is_zero = (self_37) -> {
        () -> {
            recurse_35 = (recurse_34, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_10))))
                    }, () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_10))
                    })
                })()
            };
            recurse_35(recurse_35, self_37)
        }
    };
    __helios__value__get_policy = (self_38) -> {
        (mph_6) -> {
            mph_7 = __helios__mintingpolicyhash____to_data(mph_6);
            recurse_37 = (recurse_36, map_11) -> {
                __core__chooseList(map_11, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_7),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                        },
                        () -> {
                            recurse_36(recurse_36, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_37(recurse_37, self_38)
        }
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_10, b_10) -> {
            recurse_39 = (recurse_38, keys_3, result) -> {
                __core__chooseList(keys_3, () -> {
                    result
                }, () -> {
                    key_6 = __core__headList__safe(keys_3);
                    tail = recurse_38(recurse_38, __core__tailList__safe(keys_3), result);
                    sum = op(__helios__value__get_inner_map_int(a_10, key_6), __helios__value__get_inner_map_int(b_10, key_6));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_6, __core__iData(sum)), tail)
                        }
                    )()
                })()
            };
            recurse_39(recurse_39, __helios__value__merge_map_keys(a_10, b_10), __core__mkNilPairData(()))
        }
    };
    __helios__value__add_or_subtract = (a_11, b_11, op_1) -> {
        recurse_41 = (recurse_40, keys_4, result_1) -> {
            __core__chooseList(keys_4, () -> {
                result_1
            }, () -> {
                key_7 = __core__headList__safe(keys_4);
                tail_1 = recurse_40(recurse_40, __core__tailList__safe(keys_4), result_1);
                item_2 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_11, key_7), __helios__value__get_inner_map(b_11, key_7));
                __core__chooseList(item_2, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_7, __core__mapData(item_2)), tail_1)
                })()
            })()
        };
        recurse_41(recurse_41, __helios__value__merge_map_keys(a_11, b_11), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_12, b_12) -> {
        __helios__value__add_or_subtract(a_12, b_12, __core__addInteger)
    };
    __helios__common__enum_fields_after_2 = (self_39) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_39))
    };
    __helios__common__enum_fields_after_3 = (self_40) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_40))
    };
    __helios__common__enum_field_4 = (self_41) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_41))
    };
    __helios__tx__minted = (self_42) -> {
        __core__unMapData(__helios__common__enum_field_4(self_42))
    };
    __helios__common__map = (self_43, fn_3, init) -> {
        recurse_43 = (recurse_42, rem_1, lst_3) -> {
            __core__chooseList(rem_1, () -> {
                lst_3
            }, () -> {
                __core__mkCons(fn_3(__core__headList__safe(rem_1)), recurse_42(recurse_42, __core__tailList__safe(rem_1), lst_3))
            })()
        };
        recurse_43(recurse_43, self_43, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_4, comp_2) -> {
        recurse_45 = (recurse_44, lst_5) -> {
            __core__chooseList(lst_5, () -> {
                __core__mkCons(x_3, lst_5)
            }, () -> {
                head = __core__headList__safe(lst_5);
                __core__ifThenElse(
                    comp_2(x_3, head),
                    () -> {
                        __core__mkCons(x_3, lst_5)
                    },
                    () -> {
                        __core__mkCons(head, recurse_44(recurse_44, __core__tailList__safe(lst_5)))
                    }
                )()
            })()
        };
        recurse_45(recurse_45, lst_4)
    };
    __helios__common__sort = (lst_6, comp_3) -> {
        recurse_47 = (recurse_46, lst_7) -> {
            __core__chooseList(lst_7, () -> {
                lst_7
            }, () -> {
                (head_1, tail_2) -> {
                    __helios__common__insert_in_sorted(head_1, tail_2, comp_3)
                }(__core__headList__safe(lst_7), recurse_46(recurse_46, __core__tailList__safe(lst_7)))
            })()
        };
        recurse_47(recurse_47, lst_6)
    };
    __helios__int__from_data = __core__unIData;
    __helios__common__map_get = (self_44, key_8, fnFound, fnNotFound) -> {
        recurse_49 = (recurse_48, self_45, key_9) -> {
            __core__chooseList(self_45, fnNotFound, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    __core__equalsData(key_9, __core__fstPair(head_2)),
                    () -> {
                        fnFound(__core__sndPair(head_2))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(self_45), key_9)
                    }
                )()
            })()
        };
        recurse_49(recurse_49, self_44, key_8)
    };
    __helios__common__enum_tag_equals = (data_10, i_4) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_10)), i_4)
    };
    __helios__common__filter = (self_46, fn_4, nil) -> {
        recurse_51 = (recurse_50, self_47, fn_5) -> {
            __core__chooseList(self_47, () -> {
                nil
            }, () -> {
                head_3 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_5(head_3),
                    () -> {
                        __core__mkCons(head_3, recurse_50(recurse_50, __core__tailList__safe(self_47), fn_5))
                    },
                    () -> {
                        recurse_50(recurse_50, __core__tailList__safe(self_47), fn_5)
                    }
                )()
            })()
        };
        recurse_51(recurse_51, self_46, fn_4)
    };
    __helios__common__filter_map = (self_48, fn_6) -> {
        __helios__common__filter(self_48, fn_6, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_13, b_13) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_13, b_13),
            b_13,
            a_13
        )
    };
    __helios__common__slice_bytearray = (self_49, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_49), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_8 = (start_1) -> {
                fn_7 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_49)
                };
                fn_7(normalize(end))
            };
            fn_8(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_50) -> {
        __helios__common__slice_bytearray(self_50, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_51) -> {
        () -> {
            __core__blake2b_256(self_51)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__common__serialize = (self_52) -> {
        () -> {
            __core__serialiseData(self_52)
        }
    };
    __helios__txid__serialize = __helios__common__serialize;
    __helios__int__serialize = (self_53) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_53))
        }
    };
    __helios__txoutputid__index = (self_54) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_54))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_55) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_55))
    };
    __helios__common__enum_fields_after_5 = (self_56) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_56))
    };
    __helios__common__enum_fields_after_6 = (self_57) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_57))
    };
    __helios__common__enum_fields_after_7 = (self_58) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_58))
    };
    __helios__common__enum_fields_after_8 = (self_59) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_59))
    };
    __helios__common__enum_field_9 = (self_60) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_60))
    };
    __helios__tx__redeemers = (self_61) -> {
        __core__unMapData(__helios__common__enum_field_9(self_61))
    };
    __helios__scriptpurpose__spending____is = (data_11) -> {
        __helios__common__enum_tag_equals(data_11, 1)
    };
    __helios__common____eq = __core__equalsData;
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__data__show = (self_62) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev_2, item_3) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev_2, ""),
                        () -> {
                            show_item(item_3)
                        },
                        () -> {
                            __helios__string____add(prev_2, __helios__string____add(",", show_item(item_3)))
                        }
                    )()
                }, "")
            };
            (recurse_53, data_13) -> {
                recurse_53(recurse_53, data_13)
            }((recurse_52, data_12) -> {
                __core__chooseData(data_12, () -> {
                    pair_4 = __core__unConstrData__safe(data_12);
                    tag = __core__fstPair(pair_4);
                    fields_1 = __core__sndPair(pair_4);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields_1, (item_5) -> {
                        recurse_52(recurse_52, item_5)
                    }), "}")))
                }, () -> {
                    map_12 = __core__unMapData__safe(data_12);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_12, (pair_3) -> {
                        key_10 = recurse_52(recurse_52, __core__fstPair(pair_3));
                        value_1 = recurse_52(recurse_52, __core__sndPair(pair_3));
                        __helios__string____add(key_10, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst_8 = __core__unListData__safe(data_12);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_8, (item_4) -> {
                        recurse_52(recurse_52, item_4)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_12);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_6 = __core__unBData__safe(data_12);
                    __helios__bytearray__show(bytes_6)()
                })()
            }, self_62)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_14) -> {
            callback_nok_3 = __helios__data__show(data_14);
            __core__chooseData(data_14, () -> {
                pair_5 = __core__unConstrData__safe(data_14);
                callback_1(__core__fstPair(pair_5), __core__sndPair(pair_5))
            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()
        }
    };
    __helios__data__show_field = (index_1, callback_2) -> {
        (list_1) -> {
            recurse_55 = (recurse_54) -> {
                (lst_9, i_5) -> {
                    __core__chooseList(lst_9, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_5, 0),
                            () -> {
                                head_4 = __core__headList__safe(lst_9);
                                callback_2(head_4)
                            },
                            () -> {
                                recurse_54(recurse_54)(__core__tailList__safe(lst_9), __core__subtractInteger(i_5, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_55(recurse_55)(list_1, index_1)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_15) -> {
            callback_nok_4 = __helios__data__show(data_15);
            __core__chooseData(data_15, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
                callback_3(__core__unBData__safe(data_15))
            })()
        }
    };
    __helios__txid__show = (self_63) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_2) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_7) -> {
                            __helios__bytearray__show(bytes_7)()
                        }))(fields_2)
                    },
                    () -> {
                        __helios__data__show(self_63)()
                    }
                )()
            })(self_63)
        }
    };
    __helios__data__show_idata = (callback_4) -> {
        (data_16) -> {
            callback_nok_5 = __helios__data__show(data_16);
            __core__chooseData(data_16, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_4(__core__unIData__safe(data_16))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_64) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_3) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_3);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_3);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_64)()
                    }
                )()
            })(self_64)
        }
    };
    __helios__txinput__datum = (self_65) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_65))
    };
    __helios__tx__ref_inputs = (self_66) -> {
        __core__unListData(__helios__common__enum_field_1(self_66))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_67) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_67))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct____eq = (self_68, other_2) -> {
        __core__equalsData(__helios__struct____to_data(self_68), __helios__struct____to_data(other_2))
    };
    __helios__common__filter_list = (self_69, fn_9) -> {
        __helios__common__filter(self_69, fn_9, __helios__common__list_0)
    };
    __helios__common__length = (lst_10) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_56(recurse_56, __core__tailList__safe(lst_11)), 1)
            })()
        };
        recurse_57(recurse_57, lst_10)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_70) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_70))
    };
    __helios__common__struct_fields_after_2 = (self_71) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_71))
    };
    __helios__common__struct_fields_after_3 = (self_72) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_72))
    };
    __helios__common__struct_field_4 = (self_73) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_73))
    };
    __helios__common__struct_field_3 = (self_74) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_74))
    };
    __helios__common__test_constr_data_2 = (data_17, index_2, test_a, test_b) -> {
        __core__chooseData(data_17, () -> {
            pair_6 = __core__unConstrData__safe(data_17);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_6), index_2),
                () -> {
                    fields_4 = __core__sndPair(pair_6);
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_4)),
                            () -> {
                                tail_3 = __core__tailList__safe(fields_4);
                                __core__chooseList(tail_3, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail_3)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail_3), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_18) -> {
            __core__chooseData(data_18, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_8 = __core__unBData__safe(data_18);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_8), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_19) -> {
        __core__chooseData(data_19, () -> {
            pair_7 = __core__unConstrData__safe(data_19);
            index_3 = __core__fstPair(pair_7);
            fields_5 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_5, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_5), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_5))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_20) -> {
        __core__chooseData(data_20, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_21) -> {
        __helios__common__test_constr_data_2(data_21, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__txoutput__is_valid_data = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_23) -> {
        __helios__common__test_constr_data_2(data_23, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__int____add = __core__addInteger;
    __helios__data__is_valid_data = (data_24) -> {
        true
    };
    __helios__string__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_25))
        })()
    };
    __helios__common__enum_field_7 = (self_75) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_75))
    };
    __helios__common__enum_field_6 = (self_76) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_76))
    };
    __helios__common__enum_field_5 = (self_77) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_77))
    };
    __helios__common__enum_field_3 = (self_78) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_78))
    };
    __helios__common__test_mStruct_field = (self_79, name, inner_test) -> {
        __core__chooseData(self_79, () -> {
            false
        }, () -> {
            map_13 = __core__unMapData__safe(self_79);
            recurse_59 = (recurse_58, map_14) -> {
                __core__chooseList(map_14, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name))), () -> {
                        false
                    })()
                }, () -> {
                    head_5 = __core__headList__safe(map_14);
                    key_11 = __core__fstPair(head_5);
                    value_2 = __core__sndPair(head_5);
                    __core__ifThenElse(
                        __core__equalsData(key_11, name),
                        () -> {
                            inner_test(value_2)
                        },
                        () -> {
                            recurse_58(recurse_58, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            recurse_59(recurse_59, map_13)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data = (data_26) -> {
        __core__chooseData(data_26, false, false, false, false, true)
    };
    __helios__mintingpolicyhash__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_27);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_80, fn_10) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_80), fn_10)
    };
    __helios__spendingcredential__is_validator = (self_81) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_81)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__txoutput__is_locked_by = (self_82) -> {
        (hash_1) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_82));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash_1, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_83) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_83, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_84) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_84)(vh_1))
        }
    };
    __helios__common__find_safe = (self_85, fn_11, callback_5) -> {
        recurse_61 = (recurse_60, self_86, fn_12) -> {
            __core__chooseList(self_86, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_6 = __core__headList__safe(self_86);
                __core__ifThenElse(
                    fn_12(head_6),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_5(head_6)))
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(self_86), fn_12)
                    }
                )()
            })()
        };
        recurse_61(recurse_61, self_85, fn_11)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__txinput__address = (self_87) -> {
        __helios__txoutput__address(__helios__txinput__output(self_87))
    };
    __helios__common__struct_field_2 = (self_88) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_88))
    };
    __helios__struct__serialize = (self_89) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_89))
        }
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_28) -> {
            __core__chooseData(data_28, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_28);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_29) -> {
        __helios__common__test_constr_data_2(data_29, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__common__mStruct_field_internal = (map_15, name_1) -> {
        name_data = __core__bData(name_1);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name_1))), ": field not found"))
            }, () -> {
                head_7 = __core__headList__safe(map_16);
                key_12 = __core__fstPair(head_7);
                value_3 = __core__sndPair(head_7);
                __core__ifThenElse(
                    __core__equalsData(key_12, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __helios__common__mStruct_field = (self_90, name_2) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_90), name_2)
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_8, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_8, tnBytes_1), count_1))
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_17) -> {
        recurse_65 = (recurse_64, map_18) -> {
            __core__chooseList(map_18, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_18);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_64(recurse_64, __core__tailList__safe(map_18))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_65(recurse_65, map_17)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_30) -> {
        map_19 = __core__unMapData(data_30);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_19),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_19
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_91) -> {
        (key_13) -> {
            __helios__common__map_get(self_91, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_92) -> {
        (fn_13) -> {
            recurse_67 = (recurse_66, map_20) -> {
                __core__chooseList(map_20, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_20)));
                    __core__ifThenElse(
                        fn_13(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(map_20))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_92)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_31) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_31, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_31, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid AnyData data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_32) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_32),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_32
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_93) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_93, #406964))
    };
    __helios__list[__helios__data]__head = (self_94) -> {
        __helios__data__from_data(__core__headList(self_94))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_33) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_33),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_33),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_33),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_34) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_34),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_34
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_35) -> {
        __helios__common__enum_tag_equals(data_35, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_36) -> {
        __core__chooseData(data_36, () -> {
            pair_8 = __core__unConstrData__safe(data_36);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_8), 0),
                () -> {
                    data_37 = __core__listData(__core__sndPair(pair_8));
                    __core__chooseData(data_37, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_6 = __core__unListData__safe(data_37);
                        __core__chooseList(fields_6, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_6);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_7 = __core__tailList__safe(fields_6);
                                    __core__chooseList(fields_7, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_7);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_8 = __core__tailList__safe(fields_7);
                                                __core__chooseList(fields_8, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_38) -> {
        __helios__common__enum_tag_equals(data_38, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_39) -> {
        __core__chooseData(data_39, () -> {
            pair_9 = __core__unConstrData__safe(data_39);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_9), 1),
                () -> {
                    data_40 = __core__listData(__core__sndPair(pair_9));
                    __core__chooseData(data_40, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_9 = __core__unListData__safe(data_40);
                        __core__chooseList(fields_9, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_10 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_10), 2),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_10));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_10 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_10, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_43) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_43),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_43),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_43),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_43),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_43),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_43),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_43),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_43),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_44) -> {
        __helios__common__enum_tag_equals(data_44, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1 = (data_45) -> {
        __core__chooseData(data_45, () -> {
            pair_11 = __core__unConstrData__safe(data_45);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_46 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_46, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_46);
                        __core__chooseList(fields_11, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_47) -> {
        __helios__common__enum_tag_equals(data_47, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1 = (data_48) -> {
        __core__chooseData(data_48, () -> {
            pair_12 = __core__unConstrData__safe(data_48);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_49 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_49, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_12 = __core__unListData__safe(data_49);
                        __core__chooseList(fields_12, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1 = (data_50) -> {
        __core__chooseData(data_50, () -> {
            pair_13 = __core__unConstrData__safe(data_50);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_51 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_51, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_13 = __core__unListData__safe(data_51);
                        __core__chooseList(fields_13, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_14 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 3),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1 = (data_54) -> {
        __core__chooseData(data_54, () -> {
            pair_15 = __core__unConstrData__safe(data_54);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 4),
                () -> {
                    data_55 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_55, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_55);
                        __core__chooseList(fields_15, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_15);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_16 = __core__tailList__safe(fields_15);
                                    __core__chooseList(fields_16, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1 = (data_56) -> {
        __core__chooseData(data_56, () -> {
            pair_16 = __core__unConstrData__safe(data_56);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 5),
                () -> {
                    data_57 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_57, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_57);
                        __core__chooseList(fields_17, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_17);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_18 = __core__tailList__safe(fields_17);
                                    __core__chooseList(fields_18, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_58) -> {
        __helios__common__enum_tag_equals(data_58, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1 = (data_59) -> {
        __core__chooseData(data_59, () -> {
            pair_17 = __core__unConstrData__safe(data_59);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 6),
                () -> {
                    data_60 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_60, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_60);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_61) -> {
        __helios__common__enum_tag_equals(data_61, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1 = (data_62) -> {
        __core__chooseData(data_62, () -> {
            pair_18 = __core__unConstrData__safe(data_62);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 7),
                () -> {
                    data_63 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_63, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_63);
                        __core__chooseList(fields_20, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_64) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_64),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_64),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_64),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_64),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_64),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1 = (data_65) -> {
        __core__chooseData(data_65, () -> {
            pair_19 = __core__unConstrData__safe(data_65);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 0),
                () -> {
                    data_66 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_66, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_21 = __core__unListData__safe(data_66);
                        __core__chooseList(fields_21, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_21);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_22 = __core__tailList__safe(fields_21);
                                    __core__chooseList(fields_22, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_20 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 1),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_23 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_23, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_23);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_24 = __core__tailList__safe(fields_23);
                                    __core__chooseList(fields_24, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_24);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_25 = __core__tailList__safe(fields_24);
                                                __core__chooseList(fields_25, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1 = (data_69) -> {
        __core__chooseData(data_69, () -> {
            pair_21 = __core__unConstrData__safe(data_69);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 2),
                () -> {
                    data_70 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_70, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_70);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_27);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_28 = __core__tailList__safe(fields_27);
                                                __core__chooseList(fields_28, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1 = (data_71) -> {
        __core__chooseData(data_71, () -> {
            pair_22 = __core__unConstrData__safe(data_71);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 3),
                () -> {
                    data_72 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_72, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_29 = __core__unListData__safe(data_72);
                        __core__chooseList(fields_29, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_29);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_30 = __core__tailList__safe(fields_29);
                                    __core__chooseList(fields_30, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_30);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_31 = __core__tailList__safe(fields_30);
                                                __core__chooseList(fields_31, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1 = (data_73) -> {
        __core__chooseData(data_73, () -> {
            pair_23 = __core__unConstrData__safe(data_73);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 4),
                () -> {
                    data_74 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_74, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_32 = __core__unListData__safe(data_74);
                        __core__chooseList(fields_32, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_32);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_33 = __core__tailList__safe(fields_32);
                                    __core__chooseList(fields_33, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_33);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_34 = __core__tailList__safe(fields_33);
                                                __core__chooseList(fields_34, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_75) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_75),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_75),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_75),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1 = (data_76) -> {
        __core__chooseData(data_76, () -> {
            pair_24 = __core__unConstrData__safe(data_76);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 0),
                () -> {
                    data_77 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_77, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_35 = __core__unListData__safe(data_77);
                        __core__chooseList(fields_35, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_35);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_36 = __core__tailList__safe(fields_35);
                                    __core__chooseList(fields_36, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_36);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_37 = __core__tailList__safe(fields_36);
                                                __core__chooseList(fields_37, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_37);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_38 = __core__tailList__safe(fields_37);
                                                            __core__chooseList(fields_38, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_25 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 1),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_39 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_39, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1 = (data_80) -> {
        __core__chooseData(data_80, () -> {
            pair_26 = __core__unConstrData__safe(data_80);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 2),
                () -> {
                    data_81 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_81, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_81);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_43);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_44 = __core__tailList__safe(fields_43);
                                                                        __core__chooseList(fields_44, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_82) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_82),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_82),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_82),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_82),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_82),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_82),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_82),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_83) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_83),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_83
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_84) -> {
        __helios__common__enum_tag_equals(data_84, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_85) -> {
        __core__chooseData(data_85, () -> {
            pair_27 = __core__unConstrData__safe(data_85);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_86 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_86, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_86);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_87) -> {
        __helios__common__enum_tag_equals(data_87, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_88) -> {
        __core__chooseData(data_88, () -> {
            pair_28 = __core__unConstrData__safe(data_88);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_89 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_89, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_48 = __core__unListData__safe(data_89);
                        __core__chooseList(fields_48, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_90) -> {
        __helios__common__enum_tag_equals(data_90, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_29 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_49 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_49, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_49);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_31),
                                () -> {
                                    fields_50 = __core__tailList__safe(fields_49);
                                    __core__chooseList(fields_50, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_30 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 3),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_51 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_51, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_31 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 4),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_52 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_52, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_52);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_53 = __core__tailList__safe(fields_52);
                                    __core__chooseList(fields_53, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_53);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_54 = __core__tailList__safe(fields_53);
                                                __core__chooseList(fields_54, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__seed = (self_95) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_95))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__purpose = (self_96) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_96))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_99) -> {
        __helios__common__enum_tag_equals(data_99, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_100) -> {
        __core__chooseData(data_100, () -> {
            pair_32 = __core__unConstrData__safe(data_100);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 5),
                () -> {
                    data_101 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_101, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_55 = __core__unListData__safe(data_101);
                        __core__chooseList(fields_55, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_55);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_56 = __core__tailList__safe(fields_55);
                                    __core__chooseList(fields_56, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_56);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_57 = __core__tailList__safe(fields_56);
                                                __core__chooseList(fields_57, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__seed = (self_97) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_97))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__purpose = (self_98) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_98))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_102) -> {
        __helios__common__enum_tag_equals(data_102, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_103) -> {
        __core__chooseData(data_103, () -> {
            pair_33 = __core__unConstrData__safe(data_103);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 6),
                () -> {
                    data_104 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_104, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_58 = __core__unListData__safe(data_104);
                        __core__chooseList(fields_58, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_58);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(head_36),
                                () -> {
                                    fields_59 = __core__tailList__safe(fields_58);
                                    __core__chooseList(fields_59, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_105) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_105),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_105),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_105),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_105),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_105),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_105),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_105),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_105),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_105),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_106) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_106),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_106
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 0)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_34 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 0),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__activity = (self_99) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_99))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_35 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 1),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_62 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_62, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_62);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_63 = __core__tailList__safe(fields_62);
                                    __core__chooseList(fields_63, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_100) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_100))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_36 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 2),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_64 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_64, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_64);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_65 = __core__tailList__safe(fields_64);
                                    __core__chooseList(fields_65, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_101) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_101))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_116) -> {
        __core__chooseData(data_116, () -> {
            pair_37 = __core__unConstrData__safe(data_116);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 3),
                () -> {
                    data_117 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_117, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_66 = __core__unListData__safe(data_117);
                        __core__chooseList(fields_66, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_66);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_67 = __core__tailList__safe(fields_66);
                                    __core__chooseList(fields_67, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_118) -> {
        __core__chooseData(data_118, () -> {
            pair_38 = __core__unConstrData__safe(data_118);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 4),
                () -> {
                    data_119 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_119, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_68 = __core__unListData__safe(data_119);
                        __core__chooseList(fields_68, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_68);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_69 = __core__tailList__safe(fields_68);
                                    __core__chooseList(fields_69, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_39 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 5),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_70 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_70, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_70);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_71 = __core__tailList__safe(fields_70);
                                    __core__chooseList(fields_71, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_71);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_72 = __core__tailList__safe(fields_71);
                                                __core__chooseList(fields_72, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_40 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 6),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_74);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_75 = __core__tailList__safe(fields_74);
                                                __core__chooseList(fields_75, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__recId = (self_102) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_102))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_125) -> {
        __core__chooseData(data_125, () -> {
            pair_41 = __core__unConstrData__safe(data_125);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 7),
                () -> {
                    data_126 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_126, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_76 = __core__unListData__safe(data_126);
                        __core__chooseList(fields_76, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_76);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_77 = __core__tailList__safe(fields_76);
                                    __core__chooseList(fields_77, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_77);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_78 = __core__tailList__safe(fields_77);
                                                __core__chooseList(fields_78, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_127) -> {
        __helios__common__enum_tag_equals(data_127, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_12) -> {
        recurse_69 = (recurse_68, lst_13) -> {
            __core__chooseList(lst_13, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_13)),
                    () -> {
                        recurse_68(recurse_68, __core__tailList__safe(lst_13))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, lst_12)
    };
    __helios__list[__helios__data]__is_valid_data = (data_128) -> {
        __core__chooseData(data_128, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_128))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_129) -> {
        __core__chooseData(data_129, () -> {
            pair_42 = __core__unConstrData__safe(data_129);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 8),
                () -> {
                    data_130 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_130, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_79 = __core__unListData__safe(data_130);
                        __core__chooseList(fields_79, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_79);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_80 = __core__tailList__safe(fields_79);
                                    __core__chooseList(fields_80, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_131) -> {
        lst_14 = __core__unListData(data_131);
        __2 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_14),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_14
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_103) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_103))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_133) -> {
        __helios__common__enum_tag_equals(data_133, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_134) -> {
        __core__chooseData(data_134, () -> {
            pair_43 = __core__unConstrData__safe(data_134);
            index_4 = __core__fstPair(pair_43);
            fields_81 = __core__sndPair(pair_43);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_81, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_81), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_81))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_81, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_135) -> {
        __core__chooseData(data_135, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_82 = __core__unListData__safe(data_135);
            __core__chooseList(fields_82, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_82);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_83 = __core__tailList__safe(fields_82);
                        __core__chooseList(fields_83, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_83);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_84 = __core__tailList__safe(fields_83);
                                    __core__chooseList(fields_84, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_84);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_85 = __core__tailList__safe(fields_84);
                                                __core__chooseList(fields_85, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize = __helios__struct__serialize;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_136) -> {
        ignore_4 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_136),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_136)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_104) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_104))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_137) -> {
        __3 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_137),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_137
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_105) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_105))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__config = (self_106) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_106))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__getRedeemer = (self_107) -> {
        (input) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(self_107, self_107)
            }), "no way s"), __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(input)))
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_108) -> {
        (mph_9) -> {
            __helios__assetclass__new(mph_9, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_108))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_138) -> {
        __helios__common__enum_tag_equals(data_138, 1)
    };
    __helios__option[__helios__txinput]__some__some = (self_109) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_109))
    };
    __helios__option[__helios__validatorhash]__none____is = (data_139) -> {
        __helios__common__enum_tag_equals(data_139, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_110) -> {
        (fn_14) -> {
            __helios__common__find_safe(self_110, (item_7) -> {
                fn_14(__helios__txinput__from_data(item_7))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_111) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_111))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput = (self_112) -> {
        (inputs, mph_10, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_112);
            __cond_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_112);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_1),
                () -> {
                    (__lhs_0_2) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_10, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_2 = __helios__list[__helios__txinput]__find_safe(inputs)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_2),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_1) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_2))
                    }
                }
            )()(__cond_1)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_141) -> {
        __helios__common__enum_tag_equals(data_141, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_142) -> {
        __helios__common__enum_tag_equals(data_142, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_113) -> {
        (fn_15) -> {
            __helios__common__find_safe(self_113, (item_8) -> {
                fn_15(__helios__txoutput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput = (self_114) -> {
        (mph_11, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_3 = self_114;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_3);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_3);
            ac_1 = __helios__assetclass__new(mph_11, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_6 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_6),
                                () -> {
                                    (__lhs_0_12) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_10) -> {
                                        __lhs_0_11 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_114)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_11, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_6)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_4 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_4),
                    () -> {
                        (__lhs_0_9) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_9);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_5 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_5),
                                () -> {
                                    (__lhs_0_8) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        false
                                    }
                                }
                            )()(__cond_5))
                        }
                    }
                )()(__cond_4)))
            }(__cond_3 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_3),
                () -> {
                    (__lhs_0_5) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_4) -> {
                        "created"
                    }
                }
            )()(__cond_3))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_143) -> {
        __core__chooseData(data_143, () -> {
            pair_44 = __core__unConstrData__safe(data_143);
            index_5 = __core__fstPair(pair_44);
            fields_86 = __core__sndPair(pair_44);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_144) -> {
        __core__chooseData(data_144, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_144);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(head_52),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_53),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_145) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_145),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_145),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1 = (data_146) -> {
        __core__chooseData(data_146, () -> {
            pair_45 = __core__unConstrData__safe(data_146);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 0),
                () -> {
                    data_147 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_147, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_91 = __core__unListData__safe(data_147);
                        __core__chooseList(fields_91, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_91);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_92 = __core__tailList__safe(fields_91);
                                    __core__chooseList(fields_92, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_15) -> {
        recurse_71 = (recurse_70, lst_16) -> {
            __core__chooseList(lst_16, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(__core__headList__safe(lst_16)),
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(lst_16))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_71(recurse_71, lst_15)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_148) -> {
        __core__chooseData(data_148, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_148))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1 = (data_149) -> {
        __core__chooseData(data_149, () -> {
            pair_46 = __core__unConstrData__safe(data_149);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 1),
                () -> {
                    data_150 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_150, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_93 = __core__unListData__safe(data_150);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(head_56),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__txinput]__any = (self_115) -> {
        (fn_16) -> {
            __helios__common__any(self_115, (item_9) -> {
                fn_16(__helios__txinput__from_data(item_9))
            })
        }
    };
    __module__CapoDelegateHelpers__requiresNoDelegateInput = (delegateLink, mph_12) -> {
        ac_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_12);
        __core__ifThenElse(
            __helios__list[__helios__txinput]__any(__helios__tx__inputs(__helios__scriptcontext__tx))((i_8) -> {
                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_8))(ac_2), 0)
            }),
            () -> {
                __helios__error(__helios__string____add("must not have dgTkn input: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
            },
            () -> {
                () -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("ok: no dgTkn input: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), true)
                }()
            }
        )()
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_151) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_151),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_151),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_151),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_151),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_151),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1 = (data_152) -> {
        __core__chooseData(data_152, () -> {
            pair_47 = __core__unConstrData__safe(data_152);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_47), 0),
                () -> {
                    data_153 = __core__listData(__core__sndPair(pair_47));
                    __core__chooseData(data_153, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_153);
                        __core__chooseList(fields_96, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1 = (data_154) -> {
        __core__chooseData(data_154, () -> {
            pair_48 = __core__unConstrData__safe(data_154);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 1),
                () -> {
                    data_155 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_155, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_97 = __core__unListData__safe(data_155);
                        __core__chooseList(fields_97, () -> {
                            false
                        }, () -> {
                            head_58 = __core__headList__safe(fields_97);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_58),
                                () -> {
                                    fields_98 = __core__tailList__safe(fields_97);
                                    __core__chooseList(fields_98, () -> {
                                        false
                                    }, () -> {
                                        head_59 = __core__headList__safe(fields_98);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_59),
                                            () -> {
                                                fields_99 = __core__tailList__safe(fields_98);
                                                __core__chooseList(fields_99, () -> {
                                                    false
                                                }, () -> {
                                                    head_60 = __core__headList__safe(fields_99);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_60),
                                                        () -> {
                                                            fields_100 = __core__tailList__safe(fields_99);
                                                            __core__chooseList(fields_100, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1 = (data_156) -> {
        __core__chooseData(data_156, () -> {
            pair_49 = __core__unConstrData__safe(data_156);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 2),
                () -> {
                    data_157 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_157, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_101 = __core__unListData__safe(data_157);
                        __core__chooseList(fields_101, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_101);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_61),
                                () -> {
                                    fields_102 = __core__tailList__safe(fields_101);
                                    __core__chooseList(fields_102, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_102);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_62),
                                            () -> {
                                                fields_103 = __core__tailList__safe(fields_102);
                                                __core__chooseList(fields_103, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1 = (data_158) -> {
        __core__chooseData(data_158, () -> {
            pair_50 = __core__unConstrData__safe(data_158);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 3),
                () -> {
                    data_159 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_159, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_104 = __core__unListData__safe(data_159);
                        __core__chooseList(fields_104, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1 = (data_160) -> {
        __core__chooseData(data_160, () -> {
            pair_51 = __core__unConstrData__safe(data_160);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 4),
                () -> {
                    data_161 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_161, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_161);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_162) -> {
        __core__chooseData(data_162, () -> {
            pair_52 = __core__unConstrData__safe(data_162);
            index_6 = __core__fstPair(pair_52);
            fields_106 = __core__sndPair(pair_52);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_106, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_106), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_106))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_106, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_163) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_163, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_163, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_163, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoDatum[]__serialize = __helios__common__serialize;
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_164) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_164),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_164),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_164),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_165) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_165),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_165
        }
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__serialize = __helios__common__serialize;
    __module__CapoHelpers__CapoDatum[]__CharterData____is = (data_166) -> {
        __helios__common__enum_tag_equals(data_166, 0)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_17) -> {
        recurse_73 = (recurse_72, lst_18) -> {
            __core__chooseList(lst_18, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_18)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_18))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_17)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_167))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_21) -> {
        recurse_75 = (recurse_74, map_22) -> {
            __core__chooseList(map_22, () -> {
                true
            }, () -> {
                head_63 = __core__headList__safe(map_22);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_63)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_63)),
                            () -> {
                                recurse_74(recurse_74, __core__tailList__safe(map_22))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, map_21)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_168) -> {
        __core__chooseData(data_168, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_168))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_23) -> {
        recurse_77 = (recurse_76, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_64 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_64)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_64)),
                            () -> {
                                recurse_76(recurse_76, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, map_23)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_169) -> {
        __core__chooseData(data_169, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_169))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_170) -> {
        __core__chooseData(data_170, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_170))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_171) -> {
        __core__chooseData(data_171, () -> {
            pair_53 = __core__unConstrData__safe(data_171);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 0),
                () -> {
                    data_172 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_172, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_107 = __core__unListData__safe(data_172);
                        __core__chooseList(fields_107, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_107);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_65),
                                () -> {
                                    fields_108 = __core__tailList__safe(fields_107);
                                    __core__chooseList(fields_108, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_108);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_66),
                                            () -> {
                                                fields_109 = __core__tailList__safe(fields_108);
                                                __core__chooseList(fields_109, () -> {
                                                    false
                                                }, () -> {
                                                    head_67 = __core__headList__safe(fields_109);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_67),
                                                        () -> {
                                                            fields_110 = __core__tailList__safe(fields_109);
                                                            __core__chooseList(fields_110, () -> {
                                                                false
                                                            }, () -> {
                                                                head_68 = __core__headList__safe(fields_110);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                                                    () -> {
                                                                        fields_111 = __core__tailList__safe(fields_110);
                                                                        __core__chooseList(fields_111, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_69 = __core__headList__safe(fields_111);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                                                                () -> {
                                                                                    fields_112 = __core__tailList__safe(fields_111);
                                                                                    __core__chooseList(fields_112, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_70 = __core__headList__safe(fields_112);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_70),
                                                                                            () -> {
                                                                                                fields_113 = __core__tailList__safe(fields_112);
                                                                                                __core__chooseList(fields_113, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_71 = __core__headList__safe(fields_113);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_71),
                                                                                                        () -> {
                                                                                                            fields_114 = __core__tailList__safe(fields_113);
                                                                                                            __core__chooseList(fields_114, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_72 = __core__headList__safe(fields_114);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_72),
                                                                                                                    () -> {
                                                                                                                        fields_115 = __core__tailList__safe(fields_114);
                                                                                                                        __core__chooseList(fields_115, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_173) -> {
        ignore_6 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_173),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_173
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_116) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_116))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_174) -> {
        lst_21 = __core__unListData(data_174);
        __4 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_21
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_117) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_117))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_175) -> {
        map_25 = __core__unMapData(data_175);
        __5 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_25),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_25
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_118) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_118))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_119) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_119))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_120) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_120))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_121) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_121))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_176) -> {
        map_26 = __core__unMapData(data_176);
        __6 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_26),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_26
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_122) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_122))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_177) -> {
        lst_22 = __core__unListData(data_177);
        __7 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_123) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_123))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____to_data = __core__listData;
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]____to_data = __core__mapData;
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference____is = (data_178) -> {
        __helios__common__enum_tag_equals(data_178, 1)
    };
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_179) -> {
        __core__chooseData(data_179, () -> {
            pair_54 = __core__unConstrData__safe(data_179);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 1),
                () -> {
                    data_180 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_180, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_180);
                        __core__chooseList(fields_116, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_181) -> {
        __helios__common__enum_tag_equals(data_181, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_27) -> {
        recurse_81 = (recurse_80, map_28) -> {
            __core__chooseList(map_28, () -> {
                true
            }, () -> {
                head_73 = __core__headList__safe(map_28);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_73)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_73)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_28))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_27)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_182) -> {
        __core__chooseData(data_182, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_182))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_183) -> {
        __core__chooseData(data_183, () -> {
            pair_55 = __core__unConstrData__safe(data_183);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 2),
                () -> {
                    data_184 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_184, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_117 = __core__unListData__safe(data_184);
                        __core__chooseList(fields_117, () -> {
                            false
                        }, () -> {
                            head_74 = __core__headList__safe(fields_117);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_74),
                                () -> {
                                    fields_118 = __core__tailList__safe(fields_117);
                                    __core__chooseList(fields_118, () -> {
                                        false
                                    }, () -> {
                                        head_75 = __core__headList__safe(fields_118);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_75),
                                            () -> {
                                                fields_119 = __core__tailList__safe(fields_118);
                                                __core__chooseList(fields_119, () -> {
                                                    false
                                                }, () -> {
                                                    head_76 = __core__headList__safe(fields_119);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_76),
                                                        () -> {
                                                            fields_120 = __core__tailList__safe(fields_119);
                                                            __core__chooseList(fields_120, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__serialize = (self_124) -> {
        () -> {
            __core__serialiseData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_124))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____eq = (self_125, other_3) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____to_data(self_125), __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____to_data(other_3))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____neq = (self_126, other_4) -> {
        __helios__bool____not(__helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____eq(self_126, other_4))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__serialize = (self_127) -> {
        () -> {
            __core__serialiseData(__helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]____to_data(self_127))
        }
    };
    __module__CapoHelpers__CapoDatum[]__countUpdatedThings = (self_128) -> {
        (oldDatum) -> {
            __cond_7 = self_128;
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__CharterData____is(__cond_7),
                () -> {
                    (__lhs_0_13) -> {
                        nextSpendDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__lhs_0_13);
                        nextSpendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_13);
                        nextNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_13);
                        nextMintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_13);
                        nextMintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_13);
                        nextGovDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_13);
                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_13);
                        __lhs_0_14 = __helios__common__assert_constr_index(oldDatum, 0);
                        oldSpendDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__lhs_0_14);
                        oldSpendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_14);
                        oldNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_14);
                        oldMintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_14);
                        oldMintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_14);
                        oldGovDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_14);
                        oldManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_14);
                        changedSpendDgt = __helios__bytearray____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(nextSpendDelegate)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldSpendDelegate)());
                        changedSpendInvariants = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____neq(nextSpendInvariants, oldSpendInvariants);
                        changedNamedDelegate = __helios__bytearray____neq(__helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__serialize(nextNamedDelegates)(), __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__serialize(oldNamedDelegates)());
                        changedMintDgt = __helios__bytearray____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(nextMintDelegate)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldMintDelegate)());
                        changedMintInvariants = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____neq(nextMintInvariants, oldMintInvariants);
                        changedGovDelegate = __helios__bytearray____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(nextGovDelegate)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldGovDelegate)());
                        changedManifest = __helios__bytearray____neq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__serialize(nextManifest)(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__serialize(oldManifest)());
                        __helios__int____add(__helios__int____add(__helios__int____add(__helios__int____add(__helios__int____add(__helios__int____add(__core__ifThenElse(
                            __helios__bool__trace(changedSpendDgt)(" -- spendDgt changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )(), __core__ifThenElse(
                            __helios__bool__trace(changedSpendInvariants)(" -- spendInvs changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )()), __core__ifThenElse(
                            __helios__bool__trace(changedNamedDelegate)(" -- namedDgt changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )()), __core__ifThenElse(
                            __helios__bool__trace(changedMintDgt)(" -- mintDgt changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )()), __core__ifThenElse(
                            __helios__bool__trace(changedMintInvariants)(" -- mintInvs changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )()), __core__ifThenElse(
                            __helios__bool__trace(changedGovDelegate)(" -- govDgt changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )()), __core__ifThenElse(
                            __helios__bool__trace(changedManifest)(" -- manifest changed? "),
                            () -> {
                                1
                            },
                            () -> {
                                () -> {
                                    0
                                }()
                            }
                        )())
                    }
                },
                () -> {
                    (__8) -> {
                        __helios__error("only CharterData datum can count updated things")
                    }
                }
            )()(__cond_7)
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_185) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_185),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_185),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_185),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_186) -> {
            ignore_7 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_186),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_186
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_56 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_121, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_189) -> {
        __helios__common__enum_tag_equals(data_189, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_190) -> {
        __core__chooseData(data_190, () -> {
            pair_57 = __core__unConstrData__safe(data_190);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_191 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_191, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_122 = __core__unListData__safe(data_191);
                        __core__chooseList(fields_122, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_122);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_77),
                                () -> {
                                    fields_123 = __core__tailList__safe(fields_122);
                                    __core__chooseList(fields_123, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_123);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_78),
                                            () -> {
                                                fields_124 = __core__tailList__safe(fields_123);
                                                __core__chooseList(fields_124, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_129) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_129))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_192) -> {
        __helios__common__enum_tag_equals(data_192, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_58 = __core__unConstrData__safe(data_193);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_194 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_194, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_194);
                        __core__chooseList(fields_125, () -> {
                            false
                        }, () -> {
                            head_79 = __core__headList__safe(fields_125);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_79),
                                () -> {
                                    fields_126 = __core__tailList__safe(fields_125);
                                    __core__chooseList(fields_126, () -> {
                                        false
                                    }, () -> {
                                        head_80 = __core__headList__safe(fields_126);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_80),
                                            () -> {
                                                fields_127 = __core__tailList__safe(fields_126);
                                                __core__chooseList(fields_127, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_130) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_195) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_195),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_195),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_195),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_195),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_195),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_195),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_196) -> {
            ignore_8 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_196),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_196
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_197) -> {
        __helios__common__enum_tag_equals(data_197, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_198) -> {
        __core__chooseData(data_198, () -> {
            pair_59 = __core__unConstrData__safe(data_198);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_199 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_199, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_128 = __core__unListData__safe(data_199);
                        __core__chooseList(fields_128, () -> {
                            false
                        }, () -> {
                            head_81 = __core__headList__safe(fields_128);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_81),
                                () -> {
                                    fields_129 = __core__tailList__safe(fields_128);
                                    __core__chooseList(fields_129, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_131) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_131))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_200) -> {
        __helios__common__enum_tag_equals(data_200, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_201) -> {
        __core__chooseData(data_201, () -> {
            pair_60 = __core__unConstrData__safe(data_201);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_202 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_202, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_202);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_203) -> {
        __helios__common__enum_tag_equals(data_203, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_204) -> {
        __core__chooseData(data_204, () -> {
            pair_61 = __core__unConstrData__safe(data_204);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_205 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_205, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_205);
                        __core__chooseList(fields_131, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_206) -> {
        __core__chooseData(data_206, () -> {
            pair_62 = __core__unConstrData__safe(data_206);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 3),
                () -> {
                    data_207 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_207, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_132 = __core__unListData__safe(data_207);
                        __core__chooseList(fields_132, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_208) -> {
        __helios__common__enum_tag_equals(data_208, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_209) -> {
        __core__chooseData(data_209, () -> {
            pair_63 = __core__unConstrData__safe(data_209);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 4),
                () -> {
                    data_210 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_210, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_210);
                        __core__chooseList(fields_133, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_211) -> {
        __helios__common__enum_tag_equals(data_211, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_212) -> {
        __core__chooseData(data_212, () -> {
            pair_64 = __core__unConstrData__safe(data_212);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 5),
                () -> {
                    data_213 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_213, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_213);
                        __core__chooseList(fields_134, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getTxCharterData = (mph_13, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc = __helios__assetclass__new(mph_13, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        (charterUtxo) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo))), 0);
            ctd
        }(__cond_8 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_8),
            () -> {
                (__lhs_0_18) -> {
                    ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_18);
                    ch_1
                }
            },
            () -> {
                (__lhs_0_15) -> {
                    __cond_9 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_9),
                        () -> {
                            (__lhs_0_17) -> {
                                ch = __helios__option[__helios__txinput]__some__some(__lhs_0_17);
                                ch
                            }
                        },
                        () -> {
                            (__lhs_0_16) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_9)
                }
            }
        )()(__cond_8))
    };
    __module__CapoHelpers__mustHaveGovAuthority = (mph_14, __useopt__charterData, charterData) -> {
        charterData_1 = __core__ifThenElse(
            __useopt__charterData,
            () -> {
                charterData
            },
            () -> {
                __module__CapoHelpers__getTxCharterData(mph_14, false, ())
            }
        )();
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(charterData_1))(mph_14, false, (), false, ())
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_214) -> {
        __core__chooseData(data_214, () -> {
            pair_65 = __core__unConstrData__safe(data_214);
            index_7 = __core__fstPair(pair_65);
            fields_135 = __core__sndPair(pair_65);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_135, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_135), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_135))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_135, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__link = (self_132) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_132))
    };
    __helios__option[__helios__txinput]__from_data = (data_215) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_215),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_215
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_133) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_133))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_134) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_134))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input_1, mph_15) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input_1), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_15), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_135) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_135))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_136) -> {
        () -> {
            i_9 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_136))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_9);
            __core__chooseUnit(__cond_10 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_10),
                () -> {
                    (__lhs_0_19) -> {
                        index_8 = __helios__data__constrdata__tag(__lhs_0_19);
                        fields_136 = __helios__data__constrdata__fields(__lhs_0_19);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_8)())), __cond_11 = __helios__list[__helios__data]__head(fields_136);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_11),
                            () -> {
                                (__lhs_0_20) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_20);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__11) -> {
                                    ()
                                }
                            }
                        )()(__cond_11))
                    }
                },
                () -> {
                    (__10) -> {
                        ()
                    }
                }
            )()(__cond_10), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_137) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_137)())
            }
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_138) -> {
        (fn_17) -> {
            __helios__common__filter_list(self_138, (item_10) -> {
                fn_17(__helios__data__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__requiresValidOutput = (self_139) -> {
        (__useopt__createdOrReturned_1, createdOrReturned_2) -> {
            createdOrReturned_3 = __core__ifThenElse(
                __useopt__createdOrReturned_1,
                () -> {
                    createdOrReturned_2
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__DelegateInput[]__link(self_139))(__module__CapoHelpers__DelegateInput[]__mph(self_139), true, true, true, createdOrReturned_3)
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__mph = (self_140) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_140))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_141) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_141))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_16, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_16), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __helios__option[__helios__txoutput]__some__some = (self_142) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_142))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_143) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData(self_143)()))(__module__CapoHelpers__CapoCtx[]__mph(self_143), false, (), false, ()), "no way m"), self_143))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_216) -> {
        __helios__common__enum_tag_equals(data_216, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_144) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_144))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_145) -> {
        (key_14) -> {
            __helios__common__map_get(self_145, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__requiresMintDelegateInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_146) -> {
            (__useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                dgtLink = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_1(self_146)());
                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_146)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new(), true, required_5, false, ())
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_2, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1) -> {
        (self_147) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                dgtLink_1 = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_2(self_147)());
                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1(self_147)(dgtLink_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new(), true, required_7, false, ())
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_3 = (self_148) -> {
        () -> {
            __cond_12 = __module__CapoHelpers__CapoCtx[]__charter(self_148);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_12),
                () -> {
                    (__lhs_0_22) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_22);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_12),
                        () -> {
                            (__lhs_0_21) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_21);
                                datum_2
                            }
                        },
                        () -> {
                            (__12) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_12)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2 = (self_149) -> {
        (dgtLink_2, role_1, __useopt__required_4, required_8, __useopt__idPrefix, idPrefix_1) -> {
            required_9 = __core__ifThenElse(
                __useopt__required_4,
                () -> {
                    required_8
                },
                () -> {
                    true
                }
            )();
            idPrefix_2 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_1
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_2, role_1, idPrefix_2, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(dgtLink_2)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_149), true, required_9), __module__CapoHelpers__CapoCtx[]__mph(self_149))
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_217) -> {
        __helios__common__enum_tag_equals(data_217, 1)
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_150) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_150);
                __cond_13 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_13),
                    () -> {
                        (__lhs_0_28) -> {
                            self_150
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_13),
                            () -> {
                                (__lhs_0_27) -> {
                                    self_150
                                }
                            },
                            () -> {
                                (__lhs_0_23) -> {
                                    __lhs_0_24 = self_150;
                                    mph_17 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_24);
                                    charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
                                    hasCharter_1 = (txin_1) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
                                    };
                                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_1);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_14),
                                        () -> {
                                            (__lhs_0_26) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_150)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_25) -> {
                                                charterUtxo_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_25);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_17, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_1)))
                                            }
                                        }
                                    )()(__cond_14)
                                }
                            }
                        )()
                    }
                )()(__cond_13))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_151) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_151);
            __cond_15 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_15),
                () -> {
                    (__lhs_0_34) -> {
                        self_151
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_15),
                        () -> {
                            (__lhs_0_33) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_29) -> {
                                __lhs_0_30 = self_151;
                                mph_18 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_30);
                                charterAc_2 = __helios__assetclass__new(mph_18, __helios__string__encode_utf8("charter")());
                                hasCharter_2 = (txin_2) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_2))(charterAc_2), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_2) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_18, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_2))
                                }(__cond_16 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_16),
                                    () -> {
                                        (__lhs_0_32) -> {
                                            ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_32);
                                            ch_2
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_31) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_16)))
                            }
                        }
                    )()
                }
            )()(__cond_15))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_152) -> {
        (fn_18, z_2) -> {
            __helios__common__fold(self_152, (z_3, pair_66) -> {
                fn_18(z_3, __helios__string__from_data(__core__fstPair(pair_66)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_66)))
            }, z_2)
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_153) -> {
        (activity) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_153, self_153)
            }), "prevent unused var"), __cond_17 = activity;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_17),
                () -> {
                    (__lhs_0_41) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_17),
                        () -> {
                            (__lhs_0_40) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_17),
                                () -> {
                                    (__lhs_0_39) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_17),
                                        () -> {
                                            (__lhs_0_38) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_17),
                                                () -> {
                                                    (__lhs_0_37) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_17),
                                                        () -> {
                                                            (__lhs_0_36) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_35) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_17))
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_19) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_19, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_2) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_2), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__13) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_218) -> {
        __helios__common__enum_tag_equals(data_218, 1)
    };
    __helios__option[__helios__data]__some__some = (self_154) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_154))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_155) -> {
        (key_15) -> {
            __helios__common__map_get(self_155, __helios__scriptpurpose____to_data(key_15), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink_1, mph_20, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink_1)(mph_20);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink_1))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_19 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_19),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__14) -> {
                            false
                        }
                    }
                )()(__cond_19)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink_1)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_20 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_20),
                () -> {
                    (__lhs_0_49) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_44) -> {
                        x_8 = __helios__option[__helios__data]__some__some(__lhs_0_44);
                        activity_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_8);
                        __cond_21 = activity_1;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_45) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_45);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_22 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_22),
                                        () -> {
                                            (__lhs_0_48) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_22),
                                                () -> {
                                                    (__lhs_0_47) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_46) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_22)))
                                }
                            },
                            () -> {
                                (__15) -> {
                                    checkMintDgtActivity_1(activity_1)
                                }
                            }
                        )()(__cond_21)
                    }
                }
            )()(__cond_20)))
        }(__cond_18 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_18),
            () -> {
                (__lhs_0_43) -> {
                    x_7 = __helios__option[__helios__txinput]__some__some(__lhs_0_43);
                    __helios__txinput__output_id(x_7)
                }
            },
            () -> {
                (__lhs_0_42) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink_1)))
                }
            }
        )()(__cond_18))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed) -> {
        seedTxId = __helios__txoutputid__tx_id(seed);
        seedIdx = __helios__txoutputid__index(seed);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_156) -> {
        (fn_19) -> {
            recurse_83 = (recurse_82, map_29) -> {
                __core__chooseList(map_29, () -> {
                    ()
                }, () -> {
                    head_82 = __core__headList__safe(map_29);
                    __core__chooseUnit(fn_19(__helios__bytearray__from_data(__core__fstPair(head_82)), __helios__int__from_data(__core__sndPair(head_82))), recurse_82(recurse_82, __core__tailList__safe(map_29)))
                })()
            };
            recurse_83(recurse_83, self_156)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_157) -> {
        (fn_20) -> {
            __helios__common__filter_map(self_157, (pair_67) -> {
                fn_20(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_67)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_67)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_158) -> {
        (fn_21) -> {
            recurse_85 = (recurse_84, map_30) -> {
                __core__chooseList(map_30, () -> {
                    ()
                }, () -> {
                    head_83 = __core__headList__safe(map_30);
                    __core__chooseUnit(fn_21(__helios__mintingpolicyhash__from_data(__core__fstPair(head_83)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_83))), recurse_84(recurse_84, __core__tailList__safe(map_30)))
                })()
            };
            recurse_85(recurse_85, self_158)
        }
    };
    __helios__option[__helios__int]__none____is = (data_219) -> {
        __helios__common__enum_tag_equals(data_219, 1)
    };
    __helios__option[__helios__int]__some__some = (self_159) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_159))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_160) -> {
        (key_16) -> {
            __helios__common__map_get(self_160, __helios__bytearray____to_data(key_16), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_161) -> {
        (key_17) -> {
            key_18 = __helios__mintingpolicyhash____to_data(key_17);
            recurse_87 = (recurse_86, self_162) -> {
                __core__chooseList(self_162, () -> {
                    self_162
                }, () -> {
                    head_84 = __core__headList__safe(self_162);
                    tail_4 = __core__tailList__safe(self_162);
                    __core__ifThenElse(
                        __core__equalsData(key_18, __core__fstPair(head_84)),
                        () -> {
                            recurse_86(recurse_86, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_84, recurse_86(recurse_86, tail_4))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_161)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_163, other_5) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_163), __helios__map[__helios__bytearray@__helios__int]____to_data(other_5))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_164) -> {
        (comp_4) -> {
            __helios__common__sort(self_164, (a_14, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_14)), __helios__int__from_data(__core__sndPair(a_14)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_165) -> {
        recurse_89 = (recurse_88, lst_23) -> {
            __core__chooseList(lst_23, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_23))), recurse_88(recurse_88, __core__tailList__safe(lst_23)))
            })()
        };
        recurse_89(recurse_89, self_165)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_166) -> {
        (fn_22) -> {
            __helios__common__map(self_166, (item_11) -> {
                __helios__value____to_data(fn_22(__helios__string__from_data(item_11)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_21, seed_1, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_1)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_50 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_21, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_50);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_21, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_21, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_21)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_21)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_21))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_21);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __16) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_21)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_1), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_21),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_21))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_2, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_23 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_2);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_23),
                                                () -> {
                                                    (__lhs_0_52) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_51) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_51);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_23)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_2)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__Capo__mph = __helios__mintingpolicyhash__from_data(__core__bData(#39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed));
    __module__Capo__requiresAuthorization = (ctd_1) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(ctd_1))(__module__Capo__mph, false, (), false, ())
    };
    __module__Capo__getCharterOutput = (tx_1) -> {
        charterTokenValue = __helios__value__new(__helios__assetclass__new(__module__Capo__mph, __helios__string__encode_utf8("charter")()), 1);
        __cond_24 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(tx_1))((txo) -> {
            __helios__value____geq(__helios__txoutput__value(txo), charterTokenValue)
        });
        __core__ifThenElse(
            __helios__option[__helios__txoutput]__none____is(__cond_24),
            () -> {
                (__lhs_0_54) -> {
                    __helios__error("this could only happen if the charter token is burned.")
                }
            },
            () -> {
                (__lhs_0_53) -> {
                    o_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_53);
                    o_1
                }
            }
        )()(__cond_24)
    };
    __module__Capo__preventCharterChange = (datum_6) -> {
        charterOutput = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
        cvh = __helios__scriptcontext__get_current_validator_hash();
        myself = __helios__spendingcredential__new_validator(cvh);
        __core__chooseUnit(__core__ifThenElse(
            __helios__spendingcredential____neq(__helios__address__credential(__helios__txoutput__address(charterOutput)), myself),
            () -> {
                __helios__error("charter token must be returned to the contract ")
            },
            () -> {
                () -> {
                    __helios__print("ok
")
                }()
            }
        )(), newDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(charterOutput)));
        __core__ifThenElse(
            __helios__bytearray____neq(__module__CapoHelpers__CapoDatum[]__CharterData__serialize(datum_6)(), __module__CapoHelpers__CapoDatum[]__serialize(newDatum)()),
            () -> {
                __helios__error("invalid update to charter settings")
            },
            () -> {
                () -> {
                    true
                }()
            }
        )())
    };
    __module__Capo__checkpoint = (s_1) -> {
        __core__chooseUnit(__helios__print(__helios__string____add("checkpoint: ", s_1)), __core__chooseUnit(__helios__print("
"), true))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__serialize = (self_167) -> {
        () -> {
            __core__serialiseData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_167))
        }
    };
    __module__Capo__main = (datum_7, activity_2) -> {
        __core__chooseUnit(__helios__print("\u{1F6A5}\u2753Capo
"), input_3 = __helios__scriptcontext__get_current_input();
        __core__chooseUnit(__helios__print(__helios__string____add("  -- Capo: checks spend of ", __helios__value__show(__helios__txinput__value(input_3))(false, ()))), capoDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(datum_7);
        (allDatumSpecificChecks) -> {
            (allActivitySpecificChecks) -> {
                __core__chooseUnit(__helios__assert(allDatumSpecificChecks, "some datum-check failed"), __core__chooseUnit(__helios__assert(allActivitySpecificChecks, "some redeeemer-check failed"), __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    __helios__bool__and(() -> {
                        allDatumSpecificChecks
                    }, () -> {
                        allActivitySpecificChecks
                    })
                }, () -> {
                    __helios__bytearray____eq(__helios__mintingpolicyhash__serialize(__module__Capo__mph)(), __helios__mintingpolicyhash__serialize(__module__Capo__mph)())
                }), "unreachable"), __core__chooseUnit(__helios__print("
\u{1F6A5}\u{1F7E2} Capo validator: ok!

"), __helios__bool__and(() -> {
                    allDatumSpecificChecks
                }, () -> {
                    allActivitySpecificChecks
                })))))
            }(__cond_29 = activity_2;
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                () -> {
                    (__lhs_0_92) -> {
                        charterData_2 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__Capo__mph, false, ()), 0);
                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedDatum activity", false, ()), __core__chooseUnit(__helios__print("  ...with activity spendingDelegatedDatum
"), (datumId) -> {
                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("guards against updating a record if its id doesn't match its token-name", false, ()), datumAc = __helios__assetclass__new(__module__Capo__mph, datumId);
                            hasMatchingValue = __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(datumAc), 0);
                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deal with DeletingDelegatedData activity (ensure spendDgt AND mintDgt do their parts)"), cctx_1 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__Capo__mph))();
                            checkThingOne = __module__CapoHelpers__DelegateInput[]__requiresValidOutput(__module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2)(cctx_1)(false, ()))(false, ());
                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY the above versus the below!"), spendDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_2);
                            spendDelegateInput = __helios__option[__helios__txinput]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(spendDelegate_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__Capo__mph, false, ()))();
                            delegateReturned = __helios__bool__trace(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDelegate_1)(__module__Capo__mph, false, (), false, ()))(" -- delegate returned ok? ");
                            spendDgtInputRedeemer = __module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput);
                            __core__chooseUnit(__helios__print("  -- vvvvv REDUNDANT checks for delegate activity (right?)
"), getSpendingRecId = (dgSpendActivity) -> {
                                __cond_48 = dgSpendActivity;
                                __core__ifThenElse(
                                    __helios__data__constrdata____is(__cond_48),
                                    () -> {
                                        (__lhs_0_95) -> {
                                            index_9 = __helios__data__constrdata__tag(__lhs_0_95);
                                            fields_138 = __helios__data__constrdata__fields(__lhs_0_95);
                                            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                                                true
                                            }, () -> {
                                                __helios__int____eq(index_9, index_9)
                                            }), "unreachable"), __cond_49 = __helios__list[__helios__data]__head(fields_138);
                                            __core__ifThenElse(
                                                __helios__data__bytearraydata____is(__cond_49),
                                                () -> {
                                                    (__lhs_0_96) -> {
                                                        recId = __helios__data__bytearraydata__value(__lhs_0_96);
                                                        __core__chooseUnit(__helios__print(__helios__string____add("  -- found recId: ", __helios__bytearray__show(recId)())), recId)
                                                    }
                                                },
                                                () -> {
                                                    (__33) -> {
                                                        __helios__error("spending activity must have a record-id as first field")
                                                    }
                                                }
                                            )()(__cond_49))
                                        }
                                    },
                                    () -> {
                                        (__32) -> {
                                            __helios__error("unreachable")
                                        }
                                    }
                                )()(__cond_48)
                            };
                            (uniqMatchingSpendDgtActivity) -> {
                                __core__chooseUnit(__helios__print("  -- ^^^^^ REDUNDANT checks for delegate activity
"), __helios__bool__and(() -> {
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            hasMatchingValue
                                        })
                                    }, () -> {
                                        uniqMatchingSpendDgtActivity
                                    })
                                }, () -> {
                                    delegateReturned
                                }))
                            }(__cond_50 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(spendDgtInputRedeemer);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_50),
                                () -> {
                                    (__lhs_0_102) -> {
                                        sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_102);
                                        __core__chooseUnit(__helios__assert(false, __helios__string____add(__helios__string____add("expected the Spend delegate to use *DelegatedData* activities
", "  ... to describe the operations that are being performed by next-level "), "  ... DgData Policy delegates")), recId_4 = getSpendingRecId(sa_1);
                                        __core__chooseUnit(__helios__assert(__helios__bytearray____eq(recId_4, datumId), "spendDgt SpendingActivity must act on the correct record-id"), true))
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_50),
                                        () -> {
                                            (__lhs_0_101) -> {
                                                recId_3 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__recId(__lhs_0_101);
                                                __core__chooseUnit(__helios__assert(__helios__bytearray____eq(recId_3, datumId), "spendDgt UpdDgData must act on the correct record-id"), __core__chooseUnit(__helios__print("  -- ok: activity matches data being updated"), true))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_50),
                                                () -> {
                                                    (__lhs_0_98) -> {
                                                        activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_98);
                                                        found = __helios__list[__helios__data]__filter(activities)((act) -> {
                                                            __cond_52 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(act);
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_52),
                                                                () -> {
                                                                    (__lhs_0_100) -> {
                                                                        sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_100);
                                                                        __core__chooseUnit(__helios__assert(false, __helios__string____add(__helios__string____add("expected the Spend delegate to use *DelegatedData* activities
", "  ... to describe the operations that are being performed by next-level "), "  ... DgData Policy delegates")), recId_2 = getSpendingRecId(sa);
                                                                        __helios__bytearray____eq(recId_2, datumId))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_52),
                                                                        () -> {
                                                                            (__lhs_0_99) -> {
                                                                                recId_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__recId(__lhs_0_99);
                                                                                __helios__bytearray____eq(recId_1, datumId)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__36) -> {
                                                                                false
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_52)
                                                        });
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__helios__print(__helios__string____add("recId: ", __helios__bytearray__show(datumId)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(found), 0))("found activity for this recId? "), "\u2757 no spend delegate activity on this dgData"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS too v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt fails with multiple activities for the same recId", false, ()), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(found), 1))("has exactly one matching activity? "), __helios__string____add("\u2757IMPOSSIBLE (caught by DelegateInput.withDDSpendingActivity())", " spend delegate tried to act in multiple ways on the same token")), __helios__bool__and(() -> {
                                                            checkThingOne
                                                        }, () -> {
                                                            true
                                                        }))))))))
                                                    }
                                                },
                                                () -> {
                                                    (__34) -> {
                                                        __cond_51 = spendDgtInputRedeemer;
                                                        __core__ifThenElse(
                                                            __helios__data__constrdata____is(__cond_51),
                                                            () -> {
                                                                (__lhs_0_97) -> {
                                                                    index_10 = __helios__data__constrdata__tag(__lhs_0_97);
                                                                    fields_139 = __helios__data__constrdata__fields(__lhs_0_97);
                                                                    __core__chooseUnit(__helios__print(__helios__string____add("unexpected redeemer: ", __helios__int__show(index_10)())), __core__chooseUnit(__helios__print("
"), __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                                                                        true
                                                                    }, () -> {
                                                                        __helios__int____gt(__helios__list[__helios__data]__length(fields_139), 0)
                                                                    }), "unreachable"), __helios__error("spend delegate not triggered with a Spending activity"))))
                                                                }
                                                            },
                                                            () -> {
                                                                (__35) -> {
                                                                    __helios__error("unreachable")
                                                                }
                                                            }
                                                        )()(__cond_51)
                                                    }
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__cond_50))))))
                        }(__cond_46 = capoDatum;
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_46),
                            () -> {
                                (__lhs_0_93) -> {
                                    __cond_47 = datum_7;
                                    __core__ifThenElse(
                                        __helios__data__constrdata____is(__cond_47),
                                        () -> {
                                            (__lhs_0_94) -> {
                                                fields_137 = __helios__data__constrdata__fields(__lhs_0_94);
                                                __module__StellarHeliosHelpers__AnyData[]__id(__module__StellarHeliosHelpers__AnyData[]__from_data(__helios__list[__helios__data]__head(fields_137)))
                                            }
                                        },
                                        () -> {
                                            (__31) -> {
                                                __helios__error("unreachable")
                                            }
                                        }
                                    )()(__cond_47)
                                }
                            },
                            () -> {
                                (__30) -> {
                                    __helios__error("activity spendingDelegatedDatum used on mismatched datum type")
                                }
                            }
                        )()(__cond_46))))
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                        () -> {
                            (__lhs_0_73) -> {
                                __core__chooseUnit(__helios__print("  ...with activity updatingCharter
"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("make this obsolete by implementing capoLifecycleActivity"), charterOutput_2 = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
                                newCtDatum_1 = __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(charterOutput_2)));
                                oldCtDatum_1 = __helios__common__assert_constr_index(__cond_36 = capoDatum;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoDatum[]__CharterData____is(__cond_36),
                                    () -> {
                                        (octd_1) -> {
                                            octd_1
                                        }
                                    },
                                    () -> {
                                        (__27) -> {
                                            __helios__error("wrong use of updatingCharter action for non-CharterData datum")
                                        }
                                    }
                                )()(__cond_36), 0);
                                __lhs_0_74 = __helios__common__assert_constr_index(newCtDatum_1, 0);
                                spendDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__lhs_0_74);
                                spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_74);
                                otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_74);
                                mintDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_74);
                                mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_74);
                                nextGovDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_74);
                                nextManifest_1 = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_74);
                                nextPendingPolicies = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__lhs_0_74);
                                __lhs_0_75 = __helios__common__assert_constr_index(capoDatum, 0);
                                oldSpendDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__lhs_0_75);
                                oldSpendInvariants_1 = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_75);
                                oldOtherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_75);
                                oldMintDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_75);
                                oldMintInvariants_1 = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_75);
                                oldGovDelegate_1 = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_75);
                                oldManifest_1 = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_75);
                                oldPendingPolicies = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__lhs_0_75);
                                mustNotModifyMintInvariants = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____eq(mintInvariants, oldMintInvariants_1);
                                mustNotModifySpendInvariants = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]____eq(spendInvariants, oldSpendInvariants_1);
                                mustNotModifyManifest = __helios__bytearray____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__serialize(nextManifest_1)(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__serialize(oldManifest_1)());
                                unchangedGovDelegate = __helios__bytearray____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(nextGovDelegate_1)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldGovDelegate_1)());
                                hasNeededGovDelegate = __helios__bool__or(() -> {
                                    true
                                }, () -> {
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __module__Capo__checkpoint("must be validated by existing govDelegate")
                                        }, () -> {
                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(nextGovDelegate_1)(__module__Capo__mph, false, (), false, ())
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            unchangedGovDelegate
                                        }, () -> {
                                            __cond_37 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(oldGovDelegate_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__Capo__mph, true, true);
                                            __core__ifThenElse(
                                                __helios__option[__helios__txinput]__none____is(__cond_37),
                                                () -> {
                                                    (__lhs_0_77) -> {
                                                        __helios__error("unreachable")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_76) -> {
                                                        true
                                                    }
                                                }
                                            )()(__cond_37)
                                        })
                                    })
                                });
                                unchangedSpendDgt = __helios__bytearray____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(spendDelegate)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldSpendDelegate_1)());
                                unchangedMintDgt = __helios__bytearray____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(mintDelegate)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldMintDelegate_1)());
                                changedAnyNamedDelegate = __helios__bytearray____neq(__helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__serialize(otherNamedDelegates)(), __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__serialize(oldOtherNamedDelegates)());
                                mustNotChangePendingPolicies = __helios__bytearray____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__serialize(nextPendingPolicies)(), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__serialize(oldPendingPolicies)());
                                __core__chooseUnit(__core__ifThenElse(
                                    true,
                                    () -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add("is spendDgt unchanged? ", __helios__bool__show(unchangedSpendDgt)())), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  - old: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(oldSpendDelegate_1)), " => "), __cond_45 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(oldSpendDelegate_1);
                                        __core__ifThenElse(
                                            __helios__option[__helios__validatorhash]__some____is(__cond_45),
                                            () -> {
                                                (__lhs_0_91) -> {
                                                    v_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_91);
                                                    __helios__validatorhash__show(v_3)()
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_90) -> {
                                                    " (any addr)"
                                                }
                                            }
                                        )()(__cond_45))), oldSDConfigStr = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__RelativeDelegateLink[]__config(oldSpendDelegate_1))();
                                        __core__chooseUnit(__helios__print(__helios__string____add("       + cfg ", oldSDConfigStr)), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  - new: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(spendDelegate)), " => "), __cond_44 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(spendDelegate);
                                        __core__ifThenElse(
                                            __helios__option[__helios__validatorhash]__some____is(__cond_44),
                                            () -> {
                                                (__lhs_0_89) -> {
                                                    v_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_89);
                                                    __helios__validatorhash__show(v_2)()
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_88) -> {
                                                    " (any addr)"
                                                }
                                            }
                                        )()(__cond_44))), newSDConfigStr = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__RelativeDelegateLink[]__config(spendDelegate))();
                                        __core__chooseUnit(__helios__print(__helios__string____add("       + cfg ", newSDConfigStr)), __core__chooseUnit(__helios__print(__helios__string____add(" -- is mintDgt unchanged?  ", __helios__bool__show(unchangedMintDgt)())), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  - old: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(oldMintDelegate_1)), " => "), __cond_43 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(oldMintDelegate_1);
                                        __core__ifThenElse(
                                            __helios__option[__helios__validatorhash]__some____is(__cond_43),
                                            () -> {
                                                (__lhs_0_87) -> {
                                                    v_1 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_87);
                                                    __helios__validatorhash__show(v_1)()
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_86) -> {
                                                    " (any addr)"
                                                }
                                            }
                                        )()(__cond_43))), oldMDConfigStr = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__RelativeDelegateLink[]__config(oldMintDelegate_1))();
                                        __core__chooseUnit(__helios__print(__helios__string____add("       + cfg ", oldMDConfigStr)), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  - new: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(mintDelegate)), " => "), __cond_42 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(mintDelegate);
                                        __core__ifThenElse(
                                            __helios__option[__helios__validatorhash]__some____is(__cond_42),
                                            () -> {
                                                (__lhs_0_85) -> {
                                                    v = __helios__option[__helios__validatorhash]__some__some(__lhs_0_85);
                                                    __helios__validatorhash__show(v)()
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_84) -> {
                                                    " (any addr)"
                                                }
                                            }
                                        )()(__cond_42))), newMDConfigStr = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__RelativeDelegateLink[]__config(mintDelegate))();
                                        __core__chooseUnit(__helios__print(__helios__string____add("       + cfg ", newMDConfigStr)), __helios__print("")))))))))))
                                    },
                                    () -> {
                                        () -> {
                                            ()
                                        }()
                                    }
                                )(), countUpdatedThings = __module__CapoHelpers__CapoDatum[]__countUpdatedThings(newCtDatum_1)(capoDatum);
                                __core__chooseUnit(__helios__assert(__helios__int____eq(countUpdatedThings, 1), __helios__string____add(__helios__string____add("expected exactly one item updated in charter, got ", __helios__int__show(countUpdatedThings)()), "")), __helios__bool__and(() -> {
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    __helios__bool__and(() -> {
                                                        __helios__bool__and(() -> {
                                                            __helios__bool__and(() -> {
                                                                __helios__bool__and(() -> {
                                                                    __helios__bool__and(() -> {
                                                                        __helios__bool__and(() -> {
                                                                            hasNeededGovDelegate
                                                                        }, () -> {
                                                                            __module__StellarHeliosHelpers__bREQT("must not change the manifest", true, mustNotModifyManifest)
                                                                        })
                                                                    }, () -> {
                                                                        __module__Capo__checkpoint("1")
                                                                    })
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        unchangedMintDgt,
                                                                        () -> {
                                                                            __helios__bool__and(() -> {
                                                                                __module__Capo__checkpoint("2b")
                                                                            }, () -> {
                                                                                __cond_39 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(mintDelegate)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__Capo__mph, true, false);
                                                                                __core__ifThenElse(
                                                                                    __helios__option[__helios__txinput]__none____is(__cond_39),
                                                                                    () -> {
                                                                                        (__lhs_0_83) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_80) -> {
                                                                                            mintDgtInput = __helios__option[__helios__txinput]__some__some(__lhs_0_80);
                                                                                            delegateActivity = __module__CapoDelegateHelpers__RelativeDelegateLink[]__getRedeemer(mintDelegate)(mintDgtInput);
                                                                                            __core__chooseUnit(__helios__print("mint delegate input found
"), __cond_40 = delegateActivity;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is(__cond_40),
                                                                                                () -> {
                                                                                                    (__lhs_0_81) -> {
                                                                                                        CLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__activity(__lhs_0_81);
                                                                                                        __cond_41 = CLA;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_41),
                                                                                                            () -> {
                                                                                                                (__lhs_0_82) -> {
                                                                                                                    __core__chooseUnit(__helios__print("TEMPORARY: allowing delegate creation while **updatingCharter**
"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("move delegate-creation to be separate from updatingCharter"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(" ?? use capo ActivatingXxxxDelegate activity when adopting delegate"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDelegate)(__module__Capo__mph, false, (), false, ()))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__29) -> {
                                                                                                                    __helios__error("must use capoLifecycleActivity directly in Capo, not with generic updatingSettings")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_41)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__28) -> {
                                                                                                        __helios__error("invalid use of mint delegate during charter update")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_40))
                                                                                        }
                                                                                    }
                                                                                )()(__cond_39)
                                                                            })
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the updated mintDgt token must be deposited to its own script address", false, ()), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDelegate)(__module__Capo__mph, false, (), false, ()))
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }, () -> {
                                                                __core__ifThenElse(
                                                                    unchangedSpendDgt,
                                                                    () -> {
                                                                        __helios__bool__and(() -> {
                                                                            __module__Capo__checkpoint("4b")
                                                                        }, () -> {
                                                                            __module__CapoDelegateHelpers__requiresNoDelegateInput(spendDelegate, __module__Capo__mph)
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the updated spendDgt token must be deposited to its own script address", false, ()), __helios__bool__and(() -> {
                                                                                __module__Capo__checkpoint("4a")
                                                                            }, () -> {
                                                                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDelegate)(__module__Capo__mph, false, (), false, ())
                                                                            }))
                                                                        }()
                                                                    }
                                                                )()
                                                            })
                                                        }, () -> {
                                                            __module__Capo__checkpoint("5")
                                                        })
                                                    }, () -> {
                                                        __core__ifThenElse(
                                                            __helios__bool____not(changedAnyNamedDelegate),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    __helios__bool__and(() -> {
                                                                        __module__Capo__checkpoint("5b")
                                                                    }, () -> {
                                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)((ok, name_3, dgt) -> {
                                                                            __helios__bool__and(() -> {
                                                                                ok
                                                                            }, () -> {
                                                                                __cond_38 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(oldOtherNamedDelegates)(name_3);
                                                                                __core__ifThenElse(
                                                                                    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_38),
                                                                                    () -> {
                                                                                        (__lhs_0_79) -> {
                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(" - adopting named delegate: ", name_3)), __core__chooseUnit(__helios__print("
"), true))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_78) -> {
                                                                                            oldDgt = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_78);
                                                                                            __core__ifThenElse(
                                                                                                __helios__bytearray____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(oldDgt)(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(dgt)()),
                                                                                                () -> {
                                                                                                    __module__CapoDelegateHelpers__requiresNoDelegateInput(dgt, __module__Capo__mph)
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("the old named delegate must be retired, or be force-replaced (in a different activity?)"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(dgt)(__module__Capo__mph, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    }
                                                                                )()(__cond_38)
                                                                            })
                                                                        }, true)
                                                                    })
                                                                }()
                                                            }
                                                        )()
                                                    })
                                                }, () -> {
                                                    mustNotChangePendingPolicies
                                                })
                                            }, () -> {
                                                mustNotModifyMintInvariants
                                            })
                                        }, () -> {
                                            mustNotModifySpendInvariants
                                        })
                                    }, () -> {
                                        __module__Capo__requiresAuthorization(oldCtDatum_1)
                                    })
                                }, () -> {
                                    __module__Capo__checkpoint("6")
                                })))))
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_29),
                                () -> {
                                    (__lhs_0_65) -> {
                                        myCLActivity = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_65);
                                        __core__chooseUnit(__helios__print("  ...with activity capoLifecycleActivity
"), oldCtDatum = __helios__common__assert_constr_index(__cond_32 = capoDatum;
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoDatum[]__CharterData____is(__cond_32),
                                            () -> {
                                                (octd) -> {
                                                    octd
                                                }
                                            },
                                            () -> {
                                                (__23) -> {
                                                    __helios__error("wrong use of updatingCharter action for non-CharterData datum")
                                                }
                                            }
                                        )()(__cond_32), 0);
                                        charterOutput_1 = __module__Capo__getCharterOutput(__helios__scriptcontext__tx);
                                        newCtDatum = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(charterOutput_1))), 0);
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("all capoLifecycleActivities require the govAuthority", false, ()), cctx = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_3)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__Capo__mph))())();
                                        __cond_33 = myCLActivity;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_33),
                                            () -> {
                                                (__lhs_0_72) -> {
                                                    seed_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__seed(__lhs_0_72);
                                                    purpose_4 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__purpose(__lhs_0_72);
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when forcingNewMintDelegate, ONLY the mintDelegate is updated", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(oldCtDatum))(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum))()), "must update mintDelegate"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__CapoHelpers__CapoDatum[]__countUpdatedThings(oldCtDatum)(newCtDatum), 1), "must not update anything except mintDelegate"), __core__chooseUnit(__helios__assert(__helios__string____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(oldCtDatum)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum))), "new mintDelegate token must be different from the old one"), tnFactory_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new mintDgt must have the new dgTkn", false, ()), expectedTn_1 = tnFactory_1(purpose_4);
                                                    __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum)), expectedTn_1), __helios__string____add(__helios__string____add(__helios__string____add("wrong mintDelegate token name '", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum))), "' added to charter; should be: "), expectedTn_1)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new mintDelegate must be present in its own script address", false, ()), __helios__bool__and(() -> {
                                                        __helios__bool__and(() -> {
                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(newCtDatum))(__module__Capo__mph, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new())
                                                        }, () -> {
                                                            __module__StellarHeliosHelpers__bREQT("Ensures the new mintDgt-* uut is minted with a seed", false, ())
                                                        })
                                                    }, () -> {
                                                        __module__CapoMintHelpers__validateUutMinting(__module__Capo__mph, seed_3, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, tnFactory_1, false, (), false, (), true, false, false, (), false, ())
                                                    }))))))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_33),
                                                    () -> {
                                                        (__lhs_0_71) -> {
                                                            seed_2 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__seed(__lhs_0_71);
                                                            purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__purpose(__lhs_0_71);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when forcingNewSpendDelegate, ONLY the spendDelegate is updated", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(oldCtDatum))(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__serialize(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(newCtDatum))()), "must update spendDelegate"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__CapoHelpers__CapoDatum[]__countUpdatedThings(oldCtDatum)(newCtDatum), 1), "must not update anything except spendDelegate"), __core__chooseUnit(__helios__assert(__helios__string____neq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(oldCtDatum)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(newCtDatum))), "new spendDelegate token must be different from the old one"), tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_2);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new spendDgt must have the new dgTkn", false, ()), expectedTn = tnFactory(purpose_3);
                                                            __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(newCtDatum)), expectedTn), __helios__string____add(__helios__string____add(__helios__string____add("wrong spendDelegate token name '", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(newCtDatum))), "' added to charter; should be: "), expectedTn)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new spendDelegate must be present in its own script address", false, ()), __helios__bool__and(() -> {
                                                                __helios__bool__and(() -> {
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(newCtDatum))(__module__Capo__mph, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new())
                                                                }, () -> {
                                                                    __module__StellarHeliosHelpers__bREQT("Ensures the new spendDgt-* uut is minted with a seed", false, ())
                                                                })
                                                            }, () -> {
                                                                __module__CapoMintHelpers__validateUutMinting(__module__Capo__mph, seed_2, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                            }))))))))
                                                        }
                                                    },
                                                    () -> {
                                                        (__24) -> {
                                                            matchesActivity = (dgtActivity) -> {
                                                                __cond_34 = dgtActivity;
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is(__cond_34),
                                                                    () -> {
                                                                        (__lhs_0_66) -> {
                                                                            cla = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__activity(__lhs_0_66);
                                                                            __module__StellarHeliosHelpers__bREQT("  - the delegate's activity must match the capo's lifecycle activity", true, __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cla, myCLActivity))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__25) -> {
                                                                            __helios__error("delegate must use CapoLifecycleActivities")
                                                                        }
                                                                    }
                                                                )()(__cond_34)
                                                            };
                                                            needsMintDgt = () -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - enforces presence of the mint delegate", false, ()), mintDgt_1 = __module__CapoHelpers__CapoCtx[]__requiresMintDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2)(cctx)(false, ());
                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgt_1)(false, ()), "<-- that fails, this doesn't"), matchesActivity(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(mintDgt_1)())))
                                                            };
                                                            needsSpendDgt = () -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - enforces presence of the spend delegate", false, ()), spendDgt = __module__CapoHelpers__CapoCtx[]__requiresSpendDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2)(cctx)(false, ());
                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__requiresValidOutput(spendDgt)(false, ()), "<-- that fails, this doesn't"), matchesActivity(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(spendDgt)())))
                                                            };
                                                            __cond_35 = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx)(myCLActivity);
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_35),
                                                                () -> {
                                                                    (__lhs_0_70) -> {
                                                                        __helios__error("unreachable")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_35),
                                                                        () -> {
                                                                            (__lhs_0_69) -> {
                                                                                needsMintDgt()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_35),
                                                                                () -> {
                                                                                    (__lhs_0_68) -> {
                                                                                        needsSpendDgt()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_35),
                                                                                        () -> {
                                                                                            (__lhs_0_67) -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    needsMintDgt()
                                                                                                }, () -> {
                                                                                                    needsSpendDgt()
                                                                                                })
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__26) -> {
                                                                                                __helios__error("dgtRolesForLifecycleActivity should indicate only mint/spend/both delegate-roles")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_35)
                                                        }
                                                    }
                                                )()
                                            }
                                        )()(__cond_33)))
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                        () -> {
                                            (__lhs_0_63) -> {
                                                __core__chooseUnit(__helios__print("  ...with activity retiringRefScript
"), (isSpendingRefScript) -> {
                                                    hasGovAuthority = __module__CapoHelpers__mustHaveGovAuthority(__module__Capo__mph, false, ());
                                                    __helios__bool__and(() -> {
                                                        __helios__bool__and(() -> {
                                                            isSpendingRefScript
                                                        }, () -> {
                                                            hasGovAuthority
                                                        })
                                                    }, () -> {
                                                        true
                                                    })
                                                }(__cond_31 = capoDatum;
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoDatum[]__ScriptReference____is(__cond_31),
                                                    () -> {
                                                        (__lhs_0_64) -> {
                                                            true
                                                        }
                                                    },
                                                    () -> {
                                                        (__22) -> {
                                                            __helios__error("wrong use of retiringRefScript action for non-ScriptRef datum")
                                                        }
                                                    }
                                                )()(__cond_31)))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                () -> {
                                                    (__lhs_0_62) -> {
                                                        __core__chooseUnit(__helios__print("  ...with activity usingAuthority
"), __cond_30 = capoDatum;
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoDatum[]__CharterData____is(__cond_30),
                                                            () -> {
                                                                (ctd_3) -> {
                                                                    __module__Capo__requiresAuthorization(ctd_3)
                                                                }
                                                            },
                                                            () -> {
                                                                (__21) -> {
                                                                    __helios__error("wrong use of usingAuthority action for non-CharterData datum")
                                                                }
                                                            }
                                                        )()(__cond_30))
                                                    }
                                                },
                                                () -> {
                                                    (__20) -> {
                                                        __helios__error("unhandled activity")
                                                    }
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_29))
        }(__cond_25 = capoDatum;
        __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData____is(__cond_25),
            () -> {
                (ctd_2) -> {
                    invalid = "invalid activity on CharterData";
                    __cond_28 = activity_2;
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_28),
                        () -> {
                            (__lhs_0_61) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_28),
                                () -> {
                                    (__lhs_0_60) -> {
                                        true
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_28),
                                        () -> {
                                            (__lhs_0_59) -> {
                                                __helios__error(invalid)
                                            }
                                        },
                                        () -> {
                                            (__19) -> {
                                                __core__chooseUnit(__helios__print("this charter activity isn't allowed to change the charter"), __module__Capo__preventCharterChange(ctd_2))
                                            }
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_28)
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__ScriptReference____is(__cond_25),
                    () -> {
                        (__lhs_0_57) -> {
                            __cond_27 = activity_2;
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_27),
                                () -> {
                                    (__lhs_0_58) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__18) -> {
                                        __helios__error("invalid activity on ScriptReference")
                                    }
                                }
                            )()(__cond_27)
                        }
                    },
                    () -> {
                        (__lhs_0_55) -> {
                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedDatum activity", false, ()), __cond_26 = activity_2;
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_26),
                                () -> {
                                    (__lhs_0_56) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__17) -> {
                                        __helios__error("invalid activity on DelegatedData")
                                    }
                                }
                            )()(__cond_26))
                        }
                    }
                )()
            }
        )()(__cond_25))))
    };
    __core__ifThenElse(
        __module__Capo__main(__helios__data__from_data(__DATUM), __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/DefaultCapo.hl", "src/CapoHelpers.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f18730019035b181b18740019035b181b1885001872182818a5001872182f18b40019034f0a18c3001903500a190243011906a5181c1902990119069f181e1902a80119069f1838190b9e011905080c190ba30119050808190ba701190507182d190be90019021e1820190c09011904b410190efd021901a104190f08021901b11834190f09021901b1183419111102190144184d19111202190144184d19111302190144184d19111402190144184d191119021901450819111f021901af1319112702190144184d19112802190144184d19112902190144184d19112a02190144184d19112f0219014508191195031836091912b80219012d041912f402190125161912f5021901251822191314011906b5181a19137e011906c0181e19138d011906c018381913af0119053d181f1913b00119053d181f1913b10119053d181f1913ea0119051a1818191447011905120c19144c011905120819145c01190510182d19146b011902b9181d19146c011902bb081914a8011901bf18271915b60119018a0f1915e60119018a18301917ab041901e40419198504190103141919fa041901141829191a5b03187202ff", "variableNames": "", "termDescriptions": "b5190299647478696e190f086169190f096169191111635f7632191112635f7632191113635f7632191114635f7632191127635f7632191128635f7632191129635f763219112a635f76321912b8636d68731913146473656c6619137e647478696e1913af6473656c661913b06473656c661913b16473656c661913ea6473656c6619146b6473656c661914a86473656c66191a5b756d75737446696e64496e70757452656465656d6572" }, "unoptimizedSmap": { "sourceNames": ["src/delegation/CapoDelegateHelpers.hl", "src/DefaultCapo.hl", "src/CapoMintHelpers.hl", "src/CapoHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f19027d0018cb18221903c90119035b181b1903ca0119035b181b1903ea01186c182f1903eb01186c182f1903ee01186e151903ef01186e151903f001186e091903f101186e041903f201186e0a1903fd011872091903fe01187218281904040118721835190405011872182f190406011872183a1904150119034f0a19041e011903500a190429011903530a190438011903561829190439011903561019043d01190356182f19044501190359091905530119012218291905780119012718291907da01190185181d1907db0119018518241908190119018b181d19081a0119018b182419086601190195181d1908670119019518241908a50119019b181d1908a60119019b18241908dd011901810c190e7e0119021e1820190fca011866101910490118450d1910950219016718381910dd021901a1041910ea021901b118341910eb021901b11834191100021901b212191130021901bd18311911bc021901db182019125d021901f41859191296021901af131912b70219019c151912e30219017c151912e8021901810c1912f602190176181d1914a802190144184d1914a902190144184d1914aa02190144184d1914ab02190144184d1914b002190145081914bf0219012d041914fa02190125161914fe02190125182219151b02184018391916160218501219166002183c182b1916f30218270e19170903190773182619171c03190774182a1917d8031906b5181a19184f031906c0181e191853031906c01838191861031906bf183819186d03190695161918b7031906a5181c1918e70319069f181e1918eb0319069f18381918f90319069e183819190a0319053d181f19191d031905450c19193c0319054018191919490319051a181819197c0319050f1824191983031905120c19198c031905120819199503190510182d1919990319050f183b19199d03190510183c19199e03190510183c1919a60319050618231919ad031905080c1919b603190508081919bf03190507182d1919c303190506183a1919c703190507183c1919c803190507183c1919f4031904b0181e191a11031904b410191a4a031902b9181d191a4f031902bb08191a5e031902bd16191a7a031901d41821191a90031901d610191a94031901bf1827191aba031901c5184a191ad4031901c81849191c380319018a0f191c420319018a1830192b55001901e404192ed10019013e10192ee10019013e1835192ef50019014210192f3c001901351831192f920019010314192fae0019011110192fc5001901171818192fd20019011b181c192fdb0019011e1864192ffd0019011418291930610018c8181c1930620018c8181c1930710018c9182b1946fb041872021947e70418350a1947eb041835181a1947ef04183609194850041827182819486604181b181cff", "variableNames": "", "termDescriptions": "b81a1903ea646d61696e1903eb646d61696e190fca61731910ea61691910eb61691914a8635f76321914a9635f76321914aa635f76321914ab635f76321914bf636d68731917096473656c661917d86473656c6619184f647478696e19186d6473656c661918e7647478696e19190a6473656c661919496473656c6619197c6473656c661919a66473656c661919f46473656c66191a4a6473656c66191a7a6473656c66191a946473656c6619306165696e70757419306265696e7075741946fb756d75737446696e64496e70757452656465656d6572" } },
      scriptHash: "41c50256a28a7adc89b31974aa532c358f91675581277daa6fbf2819",
      config: this.parseCapoJSONConfig({ "mph": { "bytes": "39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed" }, "seedTxn": { "bytes": "2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d" }, "seedIndex": "1", "rootCapoScriptHash": { "bytes": "41c50256a28a7adc89b31974aa532c358f91675581277daa6fbf2819" } })
    },
    minter: {
      programBundle: { "programElements": { "src/minting/CapoMinter.hl": "3d68158bb3a72af003cdc87c51f89950a439522929423e168d9e33e55a7b1818", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "params": { "CapoMinter::seedTxn": "const seedTxn: TxId = ##d8799f58202169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765dff;", "CapoMinter::seedIndex": "const seedIndex: Int = ##01;", "CapoMinter::rev": "const rev: Int = 1;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": '(__REDEEMER, __CONTEXT) -> {\n    __common15 = __core__fstPair(__core__unConstrData(__REDEEMER));\n    __common16 = __core__equalsInteger(__common15, 0);\n    __common11 = __core__unConstrData(__CONTEXT);\n    __common12 = __core__sndPair(__common11);\n    __helios__bytearray__show = (self_5) -> {\n        recurse_3 = (recurse_2, self_6) -> {\n            n = __core__lengthOfByteString(self_6);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);\n                    recurse_1 = (recurse, self_4, bytes) -> {\n                        digit = __core__modInteger(self_4, 16);\n                        bytes_1 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_4, 16),\n                            () -> {\n                                bytes_1\n                            },\n                            () -> {\n                                recurse(recurse, __core__divideInteger(self_4, 16), bytes_1)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_3, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_1(recurse_1, __core__multiplyInteger(self_3, -1), #))\n                        },\n                        () -> {\n                            recurse_1(recurse_1, self_3, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_6)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_3(recurse_3, self_5)\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common12));\n    __common0 = __core__unConstrData(__helios__scriptcontext__purpose);\n    __common2 = __core__headList(__core__sndPair(__common0));\n    __common3 = __core__unBData(__common2);\n    __helios__value__get_inner_map_int = (map, key) -> {\n        recurse_5 = (recurse_4, map_1, key_1) -> {\n            __core__chooseList(map_1, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), key_1),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                    },\n                    () -> {\n                        recurse_4(recurse_4, __core__tailList__safe(map_1), key_1)\n                    }\n                )()\n            })()\n        };\n        recurse_5(recurse_5, map, key)\n    };\n    __helios__common__any = (self_11, fn) -> {\n        recurse_9 = (recurse_8, self_12, fn_1) -> {\n            __core__chooseList(self_12, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_1(__core__headList__safe(self_12)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_8(recurse_8, __core__tailList__safe(self_12), fn_1)\n                    }\n                )()\n            })()\n        };\n        recurse_9(recurse_9, self_11, fn)\n    };\n    __helios__value__merge_map_keys = (a_2, b_3) -> {\n        (aKeys) -> {\n            recurse_13 = (recurse_12, keys, map_4) -> {\n                __core__chooseList(map_4, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_3 = __core__fstPair(__core__headList__safe(map_4));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item) -> {\n                            __core__equalsData(item, key_3)\n                        }),\n                        () -> {\n                            recurse_12(recurse_12, keys, __core__tailList__safe(map_4))\n                        },\n                        () -> {\n                            __core__mkCons(key_3, recurse_12(recurse_12, keys, __core__tailList__safe(map_4)))\n                        }\n                    )()\n                })()\n            };\n            b_2 = recurse_13(recurse_13, aKeys, b_3);\n            recurse_11 = (recurse_10, lst_1, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_1\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_10(recurse_10, lst_1, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_11(recurse_11, b_2, aKeys)\n        }(recurse_7 = (recurse_6, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_3)), recurse_6(recurse_6, __core__tailList__safe(map_3)))\n            })()\n        };\n        recurse_7(recurse_7, a_2))\n    };\n    __helios__value__get_inner_map = (map_5, mph) -> {\n        recurse_17 = (recurse_16, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_6)), mph),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_6)))\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, map_5)\n    };\n    __helios__value____geq = (a_5, b_6) -> {\n        recurse_19 = (recurse_18, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                true\n            }, () -> {\n                key_5 = __core__headList__safe(keys_2);\n                __core__ifThenElse(\n                    b_1 = (a_3, b_4) -> {\n                        recurse_15 = (recurse_14, keys_1) -> {\n                            __core__chooseList(keys_1, () -> {\n                                true\n                            }, () -> {\n                                key_4 = __core__headList__safe(keys_1);\n                                __core__ifThenElse(\n                                    b_1 = (a_qty, b_qty) -> {\n                                        __core__ifThenElse(\n                                            __core__lessThanInteger(a_qty, b_qty),\n                                            false,\n                                            true\n                                        )\n                                    }(__helios__value__get_inner_map_int(a_3, key_4), __helios__value__get_inner_map_int(b_4, key_4));\n                                    __core__ifThenElse(\n                                        b_1,\n                                        false,\n                                        true\n                                    ),\n                                    () -> {\n                                        false\n                                    },\n                                    () -> {\n                                        recurse_14(recurse_14, __core__tailList__safe(keys_1))\n                                    }\n                                )()\n                            })()\n                        };\n                        recurse_15(recurse_15, __helios__value__merge_map_keys(a_3, b_4))\n                    }(__helios__value__get_inner_map(a_5, key_5), __helios__value__get_inner_map(b_6, key_5));\n                    __core__ifThenElse(\n                        b_1,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_18(recurse_18, __core__tailList__safe(keys_2))\n                    }\n                )()\n            })()\n        };\n        recurse_19(recurse_19, __helios__value__merge_map_keys(a_5, b_6))\n    };\n    __helios__common__assert_constr_index = (data, i) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i),\n            () -> {\n                data\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__txoutputdatum__inline = (self_14) -> {\n        pair = __core__unConstrData(self_14);\n        index = __core__fstPair(pair);\n        fields = __core__sndPair(pair);\n        __core__ifThenElse(\n            __core__equalsInteger(index, 2),\n            () -> {\n                __core__headList(fields)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__scriptcontext__tx = __core__headList(__common12);\n    __helios__common__fold = (self_20, fn_2, z) -> {\n        recurse_21 = (recurse_20, self_21, z_1) -> {\n            __core__chooseList(self_21, () -> {\n                z_1\n            }, () -> {\n                recurse_20(recurse_20, __core__tailList__safe(self_21), fn_2(z_1, __core__headList__safe(self_21)))\n            })()\n        };\n        recurse_21(recurse_21, self_20, z)\n    };\n    __helios__int__show = (self_22) -> {\n        __core__decodeUtf8__safe(recurse_23 = (recurse_22, i_1, bytes_2) -> {\n            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i_1, 10), 48), bytes_2);\n            __core__ifThenElse(\n                __core__lessThanInteger(i_1, 10),\n                () -> {\n                    bytes_3\n                },\n                () -> {\n                    recurse_22(recurse_22, __core__divideInteger(i_1, 10), bytes_3)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_22, 0),\n            () -> {\n                __core__consByteString(45, recurse_23(recurse_23, __core__multiplyInteger(self_22, -1), #))\n            },\n            () -> {\n                recurse_23(recurse_23, self_22, #)\n            }\n        )())\n    };\n    __helios__value__new = (assetClass, i_4) -> {\n        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_4)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_2, token_name) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))\n    };\n    __helios__common__enum_field_4 = (self_29) -> {\n        __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29)))))))\n    };\n    __common4 = __helios__common__enum_field_4(__helios__scriptcontext__tx);\n    __common5 = __core__unMapData(__common4);\n    __helios__common__length = (lst_4) -> {\n        recurse_29 = (recurse_28, lst_5) -> {\n            __core__chooseList(lst_5, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_28(recurse_28, __core__tailList__safe(lst_5)), 1)\n            })()\n        };\n        recurse_29(recurse_29, lst_4)\n    };\n    __helios__value__contains_policy = (self_32, mph_3) -> {\n        mph_4 = __core__bData(mph_3);\n        recurse_31 = (recurse_30, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_8)), mph_4),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_30(recurse_30, __core__tailList__safe(map_8))\n                    }\n                )()\n            })()\n        };\n        recurse_31(recurse_31, self_32)\n    };\n    __helios__common__unBData__safe = (data_8, callback_ok, callback_nok_3) -> {\n        __core__chooseData(data_8, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3, () -> {\n            callback_ok(__core__unBData__safe(data_8))\n        })()\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback_4) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback_4(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback_4(false, 0)\n            }\n        )()\n    };\n    __helios__value__is_zero = (self_42) -> {\n        recurse_39 = (recurse_38, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_9)));\n                    recurse_37 = (recurse_36, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_36(recurse_36, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_37(recurse_37, tokens_1),\n                    () -> {\n                        recurse_38(recurse_38, __core__tailList__safe(map_9))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_39(recurse_39, self_42)\n    };\n    __helios__value__get_policy = (self_43, mph_6) -> {\n        mph_7 = __core__bData(mph_6);\n        recurse_41 = (recurse_40, map_10) -> {\n            __core__chooseList(map_10, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_10)), mph_7),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_10)))\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(map_10))\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_43)\n    };\n    __helios__value____add = (a_10, b_10) -> {\n        recurse_45 = (recurse_44, keys_4) -> {\n            __core__chooseList(keys_4, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_8 = __core__headList__safe(keys_4);\n                tail_1 = recurse_44(recurse_44, __core__tailList__safe(keys_4));\n                item_4 = (a_8, b_8) -> {\n                    recurse_43 = (recurse_42, keys_3) -> {\n                        __core__chooseList(keys_3, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_7 = __core__headList__safe(keys_3);\n                            tail = recurse_42(recurse_42, __core__tailList__safe(keys_3));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_8, key_7), __helios__value__get_inner_map_int(b_8, key_7));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_43(recurse_43, __helios__value__merge_map_keys(a_8, b_8))\n                }(__helios__value__get_inner_map(a_10, key_8), __helios__value__get_inner_map(b_10, key_8));\n                __core__chooseList(item_4, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_4)), tail_1)\n                })()\n            })()\n        };\n        recurse_45(recurse_45, __helios__value__merge_map_keys(a_10, b_10))\n    };\n    __helios__common__map = (self_44, fn_3) -> {\n        recurse_47 = (recurse_46, rem_1) -> {\n            __core__chooseList(rem_1, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(fn_3(__core__headList__safe(rem_1)), recurse_46(recurse_46, __core__tailList__safe(rem_1)))\n            })()\n        };\n        recurse_47(recurse_47, self_44)\n    };\n    __helios__common__map_get = (self_45, key_9, fnFound, fnNotFound) -> {\n        recurse_53 = (recurse_52, self_46, key_10) -> {\n            __core__chooseList(self_46, fnNotFound, () -> {\n                head_3 = __core__headList__safe(self_46);\n                __core__ifThenElse(\n                    __core__equalsData(key_10, __core__fstPair(head_3)),\n                    () -> {\n                        fnFound(__core__sndPair(head_3))\n                    },\n                    () -> {\n                        recurse_52(recurse_52, __core__tailList__safe(self_46), key_10)\n                    }\n                )()\n            })()\n        };\n        recurse_53(recurse_53, self_45, key_9)\n    };\n    __helios__common__filter = (self_47, fn_4, nil) -> {\n        recurse_55 = (recurse_54, self_48, fn_5) -> {\n            __core__chooseList(self_48, () -> {\n                nil\n            }, () -> {\n                head_4 = __core__headList__safe(self_48);\n                __core__ifThenElse(\n                    fn_5(head_4),\n                    () -> {\n                        __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(self_48), fn_5))\n                    },\n                    () -> {\n                        recurse_54(recurse_54, __core__tailList__safe(self_48), fn_5)\n                    }\n                )()\n            })()\n        };\n        recurse_55(recurse_55, self_47, fn_4)\n    };\n    __helios__common__enum_fields_after_4 = (self_56) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_56)))))))\n    };\n    __helios__tx__redeemers = (self_62) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(self_62)))))))\n    };\n    __helios__value__get_safe = (self_64, assetClass_1) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_1)));\n        tokenName_1 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_1))));\n        outer_1 = (outer, inner, map_11) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mintingPolicyHash),\n                    () -> {\n                        inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map_11))))\n                    },\n                    () -> {\n                        outer(outer, inner, __core__tailList__safe(map_11))\n                    }\n                )()\n            })()\n        };\n        outer_1(outer_1, (inner_1, map_12) -> {\n            __core__chooseList(map_12, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), tokenName_1),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_12)))\n                    },\n                    () -> {\n                        inner_1(inner_1, __core__tailList__safe(map_12))\n                    }\n                )()\n            })()\n        }, self_64)\n    };\n    __helios__txinput__address = (self_68) -> {\n        self_8 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_68))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_8)))\n    };\n    __helios__common__find_safe = (self_87, fn_13) -> {\n        recurse_61 = (recurse_60, self_88, fn_14) -> {\n            __core__chooseList(self_88, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_6 = __core__headList__safe(self_88);\n                __core__ifThenElse(\n                    fn_14(head_6),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_6, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_60(recurse_60, __core__tailList__safe(self_88), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_61(recurse_61, self_87, fn_13)\n    };\n    __module__StellarHeliosHelpers__mkTv = (mph_8, tn) -> {\n        tnBytes_1 = __core__encodeUtf8(tn);\n        __core__chooseUnit(__core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                false,\n                true\n            ),\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), __helios__value__new(__helios__assetclass__new(mph_8, tnBytes_1), 1))\n    };\n    __helios__list[__helios__txoutput]__find = (self_89, fn_15) -> {\n        recurse_63 = (recurse_62, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                error()\n            }, () -> {\n                item_5 = __core__headList__safe(lst_11);\n                __core__ifThenElse(\n                    fn_15(item_5),\n                    () -> {\n                        item_5\n                    },\n                    () -> {\n                        recurse_62(recurse_62, __core__tailList__safe(lst_11))\n                    }\n                )()\n            })()\n        };\n        recurse_63(recurse_63, self_89)\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_91, fn_16) -> {\n        recurse_67 = (recurse_66, map_18) -> {\n            __core__chooseList(map_18, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__fstPair(__core__headList__safe(map_18));\n                __core__ifThenElse(\n                    fn_16(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(map_18))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_91)\n    };\n    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {\n        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));\n        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);\n        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers, (purpose) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(purpose)), 1),\n                () -> {\n                    (sp) -> {\n                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                    }\n                },\n                () -> {\n                    (__1) -> {\n                        false\n                    }\n                }\n            )()(purpose)\n        });\n        __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n            x_4\n        }, () -> {\n            error()\n        })\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput = (self_108, mph_11) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_108));\n            ac_1 = __helios__assetclass__new(mph_11, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_9) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_9))));\n                        a_12 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_80 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_80, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_83 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_83)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_8 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_8))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_12, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_6) -> {\n                        (__cond_5) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_5)), 0),\n                                () -> {\n                                    (__lhs_0_8) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_7) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_5)\n                        }(self_107 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_107, (o) -> {\n                            a_12 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_12, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_108);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_113) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_113)))))))\n    };\n    __module__CapoHelpers__DelegateInput[]__requiresValidOutput = (self_129) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__core__unListData(__core__headList(self_129)), __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_129)))))))\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_132) -> {\n        __cond_11 = __core__headList(__core__tailList(self_132));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_11)), 0),\n            () -> {\n                (__lhs_0_27) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_11)), 1),\n                    () -> {\n                        (__lhs_0_26) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_19) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_19))));\n                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);\n                            __common25 = __core__unConstrData(activity);\n                            __common26 = __core__fstPair(__common25);\n                            __core__ifThenElse(\n                                __core__equalsInteger(__common26, 2),\n                                () -> {\n                                    (__lhs_0_25) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common26, 4),\n                                        () -> {\n                                            (__lhs_0_24) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common26, 1),\n                                                () -> {\n                                                    (__lhs_0_23) -> {\n                                                        activity\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__common26, 5),\n                                                        () -> {\n                                                            (__lhs_0_22) -> {\n                                                                activity\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__common26, 3),\n                                                                () -> {\n                                                                    (__lhs_0_21) -> {\n                                                                        activity\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__lhs_0_20) -> {\n                                                                        activity\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()(activity)\n                        }\n                    }\n                )()\n            }\n        )()(__cond_11)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_140) -> {\n        charter_2 = __core__headList(__core__tailList(self_140));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_44) -> {\n                    self_140\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_43) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_39) -> {\n                            mph_16 = __core__unBData(__core__headList(self_140));\n                            charterAc_3 = __helios__assetclass__new(mph_16, #63686172746572);\n                            (charterUtxo_2) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_112 = __helios__txoutputdatum__inline(self_16 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_16))))));\n                                __helios__common__assert_constr_index(data_112, 0), 0);\n                                __core__mkCons(__core__bData(mph_16), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_19) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_19)), 0),\n                                    () -> {\n                                        (self_8) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_8)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_41) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_19)\n                            }(self_104 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_104, (txin_2) -> {\n                                a_12 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_2))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_12, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {\n        __core__chooseUnit(__core__ifThenElse(\n            b_1 = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(tx)))), (input_1) -> {\n                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_1))), seedUtxo)\n            });\n            __core__ifThenElse(\n                b_1,\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                ()\n            }\n        )(), true)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_145, fn_22) -> {\n        recurse_81 = (recurse_80, map_25) -> {\n            __core__chooseList(map_25, () -> {\n                ()\n            }, () -> {\n                head_42 = __core__headList__safe(map_25);\n                __core__chooseUnit(fn_22(__core__unBData(__core__fstPair(head_42)), __core__unIData(__core__sndPair(head_42))), recurse_80(recurse_80, __core__tailList__safe(map_25)))\n            })()\n        };\n        recurse_81(recurse_81, self_145)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_153, comp_4) -> {\n        recurse_51 = (recurse_50, lst_10) -> {\n            __core__chooseList(lst_10, () -> {\n                lst_10\n            }, () -> {\n                tail_2 = recurse_50(recurse_50, __core__tailList__safe(lst_10));\n                x_3 = __core__headList__safe(lst_10);\n                recurse_49 = (recurse_48, lst_8) -> {\n                    __core__chooseList(lst_8, () -> {\n                        __core__mkCons(x_3, lst_8)\n                    }, () -> {\n                        head_1 = __core__headList__safe(lst_8);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_1)), __core__unIData(__core__sndPair(head_1))),\n                            () -> {\n                                __core__mkCons(x_3, lst_8)\n                            },\n                            () -> {\n                                __core__mkCons(head_1, recurse_48(recurse_48, __core__tailList__safe(lst_8)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_49(recurse_49, tail_2)\n            })()\n        };\n        recurse_51(recurse_51, self_153)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_20, seed_1, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_1)\n            }\n        )();\n        bootstrapCharter_1 = __core__ifThenElse(\n            __useopt__bootstrapCharter,\n            () -> {\n                bootstrapCharter\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        needsMintDelegateApproval_1 = __core__ifThenElse(\n            __useopt__needsMintDelegateApproval,\n            () -> {\n                false\n            },\n            () -> {\n                true\n            }\n        )();\n        (isBootstrapping) -> {\n            delegateApproval = __core__ifThenElse(\n                isBootstrapping,\n                () -> {\n                    true\n                },\n                () -> {\n                    __lhs_0_79 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                    charterAc = __helios__assetclass__new(mph_20, #63686172746572);\n                    hasCharter = (txin) -> {\n                        a_12 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_12, 0),\n                            false,\n                            true\n                        )\n                    };\n                    (charterUtxo) -> {\n                        __helios__common__assert_constr_index(data_112 = __helios__txoutputdatum__inline(self_16 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo))));\n                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_16))))));\n                        __helios__common__assert_constr_index(data_112, 0), 0)\n                    }(__cond_7 = __helios__common__find_safe(refInputs_1, hasCharter);\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),\n                        () -> {\n                            (self_8) -> {\n                                __core__headList(__core__sndPair(__core__unConstrData(self_8)))\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_13) -> {\n                                (__cond_8) -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_8)), 0),\n                                        () -> {\n                                            (self_8) -> {\n                                                __core__headList(__core__sndPair(__core__unConstrData(self_8)))\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_14) -> {\n                                                error()\n                                            }\n                                        }\n                                    )()(__cond_8)\n                                }(self_104 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                __helios__common__find_safe(self_104, hasCharter))\n                            }\n                        }\n                    )()(__cond_7)), 0);\n                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_79);\n                    __common8 = __core__headList(mintDgt);\n                    __common34 = __core__unBData(__common8);\n                    __common35 = __core__decodeUtf8(__common34);\n                    __core__ifThenElse(\n                        needsMintDelegateApproval_1,\n                        () -> {\n                            authzAc = __helios__assetclass__new(mph_20, __core__encodeUtf8(__common35));\n                            (targetId_1) -> {\n                                spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx), (purpose_1) -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(purpose_1)), 1),\n                                        () -> {\n                                            (sp_1) -> {\n                                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp_1))), targetId_1)\n                                            }\n                                        },\n                                        () -> {\n                                            (__15) -> {\n                                                false\n                                            }\n                                        }\n                                    )()(purpose_1)\n                                });\n                                (__cond_22) -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_22)), 1),\n                                        () -> {\n                                            (__lhs_0_52) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_47) -> {\n                                                x_7 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_47)));\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_7)), 1),\n                                                    () -> {\n                                                        (__lhs_0_48) -> {\n                                                            DLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_48)));\n                                                            __common36 = __core__unConstrData(DLA);\n                                                            __common37 = __core__fstPair(__common36);\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__common37, 0),\n                                                                () -> {\n                                                                    (__lhs_0_51) -> {\n                                                                        true\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__common37, 1),\n                                                                        () -> {\n                                                                            (__lhs_0_50) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_49) -> {\n                                                                                error()\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(DLA)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__16) -> {\n                                                            error()\n                                                        }\n                                                    }\n                                                )()(x_7)\n                                            }\n                                        }\n                                    )()(__cond_22)\n                                }(self_142 = __helios__tx__redeemers(__helios__scriptcontext__tx);\n                                __helios__common__map_get(self_142, spendsAuthorityUut, (x_5) -> {\n                                    __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n                                }, () -> {\n                                    __core__constrData(1, __core__mkNilData(()))\n                                }))\n                            }((__cond_20) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_20)), 0),\n                                    () -> {\n                                        (__lhs_0_46) -> {\n                                            self_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_46)));\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_8)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_45) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_20)\n                            }(self_104 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_104, (i_9) -> {\n                                a_12 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_9))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), authzAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_12, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        },\n                        () -> {\n                            true\n                        }\n                    )()\n                }\n            )();\n            expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), self_154 = __helios__common__map(purposes, (item_12) -> {\n                __core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(item_12));\n                __module__StellarHeliosHelpers__mkTv(mph_20, mkTokenName_1(purpose_2)))\n            });\n            recurse_87 = (recurse_86, lst_23) -> {\n                __core__chooseList(lst_23, () -> {\n                    __core__mkNilPairData(())\n                }, () -> {\n                    __helios__value____add(__core__unMapData(__core__headList__safe(lst_23)), recurse_86(recurse_86, __core__tailList__safe(lst_23)))\n                })()\n            };\n            recurse_87(recurse_87, self_154));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(__common5, mph_20),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_20), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_11) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(__common5, mph_20);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_10) -> {\n                ()\n            }), (msg_2) -> {\n                ()\n            }(self_38 = __helios__common__filter(__common5, (pair_35) -> {\n                (b_14, __18) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_14, mph_20),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_35)), __core__unMapData(__core__sndPair(pair_35)))\n            }, __core__mkNilPairData(()));\n            __helios__common__fold(self_38, (prev_1, pair_4) -> {\n                mph_data = __core__fstPair(pair_4);\n                tokens_data = __core__sndPair(pair_4);\n                __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_5) -> {\n                    __core__appendString(__core__ifThenElse(\n                        __core__equalsByteString(mph_5, #),\n                        () -> {\n                            ""\n                        },\n                        () -> {\n                            __core__appendString(__helios__bytearray__show(mph_5), "\n")\n                        }\n                    )(), __core__chooseData(tokens_data, () -> {\n                        ""\n                    }, () -> {\n                        __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_5) -> {\n                            token_name_data = __core__fstPair(pair_5);\n                            qty_data = __core__sndPair(pair_5);\n                            __helios__common__unBData__safe(token_name_data, (token_name_1) -> {\n                                __core__chooseData(qty_data, () -> {\n                                    ""\n                                }, () -> {\n                                    ""\n                                }, () -> {\n                                    ""\n                                }, () -> {\n                                    qty = __core__unIData__safe(qty_data);\n                                    __core__ifThenElse(\n                                        __core__equalsByteString(mph_5, #),\n                                        () -> {\n                                            __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                        },\n                                        () -> {\n                                            __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                                n_2 = __core__lengthOfByteString(token_name_1);\n                                                recurse_35 = (recurse_34, i_6) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(i_6, n_2),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            b0 = __core__indexByteString__safe(token_name_1, i_6);\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(b0, 127),\n                                                                () -> {\n                                                                    recurse_34(recurse_34, __core__addInteger(i_6, 1))\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                                                        () -> {\n                                                                            inext_2 = __core__addInteger(i_6, 2);\n                                                                            __core__ifThenElse(\n                                                                                __core__lessThanEqualsInteger(inext_2, n_2),\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 1)), (valid_5, c1_2) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_5,\n                                                                                            () -> {\n                                                                                                c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(128, c_2),\n                                                                                                        () -> {\n                                                                                                            __core__lessThanEqualsInteger(c_2, 2047)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        recurse_34(recurse_34, inext_2)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                                                                () -> {\n                                                                                    inext_1 = __core__addInteger(i_6, 3);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(inext_1, n_2),\n                                                                                        () -> {\n                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 1)), (valid_3, c1_1) -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    valid_3,\n                                                                                                    () -> {\n                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 2)), (valid_4, c2_1) -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                valid_4,\n                                                                                                                () -> {\n                                                                                                                    c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__lessThanEqualsInteger(2048, c_1),\n                                                                                                                            () -> {\n                                                                                                                                __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                false\n                                                                                                                            }\n                                                                                                                        )(),\n                                                                                                                        () -> {\n                                                                                                                            recurse_34(recurse_34, inext_1)\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        })\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            })\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                                                        () -> {\n                                                                                            inext = __core__addInteger(i_6, 4);\n                                                                                            __core__ifThenElse(\n                                                                                                __core__lessThanEqualsInteger(inext, n_2),\n                                                                                                () -> {\n                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 1)), (valid, c1) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            valid,\n                                                                                                            () -> {\n                                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 2)), (valid_1, c2) -> {\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        valid_1,\n                                                                                                                        () -> {\n                                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_1, __core__addInteger(i_6, 3)), (valid_2, c3) -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    valid_2,\n                                                                                                                                    () -> {\n                                                                                                                                        c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__lessThanEqualsInteger(65536, c),\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    false\n                                                                                                                                                }\n                                                                                                                                            )(),\n                                                                                                                                            () -> {\n                                                                                                                                                recurse_34(recurse_34, inext)\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                false\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        false\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            })\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                })\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    })\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                };\n                                                recurse_35(recurse_35, 0),\n                                                () -> {\n                                                    __core__decodeUtf8__safe(token_name_1)\n                                                },\n                                                () -> {\n                                                    __helios__bytearray__show(token_name_1)\n                                                }\n                                            )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                        }\n                                    )()\n                                }, () -> {\n                                    ""\n                                })()\n                            }, () -> {\n                                ""\n                            })\n                        }, prev_1)\n                    }, () -> {\n                        ""\n                    }, () -> {\n                        ""\n                    }, () -> {\n                        ""\n                    })())\n                }, () -> {\n                    ""\n                }))\n            }, ""))), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));\n            __core__chooseUnit(__core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_1);\n            (), otherPoliciesMintOk = __core__ifThenElse(\n                b_1 = __helios__value__is_zero(otherMintedValue_1);\n                __core__ifThenElse(\n                    b_1,\n                    false,\n                    true\n                ),\n                () -> {\n                    true\n                },\n                () -> {\n                    remainingExpectedMint = __core__ifThenElse(\n                        __helios__value__contains_policy(expectedValue, mph_20),\n                        () -> {\n                            key_16 = __core__bData(mph_20);\n                            recurse_85 = (recurse_84, self_151) -> {\n                                __core__chooseList(self_151, () -> {\n                                    self_151\n                                }, () -> {\n                                    head_44 = __core__headList__safe(self_151);\n                                    tail_4 = __core__tailList__safe(self_151);\n                                    __core__ifThenElse(\n                                        __core__equalsData(key_16, __core__fstPair(head_44)),\n                                        () -> {\n                                            recurse_84(recurse_84, tail_4)\n                                        },\n                                        () -> {\n                                            __core__mkCons(head_44, recurse_84(recurse_84, tail_4))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_85(recurse_85, expectedValue)\n                        },\n                        () -> {\n                            expectedValue\n                        }\n                    )();\n                    __core__ifThenElse(\n                        __helios__value__is_zero(remainingExpectedMint),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__chooseUnit(recurse_83 = (recurse_82, map_26) -> {\n                                __core__chooseList(map_26, () -> {\n                                    ()\n                                }, () -> {\n                                    head_43 = __core__headList__safe(map_26);\n                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                        mintedThisPolicy = __helios__value__get_policy(__common5, otherMph);\n                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_2, expectedCount) -> {\n                                            __core__ifThenElse(\n                                                (b_1) -> {\n                                                    __core__ifThenElse(\n                                                        b_1,\n                                                        false,\n                                                        true\n                                                    )\n                                                }(__cond_29 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_2), (x_8) -> {\n                                                    __core__constrData(0, __core__mkCons(x_8, __core__mkNilData(())))\n                                                }, () -> {\n                                                    __core__constrData(1, __core__mkNilData(()))\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_29)), 1),\n                                                    () -> {\n                                                        (__lhs_0_81) -> {\n                                                            false\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_80) -> {\n                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_80))));\n                                                            __core__equalsInteger(actualCount, expectedCount)\n                                                        }\n                                                    }\n                                                )()(__cond_29)),\n                                                () -> {\n                                                    error()\n                                                },\n                                                () -> {\n                                                    ()\n                                                }\n                                            )()\n                                        })\n                                    }(__core__unBData(__core__fstPair(head_43)), __core__unMapData(__core__sndPair(head_43))), recurse_82(recurse_82, __core__tailList__safe(map_26)))\n                                })()\n                            };\n                            recurse_83(recurse_83, remainingExpectedMint), true)\n                        }\n                    )()\n                }\n            )();\n            __core__chooseUnit(__core__ifThenElse(\n                otherPoliciesMintOk,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__ifThenElse(\n                __core__ifThenElse(\n                    delegateApproval,\n                    () -> {\n                        thisPolicyMintOK\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    otherPoliciesMintOk\n                },\n                () -> {\n                    false\n                }\n            )()))))))\n        }(b_1 = __helios__value__is_zero(bootstrapCharter_1);\n        __core__ifThenElse(\n            b_1,\n            false,\n            true\n        ))\n    };\n    __core__ifThenElse(\n        __core__ifThenElse(\n            __common16,\n            () -> {\n                (charter_3) -> {\n                    charterVal = __module__StellarHeliosHelpers__mkTv(__common3, "charter");\n                    __core__chooseUnit(cond = __helios__value____geq(__common5, charterVal);\n                    __core__ifThenElse(\n                        cond,\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), hasSeed = __module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, __core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__bData(#2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d), __core__mkNilData(()))), __core__mkCons(__core__iData(1), __core__mkNilData(())))));\n                    mintsUuts = __module__CapoMintHelpers__validateUutMinting(__common3, __core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__bData(#2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d), __core__mkNilData(()))), __core__mkCons(__core__iData(1), __core__mkNilData(())))), __core__mkCons(__core__bData(#6361706f476f76), __core__mkCons(__core__bData(#6d696e74446774), __core__mkCons(__core__bData(#7370656e64446774), __core__mkNilData(())))), true, __module__CapoMintHelpers__mkUutTnFactory(__core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__bData(#2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d), __core__mkNilData(()))), __core__mkCons(__core__iData(1), __core__mkNilData(()))))), true, charterVal, false, (), false);\n                    charterOutput = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (output_1) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(output_1))), __core__headList(__core__sndPair(__core__unConstrData(charter_3)))),\n                            () -> {\n                                __helios__value____geq(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(output_1))))), charterVal)\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    rawCharterData = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(charterOutput))))));\n                    charterData_1 = __helios__common__assert_constr_index(rawCharterData, 0);\n                    __lhs_0_99 = __helios__common__assert_constr_index(charterData_1, 0);\n                    __common38 = __core__unConstrData(__lhs_0_99);\n                    __common39 = __core__sndPair(__common38);\n                    __common40 = __core__tailList(__common39);\n                    __common9 = __helios__common__enum_fields_after_4(__lhs_0_99);\n                    __common10 = __core__tailList(__common9);\n                    spendDgt = __core__unListData(__core__headList(__common39));\n                    spendInvariants = __core__unListData(__core__headList(__common40));\n                    namedDelegates = __core__unMapData(__core__headList(__core__tailList(__common40)));\n                    mintDgt_1 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_99);\n                    mintInvariants = __core__unListData(__helios__common__enum_field_4(__lhs_0_99));\n                    authDgt = __core__unListData(__core__headList(__common9));\n                    manifest = __core__unMapData(__core__headList(__common10));\n                    pendingDelegates = __core__unListData(__core__headList(__core__tailList(__common10)));\n                    __core__chooseUnit(__core__ifThenElse(\n                        __core__equalsInteger(__helios__common__length(mintInvariants), 0),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __core__chooseUnit(__core__ifThenElse(\n                        __core__equalsInteger(__helios__common__length(spendInvariants), 0),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __core__chooseUnit(__core__ifThenElse(\n                        __core__equalsInteger(__helios__common__length(manifest), 0),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __core__chooseUnit(__core__ifThenElse(\n                        __core__equalsInteger(__helios__common__length(pendingDelegates), 0),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), hasGoodDelegates = __core__ifThenElse(\n                        __core__ifThenElse(\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(authDgt, __common3),\n                                () -> {\n                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDgt_1, __common3)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )(),\n                            () -> {\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDgt, __common3)\n                            },\n                            () -> {\n                                false\n                            }\n                        )(),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )();\n                    __core__chooseUnit(__core__ifThenElse(\n                        __core__equalsInteger(__helios__common__length(namedDelegates), 0),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __core__ifThenElse(\n                        __core__ifThenElse(\n                            hasGoodDelegates,\n                            () -> {\n                                mintsUuts\n                            },\n                            () -> {\n                                false\n                            }\n                        )(),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()))))))\n                }\n            },\n            () -> {\n                __common17 = __core__equalsInteger(__common15, 1);\n                __core__ifThenElse(\n                    __common17,\n                    () -> {\n                        __common13 = __core__unConstrData(__helios__scriptcontext__tx);\n                        __common14 = __core__sndPair(__common13);\n                        (__lhs_0_98) -> {\n                            (cctx) -> {\n                                (mintDgtInput) -> {\n                                    (mintDgtActivity) -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 0),\n                                            () -> {\n                                                (__lhs_0_73) -> {\n                                                    CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_73)));\n                                                    __common30 = __core__unConstrData(CLA);\n                                                    __common32 = __core__fstPair(__common30);\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__common32, 0),\n                                                        () -> {\n                                                            (__lhs_0_78) -> {\n                                                                __core__ifThenElse(\n                                                                    __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                    () -> {\n                                                                        true\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__common32, 1),\n                                                                () -> {\n                                                                    (__lhs_0_77) -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                            () -> {\n                                                                                true\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__common32, 3),\n                                                                        () -> {\n                                                                            (__lhs_0_76) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                    () -> {\n                                                                                        true\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__common32, 4),\n                                                                                () -> {\n                                                                                    (__lhs_0_75) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__common32, 5),\n                                                                                        () -> {\n                                                                                            (__lhs_0_74) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__17) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(CLA)\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 2),\n                                                    () -> {\n                                                        (__lhs_0_72) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 1),\n                                                            () -> {\n                                                                (__lhs_0_68) -> {\n                                                                    DLA_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_68)));\n                                                                    __common31 = __core__unConstrData(DLA_1);\n                                                                    __common33 = __core__fstPair(__common31);\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__common33, 0),\n                                                                        () -> {\n                                                                            (__lhs_0_71) -> {\n                                                                                true\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__common33, 1),\n                                                                                () -> {\n                                                                                    (__lhs_0_70) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__lhs_0_69) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()(DLA_1)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_67) -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_66) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 5),\n                                                                                    () -> {\n                                                                                        (__lhs_0_65) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                                () -> {\n                                                                                                    true\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 7),\n                                                                                            () -> {\n                                                                                                (__lhs_0_64) -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                                        () -> {\n                                                                                                            true\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity)), 6),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_63) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_53) -> {\n                                                                                                            ma = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_53))));\n                                                                                                            __core__ifThenElse(\n                                                                                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput),\n                                                                                                                () -> {\n                                                                                                                    recurse_57 = (recurse_56, self_55, fn_10) -> {\n                                                                                                                        __core__chooseList(self_55, () -> {\n                                                                                                                            true\n                                                                                                                        }, () -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                fn_10(__core__headList__safe(self_55)),\n                                                                                                                                () -> {\n                                                                                                                                    recurse_56(recurse_56, __core__tailList__safe(self_55), fn_10)\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        })()\n                                                                                                                    };\n                                                                                                                    recurse_57(recurse_57, __helios__common__map(ma, (item_11) -> {\n                                                                                                                        item_11\n                                                                                                                    }), (mintDgtActivity_1) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 5),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_62) -> {\n                                                                                                                                    true\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 7),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_61) -> {\n                                                                                                                                            true\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 3),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_60) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 4),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_59) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 8),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_58) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 6),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_57) -> {\n                                                                                                                                                                            error()\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 2),\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                (__lhs_0_56) -> {\n                                                                                                                                                                                    error()\n                                                                                                                                                                                }\n                                                                                                                                                                            },\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintDgtActivity_1)), 0),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_55) -> {\n                                                                                                                                                                                            error()\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_54) -> {\n                                                                                                                                                                                            error()\n                                                                                                                                                                                        }\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()\n                                                                                                                                                                            }\n                                                                                                                                                                        )()\n                                                                                                                                                                    }\n                                                                                                                                                                )()\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()(mintDgtActivity_1)\n                                                                                                                    })\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(mintDgtActivity)\n                                    }((i_8) -> {\n                                        inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);\n                                        __core__chooseUnit(__core__ifThenElse(\n                                            __core__chooseData(inputData, () -> {\n                                                true\n                                            }, () -> {\n                                                false\n                                            }, () -> {\n                                                false\n                                            }, () -> {\n                                                false\n                                            }, () -> {\n                                                false\n                                            })(),\n                                            () -> {\n                                                (__lhs_0_17) -> {\n                                                    index_8 = __core__fstPair(__core__unConstrData(__lhs_0_17));\n                                                    fields_67 = __core__sndPair(__core__unConstrData(__lhs_0_17));\n                                                    __cond_10 = __core__headList(fields_67);\n                                                    __core__ifThenElse(\n                                                        __core__chooseData(__cond_10, () -> {\n                                                            true\n                                                        }, () -> {\n                                                            false\n                                                        }, () -> {\n                                                            false\n                                                        }, () -> {\n                                                            false\n                                                        }, () -> {\n                                                            false\n                                                        })(),\n                                                        () -> {\n                                                            (__lhs_0_18) -> {\n                                                                index2 = __core__fstPair(__core__unConstrData(__lhs_0_18));\n                                                                ()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__10) -> {\n                                                                ()\n                                                            }\n                                                        }\n                                                    )()(__cond_10)\n                                                }\n                                            },\n                                            () -> {\n                                                (__9) -> {\n                                                    ()\n                                                }\n                                            }\n                                        )()(inputData), inputData)\n                                    }(self_8 = __core__headList(__core__tailList(__core__tailList(__core__tailList(mintDgtInput))));\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_8)))))\n                                }(dgtLink = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__cond_13 = __core__headList(__core__tailList(cctx));\n                                __common29 = __core__fstPair(__core__unConstrData(__cond_13));\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__common29, 1),\n                                    () -> {\n                                        (self_118) -> {\n                                            data_112 = __core__headList(__core__sndPair(__core__unConstrData(self_118)));\n                                            __helios__common__assert_constr_index(data_112, 0)\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__common29, 2),\n                                            () -> {\n                                                (self_120) -> {\n                                                    data_112 = __core__headList(__core__sndPair(__core__unConstrData(self_120)));\n                                                    __helios__common__assert_constr_index(data_112, 0)\n                                                }\n                                            },\n                                            () -> {\n                                                (__11) -> {\n                                                    error()\n                                                }\n                                            }\n                                        )()\n                                    }\n                                )()(__cond_13));\n                                __common6 = __core__headList(cctx);\n                                __common7 = __core__unBData(__common6);\n                                (input) -> {\n                                    __core__mkCons(__core__listData(dgtLink), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkCons(input, __core__mkCons(__core__bData(__common7), __core__mkNilData(()))))))\n                                }(inputs = __core__unListData(__core__headList(__common14));\n                                (uutName) -> {\n                                    __cond_1 = __core__headList(__core__tailList(dgtLink));\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_1)), 1),\n                                        () -> {\n                                            (__lhs_0_2) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0) -> {\n                                                vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0))));\n                                                needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));\n                                                ac = __helios__assetclass__new(__common7, __core__encodeUtf8(uutName));\n                                                __cond_2 = __helios__common__find_safe(inputs, (i_7) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsData(self_8 = __helios__txinput__address(i_7);\n                                                        __core__headList(__core__sndPair(__core__unConstrData(self_8))), needsAddrWithCred),\n                                                        () -> {\n                                                            a_12 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));\n                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), ac);\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(a_12, 0),\n                                                                false,\n                                                                true\n                                                            )\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_2)), 0),\n                                                    () -> {\n                                                        (foundGood) -> {\n                                                            foundGood\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_1) -> {\n                                                            error()\n                                                        }\n                                                    }\n                                                )()(__cond_2)\n                                            }\n                                        }\n                                    )()(__cond_1)\n                                }(d = __core__headList(dgtLink);\n                                __core__decodeUtf8(__core__unBData(d)))))\n                            }(self_139 = __core__mkCons(__core__bData(__common3), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));\n                            charter_1 = __core__headList(__core__tailList(self_139));\n                            __common18 = __core__unConstrData(charter_1);\n                            __common19 = __core__fstPair(__common18);\n                            __core__ifThenElse(\n                                __core__equalsInteger(__common19, 1),\n                                () -> {\n                                    (__lhs_0_38) -> {\n                                        self_139\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common19, 2),\n                                        () -> {\n                                            (__lhs_0_37) -> {\n                                                self_139\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_33) -> {\n                                                mph_15 = __core__unBData(__core__headList(self_139));\n                                                charterAc_2 = __helios__assetclass__new(mph_15, #63686172746572);\n                                                (__cond_17) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_17)), 1),\n                                                        () -> {\n                                                            (__lhs_0_36) -> {\n                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(self_139)\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_35) -> {\n                                                                charterUtxo_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_35)));\n                                                                datum_4 = __helios__common__assert_constr_index(data_112 = __helios__txoutputdatum__inline(self_16 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_16))))));\n                                                                __helios__common__assert_constr_index(data_112, 0), 0);\n                                                                __core__mkCons(__core__bData(mph_15), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_1, __core__mkNilData(())))), __core__mkNilData(())))\n                                                            }\n                                                        }\n                                                    )()(__cond_17)\n                                                }(self_104 = __core__unListData(__core__headList(__core__tailList(__common14)));\n                                                __helios__common__find_safe(self_104, (txin_1) -> {\n                                                    a_12 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_2);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(a_12, 0),\n                                                        false,\n                                                        true\n                                                    )\n                                                }))\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(charter_1))\n                        }\n                    },\n                    () -> {\n                        (__20) -> {\n                            cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__core__mkCons(__core__bData(__common3), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));\n                            __core__ifThenElse(\n                                __common16,\n                                () -> {\n                                    (__lhs_0_97) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __common17,\n                                        () -> {\n                                            (__lhs_0_96) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common15, 2),\n                                                () -> {\n                                                    (__lhs_0_95) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__common15, 3),\n                                                        () -> {\n                                                            (__lhs_0_94) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__common15, 4),\n                                                                () -> {\n                                                                    (__lhs_0_91) -> {\n                                                                        seed_3 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_91)));\n                                                                        __cond_37 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1);\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_92) -> {\n                                                                                    activity_3 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_92)));\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                                                                        () -> {\n                                                                                            (__lhs_0_93) -> {\n                                                                                                __common27 = __core__sndPair(__core__unConstrData(__lhs_0_93));\n                                                                                                seedToCapo_1 = __core__headList(__common27);\n                                                                                                (purpose_4) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsData(seed_3, seedToCapo_1),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString("mintDgt", purpose_4),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __module__CapoMintHelpers__validateUutMinting(__common3, seed_3, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), false, (), false, (), false, (), true)))\n                                                                                                }(d = __core__headList(__core__tailList(__common27));\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__25) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        }\n                                                                                    )()(activity_3)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__24) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_37)\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__lhs_0_82) -> {\n                                                                        __common20 = __core__sndPair(__core__unConstrData(__lhs_0_82));\n                                                                        seed_2 = __core__headList(__common20);\n                                                                        replaceExisting = __core__headList(__core__tailList(__common20));\n                                                                        __common21 = __core__fstPair(__core__unConstrData(replaceExisting));\n                                                                        __common22 = __core__equalsInteger(__common21, 0);\n                                                                        otherMintedValue_2 = __core__ifThenElse(\n                                                                            __common22,\n                                                                            () -> {\n                                                                                (__lhs_0_86) -> {\n                                                                                    oldTokenName = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_86))));\n                                                                                    __helios__value__new(__helios__assetclass__new(__common3, oldTokenName), -1)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_85) -> {\n                                                                                    __core__mkNilPairData(())\n                                                                                }\n                                                                            }\n                                                                        )()(replaceExisting);\n                                                                        mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_2);\n                                                                        hasCapoApproval = __core__ifThenElse(\n                                                                            __core__ifThenElse(\n                                                                                __core__ifThenElse(\n                                                                                    __common22,\n                                                                                    () -> {\n                                                                                        (__lhs_0_84) -> {\n                                                                                            false\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_83) -> {\n                                                                                            true\n                                                                                        }\n                                                                                    }\n                                                                                )()(replaceExisting),\n                                                                                false,\n                                                                                true\n                                                                            ),\n                                                                            () -> {\n                                                                                __cond_36 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1);\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 5),\n                                                                                    () -> {\n                                                                                        __common23 = __core__tailList(cctx_1);\n                                                                                        __common24 = __core__headList(__common23);\n                                                                                        __common41 = __core__fstPair(__core__unConstrData(__common24));\n                                                                                        __common42 = __core__equalsInteger(__common41, 2);\n                                                                                        (__lhs_0_89) -> {\n                                                                                            (__lhs_0_90) -> {\n                                                                                                (uutName_1) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString(uutName_1, mkTokenName_2("spendDgt")),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), true)\n                                                                                                }(d = __core__headList(__lhs_0_90);\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }((self_110) -> {\n                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_110))))\n                                                                                            }(charterAc_1 = __helios__assetclass__new(__core__unBData(__core__headList(cctx_1)), #63686172746572);\n                                                                                            capoAddr = __helios__txinput__address(__core__ifThenElse(\n                                                                                                __core__equalsInteger(__common41, 1),\n                                                                                                () -> {\n                                                                                                    (self_10) -> {\n                                                                                                        __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_10))))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __common42,\n                                                                                                        () -> {\n                                                                                                            (self_10) -> {\n                                                                                                                __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_10))))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__13) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()(__common24));\n                                                                                            __core__ifThenElse(\n                                                                                                __common42,\n                                                                                                () -> {\n                                                                                                    (__lhs_0_30) -> {\n                                                                                                        __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_16 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo) -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo))), capoAddr),\n                                                                                                                () -> {\n                                                                                                                    a_12 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo))))), charterAc_1);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__lessThanEqualsInteger(a_12, 0),\n                                                                                                                        false,\n                                                                                                                        true\n                                                                                                                    )\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        });\n                                                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_16)))))), 0)\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__12) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()(__common24)))\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__23) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(__cond_36)\n                                                                            },\n                                                                            () -> {\n                                                                                __cond_34 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1);\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 0),\n                                                                                    () -> {\n                                                                                        (__lhs_0_87) -> {\n                                                                                            activity_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_87)));\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_2)), 4),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_88) -> {\n                                                                                                        __common28 = __core__sndPair(__core__unConstrData(__lhs_0_88));\n                                                                                                        seedToCapo = __core__headList(__common28);\n                                                                                                        (purpose_3) -> {\n                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                __core__equalsData(seed_2, seedToCapo),\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                __core__equalsString("spendDgt", purpose_3),\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            )(), true))\n                                                                                                        }(d = __core__headList(__core__tailList(__common28));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__22) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()(activity_2)\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__21) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(__cond_34)\n                                                                            }\n                                                                        )();\n                                                                        didMintUuts = __module__CapoMintHelpers__validateUutMinting(__common3, seed_2, __core__mkCons(__core__bData(#7370656e64446774), __core__mkNilData(())), true, mkTokenName_2, false, (), true, otherMintedValue_2, true);\n                                                                        __core__ifThenElse(\n                                                                            didMintUuts,\n                                                                            () -> {\n                                                                                hasCapoApproval\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()(__REDEEMER)\n                        }\n                    }\n                )()\n            }\n        )()(__REDEEMER),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__assert = (cond, msg_1) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_1, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool__or = (a, b) -> {
        __core__ifThenElse(
            a(),
            () -> {
                true
            },
            () -> {
                b()
            }
        )()
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self))
        }
    };
    __helios__common__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(self_1)
        }
    };
    __helios__txid__serialize = __helios__common__serialize;
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__print = (msg_2) -> {
        __core__trace(msg_2, ())
    };
    __helios__string____add = __core__appendString;
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_1 = (recurse) -> {
                (self_4, bytes) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse(recurse)(__core__divideInteger(self_4, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_1(recurse_1)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_1(recurse_1)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_3 = (recurse_2, self_6) -> {
                n = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_3(recurse_3, self_5)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__bytearray__from_data = __core__unBData;
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__enum_fields = (self_7) -> {
        __core__sndPair(__core__unConstrData(self_7))
    };
    __helios__common__enum_field_0 = (self_8) -> {
        __core__headList(__helios__common__enum_fields(self_8))
    };
    __helios__common__enum_fields_after_0 = (self_9) -> {
        __core__tailList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_field_1 = (self_10) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_10))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__scriptcontext__get_current_minting_policy_hash = () -> {
        __helios__mintingpolicyhash__from_data(__helios__scriptcontext__get_spending_purpose_output_id())
    };
    __helios__bool____not = (b_1) -> {
        __core__ifThenElse(
            b_1,
            false,
            true
        )
    };
    __helios__value__get_inner_map_int = (map, key) -> {
        recurse_5 = (recurse_4, map_1, key_1) -> {
            __core__chooseList(map_1, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), key_1),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                    },
                    () -> {
                        recurse_4(recurse_4, __core__tailList__safe(map_1), key_1)
                    }
                )()
            })()
        };
        recurse_5(recurse_5, map, key)
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__value__get_map_keys = (map_2) -> {
        recurse_7 = (recurse_6, map_3) -> {
            __core__chooseList(map_3, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_3)), recurse_6(recurse_6, __core__tailList__safe(map_3)))
            })()
        };
        recurse_7(recurse_7, map_2)
    };
    __helios__common__any = (self_11, fn) -> {
        recurse_9 = (recurse_8, self_12, fn_1) -> {
            __core__chooseList(self_12, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_1(__core__headList__safe(self_12)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_8(recurse_8, __core__tailList__safe(self_12), fn_1)
                    }
                )()
            })()
        };
        recurse_9(recurse_9, self_11, fn)
    };
    __helios__common__is_in_bytearray_list = (lst, key_2) -> {
        __helios__common__any(lst, (item) -> {
            __core__equalsData(item, key_2)
        })
    };
    __helios__common__concat = (a_1, b_2) -> {
        recurse_11 = (recurse_10, lst_1, rem) -> {
            __core__chooseList(rem, () -> {
                lst_1
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_10(recurse_10, lst_1, __core__tailList__safe(rem)))
            })()
        };
        recurse_11(recurse_11, b_2, a_1)
    };
    __helios__value__merge_map_keys = (a_2, b_3) -> {
        aKeys = __helios__value__get_map_keys(a_2);
        recurse_13 = (recurse_12, keys, map_4) -> {
            __core__chooseList(map_4, () -> {
                __helios__common__list_0
            }, () -> {
                key_3 = __core__fstPair(__core__headList__safe(map_4));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_3),
                    () -> {
                        recurse_12(recurse_12, keys, __core__tailList__safe(map_4))
                    },
                    () -> {
                        __core__mkCons(key_3, recurse_12(recurse_12, keys, __core__tailList__safe(map_4)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_13(recurse_13, aKeys, b_3);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__compare_inner = (comp, a_3, b_4) -> {
        recurse_15 = (recurse_14, keys_1) -> {
            __core__chooseList(keys_1, () -> {
                true
            }, () -> {
                key_4 = __core__headList__safe(keys_1);
                __core__ifThenElse(
                    __helios__bool____not(comp(__helios__value__get_inner_map_int(a_3, key_4), __helios__value__get_inner_map_int(b_4, key_4))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(keys_1))
                    }
                )()
            })()
        };
        recurse_15(recurse_15, __helios__value__merge_map_keys(a_3, b_4))
    };
    __helios__value__get_inner_map = (map_5, mph) -> {
        recurse_17 = (recurse_16, map_6) -> {
            __core__chooseList(map_6, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_6)), mph),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_6)))
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, map_5)
    };
    __helios__value__compare = (a_4, b_5, comp_1) -> {
        recurse_19 = (recurse_18, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                true
            }, () -> {
                key_5 = __core__headList__safe(keys_2);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_1, __helios__value__get_inner_map(a_4, key_5), __helios__value__get_inner_map(b_5, key_5))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(keys_2))
                    }
                )()
            })()
        };
        recurse_19(recurse_19, __helios__value__merge_map_keys(a_4, b_5))
    };
    __helios__value____geq = (a_5, b_6) -> {
        __helios__value__compare(a_5, b_6, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__bool__show = (self_13) -> {
        () -> {
            __core__ifThenElse(
                self_13,
                "true",
                "false"
            )
        }
    };
    __helios__bool__and = (a_6, b_7) -> {
        __core__ifThenElse(
            a_6(),
            () -> {
                b_7()
            },
            () -> {
                false
            }
        )()
    };
    __helios__common__assert_constr_index = (data, i) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__txoutputdatum__inline = (self_14) -> {
        pair = __core__unConstrData(self_14);
        index = __core__fstPair(pair);
        fields = __core__sndPair(pair);
        __core__ifThenElse(
            __core__equalsInteger(index, 2),
            () -> {
                __core__headList(fields)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_fields_after_1 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_15))
    };
    __helios__common__enum_field_2 = (self_16) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_16))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__tx__outputs = (self_17) -> {
        __core__unListData(__helios__common__enum_field_2(self_17))
    };
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common____eq = __core__equalsData;
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__value__contains = (self_18) -> {
        (value) -> {
            __helios__value____geq(self_18, value)
        }
    };
    __helios__txoutput__value = (self_19) -> {
        __core__unMapData(__helios__common__enum_field_1(self_19))
    };
    __helios__common__list_1 = (a_7) -> {
        __core__mkCons(a_7, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__txoutputid__new = (tx_id, idx) -> {
        __core__constrData(0, __helios__common__list_2(tx_id, __helios__int____to_data(idx)))
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__common__fold = (self_20, fn_2, z) -> {
        recurse_21 = (recurse_20, self_21, z_1) -> {
            __core__chooseList(self_21, () -> {
                z_1
            }, () -> {
                recurse_20(recurse_20, __core__tailList__safe(self_21), fn_2(z_1, __core__headList__safe(self_21)))
            })()
        };
        recurse_21(recurse_21, self_20, z)
    };
    __helios__string____eq = __core__equalsString;
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_22) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_23 = (recurse_22, i_1, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i_1), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i_1, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_22(recurse_22, __core__divideInteger(i_1, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_22, 0),
                () -> {
                    __core__consByteString(45, recurse_23(recurse_23, __core__multiplyInteger(self_22, -1), #))
                },
                () -> {
                    recurse_23(recurse_23, self_22, #)
                }
            )())
        }
    };
    __helios__data__show = (self_23) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item_1) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item_1)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item_1)))
                        }
                    )()
                }, "")
            };
            (recurse_25, data_2) -> {
                recurse_25(recurse_25, data_2)
            }((recurse_24, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_2 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_2);
                    fields_1 = __core__sndPair(pair_2);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields_1, (item_3) -> {
                        recurse_24(recurse_24, item_3)
                    }), "}")))
                }, () -> {
                    map_7 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_7, (pair_1) -> {
                        key_6 = recurse_24(recurse_24, __core__fstPair(pair_1));
                        value_2 = recurse_24(recurse_24, __core__sndPair(pair_1));
                        __helios__string____add(key_6, __helios__string____add(":", value_2))
                    }), "}"))
                }, () -> {
                    lst_2 = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_2, (item_2) -> {
                        recurse_24(recurse_24, item_2)
                    }), "]"))
                }, () -> {
                    value_1 = __core__unIData__safe(data_1);
                    __helios__int__show(value_1)()
                }, () -> {
                    bytes_4 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_4)()
                })()
            }, self_23)
        }
    };
    __helios__data__show_constr_data = (callback) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_3 = __core__unConstrData__safe(data_3);
                callback(__core__fstPair(pair_3), __core__sndPair(pair_3))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index_1, callback_1) -> {
        (list_1) -> {
            recurse_27 = (recurse_26) -> {
                (lst_3, i_2) -> {
                    __core__chooseList(lst_3, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_2, 0),
                            () -> {
                                head = __core__headList__safe(lst_3);
                                callback_1(head)
                            },
                            () -> {
                                recurse_26(recurse_26)(__core__tailList__safe(lst_3), __core__subtractInteger(i_2, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_27(recurse_27)(list_1, index_1)
        }
    };
    __helios__data__show_bdata = (callback_2) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_2(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__txid__show = (self_24) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_2) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_5) -> {
                            __helios__bytearray__show(bytes_5)()
                        }))(fields_2)
                    },
                    () -> {
                        __helios__data__show(self_24)()
                    }
                )()
            })(self_24)
        }
    };
    __helios__data__show_idata = (callback_3) -> {
        (data_5) -> {
            callback_nok_2 = __helios__data__show(data_5);
            __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
                callback_3(__core__unIData__safe(data_5))
            }, callback_nok_2)()
        }
    };
    __helios__txoutputid__show = (self_25) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_3) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_3);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_3) -> {
                            __helios__int__show(i_3)()
                        }))(fields_3);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_25)()
                    }
                )()
            })(self_25)
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__value__new = (assetClass, i_4) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_4),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_1 = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_4)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_2, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_26) -> {
        __core__multiplyInteger(self_26, -1)
    };
    __helios__common__enum_fields_after_2 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_27))
    };
    __helios__common__enum_fields_after_3 = (self_28) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_28))
    };
    __helios__common__enum_field_4 = (self_29) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_29))
    };
    __helios__tx__minted = (self_30) -> {
        __core__unMapData(__helios__common__enum_field_4(self_30))
    };
    __helios__common__enum_tag_equals = (data_6, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_6)), i_5)
    };
    __helios__common__length = (lst_4) -> {
        recurse_29 = (recurse_28, lst_5) -> {
            __core__chooseList(lst_5, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_28(recurse_28, __core__tailList__safe(lst_5)), 1)
            })()
        };
        recurse_29(recurse_29, lst_4)
    };
    __helios__int__from_data = __core__unIData;
    __helios__common__identity = (self_31) -> {
        self_31
    };
    __helios__txid__from_data = __helios__common__identity;
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_7, index_2, test_a, test_b) -> {
        __core__chooseData(data_7, () -> {
            pair_4 = __core__unConstrData__safe(data_7);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_4), index_2),
                () -> {
                    fields_4 = __core__sndPair(pair_4);
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_4)),
                            () -> {
                                tail = __core__tailList__safe(fields_4);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_1) -> {
        (data_8) -> {
            __core__chooseData(data_8, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_6 = __core__unBData__safe(data_8);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_6), n_1),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_9) -> {
        __core__chooseData(data_9, () -> {
            pair_5 = __core__unConstrData__safe(data_9);
            index_3 = __core__fstPair(pair_5);
            fields_5 = __core__sndPair(pair_5);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_5, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_5), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_5))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_10) -> {
        __core__chooseData(data_10, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_11) -> {
        __helios__common__test_constr_data_2(data_11, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__address__from_data = __helios__common__identity;
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_13) -> {
        __core__chooseData(data_13, () -> {
            pair_6 = __core__unConstrData__safe(data_13);
            index_4 = __core__fstPair(pair_6);
            fields_6 = __core__sndPair(pair_6);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_6, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_6), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_6))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_6, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_6), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_6))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_14) -> {
        __core__chooseData(data_14, () -> {
            pair_7 = __core__unConstrData__safe(data_14);
            tag_3 = __core__fstPair(pair_7);
            fields_7 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(tag_3, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_7)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_3, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_7)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_8 = __core__unConstrData__safe(data_15);
            index_5 = __core__fstPair(pair_8);
            fields_8 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_8, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_8), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_8))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_8, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_16) -> {
        __helios__common__test_constr_data_2(data_16, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__value__contains_policy = (self_32) -> {
        (mph_3) -> {
            mph_4 = __helios__mintingpolicyhash____to_data(mph_3);
            recurse_31 = (recurse_30, map_8) -> {
                __core__chooseList(map_8, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_8)), mph_4),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_30(recurse_30, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, self_32)
        }
    };
    __helios__common__unBData__safe = (data_17, callback_ok, callback_nok_3) -> {
        __core__chooseData(data_17, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3, () -> {
            callback_ok(__core__unBData__safe(data_17))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_18, callback_ok_1, callback_nok_4) -> {
        __core__chooseData(data_18, callback_nok_4, () -> {
            callback_ok_1(__core__unMapData__safe(data_18))
        }, callback_nok_4, callback_nok_4, callback_nok_4)()
    };
    __helios__common__unIData__safe = (data_19, callback_ok_2, callback_nok_5) -> {
        __core__chooseData(data_19, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
            callback_ok_2(__core__unIData__safe(data_19))
        }, callback_nok_5)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_33) -> {
        () -> {
            __core__divideInteger(self_33, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_34) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_34, 0),
                () -> {
                    __core__multiplyInteger(self_34, -1)
                },
                () -> {
                    self_34
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_35, n_2) -> {
        recurse_33 = (recurse_32, x_1, pos, bytes_7) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_7
                        },
                        () -> {
                            recurse_32(recurse_32, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_7))
                        }
                    )()
                },
                () -> {
                    recurse_32(recurse_32, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_7))
                }
            )()
        };
        recurse_33(recurse_33, self_35, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_36) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_36, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_36, -1)))
                },
                () -> {
                    show_positive(self_36)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback_4) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback_4(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback_4(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_8) -> {
        n_3 = __core__lengthOfByteString(bytes_8);
        recurse_35 = (recurse_34, i_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_6, n_3),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_8, i_6);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_34(recurse_34, __core__addInteger(i_6, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_6, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_3),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_34(recurse_34, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_6, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_3),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_34(recurse_34, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_6, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_3),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_8, __core__addInteger(i_6, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_34(recurse_34, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_35(recurse_35, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_37) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_37),
                () -> {
                    __core__decodeUtf8__safe(self_37)
                },
                () -> {
                    __helios__bytearray__show(self_37)()
                }
            )()
        }
    };
    __helios__value__show = (self_38) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_38, (prev_1, pair_9) -> {
                mph_data = __core__fstPair(pair_9);
                tokens_data = __core__sndPair(pair_9);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_5) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_5, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_5)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_10) -> {
                            token_name_data = __core__fstPair(pair_10);
                            qty_data = __core__sndPair(pair_10);
                            __helios__common__unBData__safe(token_name_data, (token_name_1) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_5, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_1)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__value__to_map = (self_39) -> {
        () -> {
            self_39
        }
    };
    __helios__bytearray____neq = (self_40, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self_40, other))
    };
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__bool__trace = (self_41) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_41)()), self_41)
        }
    };
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_37 = (recurse_36, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_36(recurse_36, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_37(recurse_37, tokens_1)
    };
    __helios__value__is_zero = (self_42) -> {
        () -> {
            recurse_39 = (recurse_38, map_9) -> {
                __core__chooseList(map_9, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_9))))
                    }, () -> {
                        recurse_38(recurse_38, __core__tailList__safe(map_9))
                    })
                })()
            };
            recurse_39(recurse_39, self_42)
        }
    };
    __helios__value__get_policy = (self_43) -> {
        (mph_6) -> {
            mph_7 = __helios__mintingpolicyhash____to_data(mph_6);
            recurse_41 = (recurse_40, map_10) -> {
                __core__chooseList(map_10, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_10)), mph_7),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_10)))
                        },
                        () -> {
                            recurse_40(recurse_40, __core__tailList__safe(map_10))
                        }
                    )()
                })()
            };
            recurse_41(recurse_41, self_43)
        }
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_8, b_8) -> {
            recurse_43 = (recurse_42, keys_3, result) -> {
                __core__chooseList(keys_3, () -> {
                    result
                }, () -> {
                    key_7 = __core__headList__safe(keys_3);
                    tail_1 = recurse_42(recurse_42, __core__tailList__safe(keys_3), result);
                    sum = op(__helios__value__get_inner_map_int(a_8, key_7), __helios__value__get_inner_map_int(b_8, key_7));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_43(recurse_43, __helios__value__merge_map_keys(a_8, b_8), __core__mkNilPairData(()))
        }
    };
    __helios__value__add_or_subtract = (a_9, b_9, op_1) -> {
        recurse_45 = (recurse_44, keys_4, result_1) -> {
            __core__chooseList(keys_4, () -> {
                result_1
            }, () -> {
                key_8 = __core__headList__safe(keys_4);
                tail_2 = recurse_44(recurse_44, __core__tailList__safe(keys_4), result_1);
                item_4 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_9, key_8), __helios__value__get_inner_map(b_9, key_8));
                __core__chooseList(item_4, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_4)), tail_2)
                })()
            })()
        };
        recurse_45(recurse_45, __helios__value__merge_map_keys(a_9, b_9), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_10, b_10) -> {
        __helios__value__add_or_subtract(a_10, b_10, __core__addInteger)
    };
    __helios__common__map = (self_44, fn_3, init) -> {
        recurse_47 = (recurse_46, rem_1, lst_6) -> {
            __core__chooseList(rem_1, () -> {
                lst_6
            }, () -> {
                __core__mkCons(fn_3(__core__headList__safe(rem_1)), recurse_46(recurse_46, __core__tailList__safe(rem_1), lst_6))
            })()
        };
        recurse_47(recurse_47, self_44, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_7, comp_2) -> {
        recurse_49 = (recurse_48, lst_8) -> {
            __core__chooseList(lst_8, () -> {
                __core__mkCons(x_3, lst_8)
            }, () -> {
                head_1 = __core__headList__safe(lst_8);
                __core__ifThenElse(
                    comp_2(x_3, head_1),
                    () -> {
                        __core__mkCons(x_3, lst_8)
                    },
                    () -> {
                        __core__mkCons(head_1, recurse_48(recurse_48, __core__tailList__safe(lst_8)))
                    }
                )()
            })()
        };
        recurse_49(recurse_49, lst_7)
    };
    __helios__common__sort = (lst_9, comp_3) -> {
        recurse_51 = (recurse_50, lst_10) -> {
            __core__chooseList(lst_10, () -> {
                lst_10
            }, () -> {
                (head_2, tail_3) -> {
                    __helios__common__insert_in_sorted(head_2, tail_3, comp_3)
                }(__core__headList__safe(lst_10), recurse_50(recurse_50, __core__tailList__safe(lst_10)))
            })()
        };
        recurse_51(recurse_51, lst_9)
    };
    __helios__common__map_get = (self_45, key_9, fnFound, fnNotFound) -> {
        recurse_53 = (recurse_52, self_46, key_10) -> {
            __core__chooseList(self_46, fnNotFound, () -> {
                head_3 = __core__headList__safe(self_46);
                __core__ifThenElse(
                    __core__equalsData(key_10, __core__fstPair(head_3)),
                    () -> {
                        fnFound(__core__sndPair(head_3))
                    },
                    () -> {
                        recurse_52(recurse_52, __core__tailList__safe(self_46), key_10)
                    }
                )()
            })()
        };
        recurse_53(recurse_53, self_45, key_9)
    };
    __helios__common__filter = (self_47, fn_4, nil) -> {
        recurse_55 = (recurse_54, self_48, fn_5) -> {
            __core__chooseList(self_48, () -> {
                nil
            }, () -> {
                head_4 = __core__headList__safe(self_48);
                __core__ifThenElse(
                    fn_5(head_4),
                    () -> {
                        __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(self_48), fn_5))
                    },
                    () -> {
                        recurse_54(recurse_54, __core__tailList__safe(self_48), fn_5)
                    }
                )()
            })()
        };
        recurse_55(recurse_55, self_47, fn_4)
    };
    __helios__common__filter_map = (self_49, fn_6) -> {
        __helios__common__filter(self_49, fn_6, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_11, b_11) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_11, b_11),
            b_11,
            a_11
        )
    };
    __helios__common__slice_bytearray = (self_50, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_50), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_8 = (start_1) -> {
                fn_7 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_50)
                };
                fn_7(normalize(end))
            };
            fn_8(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_51) -> {
        __helios__common__slice_bytearray(self_51, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_52) -> {
        () -> {
            __core__blake2b_256(self_52)
        }
    };
    __helios__int____gt = (a_12, b_12) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_12, b_12))
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txoutputid__index = (self_53) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_53))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__data__from_data = __helios__common__identity;
    __helios__common__all = (self_54, fn_9) -> {
        recurse_57 = (recurse_56, self_55, fn_10) -> {
            __core__chooseList(self_55, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_10(__core__headList__safe(self_55)),
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_55), fn_10)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_54, fn_9)
    };
    __helios__common__enum_fields_after_4 = (self_56) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_56))
    };
    __helios__common__enum_fields_after_5 = (self_57) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_57))
    };
    __helios__common__enum_fields_after_6 = (self_58) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_58))
    };
    __helios__common__enum_fields_after_7 = (self_59) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_59))
    };
    __helios__common__enum_fields_after_8 = (self_60) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_60))
    };
    __helios__common__enum_field_9 = (self_61) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_61))
    };
    __helios__tx__redeemers = (self_62) -> {
        __core__unMapData(__helios__common__enum_field_9(self_62))
    };
    __helios__scriptpurpose__spending____is = (data_20) -> {
        __helios__common__enum_tag_equals(data_20, 1)
    };
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_63) -> {
        __core__unListData(__helios__common__enum_field_0(self_63))
    };
    __helios__value__get_safe = (self_64) -> {
        (assetClass_1) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map_11) -> {
                __core__chooseList(map_11, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mintingPolicyHash),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map_11))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_12) -> {
                __core__chooseList(map_12, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_12)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_12))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_64)
        }
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_65) -> {
        __helios__txoutput__value(__helios__txinput__output(self_65))
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txinput__datum = (self_66) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_66))
    };
    __helios__tx__ref_inputs = (self_67) -> {
        __core__unListData(__helios__common__enum_field_1(self_67))
    };
    __helios__txinput__address = (self_68) -> {
        __helios__txoutput__address(__helios__txinput__output(self_68))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_69) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_69))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__data__constrdata____is = (data_21) -> {
        __core__chooseData(data_21, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__tag = (data_22) -> {
        __core__fstPair(__core__unConstrData(data_22))
    };
    __helios__data__constrdata__fields = (data_23) -> {
        __core__sndPair(__core__unConstrData(data_23))
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_70) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_70))
    };
    __helios__common__struct_fields_after_2 = (self_71) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_71))
    };
    __helios__common__struct_fields_after_3 = (self_72) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_72))
    };
    __helios__common__struct_field_4 = (self_73) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_73))
    };
    __helios__common__struct_field_3 = (self_74) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_74))
    };
    __helios__txoutput__is_valid_data = (data_24) -> {
        __core__chooseData(data_24, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_25) -> {
        __helios__common__test_constr_data_2(data_25, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__data__is_valid_data = (data_26) -> {
        true
    };
    __helios__string__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_27))
        })()
    };
    __helios__common__enum_field_7 = (self_75) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_75))
    };
    __helios__common__enum_field_6 = (self_76) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_76))
    };
    __helios__common__enum_field_5 = (self_77) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_77))
    };
    __helios__common__enum_field_3 = (self_78) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_78))
    };
    __helios__common__test_mStruct_field = (self_79, name, inner_test) -> {
        __core__chooseData(self_79, () -> {
            false
        }, () -> {
            map_13 = __core__unMapData__safe(self_79);
            recurse_59 = (recurse_58, map_14) -> {
                __core__chooseList(map_14, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name))), () -> {
                        false
                    })()
                }, () -> {
                    head_5 = __core__headList__safe(map_14);
                    key_11 = __core__fstPair(head_5);
                    value_3 = __core__sndPair(head_5);
                    __core__ifThenElse(
                        __core__equalsData(key_11, name),
                        () -> {
                            inner_test(value_3)
                        },
                        () -> {
                            recurse_58(recurse_58, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            recurse_59(recurse_59, map_13)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_28);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__common__filter_list = (self_80, fn_11) -> {
        __helios__common__filter(self_80, fn_11, __helios__common__list_0)
    };
    __helios__tx__filter_outputs = (self_81, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_81), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_82) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_82)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_83) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_83))
    };
    __helios__spendingcredential__validator__cast = (data_29) -> {
        __helios__common__assert_constr_index(data_29, 1)
    };
    __helios__txoutput__is_locked_by = (self_84) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_84));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_85) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_85, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_86) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_86)(vh_1))
        }
    };
    __helios__common__find_safe = (self_87, fn_13, callback_5) -> {
        recurse_61 = (recurse_60, self_88, fn_14) -> {
            __core__chooseList(self_88, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_6 = __core__headList__safe(self_88);
                __core__ifThenElse(
                    fn_14(head_6),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_5(head_6)))
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(self_88), fn_14)
                    }
                )()
            })()
        };
        recurse_61(recurse_61, self_87, fn_13)
    };
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__struct____to_data = __core__listData;
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_30) -> {
            __core__chooseData(data_30, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_30);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_31) -> {
        __helios__common__test_constr_data_2(data_31, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__TRACE = (id, message) -> {
        __core__chooseUnit(__helios__print(__helios__bytearray__decode_utf8_safe(id)()), __helios__print(message))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__mkTv = (mph_8, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_8, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_89) -> {
        (fn_15) -> {
            recurse_63 = (recurse_62, lst_11) -> {
                __core__chooseList(lst_11, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_5 = __helios__txoutput__from_data(__core__headList__safe(lst_11));
                    __core__ifThenElse(
                        fn_15(item_5),
                        () -> {
                            item_5
                        },
                        () -> {
                            recurse_62(recurse_62, __core__tailList__safe(lst_11))
                        }
                    )()
                })()
            };
            recurse_63(recurse_63, self_89)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_15) -> {
        recurse_65 = (recurse_64, map_16) -> {
            __core__chooseList(map_16, () -> {
                true
            }, () -> {
                head_7 = __core__headList__safe(map_16);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_7)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_7)),
                            () -> {
                                recurse_64(recurse_64, __core__tailList__safe(map_16))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_65(recurse_65, map_15)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_32) -> {
        map_17 = __core__unMapData(data_32);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_17),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_17
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_90) -> {
        (key_12) -> {
            __helios__common__map_get(self_90, __helios__scriptpurpose____to_data(key_12), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_91) -> {
        (fn_16) -> {
            recurse_67 = (recurse_66, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_18)));
                    __core__ifThenElse(
                        fn_16(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_91)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __helios__list[__helios__data]__head = (self_92) -> {
        __helios__data__from_data(__core__headList(self_92))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_33) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_33),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_33),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_33),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_34) -> {
            ignore = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_34),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_34
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_35) -> {
        __helios__common__enum_tag_equals(data_35, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_36) -> {
        __core__chooseData(data_36, () -> {
            pair_11 = __core__unConstrData__safe(data_36);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_37 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_37, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_9 = __core__unListData__safe(data_37);
                        __core__chooseList(fields_9, () -> {
                            false
                        }, () -> {
                            head_8 = __core__headList__safe(fields_9);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_8),
                                () -> {
                                    fields_10 = __core__tailList__safe(fields_9);
                                    __core__chooseList(fields_10, () -> {
                                        false
                                    }, () -> {
                                        head_9 = __core__headList__safe(fields_10);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_9),
                                            () -> {
                                                fields_11 = __core__tailList__safe(fields_10);
                                                __core__chooseList(fields_11, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_38) -> {
        __helios__common__enum_tag_equals(data_38, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_39) -> {
        __core__chooseData(data_39, () -> {
            pair_12 = __core__unConstrData__safe(data_39);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_40 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_40, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_12 = __core__unListData__safe(data_40);
                        __core__chooseList(fields_12, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_13 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_13 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_13, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_43) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_43),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_43),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_43),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_43),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_43),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_43),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_43),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_43),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_14 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1 = (data_46) -> {
        __core__chooseData(data_46, () -> {
            pair_15 = __core__unConstrData__safe(data_46);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_47 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_47, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_47);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1 = (data_48) -> {
        __core__chooseData(data_48, () -> {
            pair_16 = __core__unConstrData__safe(data_48);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_49 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_49, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_49);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1 = (data_50) -> {
        __core__chooseData(data_50, () -> {
            pair_17 = __core__unConstrData__safe(data_50);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_51 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_51, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_51);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_18 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_18, () -> {
                            false
                        }, () -> {
                            head_10 = __core__headList__safe(fields_18);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_10),
                                () -> {
                                    fields_19 = __core__tailList__safe(fields_18);
                                    __core__chooseList(fields_19, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1 = (data_54) -> {
        __core__chooseData(data_54, () -> {
            pair_19 = __core__unConstrData__safe(data_54);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_55 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_55, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_55);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1 = (data_56) -> {
        __core__chooseData(data_56, () -> {
            pair_20 = __core__unConstrData__safe(data_56);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_57 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_57, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_57);
                        __core__chooseList(fields_22, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_21 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_23 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_23, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_60) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_60),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_60),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_60),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_60),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_60),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_22 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_24, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_24);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_25 = __core__tailList__safe(fields_24);
                                    __core__chooseList(fields_25, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1 = (data_63) -> {
        __core__chooseData(data_63, () -> {
            pair_23 = __core__unConstrData__safe(data_63);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_64 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_64, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_64);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, () -> {
                                        false
                                    }, () -> {
                                        head_14 = __core__headList__safe(fields_27);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_14),
                                            () -> {
                                                fields_28 = __core__tailList__safe(fields_27);
                                                __core__chooseList(fields_28, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1 = (data_65) -> {
        __core__chooseData(data_65, () -> {
            pair_24 = __core__unConstrData__safe(data_65);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_66 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_66, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_29 = __core__unListData__safe(data_66);
                        __core__chooseList(fields_29, () -> {
                            false
                        }, () -> {
                            head_15 = __core__headList__safe(fields_29);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_15),
                                () -> {
                                    fields_30 = __core__tailList__safe(fields_29);
                                    __core__chooseList(fields_30, () -> {
                                        false
                                    }, () -> {
                                        head_16 = __core__headList__safe(fields_30);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_16),
                                            () -> {
                                                fields_31 = __core__tailList__safe(fields_30);
                                                __core__chooseList(fields_31, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_25 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_32 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_32, () -> {
                            false
                        }, () -> {
                            head_17 = __core__headList__safe(fields_32);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_17),
                                () -> {
                                    fields_33 = __core__tailList__safe(fields_32);
                                    __core__chooseList(fields_33, () -> {
                                        false
                                    }, () -> {
                                        head_18 = __core__headList__safe(fields_33);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_18),
                                            () -> {
                                                fields_34 = __core__tailList__safe(fields_33);
                                                __core__chooseList(fields_34, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1 = (data_69) -> {
        __core__chooseData(data_69, () -> {
            pair_26 = __core__unConstrData__safe(data_69);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_70 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_70, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_35 = __core__unListData__safe(data_70);
                        __core__chooseList(fields_35, () -> {
                            false
                        }, () -> {
                            head_19 = __core__headList__safe(fields_35);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_19),
                                () -> {
                                    fields_36 = __core__tailList__safe(fields_35);
                                    __core__chooseList(fields_36, () -> {
                                        false
                                    }, () -> {
                                        head_20 = __core__headList__safe(fields_36);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_20),
                                            () -> {
                                                fields_37 = __core__tailList__safe(fields_36);
                                                __core__chooseList(fields_37, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_71) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_71),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_71),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_71),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1 = (data_72) -> {
        __core__chooseData(data_72, () -> {
            pair_27 = __core__unConstrData__safe(data_72);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_73 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_73, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_38 = __core__unListData__safe(data_73);
                        __core__chooseList(fields_38, () -> {
                            false
                        }, () -> {
                            head_21 = __core__headList__safe(fields_38);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_21),
                                () -> {
                                    fields_39 = __core__tailList__safe(fields_38);
                                    __core__chooseList(fields_39, () -> {
                                        false
                                    }, () -> {
                                        head_22 = __core__headList__safe(fields_39);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_22),
                                            () -> {
                                                fields_40 = __core__tailList__safe(fields_39);
                                                __core__chooseList(fields_40, () -> {
                                                    false
                                                }, () -> {
                                                    head_23 = __core__headList__safe(fields_40);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_23),
                                                        () -> {
                                                            fields_41 = __core__tailList__safe(fields_40);
                                                            __core__chooseList(fields_41, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1 = (data_74) -> {
        __core__chooseData(data_74, () -> {
            pair_28 = __core__unConstrData__safe(data_74);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_75 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_75, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_42 = __core__unListData__safe(data_75);
                        __core__chooseList(fields_42, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1 = (data_76) -> {
        __core__chooseData(data_76, () -> {
            pair_29 = __core__unConstrData__safe(data_76);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_77 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_77, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_43 = __core__unListData__safe(data_77);
                        __core__chooseList(fields_43, () -> {
                            false
                        }, () -> {
                            head_24 = __core__headList__safe(fields_43);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_24),
                                () -> {
                                    fields_44 = __core__tailList__safe(fields_43);
                                    __core__chooseList(fields_44, () -> {
                                        false
                                    }, () -> {
                                        head_25 = __core__headList__safe(fields_44);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_25),
                                            () -> {
                                                fields_45 = __core__tailList__safe(fields_44);
                                                __core__chooseList(fields_45, () -> {
                                                    false
                                                }, () -> {
                                                    head_26 = __core__headList__safe(fields_45);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_26),
                                                        () -> {
                                                            fields_46 = __core__tailList__safe(fields_45);
                                                            __core__chooseList(fields_46, () -> {
                                                                false
                                                            }, () -> {
                                                                head_27 = __core__headList__safe(fields_46);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_27),
                                                                    () -> {
                                                                        fields_47 = __core__tailList__safe(fields_46);
                                                                        __core__chooseList(fields_47, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_78) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_78),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_78),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_78),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_78),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_78),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_78),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_78),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_79) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_79),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_79
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_30 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_48 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_48, () -> {
                            false
                        }, () -> {
                            head_28 = __core__headList__safe(fields_48);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_28),
                                () -> {
                                    fields_49 = __core__tailList__safe(fields_48);
                                    __core__chooseList(fields_49, () -> {
                                        false
                                    }, () -> {
                                        head_29 = __core__headList__safe(fields_49);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_29),
                                            () -> {
                                                fields_50 = __core__tailList__safe(fields_49);
                                                __core__chooseList(fields_50, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_31 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_51 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_51, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_32 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_52 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_52, () -> {
                            false
                        }, () -> {
                            head_30 = __core__headList__safe(fields_52);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_30),
                                () -> {
                                    fields_53 = __core__tailList__safe(fields_52);
                                    __core__chooseList(fields_53, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_88) -> {
        __helios__common__enum_tag_equals(data_88, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_33 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_54, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_91) -> {
        __helios__common__enum_tag_equals(data_91, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_92) -> {
        __core__chooseData(data_92, () -> {
            pair_34 = __core__unConstrData__safe(data_92);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_93 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_93, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_55 = __core__unListData__safe(data_93);
                        __core__chooseList(fields_55, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_55);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_31),
                                () -> {
                                    fields_56 = __core__tailList__safe(fields_55);
                                    __core__chooseList(fields_56, () -> {
                                        false
                                    }, () -> {
                                        head_32 = __core__headList__safe(fields_56);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_32),
                                            () -> {
                                                fields_57 = __core__tailList__safe(fields_56);
                                                __core__chooseList(fields_57, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__seed = (self_93) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_93))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__purpose = (self_94) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_94))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_94) -> {
        __helios__common__enum_tag_equals(data_94, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_95) -> {
        __core__chooseData(data_95, () -> {
            pair_35 = __core__unConstrData__safe(data_95);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_96 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_96, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_58 = __core__unListData__safe(data_96);
                        __core__chooseList(fields_58, () -> {
                            false
                        }, () -> {
                            head_33 = __core__headList__safe(fields_58);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_33),
                                () -> {
                                    fields_59 = __core__tailList__safe(fields_58);
                                    __core__chooseList(fields_59, () -> {
                                        false
                                    }, () -> {
                                        head_34 = __core__headList__safe(fields_59);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_34),
                                            () -> {
                                                fields_60 = __core__tailList__safe(fields_59);
                                                __core__chooseList(fields_60, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__seed = (self_95) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_95))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__purpose = (self_96) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_96))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_36 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_61 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_61, () -> {
                            false
                        }, () -> {
                            head_35 = __core__headList__safe(fields_61);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(head_35),
                                () -> {
                                    fields_62 = __core__tailList__safe(fields_61);
                                    __core__chooseList(fields_62, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_99) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_99),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_99),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_99),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_99),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_99),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_99),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_99),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_99),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_99),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_100) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_100),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_100
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 0)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_37 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__activity = (self_97) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_97))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_38 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_98) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_98))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_39 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_40 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 4)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_41 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_42 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, () -> {
                                        false
                                    }, () -> {
                                        head_42 = __core__headList__safe(fields_74);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_42),
                                            () -> {
                                                fields_75 = __core__tailList__safe(fields_74);
                                                __core__chooseList(fields_75, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_43 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_76 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_76, () -> {
                            false
                        }, () -> {
                            head_43 = __core__headList__safe(fields_76);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_43),
                                () -> {
                                    fields_77 = __core__tailList__safe(fields_76);
                                    __core__chooseList(fields_77, () -> {
                                        false
                                    }, () -> {
                                        head_44 = __core__headList__safe(fields_77);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_44),
                                            () -> {
                                                fields_78 = __core__tailList__safe(fields_77);
                                                __core__chooseList(fields_78, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_44 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_79 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_79, () -> {
                            false
                        }, () -> {
                            head_45 = __core__headList__safe(fields_79);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_45),
                                () -> {
                                    fields_80 = __core__tailList__safe(fields_79);
                                    __core__chooseList(fields_80, () -> {
                                        false
                                    }, () -> {
                                        head_46 = __core__headList__safe(fields_80);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_46),
                                            () -> {
                                                fields_81 = __core__tailList__safe(fields_80);
                                                __core__chooseList(fields_81, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_125) -> {
        __helios__common__enum_tag_equals(data_125, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_12) -> {
        recurse_69 = (recurse_68, lst_13) -> {
            __core__chooseList(lst_13, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_13)),
                    () -> {
                        recurse_68(recurse_68, __core__tailList__safe(lst_13))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, lst_12)
    };
    __helios__list[__helios__data]__is_valid_data = (data_126) -> {
        __core__chooseData(data_126, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_126))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_45 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_82 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_82, () -> {
                            false
                        }, () -> {
                            head_47 = __core__headList__safe(fields_82);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_47),
                                () -> {
                                    fields_83 = __core__tailList__safe(fields_82);
                                    __core__chooseList(fields_83, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_129) -> {
        lst_14 = __core__unListData(data_129);
        __2 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_14),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_14
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_99) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_99))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_130) -> {
        __helios__common__enum_tag_equals(data_130, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_131) -> {
        __helios__common__enum_tag_equals(data_131, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_132) -> {
        __core__chooseData(data_132, () -> {
            pair_46 = __core__unConstrData__safe(data_132);
            index_6 = __core__fstPair(pair_46);
            fields_84 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_84, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_84), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_84))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_84, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_133) -> {
        __core__chooseData(data_133, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_85 = __core__unListData__safe(data_133);
            __core__chooseList(fields_85, () -> {
                false
            }, () -> {
                head_48 = __core__headList__safe(fields_85);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_48),
                    () -> {
                        fields_86 = __core__tailList__safe(fields_85);
                        __core__chooseList(fields_86, () -> {
                            false
                        }, () -> {
                            head_49 = __core__headList__safe(fields_86);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_49),
                                () -> {
                                    fields_87 = __core__tailList__safe(fields_86);
                                    __core__chooseList(fields_87, () -> {
                                        false
                                    }, () -> {
                                        head_50 = __core__headList__safe(fields_87);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_50),
                                            () -> {
                                                fields_88 = __core__tailList__safe(fields_87);
                                                __core__chooseList(fields_88, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_134) -> {
        ignore_3 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_134),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_134)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_100) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_100))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_135) -> {
        __3 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_135),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_135
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_101) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_101))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_102) -> {
        (mph_9) -> {
            __helios__assetclass__new(mph_9, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_102))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_136) -> {
        __helios__common__enum_tag_equals(data_136, 1)
    };
    __helios__option[__helios__txinput]__some__some = (self_103) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_103))
    };
    __helios__option[__helios__validatorhash]__none____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_138) -> {
        __helios__common__enum_tag_equals(data_138, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_104) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_104, (item_7) -> {
                fn_17(__helios__txinput__from_data(item_7))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_105) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_105))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput = (self_106) -> {
        (inputs, mph_10, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_106);
            __cond_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_106);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_1),
                () -> {
                    (__lhs_0_2) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_10, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_2 = __helios__list[__helios__txinput]__find_safe(inputs)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_2),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_1) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_2))
                    }
                }
            )()(__cond_1)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_139) -> {
        __helios__common__enum_tag_equals(data_139, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_107) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_107, (item_8) -> {
                fn_18(__helios__txoutput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput = (self_108) -> {
        (mph_11, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_3 = self_108;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_3);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_3);
            ac_1 = __helios__assetclass__new(mph_11, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_6 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_6),
                                () -> {
                                    (__lhs_0_12) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_10) -> {
                                        __lhs_0_11 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_108)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_11, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_6)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_4 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_4),
                    () -> {
                        (__lhs_0_9) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_9);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_5 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_5),
                                () -> {
                                    (__lhs_0_8) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        false
                                    }
                                }
                            )()(__cond_5))
                        }
                    }
                )()(__cond_4)))
            }(__cond_3 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_3),
                () -> {
                    (__lhs_0_5) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_4) -> {
                        "created"
                    }
                }
            )()(__cond_3))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_47 = __core__unConstrData__safe(data_141);
            index_7 = __core__fstPair(pair_47);
            fields_89 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_89, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_89), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_89))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_89, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_142) -> {
        __core__chooseData(data_142, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_90 = __core__unListData__safe(data_142);
            __core__chooseList(fields_90, () -> {
                false
            }, () -> {
                head_51 = __core__headList__safe(fields_90);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(head_51),
                    () -> {
                        fields_91 = __core__tailList__safe(fields_90);
                        __core__chooseList(fields_91, () -> {
                            false
                        }, () -> {
                            head_52 = __core__headList__safe(fields_91);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_52),
                                () -> {
                                    fields_92 = __core__tailList__safe(fields_91);
                                    __core__chooseList(fields_92, () -> {
                                        false
                                    }, () -> {
                                        head_53 = __core__headList__safe(fields_92);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_53),
                                            () -> {
                                                fields_93 = __core__tailList__safe(fields_92);
                                                __core__chooseList(fields_93, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_143) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_143),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_143),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_48 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_94 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_94, () -> {
                            false
                        }, () -> {
                            head_54 = __core__headList__safe(fields_94);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_54),
                                () -> {
                                    fields_95 = __core__tailList__safe(fields_94);
                                    __core__chooseList(fields_95, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_15) -> {
        recurse_71 = (recurse_70, lst_16) -> {
            __core__chooseList(lst_16, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(__core__headList__safe(lst_16)),
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(lst_16))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_71(recurse_71, lst_15)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_146) -> {
        __core__chooseData(data_146, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_146))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1 = (data_147) -> {
        __core__chooseData(data_147, () -> {
            pair_49 = __core__unConstrData__safe(data_147);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_148 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_148, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_148);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, () -> {
                                        false
                                    }, () -> {
                                        head_56 = __core__headList__safe(fields_97);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_56),
                                            () -> {
                                                fields_98 = __core__tailList__safe(fields_97);
                                                __core__chooseList(fields_98, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__txinput]__any = (self_109) -> {
        (fn_19) -> {
            __helios__common__any(self_109, (item_9) -> {
                fn_19(__helios__txinput__from_data(item_9))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_149) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_149),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_149),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_149),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_149),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_149),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1 = (data_150) -> {
        __core__chooseData(data_150, () -> {
            pair_50 = __core__unConstrData__safe(data_150);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_151 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_151, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_99 = __core__unListData__safe(data_151);
                        __core__chooseList(fields_99, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1 = (data_152) -> {
        __core__chooseData(data_152, () -> {
            pair_51 = __core__unConstrData__safe(data_152);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_153 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_153, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_100 = __core__unListData__safe(data_153);
                        __core__chooseList(fields_100, () -> {
                            false
                        }, () -> {
                            head_57 = __core__headList__safe(fields_100);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_57),
                                () -> {
                                    fields_101 = __core__tailList__safe(fields_100);
                                    __core__chooseList(fields_101, () -> {
                                        false
                                    }, () -> {
                                        head_58 = __core__headList__safe(fields_101);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_58),
                                            () -> {
                                                fields_102 = __core__tailList__safe(fields_101);
                                                __core__chooseList(fields_102, () -> {
                                                    false
                                                }, () -> {
                                                    head_59 = __core__headList__safe(fields_102);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_59),
                                                        () -> {
                                                            fields_103 = __core__tailList__safe(fields_102);
                                                            __core__chooseList(fields_103, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1 = (data_154) -> {
        __core__chooseData(data_154, () -> {
            pair_52 = __core__unConstrData__safe(data_154);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_155 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_155, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_104 = __core__unListData__safe(data_155);
                        __core__chooseList(fields_104, () -> {
                            false
                        }, () -> {
                            head_60 = __core__headList__safe(fields_104);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(head_60),
                                () -> {
                                    fields_105 = __core__tailList__safe(fields_104);
                                    __core__chooseList(fields_105, () -> {
                                        false
                                    }, () -> {
                                        head_61 = __core__headList__safe(fields_105);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_61),
                                            () -> {
                                                fields_106 = __core__tailList__safe(fields_105);
                                                __core__chooseList(fields_106, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1 = (data_156) -> {
        __core__chooseData(data_156, () -> {
            pair_53 = __core__unConstrData__safe(data_156);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_157 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_157, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_107 = __core__unListData__safe(data_157);
                        __core__chooseList(fields_107, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1 = (data_158) -> {
        __core__chooseData(data_158, () -> {
            pair_54 = __core__unConstrData__safe(data_158);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 4),
                () -> {
                    data_159 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_159, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_108 = __core__unListData__safe(data_159);
                        __core__chooseList(fields_108, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_160) -> {
        __core__chooseData(data_160, () -> {
            pair_55 = __core__unConstrData__safe(data_160);
            index_8 = __core__fstPair(pair_55);
            fields_109 = __core__sndPair(pair_55);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_109, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_109), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_109))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_109, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_161) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_161, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_161, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_161, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_162) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_162),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_162),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_162),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_163) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_163),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_163
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_17) -> {
        recurse_73 = (recurse_72, lst_18) -> {
            __core__chooseList(lst_18, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_18)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_18))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_17)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_164) -> {
        __core__chooseData(data_164, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_164))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_19) -> {
        recurse_75 = (recurse_74, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_62 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_62)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_62)),
                            () -> {
                                recurse_74(recurse_74, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, map_19)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_165) -> {
        __core__chooseData(data_165, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_165))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_21) -> {
        recurse_77 = (recurse_76, map_22) -> {
            __core__chooseList(map_22, () -> {
                true
            }, () -> {
                head_63 = __core__headList__safe(map_22);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_63)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_63)),
                            () -> {
                                recurse_76(recurse_76, __core__tailList__safe(map_22))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, map_21)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_166))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_167))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_168) -> {
        __core__chooseData(data_168, () -> {
            pair_56 = __core__unConstrData__safe(data_168);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_169 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_169, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_169);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_64),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_65),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, () -> {
                                                    false
                                                }, () -> {
                                                    head_66 = __core__headList__safe(fields_112);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_66),
                                                        () -> {
                                                            fields_113 = __core__tailList__safe(fields_112);
                                                            __core__chooseList(fields_113, () -> {
                                                                false
                                                            }, () -> {
                                                                head_67 = __core__headList__safe(fields_113);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_67),
                                                                    () -> {
                                                                        fields_114 = __core__tailList__safe(fields_113);
                                                                        __core__chooseList(fields_114, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_68 = __core__headList__safe(fields_114);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_68),
                                                                                () -> {
                                                                                    fields_115 = __core__tailList__safe(fields_114);
                                                                                    __core__chooseList(fields_115, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_69 = __core__headList__safe(fields_115);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_69),
                                                                                            () -> {
                                                                                                fields_116 = __core__tailList__safe(fields_115);
                                                                                                __core__chooseList(fields_116, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_70 = __core__headList__safe(fields_116);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_70),
                                                                                                        () -> {
                                                                                                            fields_117 = __core__tailList__safe(fields_116);
                                                                                                            __core__chooseList(fields_117, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_71 = __core__headList__safe(fields_117);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_71),
                                                                                                                    () -> {
                                                                                                                        fields_118 = __core__tailList__safe(fields_117);
                                                                                                                        __core__chooseList(fields_118, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_170) -> {
        ignore_5 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_170),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_170
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_110) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_110))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_171) -> {
        lst_21 = __core__unListData(data_171);
        __4 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_21
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_111) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_111))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_172) -> {
        map_23 = __core__unMapData(data_172);
        __5 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_112) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_112))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_113) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_113))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_114) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_114))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_115) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_115))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_173) -> {
        map_24 = __core__unMapData(data_173);
        __6 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_24),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_24
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_116) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_116))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_174) -> {
        lst_22 = __core__unListData(data_174);
        __7 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_117) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_117))
    };
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_175) -> {
        __core__chooseData(data_175, () -> {
            pair_57 = __core__unConstrData__safe(data_175);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_176 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_176, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_119 = __core__unListData__safe(data_176);
                        __core__chooseList(fields_119, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_72 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_72)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_72)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_177) -> {
        __core__chooseData(data_177, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_177))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_178) -> {
        __core__chooseData(data_178, () -> {
            pair_58 = __core__unConstrData__safe(data_178);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_179 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_179, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_120 = __core__unListData__safe(data_179);
                        __core__chooseList(fields_120, () -> {
                            false
                        }, () -> {
                            head_73 = __core__headList__safe(fields_120);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_73),
                                () -> {
                                    fields_121 = __core__tailList__safe(fields_120);
                                    __core__chooseList(fields_121, () -> {
                                        false
                                    }, () -> {
                                        head_74 = __core__headList__safe(fields_121);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_74),
                                            () -> {
                                                fields_122 = __core__tailList__safe(fields_121);
                                                __core__chooseList(fields_122, () -> {
                                                    false
                                                }, () -> {
                                                    head_75 = __core__headList__safe(fields_122);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_75),
                                                        () -> {
                                                            fields_123 = __core__tailList__safe(fields_122);
                                                            __core__chooseList(fields_123, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_180) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_180),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_180),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_180),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_181) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_181),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_181
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_182) -> {
        __helios__common__enum_tag_equals(data_182, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_183) -> {
        __core__chooseData(data_183, () -> {
            pair_59 = __core__unConstrData__safe(data_183);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_184 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_184, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_124 = __core__unListData__safe(data_184);
                        __core__chooseList(fields_124, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_185) -> {
        __helios__common__enum_tag_equals(data_185, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_186) -> {
        __core__chooseData(data_186, () -> {
            pair_60 = __core__unConstrData__safe(data_186);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_187 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_187, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_187);
                        __core__chooseList(fields_125, () -> {
                            false
                        }, () -> {
                            head_76 = __core__headList__safe(fields_125);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_76),
                                () -> {
                                    fields_126 = __core__tailList__safe(fields_125);
                                    __core__chooseList(fields_126, () -> {
                                        false
                                    }, () -> {
                                        head_77 = __core__headList__safe(fields_126);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_77),
                                            () -> {
                                                fields_127 = __core__tailList__safe(fields_126);
                                                __core__chooseList(fields_127, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_118) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_118))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_119) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_119))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_188) -> {
        __helios__common__enum_tag_equals(data_188, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_61 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_128 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_128, () -> {
                            false
                        }, () -> {
                            head_78 = __core__headList__safe(fields_128);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_78),
                                () -> {
                                    fields_129 = __core__tailList__safe(fields_128);
                                    __core__chooseList(fields_129, () -> {
                                        false
                                    }, () -> {
                                        head_79 = __core__headList__safe(fields_129);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_79),
                                            () -> {
                                                fields_130 = __core__tailList__safe(fields_129);
                                                __core__chooseList(fields_130, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_120) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_120))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_121) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_121))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_191) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_191),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_191),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_191),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_191),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_191),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_191),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_192) -> {
            ignore_7 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_192),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_192
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_193) -> {
        __helios__common__enum_tag_equals(data_193, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_62 = __core__unConstrData__safe(data_194);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_195 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_195, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_195);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_80),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_122) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_122))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_196) -> {
        __helios__common__enum_tag_equals(data_196, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_197) -> {
        __core__chooseData(data_197, () -> {
            pair_63 = __core__unConstrData__safe(data_197);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_198 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_198, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_198);
                        __core__chooseList(fields_133, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_199) -> {
        __helios__common__enum_tag_equals(data_199, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_200) -> {
        __core__chooseData(data_200, () -> {
            pair_64 = __core__unConstrData__safe(data_200);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_201 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_201, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_201);
                        __core__chooseList(fields_134, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_202) -> {
        __helios__common__enum_tag_equals(data_202, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_203) -> {
        __core__chooseData(data_203, () -> {
            pair_65 = __core__unConstrData__safe(data_203);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 3),
                () -> {
                    data_204 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_204, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_135 = __core__unListData__safe(data_204);
                        __core__chooseList(fields_135, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_205) -> {
        __helios__common__enum_tag_equals(data_205, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_206) -> {
        __core__chooseData(data_206, () -> {
            pair_66 = __core__unConstrData__safe(data_206);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 4),
                () -> {
                    data_207 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_207, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_136 = __core__unListData__safe(data_207);
                        __core__chooseList(fields_136, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_208) -> {
        __helios__common__enum_tag_equals(data_208, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_209) -> {
        __core__chooseData(data_209, () -> {
            pair_67 = __core__unConstrData__safe(data_209);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 5),
                () -> {
                    data_210 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_210, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_210);
                        __core__chooseList(fields_137, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getTxCharterData = (mph_12, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc = __helios__assetclass__new(mph_12, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        (charterUtxo) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo))), 0);
            ctd
        }(__cond_7 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_7),
            () -> {
                (__lhs_0_16) -> {
                    ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_16);
                    ch_1
                }
            },
            () -> {
                (__lhs_0_13) -> {
                    __cond_8 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_8),
                        () -> {
                            (__lhs_0_15) -> {
                                ch = __helios__option[__helios__txinput]__some__some(__lhs_0_15);
                                ch
                            }
                        },
                        () -> {
                            (__lhs_0_14) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_8)
                }
            }
        )()(__cond_7))
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_211) -> {
        __core__chooseData(data_211, () -> {
            pair_68 = __core__unConstrData__safe(data_211);
            index_9 = __core__fstPair(pair_68);
            fields_138 = __core__sndPair(pair_68);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_138, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_138), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_138))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_138, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__link = (self_123) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_123))
    };
    __helios__option[__helios__txinput]__from_data = (data_212) -> {
        __8 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_212),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_212
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_124) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_124))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_125) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_125))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_13) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_13), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_126) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_126))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_127) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_127))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_9 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_9),
                () -> {
                    (__lhs_0_17) -> {
                        index_10 = __helios__data__constrdata__tag(__lhs_0_17);
                        fields_139 = __helios__data__constrdata__fields(__lhs_0_17);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_10)())), __cond_10 = __helios__list[__helios__data]__head(fields_139);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_10),
                            () -> {
                                (__lhs_0_18) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_18);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__10) -> {
                                    ()
                                }
                            }
                        )()(__cond_10))
                    }
                },
                () -> {
                    (__9) -> {
                        ()
                    }
                }
            )()(__cond_9), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_128) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_128)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__requiresValidOutput = (self_129) -> {
        (__useopt__createdOrReturned_1, createdOrReturned_2) -> {
            createdOrReturned_3 = __core__ifThenElse(
                __useopt__createdOrReturned_1,
                () -> {
                    createdOrReturned_2
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(__module__CapoHelpers__DelegateInput[]__link(self_129))(__module__CapoHelpers__DelegateInput[]__mph(self_129), true, true, true, createdOrReturned_3)
        }
    };
    __module__CapoHelpers__CapoCtx[]__mph = (self_130) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_130))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_131) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_131))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_14, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_14), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_132) -> {
        () -> {
            e = "requires charter as input";
            __cond_11 = __module__CapoHelpers__CapoCtx[]__charter(self_132);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_11),
                () -> {
                    (__lhs_0_27) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_11),
                        () -> {
                            (__lhs_0_26) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_19) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_19);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_12 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_12),
                                    () -> {
                                        (__lhs_0_25) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_12),
                                            () -> {
                                                (__lhs_0_24) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_12),
                                                    () -> {
                                                        (__lhs_0_23) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_12),
                                                            () -> {
                                                                (__lhs_0_22) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_12),
                                                                    () -> {
                                                                        (__lhs_0_21) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_20) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_12)
                            }
                        }
                    )()
                }
            )()(__cond_11)
        }
    };
    __module__CapoHelpers__CapoCtx[]__requiresMintDelegateInput = (__module__CapoHelpers__CapoCtx[]__getCharterData, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_133) -> {
            (__useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                dgtLink = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData(self_133)());
                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_133)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new(), true, required_5, false, ())
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_1 = (self_134) -> {
        () -> {
            __cond_13 = __module__CapoHelpers__CapoCtx[]__charter(self_134);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_13),
                () -> {
                    (__lhs_0_29) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_29);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_13),
                        () -> {
                            (__lhs_0_28) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_28);
                                datum_2
                            }
                        },
                        () -> {
                            (__11) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_13)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_135) -> {
            () -> {
                charterAc_1 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_135), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_135)();
                __cond_14 = __module__CapoHelpers__CapoCtx[]__charter(self_135);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_14),
                    () -> {
                        (__lhs_0_30) -> {
                            charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_1), 0)
                                })
                            })))), 0);
                            charterData
                        }
                    },
                    () -> {
                        (__12) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_14)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_136) -> {
        () -> {
            __cond_15 = __module__CapoHelpers__CapoCtx[]__charter(self_136);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_15),
                () -> {
                    (__lhs_0_32) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_32);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_15),
                        () -> {
                            (__lhs_0_31) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_31);
                                utxo_3
                            }
                        },
                        () -> {
                            (__13) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_15)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_137) -> {
        (dgtLink_1, role_1, __useopt__required_3, required_6, __useopt__idPrefix, idPrefix_1) -> {
            required_7 = __core__ifThenElse(
                __useopt__required_3,
                () -> {
                    required_6
                },
                () -> {
                    true
                }
            )();
            idPrefix_2 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_1
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_2, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_137), true, required_7), __module__CapoHelpers__CapoCtx[]__mph(self_137))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_138) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_138)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_139) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_139);
                __cond_16 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_16),
                    () -> {
                        (__lhs_0_38) -> {
                            self_139
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_16),
                            () -> {
                                (__lhs_0_37) -> {
                                    self_139
                                }
                            },
                            () -> {
                                (__lhs_0_33) -> {
                                    __lhs_0_34 = self_139;
                                    mph_15 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_34);
                                    charterAc_2 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8("charter")());
                                    hasCharter_1 = (txin_1) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_2), 0)
                                    };
                                    __cond_17 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_1);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_17),
                                        () -> {
                                            (__lhs_0_36) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_139)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_35) -> {
                                                charterUtxo_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_35);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_15, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_1)))
                                            }
                                        }
                                    )()(__cond_17)
                                }
                            }
                        )()
                    }
                )()(__cond_16))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_140) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_140);
            __cond_18 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_18),
                () -> {
                    (__lhs_0_44) -> {
                        self_140
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_18),
                        () -> {
                            (__lhs_0_43) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_39) -> {
                                __lhs_0_40 = self_140;
                                mph_16 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_40);
                                charterAc_3 = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
                                hasCharter_2 = (txin_2) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_2))(charterAc_3), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_2) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_16, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_2))
                                }(__cond_19 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_19),
                                    () -> {
                                        (__lhs_0_42) -> {
                                            ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_42);
                                            ch_2
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_41) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_19)))
                            }
                        }
                    )()
                }
            )()(__cond_18))
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_17) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_17, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_1) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_1), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__14) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_213) -> {
        __helios__common__enum_tag_equals(data_213, 1)
    };
    __helios__option[__helios__data]__some__some = (self_141) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_141))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_142) -> {
        (key_13) -> {
            __helios__common__map_get(self_142, __helios__scriptpurpose____to_data(key_13), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_18, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_18);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_21 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_21),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__15) -> {
                            false
                        }
                    }
                )()(__cond_21)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_22 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_22),
                () -> {
                    (__lhs_0_52) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_47) -> {
                        x_7 = __helios__option[__helios__data]__some__some(__lhs_0_47);
                        activity_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_7);
                        __cond_23 = activity_1;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_23),
                            () -> {
                                (__lhs_0_48) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_48);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_24 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_24),
                                        () -> {
                                            (__lhs_0_51) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_24),
                                                () -> {
                                                    (__lhs_0_50) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_49) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_24)))
                                }
                            },
                            () -> {
                                (__16) -> {
                                    checkMintDgtActivity_1(activity_1)
                                }
                            }
                        )()(__cond_23)
                    }
                }
            )()(__cond_22)))
        }(__cond_20 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_9) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_9))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_20),
            () -> {
                (__lhs_0_46) -> {
                    x_6 = __helios__option[__helios__txinput]__some__some(__lhs_0_46);
                    __helios__txinput__output_id(x_6)
                }
            },
            () -> {
                (__lhs_0_45) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_20))))
    };
    __helios__list[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__all = (self_143) -> {
        (fn_20) -> {
            __helios__common__all(self_143, (item_10) -> {
                fn_20(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(item_10))
            })
        }
    };
    __helios__list[__helios__data]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]] = (self_144) -> {
        (fn_21) -> {
            __helios__common__map(self_144, (item_11) -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data(fn_21(__helios__data__from_data(item_11)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__requiresMintDelegateApproval = (mph_19) -> {
        cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(mph_19))();
        __core__chooseUnit(__helios__print("Minter needs mintDgt + mint activity
"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the application-specific mintDelegate to explicitly check and approve the full minted value", false, ()), __core__chooseUnit(__helios__print("    -- ^ e.g. assert(tx.minted.get_policy(mph) == expectedMintedValue);
"), __core__chooseUnit(__helios__print("    ---- (if it's only responsible for one minting policy)
"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("must enforce minting invariants"), mintDgtInput = __module__CapoHelpers__CapoCtx[]__requiresMintDelegateInput(__module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx)(false, ());
        mintDgtActivity = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(mintDgtInput)();
        __cond_25 = mintDgtActivity;
        __core__ifThenElse(
            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is(__cond_25),
            () -> {
                (__lhs_0_73) -> {
                    CLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__activity(__lhs_0_73);
                    __cond_28 = CLA;
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_28),
                        () -> {
                            (__lhs_0_78) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("make this obsolete: generic creatingDelegate (use queuePendingChange and committingPendingChanges in sequence)"), __helios__bool__and(() -> {
                                    __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                }, () -> {
                                    true
                                }))
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_28),
                                () -> {
                                    (__lhs_0_77) -> {
                                        __core__chooseUnit(__helios__print("  -- ok: mintDgt using CapoLifecycle.queuePendingChange)
"), __helios__bool__and(() -> {
                                            __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                        }, () -> {
                                            true
                                        }))
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_28),
                                        () -> {
                                            (__lhs_0_76) -> {
                                                __core__chooseUnit(__helios__print("  -- ok: mintDgt using CapoLifecycle.commitPendingChanges)
"), __helios__bool__and(() -> {
                                                    __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                                }, () -> {
                                                    true
                                                }))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_28),
                                                () -> {
                                                    (__lhs_0_75) -> {
                                                        __helios__error("invalid forcingNewSpendDelegate activity on mintDgt (escape-hatch reserved for Minter/Capo pair)")
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_28),
                                                        () -> {
                                                            (__lhs_0_74) -> {
                                                                __helios__error("invalid forcingNewMintDelegate activity on mintDgt (escape-hatch reserved for Minter/Capo pair)")
                                                            }
                                                        },
                                                        () -> {
                                                            (__17) -> {
                                                                __helios__error("mint dgt can only approve CapoLifecycleActivities.queuePendingChange or non-CLA activities")
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_28)
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_25),
                    () -> {
                        (__lhs_0_72) -> {
                            __helios__error("DelegateInput::SpendingActivity can't mint!")
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_25),
                            () -> {
                                (__lhs_0_68) -> {
                                    DLA_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_68);
                                    __cond_27 = DLA_1;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_27),
                                        () -> {
                                            (__lhs_0_71) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("relay delegate installation sequence"), __core__chooseUnit(__helios__print("  -- TEMPORARY: the mint delegate is being replaced
"), true))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_27),
                                                () -> {
                                                    (__lhs_0_70) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_69) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_27)
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_25),
                                    () -> {
                                        (__lhs_0_67) -> {
                                            __core__chooseUnit(__helios__print("  -- app-specific minting; trust mintDgt
"), __helios__bool__and(() -> {
                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                            }, () -> {
                                                true
                                            }))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities____is(__cond_25),
                                            () -> {
                                                (__lhs_0_66) -> {
                                                    __core__chooseUnit(__helios__print("  -- app-specific burning; trust mintDgt"), __helios__bool__and(() -> {
                                                        __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                                    }, () -> {
                                                        true
                                                    }))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_25),
                                                    () -> {
                                                        (__lhs_0_65) -> {
                                                            __core__chooseUnit(__helios__print("  -- mint for dgData; trust mintDgt"), __helios__bool__and(() -> {
                                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                                            }, () -> {
                                                                true
                                                            }))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_25),
                                                            () -> {
                                                                (__lhs_0_64) -> {
                                                                    __core__chooseUnit(__helios__print("  -- burn for dgData; trust mintDgt"), __helios__bool__and(() -> {
                                                                        __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                                                    }, () -> {
                                                                        true
                                                                    }))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_25),
                                                                    () -> {
                                                                        (__lhs_0_63) -> {
                                                                            __helios__error("invalid mint-delegate activity for minting; UpdatingDelegatedDatum can't mint")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_53) -> {
                                                                            ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_53);
                                                                            __helios__bool__and(() -> {
                                                                                __module__CapoHelpers__DelegateInput[]__requiresValidOutput(mintDgtInput)(false, ())
                                                                            }, () -> {
                                                                                __helios__list[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__all(__helios__list[__helios__data]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]](ma)(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)))((mintDgtActivity_1) -> {
                                                                                    __cond_26 = mintDgtActivity_1;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_26),
                                                                                        () -> {
                                                                                            (__lhs_0_62) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_26),
                                                                                                () -> {
                                                                                                    (__lhs_0_61) -> {
                                                                                                        true
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_26),
                                                                                                        () -> {
                                                                                                            (__lhs_0_60) -> {
                                                                                                                __helios__error("mintDgt: MultipleDelegateActivities: nested MintingActivities invalid")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities____is(__cond_26),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_59) -> {
                                                                                                                        __helios__error("mintDgt: MultipleDelegateActivities: nested BurningActivities invalid")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_26),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_58) -> {
                                                                                                                                __helios__error("mintDgt: MultipleDelegateActivities: nested MultipleDelegateActivities invalid")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_26),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_57) -> {
                                                                                                                                        __helios__error("mintDgt: MultipleDelegateActivities: nested UpdatingDelegatedData invalid")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_26),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_56) -> {
                                                                                                                                                __helios__error("mintDgt: MultipleDelegateActivities: nested SpendingActivities invalid")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities____is(__cond_26),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_55) -> {
                                                                                                                                                        __helios__error("mintDgt: MultipleDelegateActivities: nested CapoLifecycleActivities invalid")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_54) -> {
                                                                                                                                                        __helios__error("mintDgt: MultipleDelegateActivities: nested DelegateLifecycleActivities invalid")
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(__cond_26)
                                                                                })
                                                                            })
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()
            }
        )()(__cond_25))))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed) -> {
        seedTxId = __helios__txoutputid__tx_id(seed);
        seedIdx = __helios__txoutputid__index(seed);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_145) -> {
        (fn_22) -> {
            recurse_83 = (recurse_82, map_27) -> {
                __core__chooseList(map_27, () -> {
                    ()
                }, () -> {
                    head_81 = __core__headList__safe(map_27);
                    __core__chooseUnit(fn_22(__helios__bytearray__from_data(__core__fstPair(head_81)), __helios__int__from_data(__core__sndPair(head_81))), recurse_82(recurse_82, __core__tailList__safe(map_27)))
                })()
            };
            recurse_83(recurse_83, self_145)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_146) -> {
        (fn_23) -> {
            __helios__common__filter_map(self_146, (pair_69) -> {
                fn_23(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_69)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_69)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_147) -> {
        (fn_24) -> {
            recurse_85 = (recurse_84, map_28) -> {
                __core__chooseList(map_28, () -> {
                    ()
                }, () -> {
                    head_82 = __core__headList__safe(map_28);
                    __core__chooseUnit(fn_24(__helios__mintingpolicyhash__from_data(__core__fstPair(head_82)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_82))), recurse_84(recurse_84, __core__tailList__safe(map_28)))
                })()
            };
            recurse_85(recurse_85, self_147)
        }
    };
    __helios__option[__helios__int]__none____is = (data_214) -> {
        __helios__common__enum_tag_equals(data_214, 1)
    };
    __helios__option[__helios__int]__some__some = (self_148) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_148))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_149) -> {
        (key_14) -> {
            __helios__common__map_get(self_149, __helios__bytearray____to_data(key_14), (x_8) -> {
                __core__constrData(0, __helios__common__list_1(x_8))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_150) -> {
        (key_15) -> {
            key_16 = __helios__mintingpolicyhash____to_data(key_15);
            recurse_87 = (recurse_86, self_151) -> {
                __core__chooseList(self_151, () -> {
                    self_151
                }, () -> {
                    head_83 = __core__headList__safe(self_151);
                    tail_4 = __core__tailList__safe(self_151);
                    __core__ifThenElse(
                        __core__equalsData(key_16, __core__fstPair(head_83)),
                        () -> {
                            recurse_86(recurse_86, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_83, recurse_86(recurse_86, tail_4))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_150)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_152, other_1) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_152), __helios__map[__helios__bytearray@__helios__int]____to_data(other_1))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_153) -> {
        (comp_4) -> {
            __helios__common__sort(self_153, (a_13, b_13) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_13)), __helios__int__from_data(__core__sndPair(a_13)), __helios__bytearray__from_data(__core__fstPair(b_13)), __helios__int__from_data(__core__sndPair(b_13)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_154) -> {
        recurse_89 = (recurse_88, lst_23) -> {
            __core__chooseList(lst_23, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_23))), recurse_88(recurse_88, __core__tailList__safe(lst_23)))
            })()
        };
        recurse_89(recurse_89, self_154)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_155) -> {
        (fn_25) -> {
            __helios__common__map(self_155, (item_12) -> {
                __helios__value____to_data(fn_25(__helios__string__from_data(item_12)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_20, seed_1, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_1)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_79 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_20, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_79);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_20, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_20, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_20)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_20)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_20))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_11) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_11)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_20);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_10) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_10)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_14, __18) -> {
                    __helios__mintingpolicyhash____neq(b_14, mph_20)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_1), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_20),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_20))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_2, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_29 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_2);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_29),
                                                () -> {
                                                    (__lhs_0_81) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_80) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_80);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_29)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_2)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__CapoMintHelpers__MinterActivity[]__is_valid_data = (__module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data, __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data, __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data, __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data, __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data) -> {
        (data_215) -> {
            __core__ifThenElse(
                __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data(data_215),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data(data_215),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data(data_215),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data(data_215),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data(data_215),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data(data_215),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoMintHelpers__MinterActivity[]__from_data = (__module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data_1) -> {
        (data_216) -> {
            ignore_8 = __core__ifThenElse(
                __module__CapoMintHelpers__MinterActivity[]__is_valid_data(__module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data_1)(data_216),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MinterActivity data", ())
                }
            )();
            data_216
        }
    };
    __module__CapoMintHelpers__MinterActivity[]__mintingCharter____is = (data_217) -> {
        __helios__common__enum_tag_equals(data_217, 0)
    };
    __module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data_2 = (data_218) -> {
        __core__chooseData(data_218, () -> {
            pair_70 = __core__unConstrData__safe(data_218);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_70), 0),
                () -> {
                    data_219 = __core__listData(__core__sndPair(pair_70));
                    __core__chooseData(data_219, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_140 = __core__unListData__safe(data_219);
                        __core__chooseList(fields_140, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_140);
                            __core__ifThenElse(
                                __helios__address__is_valid_data(head_84),
                                () -> {
                                    fields_141 = __core__tailList__safe(fields_140);
                                    __core__chooseList(fields_141, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__mintingCharter__owner = (self_156) -> {
        __helios__address__from_data(__helios__common__enum_field_0(self_156))
    };
    __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing____is = (data_220) -> {
        __helios__common__enum_tag_equals(data_220, 1)
    };
    __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data_2 = (data_221) -> {
        __core__chooseData(data_221, () -> {
            pair_71 = __core__unConstrData__safe(data_221);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_71), 1),
                () -> {
                    data_222 = __core__listData(__core__sndPair(pair_71));
                    __core__chooseData(data_222, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_222);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant____is = (data_223) -> {
        __helios__common__enum_tag_equals(data_223, 2)
    };
    __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data_2 = (data_224) -> {
        __core__chooseData(data_224, () -> {
            pair_72 = __core__unConstrData__safe(data_224);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_72), 2),
                () -> {
                    data_225 = __core__listData(__core__sndPair(pair_72));
                    __core__chooseData(data_225, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_225);
                        __core__chooseList(fields_143, () -> {
                            false
                        }, () -> {
                            head_85 = __core__headList__safe(fields_143);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_85),
                                () -> {
                                    fields_144 = __core__tailList__safe(fields_143);
                                    __core__chooseList(fields_144, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant____is = (data_226) -> {
        __helios__common__enum_tag_equals(data_226, 3)
    };
    __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data_2 = (data_227) -> {
        __core__chooseData(data_227, () -> {
            pair_73 = __core__unConstrData__safe(data_227);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 3),
                () -> {
                    data_228 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_228, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_228);
                        __core__chooseList(fields_145, () -> {
                            false
                        }, () -> {
                            head_86 = __core__headList__safe(fields_145);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_86),
                                () -> {
                                    fields_146 = __core__tailList__safe(fields_145);
                                    __core__chooseList(fields_146, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate____is = (data_229) -> {
        __helios__common__enum_tag_equals(data_229, 4)
    };
    __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_230) -> {
        __core__chooseData(data_230, () -> {
            pair_74 = __core__unConstrData__safe(data_230);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 4),
                () -> {
                    data_231 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_231, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_231);
                        __core__chooseList(fields_147, () -> {
                            false
                        }, () -> {
                            head_87 = __core__headList__safe(fields_147);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_87),
                                () -> {
                                    fields_148 = __core__tailList__safe(fields_147);
                                    __core__chooseList(fields_148, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__seed = (self_157) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_157))
    };
    __helios__option[__helios__bytearray]__is_valid_data = (data_232) -> {
        __core__chooseData(data_232, () -> {
            pair_75 = __core__unConstrData__safe(data_232);
            index_11 = __core__fstPair(pair_75);
            fields_149 = __core__sndPair(pair_75);
            __core__ifThenElse(
                __core__equalsInteger(index_11, 0),
                () -> {
                    __core__chooseList(fields_149, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_149), () -> {
                            __helios__bytearray__is_valid_data(__core__headList__safe(fields_149))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_11, 1),
                        () -> {
                            __core__chooseList(fields_149, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data_2 = (data_233) -> {
        __core__chooseData(data_233, () -> {
            pair_76 = __core__unConstrData__safe(data_233);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 5),
                () -> {
                    data_234 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_234, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_150 = __core__unListData__safe(data_234);
                        __core__chooseList(fields_150, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_150);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_88),
                                () -> {
                                    fields_151 = __core__tailList__safe(fields_150);
                                    __core__chooseList(fields_151, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_151);
                                        __core__ifThenElse(
                                            __helios__option[__helios__bytearray]__is_valid_data(head_89),
                                            () -> {
                                                fields_152 = __core__tailList__safe(fields_151);
                                                __core__chooseList(fields_152, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__seed = (self_158) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_158))
    };
    __helios__option[__helios__bytearray]__from_data = (data_235) -> {
        __19 = __core__ifThenElse(
            __helios__option[__helios__bytearray]__is_valid_data(data_235),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_235
    };
    __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__replacingUut = (self_159) -> {
        __helios__option[__helios__bytearray]__from_data(__helios__common__enum_field_1(self_159))
    };
    __module__CapoMinter__seedTxn = __helios__txid__from_data(__core__constrData(0, __core__mkCons(__core__bData(#2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d), __core__mkNilData(()))));
    __module__CapoMinter__seedIndex = __helios__int__from_data(__core__iData(1));
    __module__CapoMinter__rev = 1;
    __module__CapoMinter__hasContractSeedUtxo = (tx_1) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the provided seed utxo is being spent, providing uniqueness assurances for the minting-script's seed parameters", false, ()), __module__CapoMintHelpers__hasSeedUtxo(tx_1, __helios__txoutputid__new(__module__CapoMinter__seedTxn, __module__CapoMinter__seedIndex)))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__length = __helios__common__length;
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_160) -> {
        __helios__common__length(self_160)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__length = (self_161) -> {
        __helios__common__length(self_161)
    };
    __helios__option[__helios__bytearray]__some____is = (data_236) -> {
        __helios__common__enum_tag_equals(data_236, 0)
    };
    __helios__option[__helios__bytearray]__some__some = (self_162) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_162))
    };
    __module__CapoMinter__main = (r) -> {
        mph_21 = __helios__scriptcontext__get_current_minting_policy_hash();
        value_minted = __helios__tx__minted(__helios__scriptcontext__tx);
        __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
            true
        }, () -> {
            __helios__bytearray____eq(__helios__int__serialize(__module__CapoMinter__rev)(), __helios__int__serialize(__module__CapoMinter__rev)())
        }), "no"), __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
            true
        }, () -> {
            __helios__bytearray____eq(__helios__txid__serialize(__module__CapoMinter__seedTxn)(), __helios__txid__serialize(__module__CapoMinter__seedTxn)())
        }), "no"), __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm1")(), " \u{1F6A5}\u2753 Capo minter"), __core__chooseUnit(__helios__print(__helios__string____add("  -- minter policy id: ", __helios__mintingpolicyhash__show(__helios__scriptcontext__get_current_minting_policy_hash())())), (ok) -> {
            __core__chooseUnit(__helios__print("

\u{1F6A5}\u{1F7E2} Capo minter: ok!
"), ok)
        }(__cond_30 = r;
        __core__ifThenElse(
            __module__CapoMintHelpers__MinterActivity[]__mintingCharter____is(__cond_30),
            () -> {
                (charter_3) -> {
                    charterVal = __module__StellarHeliosHelpers__mkTv(mph_21, true, "charter", false, (), false, ());
                    authTnBase = "capoGov";
                    mintDgtTnBase = "mintDgt";
                    spendDgtTnBase = "spendDgt";
                    purposes_1 = __core__mkCons(__helios__string____to_data(authTnBase), __core__mkCons(__helios__string____to_data(mintDgtTnBase), __core__mkCons(__helios__string____to_data(spendDgtTnBase), __core__mkNilData(()))));
                    __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm2")(), "  -- creating Capo charter"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("must mint the charter token", false, ()), __core__chooseUnit(__helios__assert(__helios__value____geq(value_minted, charterVal), "charter token not minted"), hasSeed = __module__CapoMinter__hasContractSeedUtxo(__helios__scriptcontext__tx);
                    minterSeed = __helios__txoutputid__new(__module__CapoMinter__seedTxn, __module__CapoMinter__seedIndex);
                    mkUutName = __module__CapoMintHelpers__mkUutTnFactory(minterSeed);
                    __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm3")(), "validateUutMinting"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("must mint uuts for mintDgt, spendDgt, and govAuth using the same seed", false, ()), mintsUuts = __module__CapoMintHelpers__validateUutMinting(mph_21, minterSeed, purposes_1, true, mkUutName, true, charterVal, false, (), false, (), false, (), false, ());
                    __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm4")(), "output to expected address"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("must deposit the charter token to the new Capo address", false, ()), charterOutput = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((output_1) -> {
                        __helios__bool__and(() -> {
                            __helios__address____eq(__helios__txoutput__address(output_1), __module__CapoMintHelpers__MinterActivity[]__mintingCharter__owner(charter_3))
                        }, () -> {
                            __helios__value__contains(__helios__txoutput__value(output_1))(charterVal)
                        })
                    });
                    rawCharterData = __helios__txoutputdatum__inline(__helios__txoutput__datum(charterOutput));
                    charterData_1 = __module__CapoHelpers__CapoDatum[]__CharterData__from_data(rawCharterData);
                    __lhs_0_99 = __helios__common__assert_constr_index(charterData_1, 0);
                    spendDgt = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__lhs_0_99);
                    spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_99);
                    namedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_99);
                    mintDgt_1 = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_99);
                    mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_99);
                    authDgt = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_99);
                    manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_99);
                    pendingDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__lhs_0_99);
                    __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm5")(), "validate charter data"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new charter must not have any mint invariants, spend invariants, manifest entry or pending-delegate-actions", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__length(mintInvariants), 0), "no mint invariants allowed at charter creation"), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__length(spendInvariants), 0), "no spend invariants allowed at charter creation"), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(manifest), 0), "no UUTs allowed at charter creation"), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(pendingDelegates), 0), "no pending delegates allowed at charter creation"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new charter must have mintDgt, spendDgt, and authDgt tokens, each deposited to their separate script addresses", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm6")(), "  -- checking for required delegates
"), hasGoodDelegates = __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    true
                                }, () -> {
                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(authDgt)(mph_21, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new())
                                })
                            }, () -> {
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(mintDgt_1)(mph_21, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new())
                            })
                        }, () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(spendDgt)(mph_21, true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new())
                        })
                    }, () -> {
                        true
                    });
                    __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm7")(), ""), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__length(namedDelegates), 0), "no named delegates allowed at charter creation"), __core__chooseUnit(__module__StellarHeliosHelpers__TRACE(__helios__string__encode_utf8("cm8")(), "finishing"), __core__chooseUnit(__helios__print(__helios__string____add("
  -- hasSeed: ", __helios__bool__show(hasSeed)())), __core__chooseUnit(__helios__print(__helios__string____add("
  -- mintsUuts: ", __helios__bool__show(mintsUuts)())), __core__chooseUnit(__helios__print(__helios__string____add("
  -- hasGoodDelegates: ", __helios__bool__show(hasGoodDelegates)())), __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                true
                            }, () -> {
                                hasGoodDelegates
                            })
                        }, () -> {
                            mintsUuts
                        })
                    }, () -> {
                        hasSeed
                    }))))))))))))))))))))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing____is(__cond_30),
                    () -> {
                        (__lhs_0_98) -> {
                            __core__chooseUnit(__helios__print("mintWithDelegateAuthorizing
"), __module__CapoMintHelpers__requiresMintDelegateApproval(mph_21))
                        }
                    },
                    () -> {
                        (__20) -> {
                            cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(mph_21))();
                            __cond_31 = r;
                            __core__ifThenElse(
                                __module__CapoMintHelpers__MinterActivity[]__mintingCharter____is(__cond_31),
                                () -> {
                                    (__lhs_0_97) -> {
                                        __helios__error("unreachable")
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing____is(__cond_31),
                                        () -> {
                                            (__lhs_0_96) -> {
                                                __helios__error("unreachable")
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant____is(__cond_31),
                                                () -> {
                                                    (__lhs_0_95) -> {
                                                        __core__chooseUnit(__helios__print("checking for addingMintInvariant
"), __core__chooseUnit(__helios__assert(false, "should be handled by the mintDelegate!"), false))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant____is(__cond_31),
                                                        () -> {
                                                            (__lhs_0_94) -> {
                                                                __core__chooseUnit(__helios__print("checking for addingSpendInvariant
"), __core__chooseUnit(__helios__assert(false, "should be handled by the mintDelegate!"), false))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate____is(__cond_31),
                                                                () -> {
                                                                    (__lhs_0_91) -> {
                                                                        seed_3 = __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__seed(__lhs_0_91);
                                                                        __core__chooseUnit(__helios__print("checking for forcingNewMintDelegate
"), badCharterActivity_1 = "when forcingNewMintDelegate, capo charter must be spent with its capoLifecycleActivity.forcingNewMintDelegate activity";
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the Capo charter is also forcingNewMintDelegate", false, ()), __cond_37 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1)();
                                                                        __core__ifThenElse(
                                                                            __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_37),
                                                                            () -> {
                                                                                (__lhs_0_92) -> {
                                                                                    activity_3 = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_92);
                                                                                    __cond_38 = activity_3;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_38),
                                                                                        () -> {
                                                                                            (__lhs_0_93) -> {
                                                                                                seedToCapo_1 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__seed(__lhs_0_93);
                                                                                                purpose_4 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__purpose(__lhs_0_93);
                                                                                                __core__chooseUnit(__helios__print("WARNING: capo lifecycle activity is forcing a new mint-delegate with its Escape-hatch activity"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("NOTE: the normal lifecycle is to use minter:mintWithDelegateAuthorizing, 
", "  ... which defers to the Capo's current minting delegate and allows 
"), "  ... queuePendingChange(role: MintDgt) to queue the new mint delegate for installation")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the new mintDgt-* uut is minted with a seed", false, ()), __core__chooseUnit(__helios__assert(__helios__txoutputid____eq(seed_3, seedToCapo_1), __helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("seed mismatch:", "
  - Capo activity seed: "), __helios__txoutputid__show(seedToCapo_1)()), "
  - Minter seed: "), __helios__txoutputid__show(seed_3)())), __core__chooseUnit(__helios__assert(__helios__string____eq("mintDgt", purpose_4), __helios__string____add(__helios__string____add("wrong Capo purpose '", purpose_4), "'; should be 'mintDgt'")), __module__CapoMintHelpers__validateUutMinting(mph_21, seed_3, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), false, (), false, (), false, (), true, false, false, (), false, ()))))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__25) -> {
                                                                                                __helios__error(badCharterActivity_1)
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_38)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__24) -> {
                                                                                    __helios__error(badCharterActivity_1)
                                                                                }
                                                                            }
                                                                        )()(__cond_37)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_82) -> {
                                                                        seed_2 = __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__seed(__lhs_0_82);
                                                                        replaceExisting = __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__replacingUut(__lhs_0_82);
                                                                        __core__chooseUnit(__helios__print("checking for CreatingNewSpendDelegate
"), (needsCapoForcedInstall) -> {
                                                                            (otherMintedValue_2) -> {
                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_2);
                                                                                spendDgtTn = mkTokenName_2("spendDgt");
                                                                                hasCapoApproval = __core__ifThenElse(
                                                                                    __helios__bool____not(needsCapoForcedInstall),
                                                                                    () -> {
                                                                                        __cond_36 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1)();
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_36),
                                                                                            () -> {
                                                                                                (__lhs_0_89) -> {
                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("the minter should see that the new spend delegate is QUEUED for installation by the Capo"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("this essential logic vvvv will move to the installation moment"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the updated charter must reference the new spend delegate", false, ()), __lhs_0_90 = __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_1)());
                                                                                                    uutName_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_90);
                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("expected uutName: ", uutName_1)), __core__chooseUnit(__helios__print(__helios__string____add("spendDgtTn in charter: ", spendDgtTn)), __core__chooseUnit(__helios__assert(__helios__string____eq(uutName_1, spendDgtTn), "new spend delegate not referenced in updated charter"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the Capo to validate that only the one thing is updated, and that the new UUT is deposited where it's expected", false, ()), true)))))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__23) -> {
                                                                                                    __helios__error("capo charter must be spent with its updatingCharter activity")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_36)
                                                                                    },
                                                                                    () -> {
                                                                                        () -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("When the old dgTkn isn't replaced, it ensures the Capo charter is also forcingNewSpendDelegate", false, ()), badCharterActivity = "when forcingNewSpendDelegate, capo charter must be spent with its capoLifecycleActivity.forcingNewSpendDelegate activity";
                                                                                            __cond_34 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_1)();
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_34),
                                                                                                () -> {
                                                                                                    (__lhs_0_87) -> {
                                                                                                        activity_2 = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_87);
                                                                                                        __cond_35 = activity_2;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_35),
                                                                                                            () -> {
                                                                                                                (__lhs_0_88) -> {
                                                                                                                    seedToCapo = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__seed(__lhs_0_88);
                                                                                                                    purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__purpose(__lhs_0_88);
                                                                                                                    __core__chooseUnit(__helios__print("WARNING: capo lifecycle activity is forcing a spend-delegate with its Escape-hatch activity"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("NOTE: the normal lifecycle is to use minter:mintWithDelegateAuthorizing, 
", "  ... which defers to the Capo's current minting delegate and allows 
"), "  ... queuePendingChange(role: SpendDgt) to queue the new spend delegate for installation")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the Capo activity's seed matches the minter's seed", false, ()), __core__chooseUnit(__helios__assert(__helios__txoutputid____eq(seed_2, seedToCapo), __helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("seed mismatch: ", "
  - Capo activity seed: "), __helios__txoutputid__show(seedToCapo)()), "
  - Minter seed: "), __helios__txoutputid__show(seed_2)())), __core__chooseUnit(__helios__assert(__helios__string____eq("spendDgt", purpose_3), __helios__string____add(__helios__string____add("wrong Capo purpose '", purpose_3), "'; should be 'spendDgt'")), true)))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__22) -> {
                                                                                                                    __helios__error(badCharterActivity)
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_35)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__21) -> {
                                                                                                        __helios__error(badCharterActivity)
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_34))
                                                                                        }()
                                                                                    }
                                                                                )();
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the new spendDgt-* uut is uniquely minted using the seed", false, ()), didMintUuts = __module__CapoMintHelpers__validateUutMinting(mph_21, seed_2, __core__mkCons(__helios__string____to_data("spendDgt"), __core__mkNilData(())), true, mkTokenName_2, false, (), true, otherMintedValue_2, true, false, false, (), false, ());
                                                                                __helios__bool__and(() -> {
                                                                                    didMintUuts
                                                                                }, () -> {
                                                                                    hasCapoApproval
                                                                                }))
                                                                            }(__cond_33 = replaceExisting;
                                                                            __core__ifThenElse(
                                                                                __helios__option[__helios__bytearray]__some____is(__cond_33),
                                                                                () -> {
                                                                                    (__lhs_0_86) -> {
                                                                                        oldTokenName = __helios__option[__helios__bytearray]__some__some(__lhs_0_86);
                                                                                        BURNED = __helios__int____neg(1);
                                                                                        __helios__value__new(__helios__assetclass__new(mph_21, oldTokenName), BURNED)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__lhs_0_85) -> {
                                                                                        __helios__value__ZERO
                                                                                    }
                                                                                }
                                                                            )()(__cond_33))
                                                                        }(__cond_32 = replaceExisting;
                                                                        __core__ifThenElse(
                                                                            __helios__option[__helios__bytearray]__some____is(__cond_32),
                                                                            () -> {
                                                                                (__lhs_0_84) -> {
                                                                                    false
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__lhs_0_83) -> {
                                                                                    true
                                                                                }
                                                                            }
                                                                        )()(__cond_32)))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__cond_31)
                        }
                    }
                )()
            }
        )()(__cond_30))))))
    };
    __core__ifThenElse(
        __module__CapoMinter__main(__module__CapoMintHelpers__MinterActivity[]__from_data(__module__CapoMintHelpers__MinterActivity[]__mintingCharter__is_valid_data_2, __module__CapoMintHelpers__MinterActivity[]__mintWithDelegateAuthorizing__is_valid_data_2, __module__CapoMintHelpers__MinterActivity[]__addingMintInvariant__is_valid_data_2, __module__CapoMintHelpers__MinterActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoMintHelpers__MinterActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoMintHelpers__MinterActivity[]__CreatingNewSpendDelegate__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/minting/CapoMinter.hl", "src/CapoMintHelpers.hl", "src/CapoHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f186c0019016104186d001901610419025b0118a5182019030f0118bd182419057602190508081905fb031901141829190643021905080819064e02190508081906b201188c181f1906f4021906a5181c1907550219069f181e1907640219069f18381909a00219052918181909b00219052a181b1909c20219052a1818190b3b011901a104190b46011901b11834190b47011901b11834190f8f01190144184d190f9001190144184d190f9101190144184d190f9201190144184d190f970119014508190f9d011901af13190fa501190144184d190fa601190144184d190fa701190144184d190fa801190144184d190fad01190145081910cd0118501219114d011901810c1911f10219018a0f1912210219018a18301913380119012d0419136c011901251619136d0119012518221913ce021906b5181a191476021906c0181e191485021906c018381914c602190416181c1914f60219041b1519156c021902b9181d19156d021902bb081916eb041872021917b704183609ff", "variableNames": "", "termDescriptions": "b1190755647478696e190b466169190b476169190f8f635f7632190f90635f7632190f91635f7632190f92635f7632190fa5635f7632190fa6635f7632190fa7635f7632190fa8635f7632191338636d68731913ce6473656c66191476647478696e1914c66473656c6619156c6473656c661916eb756d75737446696e64496e70757452656465656d6572" }, "unoptimizedSmap": { "sourceNames": ["src/minting/CapoMinter.hl", "src/CapoMintHelpers.hl", "src/CapoHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1903c000190161041903c100190161041903dd001833181e1903df001834183e1903e100183518231903e400183618541903e500183618541903e60018360a1903e8001836041903eb001836101903ed0018360b1903ef001836183a1903f1001836183a1903f200183618371903f3001836182d1903f4001836182e1903f5001836182a1903f6001836184a1903f700183618401903f800183618411903f9001836183d1903fa001836184f1903fd001837185c1903fe001837185c1903ff0018370a19040100183704190404001837101904060018370b190408001837183e19040a001837183e19040b001837183b19040c001837183119040d001837183219040e001837182a19040f00183718521904100018371848190411001837184919041200183718411904130018371857190416001838183119041700183818311904180018380919041a0018380419041b001838181b19041c0018380f19041d0018381019041e0018380a19041f001838181f19042800183909190429001839182419042e00183918471904370019015f09190dd2011901671838190e1a011901a104190e27011901b11834190e28011901b11834190e3d011901b212190e6d011901bd1831190ef9011901db1820190f9a011901f41859190fd3011901af13190ff40119019c151910200119017c15191025011901810c19103301190176181d1911e501190144184d1911e601190144184d1911e701190144184d1911e801190144184d1911ed01190145081911fc0119012d04191237011901251619123b01190125182219125001188a0419128d0118a518201913340118bd182419141a0118e2111914ad01189f18231914b801188c181f1914f801184018391915f30118501219163d01183c182b1916d00118270e1916e6021906b5181a19175d021906c0181e191761021906c0183819176f021906bf183819177b02190695161917c5021906a5181c1917f50219069f181e1917f90219069f18381918070219069e18381918120219055011191815021905510819181902190551181d19181d0219053d181f191830021905450c19184f02190540181919185c02190533181c19186d02190535181819187f021905361519188f02190522181c1918c60219052918181918cb0219052a181b1918d10219052a18181918dd0219052418211918eb0219051a181819191e021905061823191925021905080c19192e021905080819193702190507182d19193b02190506183a19193f02190507183c19194002190507183c19194602190416181c19196d0219041b15191a0b021902b9181d191a10021902bb08191a1f021902bd16191a2e021901d41821191a44021901d610191a48021901bf1827191a6e021901c5184a191a88021901c81849191bc70219018a0f191bd10219018a1830192cce0319013e10192cde0319013e1835192cf20319014210192d39031901351831192d8f0319010314192dab0319011110192dc2031901171818192dcf0319011b181c192dd80319011e1864192dfa03190114182919444a0418720219456a0418350a19456e041835181a194572041836091945b704182718281945cf041820181d1945dc04181b181cff", "variableNames": "b90875006a5f5f52454445454d455201695f5f434f4e54455854036f5f5f68656c696f735f5f6572726f7205705f5f68656c696f735f5f61737365727407725f5f68656c696f735f5f626f6f6c5f5f6f720978195f5f68656c696f735f5f6279746561727261795f5f5f5f65710b78185f5f68656c696f735f5f696e745f5f5f5f746f5f646174610d78185f5f68656c696f735f5f696e745f5f73657269616c697a650f781b5f5f68656c696f735f5f636f6d6d6f6e5f5f73657269616c697a651178195f5f68656c696f735f5f747869645f5f73657269616c697a6513781d5f5f68656c696f735f5f737472696e675f5f656e636f64655f75746638156f5f5f68656c696f735f5f7072696e7417775f5f68656c696f735f5f737472696e675f5f5f5f6164641819755f5f68656c696f735f5f696e745f5f746f5f686578181b78195f5f68656c696f735f5f6279746561727261795f5f73686f77181d78215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f73686f77181f781e5f5f68656c696f735f5f6279746561727261795f5f66726f6d5f64617461182178265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f66726f6d5f646174611823781d5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64731825781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f30182778255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f301829781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f31182b781d5f5f68656c696f735f5f736372697074636f6e746578745f5f64617461182d78205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f7365182f78375f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f7370656e64696e675f707572706f73655f6f75747075745f6964183178385f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f6d696e74696e675f706f6c6963795f686173681833755f5f68656c696f735f5f626f6f6c5f5f5f5f6e6f74183578225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e74183778185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f301839781d5f5f68656c696f735f5f76616c75655f5f6765745f6d61705f6b657973183b755f5f68656c696f735f5f636f6d6d6f6e5f5f616e79183d78265f5f68656c696f735f5f636f6d6d6f6e5f5f69735f696e5f6279746561727261795f6c697374183f78185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e6361741841781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b6579731843781e5f5f68656c696f735f5f76616c75655f5f636f6d706172655f696e6e65721845781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d6170184778185f5f68656c696f735f5f76616c75655f5f636f6d706172651849765f5f68656c696f735f5f76616c75655f5f5f5f676571184b735f5f68656c696f735f5f696e745f5f5f5f6571184d745f5f68656c696f735f5f626f6f6c5f5f73686f77184f735f5f68656c696f735f5f626f6f6c5f5f616e64185178255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e6465781853781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e65185578255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f311857781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f32185978195f5f68656c696f735f5f74786f75747075745f5f646174756d185b755f5f68656c696f735f5f74785f5f6f757470757473185d781b5f5f68656c696f735f5f736372697074636f6e746578745f5f7478185f765f5f68656c696f735f5f636f6d6d6f6e5f5f5f5f65711861775f5f68656c696f735f5f616464726573735f5f5f5f65711863781b5f5f68656c696f735f5f74786f75747075745f5f61646472657373186578195f5f68656c696f735f5f76616c75655f5f636f6e7461696e73186778195f5f68656c696f735f5f74786f75747075745f5f76616c7565186978185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f31186b78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f32186d78195f5f68656c696f735f5f74786f757470757469645f5f6e6577186f781b5f5f68656c696f735f5f737472696e675f5f5f5f746f5f646174611871781a5f5f68656c696f735f5f74786f757470757469645f5f5f5f65711873765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c641875765f5f68656c696f735f5f737472696e675f5f5f5f6571187778195f5f68656c696f735f5f696e745f5f73686f775f64696769741879735f5f68656c696f735f5f696e745f5f73686f77187b745f5f68656c696f735f5f646174615f5f73686f77187d78205f5f68656c696f735f5f646174615f5f73686f775f636f6e7374725f64617461187f781a5f5f68656c696f735f5f646174615f5f73686f775f6669656c641881781a5f5f68656c696f735f5f646174615f5f73686f775f62646174611883745f5f68656c696f735f5f747869645f5f73686f771885781a5f5f68656c696f735f5f646174615f5f73686f775f69646174611887781a5f5f68656c696f735f5f74786f757470757469645f5f73686f771889755f5f68656c696f735f5f76616c75655f5f5a45524f188b745f5f68656c696f735f5f76616c75655f5f6e6577188d781e5f5f68656c696f735f5f6279746561727261795f5f5f5f746f5f64617461188f78265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f746f5f64617461189178195f5f68656c696f735f5f6173736574636c6173735f5f6e65771893745f5f68656c696f735f5f696e745f5f5f5f6e6567189578255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f32189778255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f331899781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f34189b745f5f68656c696f735f5f74785f5f6d696e746564189d78215f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f7461675f657175616c73189f78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e67746818a178185f5f68656c696f735f5f696e745f5f66726f6d5f6461746118a3781a5f5f68656c696f735f5f636f6d6d6f6e5f5f6964656e7469747918a578195f5f68656c696f735f5f747869645f5f66726f6d5f6461746118a7781f5f5f68656c696f735f5f74786f757470757469645f5f66726f6d5f6461746118a978245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f636f6e7374725f646174615f3218ab782f5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f66697865645f6c656e67746818ad781d5f5f68656c696f735f5f747869645f5f69735f76616c69645f6461746118af781c5f5f68656c696f735f5f696e745f5f69735f76616c69645f6461746118b178235f5f68656c696f735f5f74786f757470757469645f5f69735f76616c69645f6461746118b378225f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f6461746118b5781c5f5f68656c696f735f5f616464726573735f5f66726f6d5f6461746118b778265f5f68656c696f735f5f76616c696461746f72686173685f5f69735f76616c69645f6461746118b978235f5f68656c696f735f5f7075626b6579686173685f5f69735f76616c69645f6461746118bb782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c69645f6461746118bd78255f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f686561645f6461746118bf78245f5f68656c696f735f5f7374616b696e67686173685f5f69735f76616c69645f6461746118c178215f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f656d70747918c3782a5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f69735f76616c69645f6461746118c5783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f69735f76616c69645f6461746118c778205f5f68656c696f735f5f616464726573735f5f69735f76616c69645f6461746118c978205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c69637918cb781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f7361666518cd78215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f657118cf78215f5f68656c696f735f5f636f6d6d6f6e5f5f756e4d6170446174615f5f7361666518d1781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e49446174615f5f7361666518d3735f5f68656c696f735f5f7265616c5f5f4f4e4518d5755f5f68656c696f735f5f7265616c5f5f666c6f6f7218d7725f5f68656c696f735f5f696e745f5f61627318d9735f5f68656c696f735f5f7265616c5f5f61627318db781a5f5f68656c696f735f5f696e745f5f73686f775f70616464656418dd745f5f68656c696f735f5f696e745f5f5f5f6d6f6418df78195f5f68656c696f735f5f7265616c5f5f505245434953494f4e18e1745f5f68656c696f735f5f7265616c5f5f73686f7718e378265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f6279746518e5781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f7574663818e778255f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466385f7361666518e9755f5f68656c696f735f5f76616c75655f5f73686f7718eb78195f5f68656c696f735f5f76616c75655f5f66726f6d5f6d617018ed775f5f68656c696f735f5f76616c75655f5f746f5f6d617018ef781a5f5f68656c696f735f5f6279746561727261795f5f5f5f6e657118f178225f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6e657118f3755f5f68656c696f735f5f626f6f6c5f5f747261636518f5781e5f5f68656c696f735f5f76616c75655f5f69735f7a65726f5f696e6e657218f778185f5f68656c696f735f5f76616c75655f5f69735f7a65726f18f9781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c69637918fb78265f5f68656c696f735f5f76616c75655f5f6164645f6f725f73756274726163745f696e6e657218fd78205f5f68656c696f735f5f76616c75655f5f6164645f6f725f737562747261637418ff765f5f68656c696f735f5f76616c75655f5f5f5f616464190101755f5f68656c696f735f5f636f6d6d6f6e5f5f6d6170190103781a5f5f68656c696f735f5f76616c75655f5f5f5f746f5f64617461190105781b5f5f68656c696f735f5f737472696e675f5f66726f6d5f64617461190107765f5f68656c696f735f5f76616c75655f5f76616c7565190109781a5f5f68656c696f735f5f76616c75655f5f66726f6d5f6461746119010b78225f5f68656c696f735f5f636f6d6d6f6e5f5f696e736572745f696e5f736f7274656419010d765f5f68656c696f735f5f636f6d6d6f6e5f5f736f727419010f78195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f67657419011178185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572190113781c5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6d617019011578195f5f68656c696f735f5f6279746561727261795f5f5f5f6c74190117725f5f68656c696f735f5f696e745f5f6d617819011978215f5f68656c696f735f5f636f6d6d6f6e5f5f736c6963655f62797465617272617919011b781a5f5f68656c696f735f5f6279746561727261795f5f736c69636519011d781c5f5f68656c696f735f5f6279746561727261795f5f626c616b65326219011f735f5f68656c696f735f5f696e745f5f5f5f6774190121781b5f5f68656c696f735f5f6279746561727261795f5f6c656e677468190123781a5f5f68656c696f735f5f6279746561727261795f5f5f5f616464190125781b5f5f68656c696f735f5f74786f757470757469645f5f696e646578190127781b5f5f68656c696f735f5f74786f757470757469645f5f74785f696419012978195f5f68656c696f735f5f646174615f5f66726f6d5f6461746119012b755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c19012d78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3419012f78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3519013178255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3619013378255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3719013578255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f38190137781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f39190139775f5f68656c696f735f5f74785f5f72656465656d65727319013b78275f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f5f5f697319013d782c5f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f6f75747075745f696419013f781c5f5f68656c696f735f5f7478696e7075745f5f6f75747075745f6964190141745f5f68656c696f735f5f74785f5f696e7075747319014378195f5f68656c696f735f5f76616c75655f5f6765745f7361666519014578195f5f68656c696f735f5f7478696e7075745f5f6f757470757419014778185f5f68656c696f735f5f7478696e7075745f5f76616c756519014978225f5f68656c696f735f5f736372697074707572706f73655f5f5f5f746f5f6461746119014b78185f5f68656c696f735f5f7478696e7075745f5f646174756d19014d78185f5f68656c696f735f5f74785f5f7265665f696e7075747319014f781a5f5f68656c696f735f5f7478696e7075745f5f61646472657373190151765f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e4519015378275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3019015578205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3119015778205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3019015978205f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f5f5f697319015b781f5f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f74616719015d78225f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f6669656c647319015f781c5f5f68656c696f735f5f7478696e7075745f5f66726f6d5f6461746119016178275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3119016378275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3219016578275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3319016778205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3419016978205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3319016b78215f5f68656c696f735f5f74786f75747075745f5f69735f76616c69645f6461746119016d78205f5f68656c696f735f5f7478696e7075745f5f69735f76616c69645f6461746119016f781c5f5f68656c696f735f5f7478696e7075745f5f5f5f746f5f64617461190171781d5f5f68656c696f735f5f646174615f5f69735f76616c69645f64617461190173781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f64617461190175781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f37190177781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f36190179781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3519017b781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3319017d78245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6d5374727563745f6669656c6419017f782a5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f69735f76616c69645f64617461190181781d5f5f68656c696f735f5f76616c696461746f72686173685f5f73686f77190183781e5f5f68656c696f735f5f74786f75747075745f5f73756d5f76616c756573190185781d5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6c697374190187781c5f5f68656c696f735f5f74785f5f66696c7465725f6f757470757473190189781d5f5f68656c696f735f5f616464726573735f5f63726564656e7469616c19018b782a5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c696461746f7219018d781d5f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f657119018f78225f5f68656c696f735f5f76616c696461746f72686173685f5f66726f6d5f64617461190191782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f68617368190193782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f6361737419019578205f5f68656c696f735f5f74786f75747075745f5f69735f6c6f636b65645f6279190197781f5f5f68656c696f735f5f74785f5f6f7574707574735f6c6f636b65645f6279190199781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f627919019b781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f7361666519019d781d5f5f68656c696f735f5f74786f75747075745f5f66726f6d5f6461746119019f78225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f5f5f65711901a178225f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f746f5f646174611901a3782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f6e65775f76616c696461746f721901a5781b5f5f68656c696f735f5f7374727563745f5f5f5f746f5f646174611901a7782d5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f6d61785f6c656e6774681901a978235f5f68656c696f735f5f6173736574636c6173735f5f69735f76616c69645f646174611901ab78225f5f68656c696f735f5f736372697074707572706f73655f5f66726f6d5f646174611901ad64544f444f1901af6554524143451901b164524551541901b3646d6b54761901b578285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e641901b778485f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f69735f76616c69645f646174615f696e7465726e616c1901b9783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f66726f6d5f646174611901bb783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765741901bd783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f66696e645f6b65791901bf756d75737446696e64496e70757452656465656d65721901c178245f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f686561641901c378495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f646174611901c578455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f66726f6d5f646174611901c7784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f5f5f69731901c978585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f321901cb784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f5f5f69731901cd78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f321901cf785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f321901d178385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5f5f746f5f646174611901d3783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f69735f76616c69645f646174611901d578475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f311901d7783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f6e65771901d978485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f311901db784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f311901dd784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f311901df784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f311901e1784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f311901e378535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f311901e578515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f311901e778405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f69735f76616c69645f646174611901e978515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f311901eb78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f311901ed784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f311901ef78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f311901f178565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f311901f378455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f69735f76616c69645f646174611901f5784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f311901f7784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f311901f978505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f311901fb78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f646174611901fd78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f66726f6d5f646174611901ff784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f5f5f697319020178595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f3219020378505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f5f5f6973190205785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f32190207785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f3219020978525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f5f5f697319020b785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3219020d78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f5f5f697319020f78605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f3219021178555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f7365656419021378585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f707572706f736519021578545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f6973190217785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3219021978545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f7365656419021b78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f707572706f736519021d78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f3219021f784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5f5f746f5f64617461190221784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f69735f76616c69645f64617461190223784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f66726f6d5f64617461190225785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f5f5f697319022778695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3219022978625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f616374697669747919022b78625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f697319022d786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3219022f78665f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f616374697669747919023178595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f5f5f697319023378645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3219023578585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f5f5f697319023778635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3219023978585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f5f5f697319023b78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3219023d785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f697319023f78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190241785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f697319024378675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190245785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f697319024778675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219024978615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f697319024b78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c19024d782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f6461746119024f786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219025178295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66726f6d5f6461746119025378675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f6163746976697469657319025578415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f697319025778425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f6e657719025978405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f697319025b78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f6e657719025d78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f69735f76616c69645f6461746119025f78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f69735f76616c69645f6461746119026178405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f66726f6d5f6461746119026378405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f746f5f64617461190265783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f7575744e616d6519026778345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f66726f6d5f64617461190269784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f64656c656761746556616c696461746f724861736819026b782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e19026d782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f697319026f782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f736f6d6519027178355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f6e6f6e655f5f5f5f697319027378305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6e6577190275782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f5f5f6973190277782c5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696e645f7361666519027978355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f736f6d6519027b782652656c617469766544656c65676174654c696e6b3a3a68617344656c6567617465496e70757419027d78355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f5f5f697319027f78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f5f5f6973190281782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e645f73616665190283782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f757470757419028578565f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119028778455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f69735f76616c69645f6461746119028978445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f69735f76616c69645f6461746119028b78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f3119028d78555f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19028f784c5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f64617461190291785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3119029378265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f616e7919029578395f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f69735f76616c69645f64617461190297784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f3119029978495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3119029b784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f3119029d784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f3119029f784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f311902a1783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f69735f76616c69645f646174611902a378395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f69735f76616c69645f646174611902a578315f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f69735f76616c69645f646174611902a7782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f66726f6d5f646174611902a9785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1902ab78545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611902ad786d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1902af78645f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611902b178625f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1902b378595f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174611902b5785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1902b778545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174611902b978405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f321902bb783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f66726f6d5f646174611902bd783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f5f5f746f5f646174611902bf78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e6444656c65676174654c696e6b1902c178505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611902c378405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e64496e76617269616e74731902c578605f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611902c778445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6f746865724e616d656444656c6567617465731902c978415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b1902cb783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e74496e76617269616e74731902cd78415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f676f76417574686f726974794c696e6b1902cf78555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f66726f6d5f646174611902d178395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d616e69666573741902d378505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f66726f6d5f646174611902d5783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f70656e64696e674368616e6765731902d778445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f321902d978465f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c1902db783d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611902dd78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f321902df78395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f5f5f746f5f646174611902e1783d5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f69735f76616c69645f646174611902e378395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f66726f6d5f646174611902e578395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f69731902e778445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f321902e9783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f6e65771902eb783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f69731902ed78495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f321902ef783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f646174756d1902f1783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f7574786f1902f3783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f6e65771902f5783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f69731902f778465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f321902f9783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f646174756d1902fb783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f7574786f1902fd783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f6e65771902ff78345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f69735f76616c69645f6461746119030178305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f66726f6d5f6461746119030378425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f5f5f6973190305784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3219030778465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f6163746976697479190309783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f697319030b78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3219030d783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f6e657719030f783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f5f5f697319031178495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f3219031378415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f6973190315784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219031778435f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f5f5f6973190319784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3219031b783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f5f5f697319031d78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3219031f706765745478436861727465724461746119032178325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f69735f76616c69645f64617461190323782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6c696e6b190325782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f66726f6d5f64617461190327782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f696e707574190329782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6d706819032b782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f5f5f746f5f6461746119032d782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f5f5f746f5f6461746119032f782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f5f5f6e6577190331782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f756e77726170190333782c44656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479417344617461190335782644656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479190337782244656c6567617465496e7075743a3a726571756972657356616c69644f757470757419033978255f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d706819033b78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6368617274657219033d78275f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6e657719033f781b4361706f4374783a3a6765744368617274657252656465656d657219034178224361706f4374783a3a72657175697265734d696e7444656c6567617465496e707574190343774361706f4374783a3a6765744368617274657244617461190345781b4361706f4374783a3a6765744e6578744368617274657244617461190347781b4361706f4374783a3a7265736f6c7665436861727465725574786f190349782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f6e657719034b781e4361706f4374783a3a726571756972657344656c6567617465496e70757419034d704361706f4374783a3a6164647265737319034f754361706f4374783a3a6e656564734368617274657219035178194361706f4374783a3a7769746843686172746572496e707574190353696d6b4361706f4374781903556b686173536565645574786f190357781a6e6f4f7468657241637469766974696573537570706f72746564190359782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f6e6f6e655f5f5f5f697319035b782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f736f6d655f5f736f6d6519035d783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765745f7361666519035f781f726571756972657344656c6567617465417574686f72697a696e674d696e7419036178545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5d5f5f616c6c19036378645f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6d61705b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5d190365781c72657175697265734d696e7444656c6567617465417070726f76616c1903676e6d6b557574546e466163746f7279190369781b736f7274506f6c69637956616c7565735072656469637461626c7919036b783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f6561636819036d78635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c74657219036f78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f666f725f65616368190371782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f6e6f6e655f5f5f5f6973190373782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f736f6d655f5f736f6d65190375783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f7361666519037778635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f64656c657465190379783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f746f5f6461746119037b78365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f657119037d78365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f727419037f78255f5f68656c696f735f5f76616c75655f5f73756d5b5f5f68656c696f735f5f76616c75655d19038178365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f76616c75655d1903837276616c69646174655575744d696e74696e67190385783a5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f69735f76616c69645f6461746119038778365f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f66726f6d5f6461746119038978415f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e74696e67436861727465725f5f5f5f697319038b784c5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e74696e67436861727465725f5f69735f76616c69645f646174615f3219038d78425f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e74696e67436861727465725f5f6f776e657219038f784e5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e745769746844656c6567617465417574686f72697a696e675f5f5f5f697319039178595f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e745769746844656c6567617465417574686f72697a696e675f5f69735f76616c69645f646174615f3219039378465f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e674d696e74496e76617269616e745f5f5f5f697319039578515f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e674d696e74496e76617269616e745f5f69735f76616c69645f646174615f3219039778475f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f697319039978525f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219039b78495f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f697319039d78545f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3219039f78495f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f736565641903a178345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f69735f76616c69645f646174611903a378565f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f4372656174696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f321903a5784b5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f4372656174696e674e65775370656e6444656c65676174655f5f736565641903a778305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f66726f6d5f646174611903a978535f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f4372656174696e674e65775370656e6444656c65676174655f5f7265706c6163696e675575741903ab677365656454786e1903ad6973656564496e6465781903af637265761903b173686173436f6e7472616374536565645574786f1903b3784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6c656e6774681903b578525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6c656e6774681903b7784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6c656e6774681903b9785d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6c656e6774681903bb78315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f5f5f69731903bd78315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f736f6d651903bf646d61696e1903dd61721903df636d70681903e16c76616c75655f6d696e746564190430626f6b19043a695f5f636f6e645f333019044669636861727465725f331904486a6368617274657256616c19044a6a61757468546e4261736519044c6d6d696e74446774546e4261736519044e6e7370656e64446774546e426173651904506a707572706f7365735f3119047667686173536565641904786a6d696e7465725365656419047a696d6b5575744e616d65190493696d696e7473557574731904ac6d636861727465724f75747075741904ae6e72617743686172746572446174611904b06d63686172746572446174615f311904b26a5f5f6c68735f305f39391904b4687370656e644467741904b66f7370656e64496e76617269616e74731904b86e6e616d656444656c6567617465731904ba696d696e744467745f311904bc6e6d696e74496e76617269616e74731904be67617574684467741904c0686d616e69666573741904c27070656e64696e6744656c65676174657319052e70686173476f6f6444656c6567617465731905fe686f75747075745f311906736a5f5f6c68735f305f393819067f645f5f323019068166636374785f31190683695f5f636f6e645f333119068f6a5f5f6c68735f305f393719069e6a5f5f6c68735f305f39361906ad6a5f5f6c68735f305f39351906ca6a5f5f6c68735f305f39341906e76a5f5f6c68735f305f39311906e966736565645f331906f2746261644368617274657241637469766974795f311906ff695f5f636f6e645f333719070b6a5f5f6c68735f305f393219070d6a61637469766974795f3319070f695f5f636f6e645f333819071b6a5f5f6c68735f305f393319071d6c73656564546f4361706f5f3119071f69707572706f73655f341907a8645f5f32351907b2645f5f32341907c06a5f5f6c68735f305f38321907c266736565645f321907c46f7265706c6163654578697374696e671907cd766e656564734361706f466f72636564496e7374616c6c1907cf726f746865724d696e74656456616c75655f321907d16d6d6b546f6b656e4e616d655f321907d36a7370656e64446774546e1907d56f6861734361706f417070726f76616c1907e26b6469644d696e745575747319081d695f5f636f6e645f33361908296a5f5f6c68735f305f38391908446a5f5f6c68735f305f3930190846697575744e616d655f31190884645f5f323319089c7262616443686172746572416374697669747919089e695f5f636f6e645f33341908aa6a5f5f6c68735f305f38371908ac6a61637469766974795f321908ae695f5f636f6e645f33351908ba6a5f5f6c68735f305f38381908bc6a73656564546f4361706f1908be69707572706f73655f33190920645f5f323219092a645f5f323119093b695f5f636f6e645f33331909476a5f5f6c68735f305f38361909496c6f6c64546f6b656e4e616d6519094b664255524e454419095c6a5f5f6c68735f305f3835190961695f5f636f6e645f333219096d6a5f5f6c68735f305f38341909706a5f5f6c68735f305f38331909896873656c665f31363219098f68646174615f3233361909956873656c665f31363119099a6873656c665f31363019099f6474785f311909bb6873656c665f3135391909c168646174615f3233351909c3645f5f31391909d76873656c665f3135381909dd68646174615f3233331909ea67706169725f37361909fc68646174615f323334190a0d6a6669656c64735f313530190a1a67686561645f3838190a266a6669656c64735f313531190a3367686561645f3839190a3f6a6669656c64735f313532190a7868646174615f323332190a8567706169725f3735190a8768696e6465785f3131190a896a6669656c64735f313439190ae26873656c665f313537190ae868646174615f323330190af567706169725f3734190b0768646174615f323331190b186a6669656c64735f313437190b2567686561645f3837190b316a6669656c64735f313438190b6068646174615f323239190b6668646174615f323237190b7367706169725f3733190b8568646174615f323238190b966a6669656c64735f313435190ba367686561645f3836190baf6a6669656c64735f313436190bde68646174615f323236190be468646174615f323234190bf167706169725f3732190c0368646174615f323235190c146a6669656c64735f313433190c2167686561645f3835190c2d6a6669656c64735f313434190c5c68646174615f323233190c6268646174615f323231190c6f67706169725f3731190c8168646174615f323232190c926a6669656c64735f313432190cb768646174615f323230190cbd6873656c665f313536190cc368646174615f323138190cd067706169725f3730190ce268646174615f323139190cf36a6669656c64735f313430190d0067686561645f3834190d0c6a6669656c64735f313431190d3b68646174615f323137190d41784c5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e74696e67436861727465725f5f69735f76616c69645f646174615f31190d4278595f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e745769746844656c6567617465417574686f72697a696e675f5f69735f76616c69645f646174615f31190d4378515f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e674d696e74496e76617269616e745f5f69735f76616c69645f646174615f31190d4478525f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f31190d4578545f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f31190d4678565f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f4372656174696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f31190d4768646174615f323136190d496869676e6f72655f38190d69784a5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e74696e67436861727465725f5f69735f76616c69645f64617461190d6a78575f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f6d696e745769746844656c6567617465417574686f72697a696e675f5f69735f76616c69645f64617461190d6b784f5f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e674d696e74496e76617269616e745f5f69735f76616c69645f64617461190d6c78505f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f64617461190d6d78525f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f64617461190d6e78545f5f6d6f64756c655f5f4361706f4d696e7448656c706572735f5f4d696e74657241637469766974795b5d5f5f4372656174696e674e65775370656e6444656c65676174655f5f69735f76616c69645f64617461190d6f68646174615f323135190db9666d70685f3230190dba66736565645f31190dbb68707572706f736573190dbc755f5f7573656f70745f5f6d6b546f6b656e4e616d65190dbd6b6d6b546f6b656e4e616d65190dbe781a5f5f7573656f70745f5f626f6f74737472617043686172746572190dbf70626f6f74737472617043686172746572190dc0781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565190dc1706f746865724d696e74656456616c7565190dc278235f5f7573656f70745f5f6e656564734d696e7444656c6567617465417070726f76616c190dc378196e656564734d696e7444656c6567617465417070726f76616c190dc4782a5f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b5f31190dc5782065787472614d696e7444656c656761746552656465656d6572436865636b5f32190dc678205f5f7573656f70745f5f636865636b4d696e7444677441637469766974795f31190dc776636865636b4d696e7444677441637469766974795f32190dc96d6d6b546f6b656e4e616d655f31190dcb72626f6f747374726170436861727465725f31190dcd726f746865724d696e74656456616c75655f31190dcf781b6e656564734d696e7444656c6567617465417070726f76616c5f31190dd1782065787472614d696e7444656c656761746552656465656d6572436865636b5f33190dd376636865636b4d696e7444677441637469766974795f33190dd56f6973426f6f74737472617070696e67190dd77064656c6567617465417070726f76616c190dd96b76616c75654d696e746564190ddb6d657870656374656456616c7565190def666d7068537472190df16676616c537472190e1e74657870656374656456616c756573536f72746564190e2764746e5f33190e2864695f3131190e2a67746e5374725f31190e427461637475616c54686973506f6c6963794d696e74190e44781a61637475616c54686973506f6c6963794d696e74536f72746564190e5964746e5f32190e5a62746e190e5c65746e537472190e8964625f3134190e8a645f5f3138190ea27074686973506f6c6963794d696e744f4b190ec8736f74686572506f6c69636965734d696e744f6b190f077572656d61696e696e6745787065637465644d696e74190f54686f746865724d7068190f5578186578706563746564546f6b656e7354686973506f6c696379190f57706d696e74656454686973506f6c696379190f5c6b746f6b656e4e616d655f32190f5d6d6578706563746564436f756e74190f67695f5f636f6e645f3239190f736a5f5f6c68735f305f3831190f766a5f5f6c68735f305f3830190f786b61637475616c436f756e74190f8968746e537472696e67190fea69707572706f73655f3219100c6a5f5f6c68735f305f373919100e676d696e744467741910806873656c665f31353519108165666e5f3235191087676974656d5f31321910926873656c665f3135341910946a726563757273655f383919109a6a726563757273655f383819109b666c73745f32331910ba6873656c665f3135331910bb66636f6d705f341910c064615f31331910c164625f31331910e36873656c665f3135321910e4676f746865725f311910ef6873656c665f3135301910f0666b65795f31351910f2666b65795f31361910f46a726563757273655f38371910fa6a726563757273655f38361910fb6873656c665f31353119110867686561645f383319110a667461696c5f341911366873656c665f313439191137666b65795f313419114163785f3819114f6873656c665f31343819115568646174615f32313419115b6873656c665f31343719115c65666e5f323419115e6a726563757273655f38351911646a726563757273655f3834191165666d61705f323819117267686561645f38321911946873656c665f31343619119565666e5f323319119a67706169725f36391911ac6873656c665f3134351911ad65666e5f32321911af6a726563757273655f38331911b56a726563757273655f38321911b6666d61705f32371911c367686561645f38311911e5626b311911e6635f76311911e7635f76311911e8635f76321911ee64736565641911f06873656564547849641911f267736565644964781911f46869647842797465731911f667726177547849641911f86774786f496e666f1911fa686d696e69486173681911fc636d68731911fd6170191250666d70685f3139191252646363747819127b6c6d696e74446774496e70757419127d6f6d696e74446774416374697669747919127f695f5f636f6e645f323519128b6a5f5f6c68735f305f373319128d63434c4119128f695f5f636f6e645f323819129b6a5f5f6c68735f305f37381912bb6a5f5f6c68735f305f37371912db6a5f5f6c68735f305f37361912fb6a5f5f6c68735f305f373519130a6a5f5f6c68735f305f373419130f645f5f31371913236a5f5f6c68735f305f37321913326a5f5f6c68735f305f363819133465444c415f31191336695f5f636f6e645f32371913426a5f5f6c68735f305f373119135d6a5f5f6c68735f305f37301913626a5f5f6c68735f305f36391913766a5f5f6c68735f305f36371913966a5f5f6c68735f305f36361913b66a5f5f6c68735f305f36351913d66a5f5f6c68735f305f36341913f66a5f5f6c68735f305f36331913fb6a5f5f6c68735f305f35331913fd626d61191424716d696e7444677441637469766974795f31191426695f5f636f6e645f32361914326a5f5f6c68735f305f363219143f6a5f5f6c68735f305f363119144c6a5f5f6c68735f305f363019145b6a5f5f6c68735f305f353919146a6a5f5f6c68735f305f35381914796a5f5f6c68735f305f35371914886a5f5f6c68735f305f35361914976a5f5f6c68735f305f353519149c6a5f5f6c68735f305f35341914c06873656c665f3134341914c165666e5f32311914c7676974656d5f31311914d26873656c665f3134331914d365666e5f32301914d8676974656d5f31301914f06c64656c65676174654c696e6b1914f1666d70685f31381914f2636d70681914f3781e65787472614d696e7444656c656761746552656465656d6572436865636b1914f4781e5f5f7573656f70745f5f636865636b4d696e7444677441637469766974791914f574636865636b4d696e7444677441637469766974791914f7782065787472614d696e7444656c656761746552656465656d6572436865636b5f311914f976636865636b4d696e7444677441637469766974795f311914fb67617574687a41631915156a74617267657449645f3119151e727370656e6473417574686f726974795575741915206365727219152278216d61796265436865636b65644d696e7444656c6567617465417574686f726974791915247464656c6567617465446964417574686f72697a6519152e695f5f636f6e645f323219153a6a5f5f6c68735f305f353219153f6a5f5f6c68735f305f343719154163785f371915436a61637469766974795f31191545695f5f636f6e645f32331915516a5f5f6c68735f305f343819155363444c41191578695f5f636f6e645f32341915846a5f5f6c68735f305f35311915986a5f5f6c68735f305f353019159d6a5f5f6c68735f305f34391915a7645f5f31361915de69707572706f73655f311915e0695f5f636f6e645f32311915ec6473705f311915f5645f5f31351915fa695f5f636f6e645f32301916066a5f5f6c68735f305f343619160863785f361916106a5f5f6c68735f305f343519162163695f391916486873656c665f313432191649666b65795f313319165363785f351916616873656c665f31343119166768646174615f32313319166d645f5f313419168e62747819168f68736565645574786f1916ad67696e7075745f311916df666d70685f31371916e66873656c665f3134301916f469636861727465725f321916f6695f5f636f6e645f31381917026a5f5f6c68735f305f343419170f6a5f5f6c68735f305f34331917146a5f5f6c68735f305f33391917166a5f5f6c68735f305f3430191718666d70685f313619171a6b6368617274657241635f3319171c6c686173436861727465725f321917256d636861727465725574786f5f3219172767646174756d5f3519173d695f5f636f6e645f31391917496a5f5f6c68735f305f343219174b6463685f321917516a5f5f6c68735f305f343119175d667478696e5f3219177a78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7769746843686172746572496e70757419177b6873656c665f31333919178969636861727465725f3119178b695f5f636f6e645f31361917976a5f5f6c68735f305f33381917a46a5f5f6c68735f305f33371917a76a5f5f6c68735f305f33331917a96a5f5f6c68735f305f33341917ab666d70685f31351917ad6b6368617274657241635f321917af6c686173436861727465725f311917b1695f5f636f6e645f31371917bd6a5f5f6c68735f305f33361917ca6a5f5f6c68735f305f33351917cc6d636861727465725574786f5f311917d567646174756d5f341917f5667478696e5f311918126873656c665f313338191815646164647219181d6873656c665f31333719181e696467744c696e6b5f3119181f66726f6c655f3119182064726f6c651918216a72657175697265645f36191822725f5f7573656f70745f5f69645072656669781918236a69645072656669785f311918256a72657175697265645f371918276a69645072656669785f3219185c6873656c665f31333619185f695f5f636f6e645f313519186b6a5f5f6c68735f305f333219186d667574786f5f3419187d6a5f5f6c68735f305f333119187f667574786f5f33191885645f5f313319188d78345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7265736f6c7665436861727465725574786f19188e78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6164647265737319188f6873656c665f3133351918926b6368617274657241635f31191894686361706f41646472191896695f5f636f6e645f31341918a26a5f5f6c68735f305f33301918a46b63686172746572446174611918bb6374786f1918d5645f5f31321918eb6873656c665f3133341918ee695f5f636f6e645f31331918fa6a5f5f6c68735f305f32391918fc67646174756d5f3319190c6a5f5f6c68735f305f323819190e67646174756d5f32191914645f5f313119191c78305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f676574436861727465724461746119191d78375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e70757419191e6873656c665f31333319191f745f5f7573656f70745f5f72657175697265645f321919206a72657175697265645f341919226a72657175697265645f35191924676467744c696e6b1919466873656c665f313332191949616519194b695f5f636f6e645f31311919576a5f5f6c68735f305f32371919666a5f5f6c68735f305f323619196b6a5f5f6c68735f305f313919196d667574786f5f3219196f6861637469766974791919716d77726f6e674163746976697479191973695f5f636f6e645f313219197f6a5f5f6c68735f305f323519198d6a5f5f6c68735f305f323419199b6a5f5f6c68735f305f32331919a86a5f5f6c68735f305f32321919b56a5f5f6c68735f305f32311919b86a5f5f6c68735f305f32301919e6666d70685f31341919e767636861727465721919f96873656c665f313331191a056873656c665f313330191a0b6873656c665f313239191a0c781d5f5f7573656f70745f5f637265617465644f7252657475726e65645f31191a0d73637265617465644f7252657475726e65645f32191a0f73637265617465644f7252657475726e65645f33191a2d783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f67656e6572696344656c65676174654163746976697479191a2e6873656c665f313238191a486873656c665f313237191a4b63695f38191a4d69696e70757444617461191a53685f5f636f6e645f39191a5f6a5f5f6c68735f305f3137191a6168696e6465785f3130191a636a6669656c64735f313339191a73695f5f636f6e645f3130191a7f6a5f5f6c68735f305f3138191a8166696e64657832191a90645f5f3130191a9d635f5f39191aab6873656c665f313236191ab2646c696e6b191ab364726f6c65191ab4686964507265666978191ab565696e707574191ab6666d70685f3133191adf6873656c665f313235191ae56873656c665f313234191aeb68646174615f323132191aed635f5f38191b016873656c665f313233191b0768646174615f323131191b1467706169725f3638191b1667696e6465785f39191b186a6669656c64735f313338191b71666d70685f3132191b72735f5f7573656f70745f5f726566496e70757473191b7369726566496e70757473191b756b726566496e707574735f31191b7769636861727465724163191b796a68617343686172746572191b7b6b636861727465725574786f191b7d63637464191b8b685f5f636f6e645f37191b976a5f5f6c68735f305f3136191b996463685f31191b9f6a5f5f6c68735f305f3133191ba1685f5f636f6e645f38191bad6a5f5f6c68735f305f3135191baf626368191bb56a5f5f6c68735f305f3134191bc7647478696e191be868646174615f323039191bf567706169725f3637191c0768646174615f323130191c186a6669656c64735f313337191c3d68646174615f323038191c4368646174615f323036191c5067706169725f3636191c6268646174615f323037191c736a6669656c64735f313336191c9868646174615f323035191c9e68646174615f323033191cab67706169725f3635191cbd68646174615f323034191cce6a6669656c64735f313335191cf368646174615f323032191cf968646174615f323030191d0667706169725f3634191d1868646174615f323031191d296a6669656c64735f313334191d4e68646174615f313939191d5c68646174615f313937191d6967706169725f3633191d7b68646174615f313938191d8c6a6669656c64735f313333191db168646174615f313936191db76873656c665f313232191dcb68646174615f313934191dd867706169725f3632191dea68646174615f313935191dfb6a6669656c64735f313331191e0867686561645f3830191e226a6669656c64735f313332191e5168646174615f313933191e57784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f31191e5878465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f31191e5978495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f31191e5a784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f31191e5b784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f31191e5c78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f31191e5d68646174615f313932191e5f6869676e6f72655f37191e7f784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f64617461191e8078445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f64617461191e8178475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f64617461191e82784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f64617461191e83784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f64617461191e8478455f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f64617461191e8568646174615f313931191ecf67646174756d5f31191ed0667574786f5f31191ee66873656c665f313231191eec6873656c665f313230191ef268646174615f313839191eff67706169725f3631191f1168646174615f313930191f226a6669656c64735f313238191f2f67686561645f3738191f3b6a6669656c64735f313239191f4867686561645f3739191f546a6669656c64735f313330191f8d68646174615f313838191f9365646174756d191f94647574786f191faa6873656c665f313139191fb06873656c665f313138191fb668646174615f313836191fc367706169725f3630191fd568646174615f313837191fe66a6669656c64735f313235191ff367686561645f3736191fff6a6669656c64735f31323619200c67686561645f37371920186a6669656c64735f31323719205168646174615f31383519205f68646174615f31383319206c67706169725f353919207e68646174615f31383419208f6a6669656c64735f3132341920b468646174615f3138321920ba78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f311920bb78495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f311920bc78465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f311920bd68646174615f3138311920bf6869676e6f72655f361920d978425f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174611920da78475f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174611920db78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174611920dc68646174615f31383019210368646174615f31373819211067706169725f353819212268646174615f3137391921336a6669656c64735f31323019214067686561645f373319214c6a6669656c64735f31323119215967686561645f37341921656a6669656c64735f31323219217267686561645f373519217e6a6669656c64735f3132331921c168646174615f3137371921da666d61705f32351921dc6a726563757273655f38311921e26a726563757273655f38301921e3666d61705f32361921f067686561645f373219221d68646174615f31373519222a67706169725f353719223c68646174615f31373619224d6a6669656c64735f3131391922726873656c665f31313719227868646174615f31373419227a666c73745f323219227c635f5f371922936873656c665f31313619229968646174615f31373319229b666d61705f323419229d635f5f361922b46873656c665f3131351922ba6873656c665f3131341922c06873656c665f3131331922c66873656c665f3131321922cc68646174615f3137321922ce666d61705f32331922d0635f5f351922e76873656c665f3131311922ed68646174615f3137311922ef666c73745f32311922f1635f5f341923086873656c665f31313019230f68646174615f3137301923116869676e6f72655f3519232568646174615f31363819233267706169725f353619234468646174615f3136391923556a6669656c64735f31313019236267686561645f363419236e6a6669656c64735f31313119237b67686561645f36351923876a6669656c64735f31313219239467686561645f36361923a06a6669656c64735f3131331923ad67686561645f36371923b96a6669656c64735f3131341923c667686561645f36381923d26a6669656c64735f3131351923df67686561645f36391923eb6a6669656c64735f3131361923f867686561645f37301924046a6669656c64735f31313719241167686561645f373119241d6a6669656c64735f31313819249268646174615f3136371924ab666c73745f31391924ad6a726563757273655f37391924b36a726563757273655f37381924b4666c73745f32301924db68646174615f3136361924f4666d61705f32311924f66a726563757273655f37371924fc6a726563757273655f37361924fd666d61705f323219250a67686561645f363319253768646174615f313635192550666d61705f31391925526a726563757273655f37351925586a726563757273655f3734192559666d61705f323019256667686561645f363219259368646174615f3136341925ac666c73745f31371925ae6a726563757273655f37331925b46a726563757273655f37321925b5666c73745f31381925d878405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f311925d978445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f311925da78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f311925db68646174615f3136331925dd6869676e6f72655f341925f7783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174611925f878425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174611925f978405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174611925fa68646174615f31363219262068646174615f31363119267768646174615f31363019268467706169725f353519268667696e6465785f381926886a6669656c64735f3130391926e168646174615f3135381926ee67706169725f353419270068646174615f3135391927116a6669656c64735f31303819273668646174615f31353619274367706169725f353319275568646174615f3135371927666a6669656c64735f31303719278b68646174615f31353419279867706169725f35321927aa68646174615f3135351927bb6a6669656c64735f3130341927c867686561645f36301927e46a6669656c64735f3130351927f167686561645f36311927fd6a6669656c64735f31303619283668646174615f31353219284367706169725f353119285568646174615f3135331928666a6669656c64735f31303019287367686561645f353719287f6a6669656c64735f31303119288c67686561645f35381928986a6669656c64735f3130321928a567686561645f35391928b16a6669656c64735f3130331928f468646174615f31353019290167706169725f353019291368646174615f313531192924696669656c64735f393919294978485f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f6461746119294a78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f6461746119294b784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f6461746119294c784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f6461746119294d784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f6461746119294e68646174615f31343919298c6873656c665f31303919298d65666e5f3139192992666974656d5f3919299868646174615f3134371929a567706169725f34391929b768646174615f3134381929c8696669656c64735f39361929d567686561645f35351929eb696669656c64735f39371929f867686561645f3536192a04696669656c64735f3938192a3d68646174615f313436192a56666c73745f3135192a586a726563757273655f3731192a5e6a726563757273655f3730192a5f666c73745f3136192a9268646174615f313434192a9f67706169725f3438192ab168646174615f313435192ac2696669656c64735f3934192acf67686561645f3534192adb696669656c64735f3935192b0a78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f64617461192b0b78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f64617461192b0c68646174615f313433192b2668646174615f313432192b37696669656c64735f3930192b4467686561645f3531192b56696669656c64735f3931192b6367686561645f3532192b7f696669656c64735f3932192b8c67686561645f3533192b98696669656c64735f3933192bc768646174615f313431192bd467706169725f3437192bd667696e6465785f37192bd8696669656c64735f3839192c316873656c665f313038192c32666d70685f3131192c33745f5f7573656f70745f5f72657175697265645f31192c346a72657175697265645f32192c35781b5f5f7573656f70745f5f637265617465644f7252657475726e6564192c3671637265617465644f7252657475726e6564192c386a72657175697265645f33192c3a73637265617465644f7252657475726e65645f31192c3c695f5f6c68735f305f33192c3e63757574192c406d76616c696461746f7248617368192c426461635f31192c4464634f7252192c596b68617344656c6567617465192c6f685f5f636f6e645f36192c7b6a5f5f6c68735f305f3132192c846a5f5f6c68735f305f3130192c866a5f5f6c68735f305f3131192cbb685f5f636f6e645f34192cc7695f5f6c68735f305f39192cc96476685f33192ced695f5f6c68735f305f36192cf6685f5f636f6e645f35192d02695f5f6c68735f305f38192d05695f5f6c68735f305f37192d0e616f192d1d685f5f636f6e645f33192d29695f5f6c68735f305f35192d2c695f5f6c68735f305f34192d566873656c665f313037192d5765666e5f3138192d5d666974656d5f38192d6468646174615f313430192d6a68646174615f313339192d706873656c665f313036192d7166696e70757473192d72666d70685f3130192d73725f5f7573656f70745f5f7265717569726564192d74687265717569726564192d766a72657175697265645f31192d78677575744e616d65192d7a685f5f636f6e645f31192d86695f5f6c68735f305f32192d9c675f5f6c68735f30192d9e6476685f32192da0716e65656473416464725769746843726564192da2626163192daf685f5f636f6e645f32192dbb69666f756e64476f6f64192dc5695f5f6c68735f305f31192de663695f37192e206873656c665f313035192e266873656c665f313034192e2765666e5f3137192e2d666974656d5f37192e3468646174615f313338192e3c68646174615f313337192e426873656c665f313033192e4868646174615f313336192e4e6873656c665f313032192e4f656d70685f39192e5a6873656c665f313031192e6068646174615f313335192e62635f5f33192e766873656c665f313030192e7d68646174615f313334192e7f6869676e6f72655f33192e9568646174615f313333192ea6696669656c64735f3835192eb367686561645f3438192ebf696669656c64735f3836192ecc67686561645f3439192ed8696669656c64735f3837192ee567686561645f3530192ef1696669656c64735f3838192f2068646174615f313332192f2d67706169725f3436192f2f67696e6465785f36192f31696669656c64735f3834192f9268646174615f313331192fa068646174615f313330192fa66773656c665f3939192fac68646174615f313239192fae666c73745f3134192fb0635f5f32192fc768646174615f313237192fd467706169725f3435192fe668646174615f313238192ff7696669656c64735f383219300467686561645f3437193010696669656c64735f383319303f68646174615f313236193058666c73745f313219305a6a726563757273655f36391930606a726563757273655f3638193061666c73745f313319308468646174615f31323519308a68646174615f31323319309767706169725f34341930a968646174615f3132341930ba696669656c64735f37391930c767686561645f34351930d3696669656c64735f38301930e067686561645f34361930ec696669656c64735f383119312568646174615f31323219312b68646174615f31323019313867706169725f343319314a68646174615f31323119315b696669656c64735f373619316867686561645f3433193174696669656c64735f373719318167686561645f343419318d696669656c64735f37381931c668646174615f3131391931cc68646174615f3131371931d967706169725f34321931eb68646174615f3131381931fc696669656c64735f373319320967686561645f3431193215696669656c64735f373419322267686561645f343219322e696669656c64735f373519326768646174615f31313619326d68646174615f31313419327a67706169725f343119328c68646174615f31313519329d696669656c64735f37311932aa67686561645f34301932b6696669656c64735f37321932e568646174615f3131331932eb68646174615f3131311932f867706169725f343019330a68646174615f31313219331b696669656c64735f363919332867686561645f3339193334696669656c64735f373019336368646174615f31313019336968646174615f31303819337667706169725f333919338868646174615f313039193399696669656c64735f36371933a667686561645f33381933b2696669656c64735f36381933e168646174615f3130371933e76773656c665f39381933f368646174615f31303519340067706169725f333819341268646174615f313036193423696669656c64735f363519343067686561645f3337193442696669656c64735f363619347168646174615f3130341934776773656c665f393719348b68646174615f31303219349867706169725f33371934aa68646174615f3130331934bb696669656c64735f36331934c867686561645f33361934e2696669656c64735f363419351168646174615f31303119351778695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31193518786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119351978645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3119351a78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3119351b78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3119351c78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119351d78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119351e78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119351f786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3119352068646174615f3130301935226869676e6f72655f3219354878675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461193549786b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f6461746119354a78625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f6461746119354b78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f6461746119354c78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f6461746119354d78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119354e78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119354f78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461193550786a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f6461746119355167646174615f39391935c067646174615f39371935cd67706169725f33361935df67646174615f39381935f0696669656c64735f36311935fd67686561645f3335193613696669656c64735f36321936426773656c665f39361936486773656c665f393519364e67646174615f393519365b67706169725f333519366d67646174615f393619367e696669656c64735f353819368b67686561645f3333193697696669656c64735f35391936a467686561645f33341936b0696669656c64735f36301936e967646174615f39341936ef6773656c665f39341936f56773656c665f39331936fb67646174615f393219370867706169725f333419371a67646174615f393319372b696669656c64735f353519373867686561645f3331193744696669656c64735f353619375167686561645f333219375d696669656c64735f353719379667646174615f393119379c67646174615f38391937a967706169725f33331937bb67646174615f39301937cc696669656c64735f35341937f167646174615f38381937f767646174615f383619380467706169725f333219381667646174615f3837193827696669656c64735f353219383467686561645f3330193850696669656c64735f353319387f67646174615f383419388c67706169725f333119389e67646174615f38351938af696669656c64735f35311938d467646174615f38331938da67646174615f38311938e767706169725f33301938f967646174615f383219390a696669656c64735f343819391767686561645f3238193923696669656c64735f343919393067686561645f323919393c696669656c64735f353019397567646174615f383019397b78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f3119397c785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f3119397d785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f3119397e785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3119397f78605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f31193980785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3119398178595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f3119398267646174615f37391939846869676e6f72655f311939a678575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174611939a778595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174611939a8785a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174611939a9785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174611939aa785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174611939ab785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174611939ac78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174611939ad67646174615f3738193a0367646174615f3736193a1067706169725f3239193a2267646174615f3737193a33696669656c64735f3433193a4067686561645f3234193a4c696669656c64735f3434193a5967686561645f3235193a65696669656c64735f3435193a7267686561645f3236193a7e696669656c64735f3436193a8b67686561645f3237193a97696669656c64735f3437193ae467646174615f3734193af167706169725f3238193b0367646174615f3735193b14696669656c64735f3432193b3967646174615f3732193b4667706169725f3237193b5867646174615f3733193b69696669656c64735f3338193b7667686561645f3231193b82696669656c64735f3339193b8f67686561645f3232193b9b696669656c64735f3430193ba867686561645f3233193bb4696669656c64735f3431193bf7784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f64617461193bf8784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f64617461193bf9784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f64617461193bfa67646174615f3731193c2067646174615f3639193c2d67706169725f3236193c3f67646174615f3730193c50696669656c64735f3335193c5d67686561645f3139193c69696669656c64735f3336193c7667686561645f3230193c82696669656c64735f3337193cbb67646174615f3637193cc867706169725f3235193cda67646174615f3638193ceb696669656c64735f3332193cf867686561645f3137193d04696669656c64735f3333193d1167686561645f3138193d1d696669656c64735f3334193d5667646174615f3635193d6367706169725f3234193d7567646174615f3636193d86696669656c64735f3239193d9367686561645f3135193d9f696669656c64735f3330193dac67686561645f3136193db8696669656c64735f3331193df167646174615f3633193dfe67706169725f3233193e1067646174615f3634193e21696669656c64735f3236193e2e67686561645f3133193e3a696669656c64735f3237193e4767686561645f3134193e53696669656c64735f3238193e8c67646174615f3631193e9967706169725f3232193eab67646174615f3632193ebc696669656c64735f3234193ec967686561645f3132193ed5696669656c64735f3235193f04784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f64617461193f05784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f64617461193f06784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f64617461193f0778545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f64617461193f0878545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f64617461193f0967646174615f3630193f4767646174615f3538193f5467706169725f3231193f6667646174615f3539193f77696669656c64735f3233193f9c67646174615f3536193fa967706169725f3230193fbb67646174615f3537193fcc696669656c64735f3232193ff167646174615f3534193ffe67706169725f313919401067646174615f3535194021696669656c64735f323019402e67686561645f313119403a696669656c64735f323119406967646174615f353219407667706169725f313819408867646174615f3533194099696669656c64735f31381940a667686561645f31301940b2696669656c64735f31391940e167646174615f35301940ee67706169725f313719410067646174615f3531194111696669656c64735f313719413667646174615f343819414367706169725f313619415567646174615f3439194166696669656c64735f313619418b67646174615f343619419867706169725f31351941aa67646174615f34371941bb696669656c64735f31351941e867646174615f34341941f567706169725f313419420767646174615f3435194218696669656c64735f313419423d78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f6461746119423e78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f6461746119423f784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f64617461194240784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f64617461194241784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461194242784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f6461746119424378515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f64617461194244784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f6461746119424567646174615f34331942a867646174615f34311942b567706169725f31331942c767646174615f34321942d8696669656c64735f31331942fd67646174615f333919430a67706169725f313219431c67646174615f343019432d696669656c64735f313219435267646174615f333819435867646174615f333619436567706169725f313119437767646174615f3337194388686669656c64735f3919439566686561645f381943a1696669656c64735f31301943ae66686561645f391943ba696669656c64735f31311943f367646174615f33351943f978585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f311943fa78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f311943fb785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f311943fc67646174615f33341943fe6669676e6f726519441878565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f6461746119441978535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f6461746119441a785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f6461746119441b67646174615f33331944416773656c665f3932194448677478496e70757419444a68746172676574496419444c6972656465656d65727319444e737370656e64734578706563746564496e70757419445867707572706f736519445a665f5f636f6e6419446662737019446f635f5f311944796773656c665f393119447a65666e5f313619447c6a726563757273655f36371944826a726563757273655f3636194483666d61705f3138194492666974656d5f361944b16773656c665f39301944b2666b65795f31321944bc63785f341944c467646174615f33321944c6666d61705f31371944c8615f1944df666d61705f31351944e16a726563757273655f36351944e76a726563757273655f36341944e8666d61705f31361944f566686561645f371945226773656c665f383919452365666e5f31351945256a726563757273655f363319452b6a726563757273655f363219452c666c73745f313119453b666974656d5f35194556656d70685f381945576c5f5f7573656f70745f5f746e19455862746e194559715f5f7573656f70745f5f746e427974657319455a67746e427974657319455b6f5f5f7573656f70745f5f636f756e7419455c65636f756e7419455e64746e5f3119456069746e42797465735f3119456267636f756e745f3119459f64726571741945a0735f5f7573656f70745f5f617373657274696f6e1945a169617373657274696f6e1945a36b617373657274696f6e5f311945c36269641945c4676d6573736167651945d2647461736b1945df67646174615f33311945eb636e5f351945ec67646174615f33301946016862797465735f313019461766686173685f311946246773656c665f383719462565666e5f31331946266a63616c6c6261636b5f351946286a726563757273655f36311946306a726563757273655f36301946316773656c665f383819463265666e5f313419464366686561645f361946666773656c665f38361946676476685f3119466f6773656c665f3835194670627668194675666f757470757419467b6773656c665f383419467c646861736819467e6a63726564656e7469616c19469967646174615f323919469f6773656c665f38331946a76773656c665f38321946b46773656c665f38311946b565666e5f31321946bd6773656c665f38301946be65666e5f31311946c6676f7574707574731946cc66707265765f331946cd6874784f75747075741946d767646174615f32381946ec6762797465735f391946ee636e5f3419470f6773656c665f3739194710646e616d651947116a696e6e65725f74657374194720666d61705f31331947226a726563757273655f35391947286a726563757273655f3538194729666d61705f313419474566686561645f35194747666b65795f31311947496776616c75655f331947796773656c665f37381947806773656c665f37371947876773656c665f373619478e6773656c665f373519479567646174615f32371947ae67646174615f32361947b167646174615f32351947bb67646174615f32341947d06773656c665f37341947d76773656c665f37331947de6773656c665f37321947e56773656c665f37311947ec6773656c665f37301947f467646174615f32331947fc67646174615f323219480467646174615f323119481b6773656c665f36391948296773656c665f363819482f6773656c665f36371948356773656c665f363619483c6773656c665f36351948436773656c665f36341948446c6173736574436c6173735f31194846716d696e74696e67506f6c696379486173681948486b746f6b656e4e616d655f3119484a676f757465725f3119484c67696e6e65725f3219485467696e6e65725f31194855666d61705f3132194887656f7574657219488865696e6e6572194889666d61705f31311948c76773656c665f36331948cf67646174615f32301948d56773656c665f36321948db6773656c665f36311948e26773656c665f36301948e96773656c665f35391948f06773656c665f35381948f76773656c665f35371948fe6773656c665f35361949056773656c665f353419490664666e5f391949086a726563757273655f35371949106a726563757273655f35361949116773656c665f353519491265666e5f31301949396773656c665f353319494164615f313219494264625f313219494a6773656c665f353219494f6773656c665f35311949556773656c665f35301949566c73656c664c656e677468466e19495765737461727419495863656e6419495a696e6f726d616c697a6519495c64666e5f381949626773746172745f3119496464666e5f3719496a65656e645f3119497a65706f735f3119499464615f313119499564625f31311949a36773656c665f34391949a464666e5f361949ae6773656c665f34371949af64666e5f341949b0636e696c1949b26a726563757273655f35351949ba6a726563757273655f35341949bb6773656c665f34381949bc64666e5f351949c966686561645f341949f26773656c665f34351949f3656b65795f391949f467666e466f756e641949f56a666e4e6f74466f756e641949f76a726563757273655f35331949ff6a726563757273655f3532194a006773656c665f3436194a01666b65795f3130194a0d66686561645f33194a34656c73745f39194a3566636f6d705f33194a376a726563757273655f3531194a3d6a726563757273655f3530194a3e666c73745f3130194a4c66686561645f32194a4d667461696c5f33194a6163785f33194a62656c73745f37194a6366636f6d705f32194a656a726563757273655f3439194a6b6a726563757273655f3438194a6c656c73745f38194a7e66686561645f31194aa56164194aac6773656c665f3434194aad64666e5f33194aae64696e6974194ab06a726563757273655f3437194ab86a726563757273655f3436194ab96572656d5f31194aba656c73745f36194ada64615f3130194adb64625f3130194ae363615f39194ae463625f39194ae5646f705f31194ae76a726563757273655f3435194af56a726563757273655f3434194af6666b6579735f34194af768726573756c745f31194b04656b65795f38194b06667461696c5f32194b08666974656d5f34194b3d626f70194b3e63615f38194b3f63625f38194b416a726563757273655f3433194b4f6a726563757273655f3432194b50666b6579735f33194b5166726573756c74194b5e656b65795f37194b60667461696c5f31194b626373756d194b986773656c665f3433194b99656d70685f36194b9b656d70685f37194b9d6a726563757273655f3431194ba36a726563757273655f3430194ba4666d61705f3130194bdb6773656c665f3432194bde6a726563757273655f3339194be46a726563757273655f3338194be5656d61705f39194c0a68746f6b656e735f31194c0c6a726563757273655f3337194c126a726563757273655f3336194c1368746f6b656e735f32194c3a6773656c665f3431194c3b66707265666978194c4a6773656c665f3430194c4b656f74686572194c536773656c665f3339194c576773656c665f3338194c586d5f5f7573656f70745f5f616461194c5963616461194c5f66707265765f31194c6066706169725f39194c62686d70685f64617461194c646b746f6b656e735f64617461194c6e656d70685f35194c8d66746f6b656e73194c9366707265765f32194c9467706169725f3130194c966f746f6b656e5f6e616d655f64617461194c98687174795f64617461194c9e6c746f6b656e5f6e616d655f31194ca463717479194d0e6773656c665f3337194d226762797465735f38194d24636e5f33194d266a726563757273655f3335194d2c6a726563757273655f3334194d2d63695f36194d3d626230194d6567696e6578745f32194d7e6776616c69645f35194d7f6463315f32194d8963635f32194dcf67696e6578745f31194de86776616c69645f33194de96463315f31194dfe6776616c69645f34194dff6463325f31194e0963635f31194e5965696e657874194e726576616c6964194e73626331194e886776616c69645f31194e89626332194e9e6776616c69645f32194e9f626333194ea96163194efb6462797465194efc6a63616c6c6261636b5f34194f1c6773656c665f3336194f1f6d73686f775f706f736974697665194f3b63785f32194f5a6773656c665f3335194f5b636e5f32194f5d6a726563757273655f3333194f676a726563757273655f3332194f6863785f31194f6963706f73194f6a6762797465735f37194faf6773656c665f3334194fc46773656c665f3333194fcc67646174615f3139194fcd6d63616c6c6261636b5f6f6b5f32194fce6e63616c6c6261636b5f6e6f6b5f35194fe367646174615f3138194fe46d63616c6c6261636b5f6f6b5f31194fe56e63616c6c6261636b5f6e6f6b5f34194ffb67646174615f3137194ffc6b63616c6c6261636b5f6f6b194ffd6e63616c6c6261636b5f6e6f6b5f331950126773656c665f3332195013656d70685f33195015656d70685f341950176a726563757273655f333119501d6a726563757273655f333019501e656d61705f3819504a67646174615f313619505467646174615f313519506166706169725f3819506367696e6465785f35195065686669656c64735f381950be67646174615f31341950cb66706169725f371950cd657461675f331950cf686669656c64735f37195116666c6973745f3319512169746573745f6865616419512269746573745f7461696c195123666c6973745f3219514467646174615f313319515166706169725f3619515367696e6465785f34195155686669656c64735f361951cb67646174615f31321951da67646174615f31311951e467646174615f31301951f366646174615f3919520066706169725f3519520267696e6465785f33195204686669656c64735f35195249636e5f3119524a66646174615f3819525f6762797465735f3619527466646174615f3719527567696e6465785f3219527666746573745f6119527766746573745f6219528466706169725f34195296686669656c64735f341952b0647461696c1952f46773656c665f33311952f7656c73745f341952f96a726563757273655f32391952ff6a726563757273655f3238195300656c73745f3519531866646174615f3619531963695f351953256773656c665f333019532b6773656c665f32391953326773656c665f32381953396773656c665f32371953406773656c665f3236195346656d70685f321953476a746f6b656e5f6e616d651953576a6173736574436c61737319535863695f34195368656d70685f3119536a69746f6b656e4e616d6519538f6773656c665f3235195394657461675f32195395686669656c64735f331953a36974785f69645f7374721953a569696e6465785f7374721953b663695f331953c16a74785f69645f646174611953cd6a63616c6c6261636b5f331953ce66646174615f351953d06e63616c6c6261636b5f6e6f6b5f321953e86773656c665f32341953ed657461675f311953ee686669656c64735f321954026762797465735f3519540e6a63616c6c6261636b5f3219540f66646174615f341954116e63616c6c6261636b5f6e6f6b5f3119542967696e6465785f3119542a6a63616c6c6261636b5f3119542b666c6973745f3119542d6a726563757273655f32371954356a726563757273655f3236195436656c73745f3319543763695f3219545064686561641954676863616c6c6261636b19546866646174615f3319546a6c63616c6c6261636b5f6e6f6b19547766706169725f3319548f6773656c665f32331954926e73686f775f646174615f6c6973741954956a726563757273655f323519549666646174615f3219549c6a726563757273655f323419549d66646174615f311954aa66706169725f321954ac637461671954ae686669656c64735f311954c1666974656d5f331954d7656d61705f371954e366706169725f311954e5656b65795f361954e76776616c75655f32195509656c73745f32195515666974656d5f321955216776616c75655f3119552b6762797465735f34195534646c6973741955356973686f775f6974656d19553b647072657619553c666974656d5f311955596773656c665f323219555e6a726563757273655f32331955826a726563757273655f323219558363695f311955846762797465735f321955866762797465735f331955a761781955b26773656c665f32301955b364666e5f321955b4617a1955b66a726563757273655f32311955be6a726563757273655f32301955bf6773656c665f32311955c0637a5f311955de61731955e46574785f69641955e5636964781955f164617267301955f264617267311955fb63615f371956026773656c665f31391956086773656c665f31381956096576616c75651956156773656c665f313719561c6773656c665f31361956236773656c665f313519562a6773656c665f313419562c647061697219562e65696e646578195630666669656c64731956526464617461195653616919566b63615f3619566c63625f3719567a6773656c665f313319568563615f3519568663625f3619568d65615f71747919568e65625f71747919569663615f3419569763625f3519569866636f6d705f3119569a6a726563757273655f31391956a46a726563757273655f31381956a5666b6579735f321956b2656b65795f351956d9656d61705f351956da636d70681956dc6a726563757273655f31371956e26a726563757273655f31361956e3656d61705f3619571764636f6d7019571863615f3319571963625f3419571b6a726563757273655f31351957256a726563757273655f3134195726666b6579735f31195733656b65795f3419575863615f3219575963625f3319575b65614b65797319575d6a726563757273655f313319575f6b756e69717565424b65797319576c6a726563757273655f313219576d646b65797319576e656d61705f3419577b656b65795f331957ad63615f311957ae63625f321957b06a726563757273655f31311957b86a726563757273655f31301957b9656c73745f311957ba6372656d1957d8636c73741957d9656b65795f321957de646974656d1957e46773656c665f31311957e562666e1957e769726563757273655f391957ef69726563757273655f381957f06773656c665f31321957f164666e5f31195816656d61705f3219581869726563757273655f3719581e69726563757273655f3619581f656d61705f33195842636d6170195843636b657919584569726563757273655f3519584d69726563757273655f3419584e656d61705f3119584f656b65795f3119588363625f311958996773656c665f31301958a06673656c665f391958a76673656c665f381958ae6673656c665f371958b96673656c665f351958bc69726563757273655f331958c269726563757273655f321958c36673656c665f361958c5616e1958d8696865785f62797465731959056673656c665f3319590869726563757273655f3119592e677265637572736519592f6673656c665f341959306562797465731959326564696769741959346762797465735f3119596c656d73675f321959736673656c665f321959796673656c665f3119597e6473656c661959876161195988616219599664636f6e64195997656d73675f311959aa636d7367", "termDescriptions": "b81b1903dd646d61696e1903df683c61737369676e3e1903e1683c61737369676e3e190e276169190e2861691911e5635f76321911e6635f76321911e7635f76321911e8635f76321911fc636d6873191250636d70681916e66473656c6619175d647478696e19177b6473656c661917f5647478696e1918126473656c66191815646164647219181d6473656c6619185c6473656c6619188f6473656c661918eb6473656c6619191e6473656c661919466473656c66191a0b6473656c66191a2e6473656c66191a486473656c6619444a756d75737446696e64496e70757452656465656d6572" } },
      scriptHash: "39190c709e61109a6128b62904ebbe9c9a9899d874407b1531158aed",
      config: this.parseCapoMinterJSONConfig({
        seedTxn: { "bytes": "2169027ffbb72ad46b19bb0196ad0934097c67d34412ef6147ab9790755c765d" },
        seedIndex: "1"
      })
    }
  };
  static isPreconfigured = true;
  get modules() {
    return [
      ...super.modules
      // NOTE: Recommended NOT to reference a global notion of record definition for 
      // protocol settings. Instead: make each other module define its own settings area
      // and its abstract "record with my own needed settings", without being subject 
      // to all changes that may arise over time in the concrete & aggregated ProtocolSettings.
      //
      // Any actual dependencies on different areas of protocol settings spanning different 
      // scripts in the contract can be explicitly imported using those abstract definitions, 
      // and then they'll be explicitly subject to compilation changes when the sub-parts
      // of settings definitions are changed.  Of course, the ProtocolSettingsController will
      // require updating when any sub-part of the settings is changed.
      // ProtocolSettings,
      // for features from stellar tokenomics engine;
      // FundedPurposeData,
      // MarketSaleData,
    ];
  }
}

export { DredCapoBundle as default };
//# sourceMappingURL=DredCapo.hlb.mjs.map
