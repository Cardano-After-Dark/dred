import { DelegatedDataBundle } from '@donecollectively/stellar-contracts';
import { makeSource } from '@helios-lang/compiler-utils';
import { N as NeighborhoodSettings_hl } from '../NeighborhoodSettings.mjs';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';

const NeighborhoodPolicy_hl = makeSource(
  "module NeighborhoodPolicy\n\n// Not yet specialized\n// original notes about (un)specialization follow:\n\n\n//  //! provides a basic version, not yet specialized,\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    mkUutTnFactory\n} from CapoMintHelpers\n\n// XXX don't include ProtocolSettings here.  Instead, import an abstract settings\n// definition instead, having only the settings area you need.\n// import {\n//     ProtocolSettings\n// } from ProtocolSettings\n\nimport {\n    NeighborhoodData\n} from NeighborhoodData\n\nimport {\n    AbstractSettingsForNeighborhood as ProtocolSettings\n} from NeighborhoodSettings\n\nimport {\n    CapoCtx,\n    mkCapoCtx,\n    DgDataDetails,\n    mkTv,\n    AnyData \n} from CapoHelpers\n\nimport {\n    TODO,\n    REQT    \n} from StellarHeliosHelpers\n\n// import {\n//     TierLookupResult\n// } from TieredScale\n//\n// import {\n//     PriceNeeded,\n//     validateRequiredValue,\n//     ValueValidator\n// } from PriceValidator\n\n\n\nenum DelegateDatum {\n    // we only have to use this if we decide Constr#0 is essential for practical CIP-68 compat\n    Cip68RefToken {  \n        // NOTE: this datum contains reference details for a user-facing token minted according to the cip-68 standard \n        //  - the asset name (in the Value of this UTXO) MUST be:  #000643b0 + tokenName\n        //     - this asset name can serve user-side tokens using the CIP-68 \"222\", \"333\" or other token types.\n        //     - the user-side asset name with its (222/333/etc) CIP-67 prefix and \n        //       ... its remaining tokenName will be matched to this asset name (#000643b0 +tokenName)\n        //       ... to locate this reference datum; this datum content will be interpreted\n        //       ... according to the semantics implied by the user-side asset-name prefix.\n        //\n        //  - The attached 'meta' field in this Datum variant contains the relevant data, depending on the token type\n        //    - for \"222\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"files\" :   // {mediaType, src (url), name?, ... otherFields)\n        //        - \"image\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //    - for \"333\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"ticker\" : String\n        //        - \"url\": String  // project URL\n        //        - \"logo\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //                    - it must have a mime type `image/png`, `image/jpeg` or `image/svg+xml`\n        //        - \"decimals\" : Int\n\n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data\n        // otherDetails: Data // can be Unit () or anything else\n    }\n\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: NeighborhoodData\n        version: Int\n        otherDetails: Data \n    }\n\n    // func validateSettings(self, settings: ProtocolSettings) -> Bool{\n    // ... get the settings object from the contract manifest via cctx\n    //     assert(false, \"not valid (stubbed)\");\n    //     settings.serialize() != self.serialize() &&\n    //     true\n    // }\n}\n\n\nenum MintingActivity {\n    CreatingRecord{\n        seed: TxOutputId\n    }\n}\n\n//! The minting delegate can also be used as a general spending \n// delegate (this is the default arrangement during the Capo \n// charter mint).  These activities are required by the Capo when\n// spending utxos having DelegatedDatum type.\nenum SpendingActivity {\n    UpdatingRecord {\n        id: ByteArray\n    }\n}\n\nfunc ensureConstrainedTxValidity() -> () {\n    assert(\n        tx.time_range.end - tx.time_range.start \n            <= Duration::HOUR,\n        \"txn duration err\"\n    )\n}\n\nfunc daysInFuture(nowPlusDays: Int) -> TimeRange {\n    ensureConstrainedTxValidity();\n    expiryDuration : Duration = Duration::DAY * nowPlusDays;\n    leeway : Duration = 1 * Duration::HOUR;\n    latestAcceptable : Time = tx.time_range.end + expiryDuration + leeway;\n    \n    TimeRange::new(\n        tx.time_range.start + expiryDuration,\n        latestAcceptable\n    )\n}\n\nenum BurningActivity {\n    DeletingRecord {\n        id: ByteArray\n    }\n}\n\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        activity: BurningActivity\n    }\n    \n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // record id created from seed\n    }\n\n    UpdatingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    DeletingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        // todo: change this back when the recursive enum's `__is_valid_data not found` error is resolved\n        activities: []Data // actually a DelegateActivity\n    }\n    // this function gives a general-purpose implementation of checking for \n    // valid uut minting. \n    //\n    // A specialization might modify it to use different policies\n    // or enforce additional requirements\n    // \n    // func genericUutMinting(self, \n    //     mdd: DelegateDatum\n    // ) -> Bool {\n    //     //!!! replace with an activity using the same seed-txn pattern:\n    //     // MintingActivities::SomethingMintingUuts{sTxId, sIdx, purposes} = self;\n    //     DelegateDatum::IsDelegation{dd} = mdd;\n    //     returnsAuthzToken : Bool = mustReturnValueToScript(dd.tvAuthorityToken());\n\n    //     o : []TxOutput = get_cont_outputs();\n    //     if (o.length != 1) { error(\"single utxo only\") };\n\n    //     print (\"in unsp_MD\");\n    //     isOk : Bool = returnsAuthzToken && \n\n    //     unmodifiedDelegation( /* isD, same as mdd */ mdd.serialize()) &&\n\n    //     // This call can serve as a template for enforcing expected mints \n    //     // of uuts (and additional token values) in validation of application-\n    //     // specific activities, given (mph, sTxId, sIdx, purposes)\n    //     validateUutMinting(\n    //         mph: dd.mph,\n    //         seedTxId: sTxId, \n    //         seedIdx: sIdx, \n    //         purposes: purposes,\n    //         // otherMintedValue: ()\n    //         mkTokenName: mkUutTnFactory(sTxId, sIdx)\n    //     );\n\n    //     isOk\n    // }\n\n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {\n        print(\"  -- addl dgt val \");\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            CapoLifecycleActivities => {\n                // only mint/spend delegates answer to CapoLifecycleActivities\n                error(\"unreachable in a dgDataPolicy\")\n            },\n            MintingActivities{VMA} => VMA.switch {\n                CreatingRecord{seed} => {\n                    print(\"registering a new Neighborhood...\");\n\n                    REQT(\"the operator must provide a valid minting seed\");\n                    REQT(\"the seed must have a Neighborhood.operator token in it\");\n                    mkTn : (String) -> String = mkUutTnFactory(seed);\n\n                    // mints a Neighborhood UUT\n                    mintingOk : Bool = validateUutMinting(\n                        mph: priorMddd.dd.mph,\n                        seed: seed,\n                        purposes: []String{\"nbhd\"},\n                        // otherMintedValue: ()\n                        mkTokenName: mkTn,\n                        // WE ARE the mint delegate.\n                        needsMintDelegateApproval: false \n                    );\n\n                    assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n                    // _settings = ProtocolSettings::from_data(cctx.getManifestedData(\"currentSettings\"));\n\n                    // vaultValue: Value = mkTv(priorMddd.dd.mph, mkTn(\"lbmVault\"));\n                    // print(\"vaultValue: \"+ vaultValue.show());\n                    newRecData : DgDataDetails = cctx.creatingDgData(mkTn(\"nbhd\"));\n                    _newDataOut : TxOutput = newRecData.output();\n                        //cctx.hasDelegatedDataOutput(vaultValue);\n                    TODO(\"send the fee to Treasury w/ acctg info\");\n\n                    reg: NeighborhoodData = NeighborhoodData::from_data(\n                        newRecData.outputData()\n                    );\n\n                    assert(\n                        tx.time_range.end - tx.time_range.start \n                            <= Duration::HOUR,\n                        \"txn duration err\"\n                    );\n                    // has the right expiration date from settings\n                    // acceptableExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                    // has the member-token reference\n                    memberToken : String = reg.memberToken;\n                    if (!memberToken.starts_with(\"member-\")) { \n                        error(\"invalid member token name\"\n                    ) };\n                    memberTokenAc : AssetClass = AssetClass::new(\n                        priorMddd.dd.mph, memberToken.encode_utf8()\n                    );\n\n                    // has the member-token in the txn\n                    tx.inputs.find_safe((i: TxInput) -> Bool {\n                        i.value.get_safe(memberTokenAc) == 1\n                    }).switch {\n                        None => error(\"missing member token\"),\n                        Some => true\n                    } &&\n                    reg.validate() &&\n                    mintingOk\n                }\n            },\n            SpendingActivities{VSA} => {\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n\n                VSA.switch {                    \n                    UpdatingRecord{recId} => {\n                        print(\"updating the registration details for a single Neighborhood...\");\n\n                        hasRecInput : (TxInput) -> Bool = \n                            cctx.mkDelegatedDataPredicate(\"nbhd\", recId);                        \n                        // _settings = ProtocolSettings::from_data(\n                        //     cctx.getManifestedData(\"currentSettings\")\n                        // );                        \n                        hasRecOutput : (TxOutput) -> Bool = \n                            cctx.mkDelegatedDataOutputPredicate(\"nbhd\", recId);\n    \n                        tx.inputs.filter(hasRecInput).for_each( (utxo : TxInput) -> () {\n                            // they're all album vaults, because of the above.\n                            _inputData : NeighborhoodData = \n                                NeighborhoodData::from_data(utxo.datum.inline);\n                            updatedUtxo : TxOutput = tx.outputs.find(hasRecOutput);\n                            updatedData : NeighborhoodData = \n                                NeighborhoodData::from_data(updatedUtxo.datum.inline);\n\n                            // possibly move this to a separate SpendingActivity\n\n                            // REQT(\"the lastHeartbeat must be set to the current time\");\n                            // assert(isNowish(updatedData.lastHeartbeat), \"lastHeartbeat must be set to the current time\");\n\n                            // _freshExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                            assert(updatedData.validate(), \"<-- that throws; this can't.\"); // throws if invalid\n                            ()\n                        });\n                        true\n                    }\n                }\n            },\n            BurningActivities => error(\"no burn activity here yet\"),\n            _ => false\n        } || tx.serialize() == priorMddd.serialize()        \n    }\n\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way\" );\n        []String{ \n            // \"nothingHereYet\",\n        }\n    }\n\n    //! Used only for validating non-IsDelegation datum types and activities.\n    // if you have any special admininstrative data structures that inform \n    // ...  your minting policy, this might be useful.  Otherwise, and typically,\n    // ... you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation(self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/DredNeighborhood/NeighborhoodPolicy.hl", // source filename
    moduleName:  "NeighborhoodPolicy",
});

const NeighborhoodData_hl = makeSource(
  "module NeighborhoodData\n\n// import {\n//     AbstractSettingsForNodeOperator as ProtocolSettings\n// } from NeighborhoodSettings\n\nenum SubscriptionFeeFrequency {\n    Epoch {\n        fee: Value\n    }\n    Monthly {\n        fee: Value\n    }\n    Yearly {\n        fee: Value\n    }\n}\n\nenum FeeSource {\n    EndUser\n    SponsorContract {\n        sponsorContract: ScriptHash // or Address?\n    }\n    // CapoRole {\n    //     role: String\n    // }\n}\n\nenum RevenueModel {\n    TransactionBased {\n        minTxFee: Value\n        maxTxFee: Option[Value]\n        chargeTo: FeeSource\n    }\n    Subscription {\n        subscriptionFee: []SubscriptionFeeFrequency\n    }\n}\n\nstruct AppInfo {\n    url: String \"url\"\n    revenueModel: []RevenueModel \"revMdl\"\n}\n\nstruct NodeOpsInfo {\n    minNodes: Int \"cMin\"\n    maxNodes: Int \"cMax\"\n    minNodeOperatorStake: Value \"minStk\"\n    minUptime: Int \"minUpt\"\n}\n\nstruct NeighborhoodData {\n    id : ByteArray \"@id\" // = \"nbhd-XXXXyyyyZZZZ\"\n    type : String \"tpe\" // = \"nbhd\"\n\n    memberToken: String \"mt\"\n    name: String \"nm\"\n    description: String \"dsc\"\n    appInfo: AppInfo \"app\"\n    opsInfo: NodeOpsInfo \"ops\"\n\n\n    func validate(self) -> Bool {\n        assert(true || /*never executed*/ self == self, \"no way\");\n        // assert(self.memberToken != null, \"memberToken is null\");\n        true\n    }\n}", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/DredNeighborhood/NeighborhoodData.hl", // source filename
    moduleName:  "NeighborhoodData",
});

class NeighborhoodBundle extends DelegatedDataBundle.usingCapoBundleClass(DredCapoBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "8cfe457712446efd045a29ccc37fdffb4502fec575f437ede11598b8f1d22bf7", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "src/DredNeighborhood/NeighborhoodData.hl": "32bfa26638cc5e021efe1745253651aa23dd4dcda418bd6ebc4efd2eb4d7fc4b", "src/DredNeighborhood/NeighborhoodSettings.hl": "d2c783e70060b9cb47fa985bddbf427a261d32f19ce0c120c9f859332f9d4db8", "generatedSpecializedDelegateModule": "8d5c43bcb251e2d37cfd4bdc8a7e3bd46f6a480209907f5f1a146c0d99f9754a", "src/DredNeighborhood/NeighborhoodPolicy.hl": "ef6f742d2c5a1eb5adaa52d397d68ed9b2de5d5a8a8c19b33fc0f18b5938b311", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##524e65696768626f72686f6f64506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87980;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": '(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common13 = __core__unConstrData(__CONTEXT);\n    __common14 = __core__sndPair(__common13);\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__bytearray__show = (self_5) -> {\n        recurse_5 = (recurse_4, self_6) -> {\n            n_1 = __core__lengthOfByteString(self_6);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n_1),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);\n                    recurse_3 = (recurse_2, self_4, bytes_1) -> {\n                        digit = __core__modInteger(self_4, 16);\n                        bytes_2 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes_1);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_4, 16),\n                            () -> {\n                                bytes_2\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_2)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_3, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_3, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_5)\n    };\n    __helios__value__new = (assetClass, i_1) -> {\n        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_1, token_name) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_18) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))))))\n    };\n    __helios__scriptcontext__tx = __core__headList(__common14);\n    __helios__common__assert_constr_index = (data, i_2) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),\n            () -> {\n                data\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__fold = (self_19, fn, z) -> {\n        recurse_7 = (recurse_6, self_20, z_1) -> {\n            __core__chooseList(self_20, () -> {\n                z_1\n            }, () -> {\n                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))\n            })()\n        };\n        recurse_7(recurse_7, self_19, z)\n    };\n    __helios__int__show = (self_21) -> {\n        __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {\n            bytes_4 = __core__consByteString(__core__addInteger(__core__modInteger(i_3, 10), 48), bytes_3);\n            __core__ifThenElse(\n                __core__lessThanInteger(i_3, 10),\n                () -> {\n                    bytes_4\n                },\n                () -> {\n                    recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_21, 0),\n            () -> {\n                __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))\n            },\n            () -> {\n                recurse_9(recurse_9, self_21, #)\n            }\n        )())\n    };\n    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {\n        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {\n            callback_ok(__core__unBData__safe(data_5))\n        })()\n    };\n    __helios__value__show = (self_29) -> {\n        __helios__common__fold(self_29, (prev_1, pair_3) -> {\n            mph_data = __core__fstPair(pair_3);\n            tokens_data = __core__sndPair(pair_3);\n            __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph_4, #),\n                    () -> {\n                        ""\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph_4), "\n")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    ""\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_4) -> {\n                        token_name_data = __core__fstPair(pair_4);\n                        qty_data = __core__sndPair(pair_4);\n                        __helios__common__unBData__safe(token_name_data, (token_name_2) -> {\n                            __core__chooseData(qty_data, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph_4, #),\n                                    () -> {\n                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                    },\n                                    () -> {\n                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                            n = __core__lengthOfByteString(token_name_2);\n                                            recurse_1 = (recurse, i) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(i, n),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        b0 = __core__indexByteString__safe(token_name_2, i);\n                                                        __core__ifThenElse(\n                                                            __core__lessThanEqualsInteger(b0, 127),\n                                                            () -> {\n                                                                recurse(recurse, __core__addInteger(i, 1))\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                                                    () -> {\n                                                                        inext_2 = __core__addInteger(i, 2);\n                                                                        __core__ifThenElse(\n                                                                            __core__lessThanEqualsInteger(inext_2, n),\n                                                                            () -> {\n                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_5, c1_2) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        valid_5,\n                                                                                        () -> {\n                                                                                            c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                                                            __core__ifThenElse(\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__lessThanEqualsInteger(128, c_2),\n                                                                                                    () -> {\n                                                                                                        __core__lessThanEqualsInteger(c_2, 2047)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )(),\n                                                                                                () -> {\n                                                                                                    recurse(recurse, inext_2)\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                })\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                                                            () -> {\n                                                                                inext_1 = __core__addInteger(i, 3);\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(inext_1, n),\n                                                                                    () -> {\n                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_3, c1_1) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                valid_3,\n                                                                                                () -> {\n                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_4, c2_1) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            valid_4,\n                                                                                                            () -> {\n                                                                                                                c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__lessThanEqualsInteger(2048, c_1),\n                                                                                                                        () -> {\n                                                                                                                            __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )(),\n                                                                                                                    () -> {\n                                                                                                                        recurse(recurse, inext_1)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    })\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        })\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                                                    () -> {\n                                                                                        inext = __core__addInteger(i, 4);\n                                                                                        __core__ifThenElse(\n                                                                                            __core__lessThanEqualsInteger(inext, n),\n                                                                                            () -> {\n                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid, c1) -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        valid,\n                                                                                                        () -> {\n                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_1, c2) -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    valid_1,\n                                                                                                                    () -> {\n                                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 3)), (valid_2, c3) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                valid_2,\n                                                                                                                                () -> {\n                                                                                                                                    c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__lessThanEqualsInteger(65536, c),\n                                                                                                                                            () -> {\n                                                                                                                                                __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                false\n                                                                                                                                            }\n                                                                                                                                        )(),\n                                                                                                                                        () -> {\n                                                                                                                                            recurse(recurse, inext)\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            false\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        })\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            };\n                                            recurse_1(recurse_1, 0),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name_2)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name_2)\n                                            }\n                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                    }\n                                )()\n                            }, () -> {\n                                ""\n                            })()\n                        }, () -> {\n                            ""\n                        })\n                    }, prev_1)\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                })())\n            }, () -> {\n                ""\n            }))\n        }, "")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common14));\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_17 = (recurse_16, lst_2) -> {\n            __core__chooseList(lst_2, () -> {\n                error()\n            }, () -> {\n                item_3 = __core__headList__safe(lst_2);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),\n                    () -> {\n                        item_3\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(lst_2))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))\n    };\n    __helios__value__get_safe = (self_52, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_4))\n                    }\n                )()\n            })()\n        }, self_52)\n    };\n    __helios__txoutputdatum__inline = (self_53) -> {\n        pair_5 = __core__unConstrData(self_53);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__filter = (self_58, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_59, fn_4) -> {\n            __core__chooseList(self_59, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_59);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_59), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_59), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_58, fn_3)\n    };\n    __helios__common__mStruct_field = (self_61, name_1) -> {\n        map_5 = __core__unMapData(self_61);\n        name_data = __core__bData(name_1);\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_6);\n                key_3 = __core__fstPair(head_3);\n                value_2 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_3, name_data),\n                    () -> {\n                        value_2\n                    },\n                    () -> {\n                        recurse_26(recurse_26, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__value__contains_policy = (self_62, mph_5) -> {\n        mph_6 = __core__bData(mph_5);\n        recurse_29 = (recurse_28, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(map_7))\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_62)\n    };\n    __helios__value__is_zero = (self_63) -> {\n        recurse_33 = (recurse_32, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_8)));\n                    recurse_31 = (recurse_30, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_31(recurse_31, tokens_1),\n                    () -> {\n                        recurse_32(recurse_32, __core__tailList__safe(map_8))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_33(recurse_33, self_63)\n    };\n    __helios__value__get_policy = (self_64, mph_7) -> {\n        mph_8 = __core__bData(mph_7);\n        recurse_35 = (recurse_34, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, self_64)\n    };\n    __helios__value__get_inner_map_int = (map_10, key_4) -> {\n        recurse_37 = (recurse_36, map_11, key_5) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_5)\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_10, key_4)\n    };\n    __helios__common__any = (self_65, fn_6) -> {\n        recurse_41 = (recurse_40, self_66, fn_7) -> {\n            __core__chooseList(self_66, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_7(__core__headList__safe(self_66)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_66), fn_7)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_65, fn_6)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        (aKeys) -> {\n            recurse_45 = (recurse_44, keys, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_7 = __core__fstPair(__core__headList__safe(map_14));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_7)\n                        }),\n                        () -> {\n                            recurse_44(recurse_44, keys, __core__tailList__safe(map_14))\n                        },\n                        () -> {\n                            __core__mkCons(key_7, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))\n                        }\n                    )()\n                })()\n            };\n            b_4 = recurse_45(recurse_45, aKeys, b_5);\n            recurse_43 = (recurse_42, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_43(recurse_43, b_4, aKeys)\n        }(recurse_39 = (recurse_38, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))\n            })()\n        };\n        recurse_39(recurse_39, a_5))\n    };\n    __helios__value__get_inner_map = (map_15, mph_9) -> {\n        recurse_49 = (recurse_48, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, map_15)\n    };\n    __helios__value____add = (a_8, b_8) -> {\n        recurse_51 = (recurse_50, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_9 = __core__headList__safe(keys_2);\n                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));\n                item_5 = (a_6, b_6) -> {\n                    recurse_47 = (recurse_46, keys_1) -> {\n                        __core__chooseList(keys_1, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_8 = __core__headList__safe(keys_1);\n                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_8), __helios__value__get_inner_map_int(b_6, key_8));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_6, b_6))\n                }(__helios__value__get_inner_map(a_8, key_9), __helios__value__get_inner_map(b_8, key_9));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_51(recurse_51, __helios__value__merge_map_keys(a_8, b_8))\n    };\n    __helios__txinput__address = (self_82) -> {\n        self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_82))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n    };\n    __helios__common__find_safe = (self_103, fn_13) -> {\n        recurse_65 = (recurse_64, self_104, fn_14) -> {\n            __core__chooseList(self_104, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_104);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_104), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_103, fn_13)\n    };\n    __helios__list[__helios__txoutput]__find = (self_105, fn_15) -> {\n        recurse_67 = (recurse_66, lst_12) -> {\n            __core__chooseList(lst_12, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__headList__safe(lst_12);\n                __core__ifThenElse(\n                    fn_15(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_105)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_111) -> {\n        d = __helios__common__mStruct_field(self_111, #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_5, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_7);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_7)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_5)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_115) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_115)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_135, mph_11) -> {\n        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_135);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_142, mph_14) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_142));\n            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_60 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_60, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_89 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_89)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_9))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_141 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_141, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_142);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_163) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_163)))))))\n    };\n    __module__CapoHelpers__DgDataDetails[]__output = (self_191) -> {\n        __cond_28 = __core__headList(self_191);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 2),\n            () -> {\n                (self_9) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 3),\n                    () -> {\n                        (self_11) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                        }\n                    },\n                    () -> {\n                        (__27) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_196) -> {\n        __cond_30 = __core__headList(__core__tailList(self_196));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 0),\n            () -> {\n                (__lhs_0_59) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 1),\n                    () -> {\n                        (__lhs_0_58) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_51) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_51))));\n                            (activity) -> {\n                                __common28 = __core__unConstrData(activity);\n                                __common29 = __core__fstPair(__common28);\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__common29, 2),\n                                    () -> {\n                                        (__lhs_0_57) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__common29, 4),\n                                            () -> {\n                                                (__lhs_0_56) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__common29, 1),\n                                                    () -> {\n                                                        (__lhs_0_55) -> {\n                                                            activity\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__common29, 5),\n                                                            () -> {\n                                                                (__lhs_0_54) -> {\n                                                                    activity\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__common29, 3),\n                                                                    () -> {\n                                                                        (__lhs_0_53) -> {\n                                                                            activity\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_52) -> {\n                                                                            activity\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_2)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_30)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_197, key_14) -> {\n        __helios__common__map_get(self_197, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_209) -> {\n        __cond_35 = __core__headList(__core__tailList(self_209));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),\n            () -> {\n                (self_168) -> {\n                    data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_168)));\n                    __helios__common__assert_constr_index(data_139, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),\n                    () -> {\n                        (self_170) -> {\n                            data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_170)));\n                            __helios__common__assert_constr_index(data_139, 0)\n                        }\n                    },\n                    () -> {\n                        (__30) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_35)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address_1, self_210) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_210)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_210);\n        __cond_36 = __core__headList(__core__tailList(self_210));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 2),\n            () -> {\n                (__lhs_0_67) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_54 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo_2) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_2))), capoAddr),\n                            () -> {\n                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo_2))))), charterAc_2);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54)))))), 0)\n                }\n            },\n            () -> {\n                (__31) -> {\n                    error()\n                }\n            }\n        )()(__cond_36)\n    };\n    __module__CapoHelpers__CapoCtx[]__address_2 = (self_213) -> {\n        __helios__txinput__address(__cond_37 = __core__headList(__core__tailList(self_213));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),\n            () -> {\n                (self_11) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 2),\n                    () -> {\n                        (self_11) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                        }\n                    },\n                    () -> {\n                        (__32) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_37))\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_216, __useopt__typeName, id_3) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                "nbhd"\n            },\n            () -> {\n                ""\n            }\n        )();\n        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_216);\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_161 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_161)), 2),\n                        () -> {\n                            (__lhs_0_74) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_161);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, ""),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "nbhd")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_3, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_3)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__33) -> {\n                                false\n                            }\n                        }\n                    )()(data_161)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_221) -> {\n        charter_2 = __core__headList(__core__tailList(self_221));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_90) -> {\n                    self_221\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_89) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_85) -> {\n                            mph_23 = __core__unBData(__core__headList(self_221));\n                            charterAc_4 = __helios__assetclass__new(mph_23, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_47) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_47)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_87) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_47)\n                            }(self_138 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_138, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_222) -> {\n        charter_3 = __core__headList(__core__tailList(self_222));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_94) -> {\n                    self_222\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_93) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_91) -> {\n                            mph_24 = __core__unBData(__core__headList(self_222));\n                            (utxo_5) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_24), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_24, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_138 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_138, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_232, fn_25) -> {\n        recurse_87 = (recurse_86, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_43 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_87(recurse_87, self_232)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_240, comp_4) -> {\n        recurse_57 = (recurse_56, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_55 = (recurse_54, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_55(recurse_55, tail_2)\n            })()\n        };\n        recurse_57(recurse_57, self_240)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_28, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_241) -> {\n                recurse_93 = (recurse_92, lst_24) -> {\n                    __core__chooseList(lst_24, () -> {\n                        __core__mkNilPairData(())\n                    }, () -> {\n                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))\n                    })()\n                };\n                recurse_93(recurse_93, self_241)\n            }(recurse_53 = (recurse_52, rem_1) -> {\n                __core__chooseList(rem_1, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));\n                    tnBytes_1 = __core__encodeUtf8(mkTokenName_1(purpose_2));\n                    __core__chooseUnit(__core__ifThenElse(\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                            false,\n                            true\n                        ),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __helios__value__new(__helios__assetclass__new(mph_28, tnBytes_1), 1))), recurse_52(recurse_52, __core__tailList__safe(rem_1)))\n                })()\n            };\n            recurse_53(recurse_53, purposes)));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_28),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_28), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_28);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {\n                ()\n            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_38) -> {\n                (b_15, __40) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_15, mph_28),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_38)), __core__unMapData(__core__sndPair(pair_38)))\n            }, __core__mkNilPairData(())));\n            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));\n            __core__chooseUnit(__core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            (), otherPoliciesMintOk = __core__ifThenElse(\n                b = __helios__value__is_zero(otherMintedValue_1);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    true\n                },\n                () -> {\n                    remainingExpectedMint = __core__ifThenElse(\n                        __helios__value__contains_policy(expectedValue, mph_28),\n                        () -> {\n                            key_23 = __core__bData(mph_28);\n                            recurse_91 = (recurse_90, self_238) -> {\n                                __core__chooseList(self_238, () -> {\n                                    self_238\n                                }, () -> {\n                                    head_45 = __core__headList__safe(self_238);\n                                    tail_4 = __core__tailList__safe(self_238);\n                                    __core__ifThenElse(\n                                        __core__equalsData(key_23, __core__fstPair(head_45)),\n                                        () -> {\n                                            recurse_90(recurse_90, tail_4)\n                                        },\n                                        () -> {\n                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_91(recurse_91, expectedValue)\n                        },\n                        () -> {\n                            expectedValue\n                        }\n                    )();\n                    __core__ifThenElse(\n                        __helios__value__is_zero(remainingExpectedMint),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {\n                                __core__chooseList(map_30, () -> {\n                                    ()\n                                }, () -> {\n                                    head_44 = __core__headList__safe(map_30);\n                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                            __core__ifThenElse(\n                                                (b) -> {\n                                                    __core__ifThenElse(\n                                                        b,\n                                                        false,\n                                                        true\n                                                    )\n                                                }(__cond_57 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                    __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                }, () -> {\n                                                    __core__constrData(1, __core__mkNilData(()))\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_57)), 1),\n                                                    () -> {\n                                                        (__lhs_0_116) -> {\n                                                            false\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_115) -> {\n                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115))));\n                                                            __core__equalsInteger(actualCount, expectedCount)\n                                                        }\n                                                    }\n                                                )()(__cond_57)),\n                                                () -> {\n                                                    error()\n                                                },\n                                                () -> {\n                                                    ()\n                                                }\n                                            )()\n                                        })\n                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))\n                                })()\n                            };\n                            recurse_89(recurse_89, remainingExpectedMint), true)\n                        }\n                    )()\n                }\n            )();\n            __core__chooseUnit(__core__ifThenElse(\n                otherPoliciesMintOk,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    otherPoliciesMintOk\n                },\n                () -> {\n                    false\n                }\n            )()))))))\n        }(__lhs_0_114 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_28, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n            __helios__common__assert_constr_index(data_139, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_9) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_9) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_138 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_138, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);\n        true)\n    };\n    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main, mdd, activity_3) -> {\n        __common6 = __core__fstPair(__core__unConstrData(mdd));\n        __core__ifThenElse(\n            __core__equalsInteger(__common6, 2),\n            () -> {\n                (__lhs_0_267) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common6, 1),\n                    () -> {\n                        (isD) -> {\n                            __common15 = __core__sndPair(__core__unConstrData(isD));\n                            __common16 = __core__headList(__common15);\n                            __common17 = __core__unListData(__common16);\n                            __common40 = __core__tailList(__common17);\n                            __common41 = __core__headList(__common40);\n                            __common42 = __core__unBData(__common41);\n                            __common43 = __core__mkCons(__core__bData(__common42), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));\n                            __common31 = __core__tailList(__common40);\n                            __common32 = __core__headList(__common31);\n                            __common33 = __core__unBData(__common32);\n                            __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common33, #01),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common33, #67656e6572616c),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common33, #4e65696768626f72686f6f64506f6c696379),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), myDgTkn = __helios__value__show(self_36 = __helios__scriptcontext__get_current_input();\n                            self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_36))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))));\n                            checkNonDelegatedActivities = __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),\n                                () -> {\n                                    (__lhs_0_245) -> {\n                                        activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_245))));\n                                        cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common43);\n                                        __helios__common__all(activities_2, (rawActivity_2) -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                                                () -> {\n                                                    (__lhs_0_266) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                                        () -> {\n                                                            (__lhs_0_265) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                                                () -> {\n                                                                    (__lhs_0_264) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_263) -> {\n                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_262) -> {\n                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                                        () -> {\n                                                                                            (__lhs_0_261) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_260) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_259) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_258) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()(rawActivity_2)\n                                        })\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                        () -> {\n                                            (__lhs_0_239) -> {\n                                                innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_239)));\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                                    () -> {\n                                                        (__lhs_0_243) -> {\n                                                            seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_243)));\n                                                            (purpose_8) -> {\n                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common42, __common33), -1);\n                                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common43);\n                                                                (isUpdatingCharter) -> {\n                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common42, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                                    __core__ifThenElse(\n                                                                        isMintingOk,\n                                                                        () -> {\n                                                                            isUpdatingCharter\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_113)), 5),\n                                                                    () -> {\n                                                                        (__lhs_0_244) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__77) -> {\n                                                                            false\n                                                                        }\n                                                                    }\n                                                                )()(__cond_113))\n                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_243))));\n                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                                            () -> {\n                                                                (__lhs_0_242) -> {\n                                                                    __core__equalsInteger(self_13 = __helios__tx__minted(__helios__scriptcontext__tx);\n                                                                    __common34 = __core__unConstrData(__helios__assetclass__new(__common42, __common33));\n                                                                    __common35 = __core__sndPair(__common34);\n                                                                    mph_2 = __core__headList(__common35);\n                                                                    tokenName_1 = __core__headList(__core__tailList(__common35));\n                                                                    outer_1 = (outer, inner, map) -> {\n                                                                        __core__chooseList(map, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),\n                                                                                () -> {\n                                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                                },\n                                                                                () -> {\n                                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    };\n                                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                                        __core__chooseList(map_1, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                                () -> {\n                                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                                },\n                                                                                () -> {\n                                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    }, self_13), -1)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__lhs_0_240) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(innerActivity)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                () -> {\n                                                    (__lhs_0_139) -> {\n                                                        dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_139)));\n                                                        (cctx_4) -> {\n                                                            __core__chooseUnit(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                                            __common30 = __core__fstPair(__core__unConstrData(__cond_110));\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__common30, 0),\n                                                                () -> {\n                                                                    (__lhs_0_238) -> {\n                                                                        cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_238)));\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsData(cCLA, dCLA),\n                                                                            () -> {\n                                                                                ()\n                                                                            },\n                                                                            () -> {\n                                                                                error()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__common30, 5),\n                                                                        () -> {\n                                                                            (__lhs_0_236) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                                    () -> {\n                                                                                        (__lhs_0_237) -> {\n                                                                                            ()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__76) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(dCLA)\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__75) -> {\n                                                                                error()\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(__cond_110), neededRole = __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                                                () -> {\n                                                                    (__lhs_0_105) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                        () -> {\n                                                                            (__lhs_0_104) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                                () -> {\n                                                                                    (__lhs_0_103) -> {\n                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_102) -> {\n                                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_101) -> {\n                                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_100) -> {\n                                                                                                                __core__constrData(6, __core__mkNilData(()))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_99) -> {\n                                                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(dCLA);\n                                                            myCurrentRole = __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                                                () -> {\n                                                                    (__lhs_0_143) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                                        () -> {\n                                                                            (__lhs_0_142) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                                                () -> {\n                                                                                    (__lhs_0_141) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                                        () -> {\n                                                                                            (__lhs_0_140) -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    input_2 = __helios__scriptcontext__get_current_input();\n                                                                                                    acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)), __core__unBData(__core__headList(cctx_4)));\n                                                                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));\n                                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acMintDgt);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                        false,\n                                                                                                        true\n                                                                                                    ),\n                                                                                                    () -> {\n                                                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            input_3 = __helios__scriptcontext__get_current_input();\n                                                                                                            acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_160 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);\n                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_160)))), __core__unBData(__core__headList(cctx_4)));\n                                                                                                            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));\n                                                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acSpendDgt);\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                                false,\n                                                                                                                true\n                                                                                                            ),\n                                                                                                            () -> {\n                                                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__45) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(neededRole);\n                                                            __core__ifThenElse(\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                    () -> {\n                                                                        (__lhs_0_232) -> {\n                                                                            seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232)));\n                                                                            (purpose_7) -> {\n                                                                                mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                    () -> {\n                                                                                        (__lhs_0_233) -> {\n                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                __module__CapoMintHelpers__validateUutMinting(__common42, seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                                                () -> {\n                                                                                                    ()\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    ()\n                                                                                                }\n                                                                                            )(), (__cond_109) -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_109)), 1),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_235) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_234) -> {\n                                                                                                            dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_234))));\n                                                                                                            __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                                            __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));\n                                                                                                            __core__ifThenElse(\n                                                                                                                cond,\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common42))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(__cond_109)\n                                                                                            }((self_205) -> {\n                                                                                                __helios__common__map_get(self_205, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {\n                                                                                                    __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                                                }, () -> {\n                                                                                                    __core__constrData(1, __core__mkNilData(()))\n                                                                                                })\n                                                                                            }(self_162 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);\n                                                                                            __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_162)))))))))\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__74) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(myCurrentRole)\n                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_232))));\n                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_180) -> {\n                                                                                    charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);\n                                                                                    __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                                                    nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);\n                                                                                    nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                                                    newChange = __core__headList(nextChangeList);\n                                                                                    __lhs_0_181 = __helios__common__assert_constr_index(newChange, 0);\n                                                                                    __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_181))));\n                                                                                    __common12 = __core__tailList(__lhs_0_0_2);\n                                                                                    action = __core__headList(__lhs_0_0_2);\n                                                                                    __common22 = __core__unConstrData(action);\n                                                                                    __common24 = __core__equalsInteger(__core__fstPair(__common22), 1);\n                                                                                    role_2 = __core__headList(__common12);\n                                                                                    __common4 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                                                    OdgtLink = __core__headList(__core__tailList(__common12));\n                                                                                    newDgtRoleName = __core__ifThenElse(\n                                                                                        __common4,\n                                                                                        () -> {\n                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__58) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        }\n                                                                                    )()(role_2);\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __common24,\n                                                                                        () -> {\n                                                                                            (__lhs_0_230) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__72) -> {\n                                                                                                ()\n                                                                                            }\n                                                                                        }\n                                                                                    )()(action), __core__chooseUnit((cond) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            cond,\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        )()\n                                                                                    }(self_263 = __core__tailList(nextChangeList);\n                                                                                    __core__equalsData(__core__listData(self_263), __core__listData(__common0))), __core__ifThenElse(\n                                                                                        __common24,\n                                                                                        () -> {\n                                                                                            (__lhs_0_229) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_228) -> {\n                                                                                                        __common25 = __core__sndPair(__core__unConstrData(__lhs_0_228));\n                                                                                                        __common26 = __core__tailList(__common25);\n                                                                                                        seed_7 = __core__headList(__common25);\n                                                                                                        (purpose_6) -> {\n                                                                                                            (idPrefix_9) -> {\n                                                                                                                (callback_14) -> {\n                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)\n                                                                                                                }\n                                                                                                            }(d = __core__headList(__core__tailList(__common26));\n                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                        }(d = __core__headList(__common26);\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_227) -> {\n                                                                                                        seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_227)));\n                                                                                                        (purpose_5) -> {\n                                                                                                            (idPrefix_8) -> {\n                                                                                                                (callback_13) -> {\n                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)\n                                                                                                                }\n                                                                                                            }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_227)))));\n                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_227))));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {\n                                                                                        possibleMintDgtVerifications = __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                            () -> {\n                                                                                                (__lhs_0_199) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_183) -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_191) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__60) -> {\n                                                                                                                        mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                                        mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common42, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                                        dgtLink_2 = __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_185) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (self_204) -> {\n                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_204))))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(OdgtLink);\n                                                                                                                        (__common1) -> {\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                __core__equalsString(__common1, mkTokenName_2(purpose_4)),\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )(), (delegateTakesOwnership) -> {\n                                                                                                                                possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_186) -> {\n                                                                                                                                            __core__chooseUnit(__cond_91 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_91)), 0),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_188) -> {\n                                                                                                                                                        dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_188)));\n                                                                                                                                                        entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_190) -> {\n                                                                                                                                                                    (idPrefix_7) -> {\n                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                            __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                ()\n                                                                                                                                                                            },\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                error()\n                                                                                                                                                                            }\n                                                                                                                                                                        )()\n                                                                                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_190))));\n                                                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__62) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(entryType_1)\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_187) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_91), true)\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__61) -> {\n                                                                                                                                            true\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(action);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        mintedDgTkn,\n                                                                                                                                        () -> {\n                                                                                                                                            true\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            false\n                                                                                                                                        }\n                                                                                                                                    )(),\n                                                                                                                                    () -> {\n                                                                                                                                        possibleExtraReplacementCheck\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        false\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common42);\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                assertion_2,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )(), true)))\n                                                                                                                        }(d = __core__headList(dgtLink_2);\n                                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()(action)\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__59) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()(myCurrentRole);\n                                                                                        otherPossibleVerifications = __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                            () -> {\n                                                                                                (__lhs_0_226) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_200) -> {\n                                                                                                            isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_201) -> {\n                                                                                                                            __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_201))));\n                                                                                                                            pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_202) -> {\n                                                                                                                                        changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_202);\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                                            false,\n                                                                                                                                            true\n                                                                                                                                        )\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__66) -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(pendingRole)\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        (__65) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                )()(pdChange_2)\n                                                                                                            });\n                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                isNotADuplicate,\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                            possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_224) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_225) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__71) -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(existingRoleEntryMaybe), true)\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                        () -> {\n                                                                                                                            __common20 = __core__unConstrData(role_2);\n                                                                                                                            __common21 = __core__fstPair(__common20);\n                                                                                                                            __common27 = __core__equalsInteger(__common21, 2);\n                                                                                                                            (__lhs_0_205) -> {\n                                                                                                                                replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_205))))));\n                                                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                    __common27,\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_223) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common21, 3),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_222) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsInteger(__common21, 7),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_221) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__70) -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_208) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_206) -> {\n                                                                                                                                            __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_206)));\n                                                                                                                                            entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                                                () -> {\n                                                                                                                                                    (self_154) -> {\n                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_154))))\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__68) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(entryType_2)\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(existingRoleEntryMaybe);\n                                                                                                                                existingDgTkn = __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__common21, 0),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_216) -> {\n                                                                                                                                            some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common42);\n                                                                                                                                            __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common21, 1),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_215) -> {\n                                                                                                                                                    some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common42);\n                                                                                                                                                    __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __common4,\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_214) -> {\n                                                                                                                                                            some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common42);\n                                                                                                                                                            __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__common21, 5),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_213) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __core__equalsInteger(__common21, 6),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_212) -> {\n                                                                                                                                                                            error()\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                            __common27,\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                (__lhs_0_211) -> {\n                                                                                                                                                                                    error()\n                                                                                                                                                                                }\n                                                                                                                                                                            },\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __core__equalsInteger(__common21, 3),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_210) -> {\n                                                                                                                                                                                            error()\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_209) -> {\n                                                                                                                                                                                            error()\n                                                                                                                                                                                        }\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()\n                                                                                                                                                                            }\n                                                                                                                                                                        )()\n                                                                                                                                                                    }\n                                                                                                                                                                )()\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()(role_2);\n                                                                                                                                __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    cond,\n                                                                                                                                    () -> {\n                                                                                                                                        ()\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                )(), true))\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_203) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                }\n                                                                                                            )()(action);\n                                                                                                            __core__ifThenElse(\n                                                                                                                isNotADuplicate,\n                                                                                                                () -> {\n                                                                                                                    possibleReplacementIsCorrect\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )())\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__64) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()(myCurrentRole);\n                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                            __core__equalsInteger(recurse_19 = (recurse_18, lst_4) -> {\n                                                                                                __core__chooseList(lst_4, () -> {\n                                                                                                    0\n                                                                                                }, () -> {\n                                                                                                    __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n                                                                                                })()\n                                                                                            };\n                                                                                            recurse_19(recurse_19, __common0), 0),\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        )(), __core__ifThenElse(\n                                                                                            possibleMintDgtVerifications,\n                                                                                            () -> {\n                                                                                                otherPossibleVerifications\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )())\n                                                                                    })))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                    () -> {\n                                                                                        (__lhs_0_179) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                            () -> {\n                                                                                                (__lhs_0_156) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_146) -> {\n                                                                                                            manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_146)));\n                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_155) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_154) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_148) -> {\n                                                                                                                                        (key_31) -> {\n                                                                                                                                            tokenName_4 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_148)))));\n                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);\n                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);\n                                                                                                                                            __common3 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                                            (__lhs_0_149) -> {\n                                                                                                                                                __core__chooseUnit(__cond_69 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common3, key_31);\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_69)), 1),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_153) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_150) -> {\n                                                                                                                                                            __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_150)));\n                                                                                                                                                            entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                                            tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                                            mph_29 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                                __core__equalsByteString(tn_4, tokenName_4),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    ()\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_29)), 0),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_152) -> {\n                                                                                                                                                                        error()\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__48) -> {\n                                                                                                                                                                        ()\n                                                                                                                                                                    }\n                                                                                                                                                                }\n                                                                                                                                                            )()(mph_29), __core__ifThenElse(\n                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_151) -> {\n                                                                                                                                                                        ()\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__47) -> {\n                                                                                                                                                                        error()\n                                                                                                                                                                    }\n                                                                                                                                                                }\n                                                                                                                                                            )()(entryType)))\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_69), (cond) -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        cond,\n                                                                                                                                                        () -> {\n                                                                                                                                                            ()\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }(self_280 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                                                __core__equalsData(__core__mapData(self_280), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                                                recurse_101 = (recurse_100, self_279) -> {\n                                                                                                                                                    __core__chooseList(self_279, () -> {\n                                                                                                                                                        self_279\n                                                                                                                                                    }, () -> {\n                                                                                                                                                        head_49 = __core__headList__safe(self_279);\n                                                                                                                                                        tail_6 = __core__tailList__safe(self_279);\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                                            () -> {\n                                                                                                                                                                recurse_100(recurse_100, tail_6)\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                __core__mkCons(head_49, recurse_100(recurse_100, tail_6))\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    })()\n                                                                                                                                                };\n                                                                                                                                                recurse_101(recurse_101, __common3)))))\n                                                                                                                                            }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_4);\n                                                                                                                                            recIdStr = __core__decodeUtf8(tokenName_4);\n                                                                                                                                            (__cond_38) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_38)), 1),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_71) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_70) -> {\n                                                                                                                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_70)))\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_38)\n                                                                                                                                            }(self_138 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                                            __helios__common__find_safe(self_138, hasDD)))\n                                                                                                                                        }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_148)));\n                                                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_147) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__46) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                }\n                                                                                                            )()(manifestActivity), true)\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_145) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_144) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(dCLA),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )())\n                                                        }(self_203 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common43);\n                                                        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_165 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_203);\n                                                        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_165))), __core__unBData(__core__headList(self_203)));\n                                                        __core__ifThenElse(\n                                                            cond,\n                                                            () -> {\n                                                                ()\n                                                            },\n                                                            () -> {\n                                                                error()\n                                                            }\n                                                        )(), self_203))\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                                        () -> {\n                                                            (__lhs_0_138) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),\n                                                                () -> {\n                                                                    (__lhs_0_137) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),\n                                                                        () -> {\n                                                                            (__lhs_0_135) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                                () -> {\n                                                                                    (__lhs_0_134) -> {\n                                                                                        true\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                                        () -> {\n                                                                                            (__lhs_0_133) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_132) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()(activity_3);\n                            __core__chooseUnit(__core__ifThenElse(\n                                checkNonDelegatedActivities,\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), (cctx_7) -> {\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                            () -> {\n                                                (__lhs_0_127) -> {\n                                                    true\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                    () -> {\n                                                        (__lhs_0_126) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                            () -> {\n                                                                __common36 = __core__headList(cctx_7);\n                                                                __common37 = __core__unBData(__common36);\n                                                                __common2 = __core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))));\n                                                                __common38 = __core__unConstrData(__common2);\n                                                                __common39 = __core__sndPair(__common38);\n                                                                (__lhs_0_121) -> {\n                                                                    VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_121)));\n                                                                    seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));\n                                                                    mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                                                    mintingOk = __module__CapoMintHelpers__validateUutMinting(__common42, seed_3, __core__mkCons(__core__bData(#6e626864), __core__mkNilData(())), true, mkTn, false, ());\n                                                                    __core__chooseUnit((cond) -> {\n                                                                        ()\n                                                                    }(self_229 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                    true), (newRecData) -> {\n                                                                        __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);\n                                                                        (reg) -> {\n                                                                            __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__core__unIData((self_9) -> {\n                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                                                            }(self_9 = __core__headList(__core__tailList(__common39));\n                                                                            __core__headList(__core__sndPair(__core__unConstrData(self_9))))), __core__unIData((self_9) -> {\n                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                                                            }(self_9 = __core__headList(__common39);\n                                                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))))), 3600000);\n                                                                            __core__ifThenElse(\n                                                                                cond,\n                                                                                () -> {\n                                                                                    ()\n                                                                                },\n                                                                                () -> {\n                                                                                    error()\n                                                                                }\n                                                                            )(), (memberToken) -> {\n                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                    __core__ifThenElse(\n                                                                                        self_49 = __core__encodeUtf8(memberToken);\n                                                                                        __core__ifThenElse(\n                                                                                            __core__lessThanInteger(__core__lengthOfByteString(self_49), 7),\n                                                                                            () -> {\n                                                                                                false\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__equalsByteString(#6d656d6265722d, __core__sliceByteString(0, 7, self_49))\n                                                                                            }\n                                                                                        )(),\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        ()\n                                                                                    }\n                                                                                )(), memberTokenAc = __helios__assetclass__new(__common42, __core__encodeUtf8(memberToken));\n                                                                                __core__ifThenElse(\n                                                                                    __core__ifThenElse(\n                                                                                        (__cond_61) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_61)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_125) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_124) -> {\n                                                                                                        true\n                                                                                                    }\n                                                                                                }\n                                                                                            )()(__cond_61)\n                                                                                        }(self_138 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                                                        __helios__common__find_safe(self_138, (i_13) -> {\n                                                                                            __core__equalsInteger(__helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_13))));\n                                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), memberTokenAc), 1)\n                                                                                        })),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )(),\n                                                                                    () -> {\n                                                                                        mintingOk\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )())\n                                                                            }(d = __helios__common__mStruct_field(reg, #6d74);\n                                                                            __core__decodeUtf8(__core__unBData(d))))\n                                                                        }(__cond_29 = __helios__txoutputdatum__inline(self_54 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);\n                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                                                                        __core__ifThenElse(\n                                                                            __core__chooseData(__cond_29, () -> {\n                                                                                true\n                                                                            }, () -> {\n                                                                                false\n                                                                            }, () -> {\n                                                                                false\n                                                                            }, () -> {\n                                                                                false\n                                                                            }, () -> {\n                                                                                false\n                                                                            })(),\n                                                                            () -> {\n                                                                                (__lhs_0_50) -> {\n                                                                                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_50)))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__28) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_29))\n                                                                    }(recIdBytes_1 = __core__encodeUtf8(mkTn("nbhd"));\n                                                                    (output_2) -> {\n                                                                        __core__mkCons(__core__constrData(2, __core__mkCons(output_2, __core__mkNilData(()))), __core__mkCons(__core__bData(recIdBytes_1), __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(__common37), __core__mkNilData(())))))\n                                                                    }(recIdStr_3 = __core__decodeUtf8(recIdBytes_1);\n                                                                    ac_2 = __helios__assetclass__new(__common37, recIdBytes_1);\n                                                                    capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(cctx_7);\n                                                                    (__cond_43) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_78) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_77) -> {\n                                                                                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_43)\n                                                                    }(self_141 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                                                    __helios__common__find_safe(self_141, (txout) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                                                                            () -> {\n                                                                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    })))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                    () -> {\n                                                                        (__lhs_0_118) -> {\n                                                                            VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_118)));\n                                                                            __core__chooseUnit((cond) -> {\n                                                                                ()\n                                                                            }(self_229 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                            true), recId_8 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));\n                                                                            hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_7, true, recId_8);\n                                                                            (hasRecOutput) -> {\n                                                                                __core__chooseUnit((self_258) -> {\n                                                                                    recurse_95 = (recurse_94, lst_25) -> {\n                                                                                        __core__chooseList(lst_25, () -> {\n                                                                                            ()\n                                                                                        }, () -> {\n                                                                                            __core__chooseUnit(__lhs_0_120 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__core__headList__safe(lst_25)))));\n                                                                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                                                                                            updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasRecOutput);\n                                                                                            updatedData = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                                            (), recurse_94(recurse_94, __core__tailList__safe(lst_25)))\n                                                                                        })()\n                                                                                    };\n                                                                                    recurse_95(recurse_95, self_258)\n                                                                                }(self_60 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                                                __helios__common__filter(self_60, hasRecInput, __core__mkNilData(()))), true)\n                                                                            }(capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(cctx_7);\n                                                                            (txo_3) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_3))), capoAddr_2),\n                                                                                    () -> {\n                                                                                        data_162 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_3))))));\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_162)), 2),\n                                                                                            () -> {\n                                                                                                (__lhs_0_75) -> {\n                                                                                                    x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_162);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "nbhd"),\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsByteString(recId_8, #),\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_8)\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__34) -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            }\n                                                                                        )()(data_162)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_117) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__41) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(activity_3),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))\n                                        }\n                                    )(),\n                                    () -> {\n                                        true\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(charter_1 = __core__headList(__core__tailList(__common43));\n                            __common18 = __core__unConstrData(charter_1);\n                            __common19 = __core__fstPair(__common18);\n                            __core__ifThenElse(\n                                __core__equalsInteger(__common19, 1),\n                                () -> {\n                                    (__lhs_0_84) -> {\n                                        __common43\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common19, 2),\n                                        () -> {\n                                            (__lhs_0_83) -> {\n                                                __common43\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_79) -> {\n                                                mph_22 = __core__unBData(__core__headList(__common43));\n                                                charterAc_3 = __helios__assetclass__new(mph_22, #63686172746572);\n                                                (__cond_45) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 1),\n                                                        () -> {\n                                                            (__lhs_0_82) -> {\n                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common43)\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_81) -> {\n                                                                charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_81)));\n                                                                datum_4 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_54 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_54))))));\n                                                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                                            }\n                                                        }\n                                                    )()(__cond_45)\n                                                }(self_138 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                __helios__common__find_safe(self_138, (txin_5) -> {\n                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_3);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                        false,\n                                                        true\n                                                    )\n                                                }))\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(charter_1))))))\n                        }\n                    },\n                    () -> {\n                        (__43) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                () -> {\n                                    (__lhs_0_131) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                        () -> {\n                                            (__lhs_0_130) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__44) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                                    () -> {\n                                                        (__lhs_0_129) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                            () -> {\n                                                                (__lhs_0_128) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__42) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(activity_3)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(activity_3)\n                        }\n                    }\n                )()\n            }\n        )()(mdd)\n    };\n    __core__ifThenElse(\n        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1, __DATUM, __REDEEMER),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes) -> {
        n = __core__lengthOfByteString(bytes);
        recurse_1 = (recurse, i) -> {
            __core__ifThenElse(
                __core__equalsInteger(i, n),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes, i);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse(recurse, __core__addInteger(i, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse(recurse, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse(recurse, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse(recurse, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_1(recurse_1, 0)
    };
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes_1) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_2 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes_1);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_2
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_2)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n_1 = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n_1),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__bytearray__decode_utf8_safe = (self_7) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_7),
                () -> {
                    __core__decodeUtf8__safe(self_7)
                },
                () -> {
                    __helios__bytearray__show(self_7)()
                }
            )()
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_8) -> {
        __core__sndPair(__core__unConstrData(self_8))
    };
    __helios__common__enum_field_0 = (self_9) -> {
        __core__headList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_fields_after_0 = (self_10) -> {
        __core__tailList(__helios__common__enum_fields(self_10))
    };
    __helios__common__enum_field_1 = (self_11) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__value__new = (assetClass, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_1),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_12) -> {
        __core__multiplyInteger(self_12, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_13) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_13)
        }
    };
    __helios__common__enum_fields_after_1 = (self_14) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_14))
    };
    __helios__common__enum_fields_after_2 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_15))
    };
    __helios__common__enum_fields_after_3 = (self_16) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_16))
    };
    __helios__common__enum_field_4 = (self_17) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_17))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__helios__common__enum_field_4(self_18))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_21) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
                bytes_4 = __core__consByteString(__helios__int__show_digit(i_3), bytes_3);
                __core__ifThenElse(
                    __core__lessThanInteger(i_3, 10),
                    () -> {
                        bytes_4
                    },
                    () -> {
                        recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_21, 0),
                () -> {
                    __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
                },
                () -> {
                    recurse_9(recurse_9, self_21, #)
                }
            )())
        }
    };
    __helios__data__show = (self_22) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_11, data_2) -> {
                recurse_11(recurse_11, data_2)
            }((recurse_10, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_10(recurse_10, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_10(recurse_10, __core__fstPair(pair));
                        value_1 = recurse_10(recurse_10, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_10(recurse_10, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_5 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_5)()
                })()
            }, self_22)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_13 = (recurse_12) -> {
                (lst_1, i_4) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_2(head)
                            },
                            () -> {
                                recurse_12(recurse_12)(__core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_13(recurse_13)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_3(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_23) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_23)()
                    }
                )()
            })(self_23)
        }
    };
    __helios__string____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_24, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_6, callback_ok_1, callback_nok_3) -> {
        __core__chooseData(data_6, callback_nok_3, () -> {
            callback_ok_1(__core__unMapData__safe(data_6))
        }, callback_nok_3, callback_nok_3, callback_nok_3)()
    };
    __helios__common__unIData__safe = (data_7, callback_ok_2, callback_nok_4) -> {
        __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
            callback_ok_2(__core__unIData__safe(data_7))
        }, callback_nok_4)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_25) -> {
        () -> {
            __core__divideInteger(self_25, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_26) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_26, 0),
                () -> {
                    __core__multiplyInteger(self_26, -1)
                },
                () -> {
                    self_26
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_27, n_2) -> {
        recurse_15 = (recurse_14, x_1, pos, bytes_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_6
                        },
                        () -> {
                            recurse_14(recurse_14, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_6))
                        }
                    )()
                },
                () -> {
                    recurse_14(recurse_14, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_6))
                }
            )()
        };
        recurse_15(recurse_15, self_27, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_28) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_28, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_28, -1)))
                },
                () -> {
                    show_positive(self_28)
                }
            )()
        }
    };
    __helios__value__show = (self_29) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_29, (prev_1, pair_3) -> {
                mph_data = __core__fstPair(pair_3);
                tokens_data = __core__sndPair(pair_3);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_4) -> {
                            token_name_data = __core__fstPair(pair_4);
                            qty_data = __core__sndPair(pair_4);
                            __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_4, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_2)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__int____neq = (self_30, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_30, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_31) -> {
        () -> {
            self_31
        }
    };
    __helios__string__show = (self_32) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_32, "'"))
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_33) -> {
        () -> {
            __core__ifThenElse(
                self_33,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_34) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_34)()), self_34)
        }
    };
    __helios__txoutput__value = (self_35) -> {
        __core__unMapData(__helios__common__enum_field_1(self_35))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_36) -> {
        __helios__txoutput__value(__helios__txinput__output(self_36))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_37) -> {
        __core__unListData(__helios__common__enum_field_0(self_37))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_43) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_43))))
    };
    __helios__common__enum_fields_after_4 = (self_44) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_44))
    };
    __helios__common__enum_fields_after_5 = (self_45) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_45))
    };
    __helios__common__enum_fields_after_6 = (self_46) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_46))
    };
    __helios__common__enum_field_7 = (self_47) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_47))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_48) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_48))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__common__starts_with = (self_49, selfLengthFn) -> {
        (prefix_1) -> {
            (n_3, m) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(n_3, m),
                    () -> {
                        false
                    },
                    () -> {
                        __core__equalsByteString(prefix_1, __core__sliceByteString(0, m, self_49))
                    }
                )()
            }(selfLengthFn(self_49), __core__lengthOfByteString(prefix_1))
        }
    };
    __helios__bytearray__starts_with = (self_50) -> {
        __helios__common__starts_with(self_50, __core__lengthOfByteString)
    };
    __helios__string__starts_with = (self_51) -> {
        (prefix_2) -> {
            __helios__bytearray__starts_with(__core__encodeUtf8(self_51))(__core__encodeUtf8(prefix_2))
        }
    };
    __helios__value__get_safe = (self_52) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_3) -> {
                __core__chooseList(map_3, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_4) -> {
                __core__chooseList(map_4, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_52)
        }
    };
    __helios__txoutputdatum__inline = (self_53) -> {
        pair_5 = __core__unConstrData(self_53);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_54) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_54))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__tx__outputs = (self_55) -> {
        __core__unListData(__helios__common__enum_field_2(self_55))
    };
    __helios__txinput__datum = (self_56) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_56))
    };
    __helios__common__serialize = (self_57) -> {
        () -> {
            __core__serialiseData(self_57)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_58, fn_3, nil) -> {
        recurse_25 = (recurse_24, self_59, fn_4) -> {
            __core__chooseList(self_59, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_59);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_59), fn_4))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_59), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_58, fn_3)
    };
    __helios__common__filter_list = (self_60, fn_5) -> {
        __helios__common__filter(self_60, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_11))
        })()
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_13, index_2, test_a, test_b) -> {
        __core__chooseData(data_13, () -> {
            pair_6 = __core__unConstrData__safe(data_13);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_6), index_2),
                () -> {
                    fields_3 = __core__sndPair(pair_6);
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_3)),
                            () -> {
                                tail = __core__tailList__safe(fields_3);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_4) -> {
        (data_14) -> {
            __core__chooseData(data_14, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_14);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_4),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_7 = __core__unConstrData__safe(data_15);
            index_3 = __core__fstPair(pair_7);
            fields_4 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_4), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_4))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_16) -> {
        __core__chooseData(data_16, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_17) -> {
        __helios__common__test_constr_data_2(data_17, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_18) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_5, name) -> {
        name_data = __core__bData(name);
        recurse_27 = (recurse_26, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_2 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_2
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_5)
    };
    __helios__common__mStruct_field = (self_61, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_61), name_1)
    };
    __helios__common__test_mStruct_field = (self_62, name_2, inner_test) -> {
        __core__chooseData(self_62, () -> {
            false
        }, () -> {
            map_7 = __core__unMapData__safe(self_62);
            recurse_29 = (recurse_28, map_8) -> {
                __core__chooseList(map_8, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_8);
                    key_4 = __core__fstPair(head_4);
                    value_3 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_2),
                        () -> {
                            inner_test(value_3)
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, map_7)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_19) -> {
        __core__chooseData(data_19, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_8 = __core__unBData__safe(data_19);
            n_5 = __core__lengthOfByteString(bytes_8);
            __core__ifThenElse(
                __core__equalsInteger(n_5, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_5, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__bytearray__is_valid_data_max_length = (n_6) -> {
        (data_20) -> {
            __core__chooseData(data_20, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_9 = __core__unBData__safe(data_20);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_9), n_6),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__value__is_valid_data = (data_21) -> {
        __core__chooseData(data_21, () -> {
            false
        }, () -> {
            map_9 = __core__unMapData__safe(data_21);
            recurse_31 = (recurse_30, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    head_5 = __core__headList__safe(map_10);
                    key_5 = __core__fstPair(head_5);
                    value_4 = __core__sndPair(head_5);
                    tail_1 = __core__tailList__safe(map_10);
                    __core__ifThenElse(
                        __helios__mintingpolicyhash__is_valid_data(key_5),
                        () -> {
                            __core__chooseData(value_4, () -> {
                                false
                            }, () -> {
                                inner_6 = __core__unMapData__safe(value_4);
                                __core__chooseList(inner_6, () -> {
                                    false
                                }, () -> {
                                    recurse_inner_1 = (recurse_inner, inner_7) -> {
                                        __core__chooseList(inner_7, () -> {
                                            recurse_30(recurse_30, tail_1)
                                        }, () -> {
                                            head_6 = __core__headList__safe(inner_7);
                                            key_6 = __core__fstPair(head_6);
                                            value_5 = __core__sndPair(head_6);
                                            __core__ifThenElse(
                                                __helios__bytearray__is_valid_data_max_length(32)(key_6),
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(value_5),
                                                        () -> {
                                                            recurse_30(recurse_30, tail_1)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        })()
                                    };
                                    recurse_inner_1(recurse_inner_1, inner_6)
                                })()
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, map_9)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scripthash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__value__contains_policy = (self_63) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_33 = (recurse_32, map_11) -> {
                __core__chooseList(map_11, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_32(recurse_32, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_33(recurse_33, self_63)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_35 = (recurse_34, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_34(recurse_34, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_35(recurse_35, tokens_1)
    };
    __helios__value__is_zero = (self_64) -> {
        () -> {
            recurse_37 = (recurse_36, map_12) -> {
                __core__chooseList(map_12, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_12))))
                    }, () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_12))
                    })
                })()
            };
            recurse_37(recurse_37, self_64)
        }
    };
    __helios__value__get_policy = (self_65) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_39 = (recurse_38, map_13) -> {
                __core__chooseList(map_13, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_13)))
                        },
                        () -> {
                            recurse_38(recurse_38, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            recurse_39(recurse_39, self_65)
        }
    };
    __helios__value__get_inner_map_int = (map_14, key_7) -> {
        recurse_41 = (recurse_40, map_15, key_8) -> {
            __core__chooseList(map_15, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_15)), key_8),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_15)))
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(map_15), key_8)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, map_14, key_7)
    };
    __helios__value__get_map_keys = (map_16) -> {
        recurse_43 = (recurse_42, map_17) -> {
            __core__chooseList(map_17, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_17)), recurse_42(recurse_42, __core__tailList__safe(map_17)))
            })()
        };
        recurse_43(recurse_43, map_16)
    };
    __helios__common__any = (self_66, fn_6) -> {
        recurse_45 = (recurse_44, self_67, fn_7) -> {
            __core__chooseList(self_67, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_67)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_44(recurse_44, __core__tailList__safe(self_67), fn_7)
                    }
                )()
            })()
        };
        recurse_45(recurse_45, self_66, fn_6)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_9) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_9)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_47 = (recurse_46, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_46(recurse_46, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_47(recurse_47, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_49 = (recurse_48, keys, map_18) -> {
            __core__chooseList(map_18, () -> {
                __helios__common__list_0
            }, () -> {
                key_10 = __core__fstPair(__core__headList__safe(map_18));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_10),
                    () -> {
                        recurse_48(recurse_48, keys, __core__tailList__safe(map_18))
                    },
                    () -> {
                        __core__mkCons(key_10, recurse_48(recurse_48, keys, __core__tailList__safe(map_18)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_49(recurse_49, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_6, b_6) -> {
            recurse_51 = (recurse_50, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_11 = __core__headList__safe(keys_1);
                    tail_2 = recurse_50(recurse_50, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_6, key_11), __helios__value__get_inner_map_int(b_6, key_11));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_2
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_11, __core__iData(sum)), tail_2)
                        }
                    )()
                })()
            };
            recurse_51(recurse_51, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_19, mph_9) -> {
        recurse_53 = (recurse_52, map_20) -> {
            __core__chooseList(map_20, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_20)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_20)))
                    },
                    () -> {
                        recurse_52(recurse_52, __core__tailList__safe(map_20))
                    }
                )()
            })()
        };
        recurse_53(recurse_53, map_19)
    };
    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {
        recurse_55 = (recurse_54, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_12 = __core__headList__safe(keys_2);
                tail_3 = recurse_54(recurse_54, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_12), __helios__value__get_inner_map(b_7, key_12));
                __core__chooseList(item_5, () -> {
                    tail_3
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_12, __core__mapData(item_5)), tail_3)
                })()
            })()
        };
        recurse_55(recurse_55, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_8, b_8) -> {
        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)
    };
    __helios__common__map = (self_68, fn_8, init) -> {
        recurse_57 = (recurse_56, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_56(recurse_56, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_57(recurse_57, self_68, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_59 = (recurse_58, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_7 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_7),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_7, recurse_58(recurse_58, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_61 = (recurse_60, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_8, tail_4) -> {
                    __helios__common__insert_in_sorted(head_8, tail_4, comp_1)
                }(__core__headList__safe(lst_11), recurse_60(recurse_60, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_61(recurse_61, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter_map = (self_69, fn_9) -> {
        __helios__common__filter(self_69, fn_9, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_9, b_9) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_9, b_9),
            b_9,
            a_9
        )
    };
    __helios__common__slice_bytearray = (self_70, selfLengthFn_1) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn_1(self_70), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_11 = (start_1) -> {
                fn_10 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_70)
                };
                fn_10(normalize(end))
            };
            fn_11(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_71) -> {
        __helios__common__slice_bytearray(self_71, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_72) -> {
        () -> {
            __core__blake2b_256(self_72)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_73) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_73))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_74) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_74))
    };
    __helios__common__enum_fields_after_8 = (self_75) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_75))
    };
    __helios__common__enum_field_9 = (self_76) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_76))
    };
    __helios__tx__redeemers = (self_77) -> {
        __core__unMapData(__helios__common__enum_field_9(self_77))
    };
    __helios__scriptpurpose__spending____is = (data_22) -> {
        __helios__common__enum_tag_equals(data_22, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_78) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_10) -> {
                            __helios__bytearray__show(bytes_10)()
                        }))(fields_5)
                    },
                    () -> {
                        __helios__data__show(self_78)()
                    }
                )()
            })(self_78)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_23) -> {
            callback_nok_5 = __helios__data__show(data_23);
            __core__chooseData(data_23, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_6(__core__unIData__safe(data_23))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_79) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_6);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_6);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_79)()
                    }
                )()
            })(self_79)
        }
    };
    __helios__tx__ref_inputs = (self_80) -> {
        __core__unListData(__helios__common__enum_field_1(self_80))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__bytearray__decode_utf8 = (self_81) -> {
        () -> {
            __core__decodeUtf8(self_81)
        }
    };
    __helios__string__serialize = (self_82) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_82))
        }
    };
    __helios__txinput__address = (self_83) -> {
        __helios__txoutput__address(__helios__txinput__output(self_83))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_84) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_84))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_85) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_85))
        }
    };
    __helios__struct____eq = (self_86, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_86), __helios__struct____to_data(other_3))
    };
    __helios__data__constrdata____is = (data_24) -> {
        __core__chooseData(data_24, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_25) -> {
        __core__sndPair(__core__unConstrData(data_25))
    };
    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {
        recurse_63 = (recurse_62, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_13 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_13), __helios__value__get_inner_map_int(b_10, key_13))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, __helios__value__merge_map_keys(a_10, b_10))
    };
    __helios__value__compare = (a_11, b_11, comp_3) -> {
        recurse_65 = (recurse_64, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_14 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_14), __helios__value__get_inner_map(b_11, key_14))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_65(recurse_65, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value____geq = (a_12, b_12) -> {
        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_87) -> {
        (value_6) -> {
            __helios__value____geq(self_87, value_6)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_88, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_88), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_89) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_89)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_90) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_90))
    };
    __helios__spendingcredential__validator__cast = (data_26) -> {
        __helios__common__assert_constr_index(data_26, 1)
    };
    __helios__txoutput__is_locked_by = (self_91) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_91));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_92) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_92, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_93) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_93)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata__tag = (data_27) -> {
        __core__fstPair(__core__unConstrData(data_27))
    };
    __helios__common__struct_fields_after_1 = (self_94) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_94))
    };
    __helios__common__struct_fields_after_2 = (self_95) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_95))
    };
    __helios__common__struct_fields_after_3 = (self_96) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_96))
    };
    __helios__common__struct_field_4 = (self_97) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_97))
    };
    __helios__common__struct_field_3 = (self_98) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_98))
    };
    __helios__common__struct_field_2 = (self_99) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_99))
    };
    __helios__txoutput__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_29) -> {
        __helios__common__test_constr_data_2(data_29, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_100) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_100))
    };
    __helios__common__enum_field_5 = (self_101) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_101))
    };
    __helios__common__enum_field_3 = (self_102) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_102))
    };
    __helios__txoutput____to_data = __helios__common__identity;
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_8 = __core__unConstrData__safe(data_30);
            index_4 = __core__fstPair(pair_8);
            fields_7 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_31) -> {
        __core__chooseData(data_31, () -> {
            pair_9 = __core__unConstrData__safe(data_31);
            tag_4 = __core__fstPair(pair_9);
            fields_8 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_32) -> {
        __core__chooseData(data_32, () -> {
            pair_10 = __core__unConstrData__safe(data_32);
            index_5 = __core__fstPair(pair_10);
            fields_9 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_103, fn_13, callback_7) -> {
        recurse_67 = (recurse_66, self_104, fn_14) -> {
            __core__chooseList(self_104, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_9 = __core__headList__safe(self_104);
                __core__ifThenElse(
                    fn_14(head_9),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_9)))
                    },
                    () -> {
                        recurse_66(recurse_66, __core__tailList__safe(self_104), fn_14)
                    }
                )()
            })()
        };
        recurse_67(recurse_67, self_103, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__assetclass__is_valid_data = (data_34) -> {
        __helios__common__test_constr_data_2(data_34, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_35) -> {
        __core__chooseData(data_35, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_105) -> {
        (fn_15) -> {
            recurse_69 = (recurse_68, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_68(recurse_68, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_69(recurse_69, self_105)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_106) -> {
        __helios__common__length(self_106)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_107) -> {
        __helios__common__length(self_107)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_21) -> {
        recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                true
            }, () -> {
                head_10 = __core__headList__safe(map_22);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_10)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_10)),
                            () -> {
                                recurse_70(recurse_70, __core__tailList__safe(map_22))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_71(recurse_71, map_21)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_36) -> {
        map_23 = __core__unMapData(data_36);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_23
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_108) -> {
        (key_15) -> {
            __helios__common__map_get(self_108, __helios__scriptpurpose____to_data(key_15), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_109) -> {
        (fn_16) -> {
            recurse_73 = (recurse_72, map_24) -> {
                __core__chooseList(map_24, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_24)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_72(recurse_72, __core__tailList__safe(map_24))
                        }
                    )()
                })()
            };
            recurse_73(recurse_73, self_109)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_37) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_37, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_37, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_38) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_38),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_38
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_110) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_110, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_111) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_111, #747065))
    };
    __helios__list[__helios__data]__head = (self_112) -> {
        __helios__data__from_data(__core__headList(self_112))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_7) -> {
        __cond_1 = value_7;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_39) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_39),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_39),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_39),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_40) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_40),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_40
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_41) -> {
        __helios__common__enum_tag_equals(data_41, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_42) -> {
        __core__chooseData(data_42, () -> {
            pair_11 = __core__unConstrData__safe(data_42);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_43 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_43, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_43);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_11),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_12 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_12),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_113) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_113))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_114) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_114))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_44) -> {
        __helios__common__enum_tag_equals(data_44, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_45) -> {
        __core__chooseData(data_45, () -> {
            pair_12 = __core__unConstrData__safe(data_45);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_46 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_46, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_46);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_47) -> {
        __helios__common__enum_tag_equals(data_47, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_48) -> {
        __core__chooseData(data_48, () -> {
            pair_13 = __core__unConstrData__safe(data_48);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_49 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_49, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_49);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_50) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_50),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_50),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_50),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_50),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_50),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_50),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_50),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_50),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_51) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_51),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_51
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_52) -> {
        __helios__common__enum_tag_equals(data_52, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_53) -> {
        __core__chooseData(data_53, () -> {
            pair_14 = __core__unConstrData__safe(data_53);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_54 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_54, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_54);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_55) -> {
        __helios__common__enum_tag_equals(data_55, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_56) -> {
        __core__chooseData(data_56, () -> {
            pair_15 = __core__unConstrData__safe(data_56);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_57 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_57, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_57);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_58) -> {
        __helios__common__enum_tag_equals(data_58, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_59) -> {
        __core__chooseData(data_59, () -> {
            pair_16 = __core__unConstrData__safe(data_59);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_60 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_60, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_60);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_61) -> {
        __helios__common__enum_tag_equals(data_61, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_62) -> {
        __core__chooseData(data_62, () -> {
            pair_17 = __core__unConstrData__safe(data_62);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_63 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_63, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_63);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_64) -> {
        __helios__common__enum_tag_equals(data_64, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_65) -> {
        __core__chooseData(data_65, () -> {
            pair_18 = __core__unConstrData__safe(data_65);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_66 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_66, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_66);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_115) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_115))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_116) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_116)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_67) -> {
        __helios__common__enum_tag_equals(data_67, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_68) -> {
        __core__chooseData(data_68, () -> {
            pair_19 = __core__unConstrData__safe(data_68);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_69 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_69, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_69);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_70) -> {
        __helios__common__enum_tag_equals(data_70, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_71) -> {
        __core__chooseData(data_71, () -> {
            pair_20 = __core__unConstrData__safe(data_71);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_72 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_72, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_72);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_73) -> {
        __helios__common__enum_tag_equals(data_73, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_74) -> {
        __core__chooseData(data_74, () -> {
            pair_21 = __core__unConstrData__safe(data_74);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_75 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_75, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_75);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_76) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_76),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_76),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_76),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_76),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_76),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_77) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_77),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_77
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_78) -> {
        __helios__common__enum_tag_equals(data_78, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_79) -> {
        __core__chooseData(data_79, () -> {
            pair_22 = __core__unConstrData__safe(data_79);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_80 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_80, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_80);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_15 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_15),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_81) -> {
        __helios__common__enum_tag_equals(data_81, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_82) -> {
        __core__chooseData(data_82, () -> {
            pair_23 = __core__unConstrData__safe(data_82);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_83 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_83, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_83);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_84) -> {
        __helios__common__enum_tag_equals(data_84, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_85) -> {
        __core__chooseData(data_85, () -> {
            pair_24 = __core__unConstrData__safe(data_85);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_86 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_86, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_86);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_19),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_117) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_118) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_87) -> {
        __helios__common__enum_tag_equals(data_87, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_88) -> {
        __core__chooseData(data_88, () -> {
            pair_25 = __core__unConstrData__safe(data_88);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_89 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_89, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_89);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_90) -> {
        __core__chooseData(data_90, () -> {
            pair_26 = __core__unConstrData__safe(data_90);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_91 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_91, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_91);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_22),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_23),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_92) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_92),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_92),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_92),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_93) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_93),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_93
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_94) -> {
        __helios__common__enum_tag_equals(data_94, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_95) -> {
        __core__chooseData(data_95, () -> {
            pair_27 = __core__unConstrData__safe(data_95);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_96 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_96, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_96);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_24 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_24),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_25 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_25),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_26 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_26),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_119) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_120) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_120))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_121) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_121))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_97) -> {
        __helios__common__enum_tag_equals(data_97, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_98) -> {
        __core__chooseData(data_98, () -> {
            pair_28 = __core__unConstrData__safe(data_98);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_99 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_99, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_99);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_100) -> {
        __helios__common__enum_tag_equals(data_100, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_101) -> {
        __core__chooseData(data_101, () -> {
            pair_29 = __core__unConstrData__safe(data_101);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_102 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_102, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_102);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_27 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_27),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_28 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_28),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_29 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_29),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_30 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_30),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_122) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_122))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_123) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_124) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_124))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_125) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_125))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_103) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_103),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_103),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_103),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_103),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_103),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_103),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_103),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_104) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_104),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_104
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_105) -> {
        __helios__common__enum_tag_equals(data_105, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_106) -> {
        __core__chooseData(data_106, () -> {
            pair_30 = __core__unConstrData__safe(data_106);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_107 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_107, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_107);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_31),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_32 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_32),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_126) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_127) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_127))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_108) -> {
        __helios__common__enum_tag_equals(data_108, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_109) -> {
        __core__chooseData(data_109, () -> {
            pair_31 = __core__unConstrData__safe(data_109);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_110 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_110, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_110);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_111) -> {
        __helios__common__enum_tag_equals(data_111, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_112) -> {
        __core__chooseData(data_112, () -> {
            pair_32 = __core__unConstrData__safe(data_112);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_113 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_113, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_113);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_33 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_33),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_114) -> {
        __helios__common__enum_tag_equals(data_114, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_115) -> {
        __core__chooseData(data_115, () -> {
            pair_33 = __core__unConstrData__safe(data_115);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_116 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_116, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_116);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_117) -> {
        __helios__common__enum_tag_equals(data_117, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_118) -> {
        __core__chooseData(data_118, () -> {
            pair_34 = __core__unConstrData__safe(data_118);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_119 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_119, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_119);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_120) -> {
        __helios__common__enum_tag_equals(data_120, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_121) -> {
        __core__chooseData(data_121, () -> {
            pair_35 = __core__unConstrData__safe(data_121);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_122 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_122, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_122);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_36),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_37 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_37),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_123) -> {
        __helios__common__enum_tag_equals(data_123, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_124) -> {
        __core__chooseData(data_124, () -> {
            pair_36 = __core__unConstrData__safe(data_124);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_125 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_125, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_125);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_38),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_128) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_128))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_126) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_126),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_126),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_126),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_126),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_126),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_126),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_126),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_126),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_126),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_127) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_127),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_127
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_128) -> {
        __core__chooseData(data_128, () -> {
            pair_37 = __core__unConstrData__safe(data_128);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_129 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_129, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_129);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_39),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_130) -> {
        __helios__common__enum_tag_equals(data_130, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_131) -> {
        __core__chooseData(data_131, () -> {
            pair_38 = __core__unConstrData__safe(data_131);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_132 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_132, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_132);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_40),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_129) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_129))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_133) -> {
        __helios__common__enum_tag_equals(data_133, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_134) -> {
        __core__chooseData(data_134, () -> {
            pair_39 = __core__unConstrData__safe(data_134);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_135 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_135, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_135);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_130) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_136) -> {
        __helios__common__enum_tag_equals(data_136, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_137) -> {
        __core__chooseData(data_137, () -> {
            pair_40 = __core__unConstrData__safe(data_137);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_138 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_138, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_138);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_42),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_131) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_139) -> {
        __core__chooseData(data_139, () -> {
            pair_41 = __core__unConstrData__safe(data_139);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_140 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_140, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_140);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_43 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_43),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_141) -> {
        __helios__common__enum_tag_equals(data_141, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_142) -> {
        __core__chooseData(data_142, () -> {
            pair_42 = __core__unConstrData__safe(data_142);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_143 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_143, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_143);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_44),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_45),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_144) -> {
        __helios__common__enum_tag_equals(data_144, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_145) -> {
        __core__chooseData(data_145, () -> {
            pair_43 = __core__unConstrData__safe(data_145);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_146 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_146, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_146);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_147) -> {
        __helios__common__enum_tag_equals(data_147, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_148) -> {
        __core__chooseData(data_148, () -> {
            pair_44 = __core__unConstrData__safe(data_148);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_149 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_149, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_149);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_48),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_49 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_49),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_150) -> {
        __helios__common__enum_tag_equals(data_150, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_75 = (recurse_74, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_151) -> {
        __core__chooseData(data_151, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_151))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_152) -> {
        __core__chooseData(data_152, () -> {
            pair_45 = __core__unConstrData__safe(data_152);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_153 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_153, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_153);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_50),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_154) -> {
        lst_15 = __core__unListData(data_154);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_132) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_155) -> {
        __helios__common__enum_tag_equals(data_155, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_156) -> {
        __helios__common__enum_tag_equals(data_156, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_157) -> {
        __core__chooseData(data_157, () -> {
            pair_46 = __core__unConstrData__safe(data_157);
            index_6 = __core__fstPair(pair_46);
            fields_86 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_158) -> {
        __core__chooseData(data_158, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_158);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_51 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_51),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_52 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_52),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_53 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_53),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_159) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_159),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_159)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_133) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_133))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_160) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_160),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_160
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_134) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_134))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_135) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_135))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_136) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_136))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_137) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_137)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_137)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_137)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_138) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_138, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_139) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_139))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_140) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_140);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_140);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_141) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_141, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_142) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_142;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_142)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            pair_47 = __core__unConstrData__safe(data_166);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_167);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_54 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_54),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_55),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_56 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_56),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_168) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_168),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_168)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_143) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_143))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_144) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_144))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_169) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_169),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_169
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_145) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_145))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_170) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_170),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_170),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_171) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_171),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_171
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_172) -> {
        __helios__common__enum_tag_equals(data_172, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_173) -> {
        __core__chooseData(data_173, () -> {
            pair_48 = __core__unConstrData__safe(data_173);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_174 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_174, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_174);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_57 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_57),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_146) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_146))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_77 = (recurse_76, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_175) -> {
        __core__chooseData(data_175, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_175))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_176) -> {
        __core__chooseData(data_176, () -> {
            pair_49 = __core__unConstrData__safe(data_176);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_177 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_177, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_177);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_58 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_58),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_59 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_59),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_178) -> {
        __core__chooseData(data_178, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_178);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_60 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_60),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_61),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_62),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_179) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_179),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_179)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_147) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_147))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_148) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_148))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_149) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_149), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_149))
        }
    };
    __helios__list[__helios__txinput]__any = (self_150) -> {
        (fn_19) -> {
            __helios__common__any(self_150, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]____to_data = __helios__common__identity;
    __module__CapoHelpers__dgd_DataSrc[]__is_valid_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data) -> {
        (data_180) -> {
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data(data_180),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data(data_180),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data(data_180),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data(data_180),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__from_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1) -> {
        (data_181) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__is_valid_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1)(data_181),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid dgd_DataSrc data", ())
                }
            )();
            data_181
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2 = (data_182) -> {
        __core__chooseData(data_182, () -> {
            pair_50 = __core__unConstrData__safe(data_182);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_183 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_183, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_183);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2 = (data_184) -> {
        __core__chooseData(data_184, () -> {
            pair_51 = __core__unConstrData__safe(data_184);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_185 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_185, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_185);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_63 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_63),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____is = (data_186) -> {
        __helios__common__enum_tag_equals(data_186, 2)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_108 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_108, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_108);
                            __core__ifThenElse(
                                __helios__txoutput__is_valid_data(head_64),
                                () -> {
                                    fields_109 = __core__tailList__safe(fields_108);
                                    __core__chooseList(fields_109, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__txo = (self_151) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_151))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____new = (self_152) -> {
        __core__constrData(2, __helios__common__list_1(__helios__txoutput____to_data(self_152)))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both____is = (data_189) -> {
        __helios__common__enum_tag_equals(data_189, 3)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2 = (data_190) -> {
        __core__chooseData(data_190, () -> {
            pair_53 = __core__unConstrData__safe(data_190);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_191 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_191, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_191);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_65),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__txoutput__is_valid_data(head_66),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__txo = (self_153) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_1(self_153))
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_192) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_192),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_192),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_192),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_192),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_192),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_193) -> {
            ignore_12 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_193),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_193
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_194) -> {
        __helios__common__enum_tag_equals(data_194, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_195) -> {
        __core__chooseData(data_195, () -> {
            pair_54 = __core__unConstrData__safe(data_195);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 0),
                () -> {
                    data_196 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_196, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_196);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_197) -> {
        __helios__common__enum_tag_equals(data_197, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_198) -> {
        __core__chooseData(data_198, () -> {
            pair_55 = __core__unConstrData__safe(data_198);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 1),
                () -> {
                    data_199 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_199, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_199);
                        __core__chooseList(fields_114, () -> {
                            false
                        }, () -> {
                            head_67 = __core__headList__safe(fields_114);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_67),
                                () -> {
                                    fields_115 = __core__tailList__safe(fields_114);
                                    __core__chooseList(fields_115, () -> {
                                        false
                                    }, () -> {
                                        head_68 = __core__headList__safe(fields_115);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_68),
                                            () -> {
                                                fields_116 = __core__tailList__safe(fields_115);
                                                __core__chooseList(fields_116, () -> {
                                                    false
                                                }, () -> {
                                                    head_69 = __core__headList__safe(fields_116);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_69),
                                                        () -> {
                                                            fields_117 = __core__tailList__safe(fields_116);
                                                            __core__chooseList(fields_117, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_154) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_154))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_155) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_155))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_156) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_156))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_200) -> {
        __core__chooseData(data_200, () -> {
            pair_56 = __core__unConstrData__safe(data_200);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 2),
                () -> {
                    data_201 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_201, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_201);
                        __core__chooseList(fields_118, () -> {
                            false
                        }, () -> {
                            head_70 = __core__headList__safe(fields_118);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_70),
                                () -> {
                                    fields_119 = __core__tailList__safe(fields_118);
                                    __core__chooseList(fields_119, () -> {
                                        false
                                    }, () -> {
                                        head_71 = __core__headList__safe(fields_119);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_71),
                                            () -> {
                                                fields_120 = __core__tailList__safe(fields_119);
                                                __core__chooseList(fields_120, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_202) -> {
        __core__chooseData(data_202, () -> {
            pair_57 = __core__unConstrData__safe(data_202);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 3),
                () -> {
                    data_203 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_203, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_203);
                        __core__chooseList(fields_121, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_204) -> {
        __core__chooseData(data_204, () -> {
            pair_58 = __core__unConstrData__safe(data_204);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 4),
                () -> {
                    data_205 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_205, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_122 = __core__unListData__safe(data_205);
                        __core__chooseList(fields_122, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_206) -> {
        __core__chooseData(data_206, () -> {
            pair_59 = __core__unConstrData__safe(data_206);
            index_8 = __core__fstPair(pair_59);
            fields_123 = __core__sndPair(pair_59);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_123, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_123), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_123))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_123, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_207) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_207, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_207, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_207, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_208) -> {
        ignore_13 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_208),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_208
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_157) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_157, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_158) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_158, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_209) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_209),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_209
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_159) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_159, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_210) -> {
        __helios__common__enum_tag_equals(data_210, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_211) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_211),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_211),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_211),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_212) -> {
            ignore_14 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_212),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_212
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_79 = (recurse_78, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_213) -> {
        __core__chooseData(data_213, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_213))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_72 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_72)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_72)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_214) -> {
        __core__chooseData(data_214, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_214))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_27) -> {
        recurse_83 = (recurse_82, map_28) -> {
            __core__chooseList(map_28, () -> {
                true
            }, () -> {
                head_73 = __core__headList__safe(map_28);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_73)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_73)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_28))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_27)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_215) -> {
        __core__chooseData(data_215, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_215))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_85 = (recurse_84, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_216) -> {
        __core__chooseData(data_216, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_216))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_217) -> {
        __core__chooseData(data_217, () -> {
            pair_60 = __core__unConstrData__safe(data_217);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 0),
                () -> {
                    data_218 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_218, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_124 = __core__unListData__safe(data_218);
                        __core__chooseList(fields_124, () -> {
                            false
                        }, () -> {
                            head_74 = __core__headList__safe(fields_124);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_74),
                                () -> {
                                    fields_125 = __core__tailList__safe(fields_124);
                                    __core__chooseList(fields_125, () -> {
                                        false
                                    }, () -> {
                                        head_75 = __core__headList__safe(fields_125);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_75),
                                            () -> {
                                                fields_126 = __core__tailList__safe(fields_125);
                                                __core__chooseList(fields_126, () -> {
                                                    false
                                                }, () -> {
                                                    head_76 = __core__headList__safe(fields_126);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_76),
                                                        () -> {
                                                            fields_127 = __core__tailList__safe(fields_126);
                                                            __core__chooseList(fields_127, () -> {
                                                                false
                                                            }, () -> {
                                                                head_77 = __core__headList__safe(fields_127);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_77),
                                                                    () -> {
                                                                        fields_128 = __core__tailList__safe(fields_127);
                                                                        __core__chooseList(fields_128, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_78 = __core__headList__safe(fields_128);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_78),
                                                                                () -> {
                                                                                    fields_129 = __core__tailList__safe(fields_128);
                                                                                    __core__chooseList(fields_129, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_79 = __core__headList__safe(fields_129);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_79),
                                                                                            () -> {
                                                                                                fields_130 = __core__tailList__safe(fields_129);
                                                                                                __core__chooseList(fields_130, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_80 = __core__headList__safe(fields_130);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_80),
                                                                                                        () -> {
                                                                                                            fields_131 = __core__tailList__safe(fields_130);
                                                                                                            __core__chooseList(fields_131, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_81 = __core__headList__safe(fields_131);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_81),
                                                                                                                    () -> {
                                                                                                                        fields_132 = __core__tailList__safe(fields_131);
                                                                                                                        __core__chooseList(fields_132, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_219) -> {
        ignore_15 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_219),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_219
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_160) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_160))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_220) -> {
        lst_22 = __core__unListData(data_220);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_161) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_161))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_221) -> {
        map_29 = __core__unMapData(data_221);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_29),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_29
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_162) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_162))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_163) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_163))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_164) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_164))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_165))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_222) -> {
        map_30 = __core__unMapData(data_222);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_30),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_30
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_166) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_166))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_223) -> {
        lst_23 = __core__unListData(data_223);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_167) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_167))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_224) -> {
        __core__chooseData(data_224, () -> {
            pair_61 = __core__unConstrData__safe(data_224);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 1),
                () -> {
                    data_225 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_225, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_225);
                        __core__chooseList(fields_133, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_226) -> {
        __helios__common__enum_tag_equals(data_226, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_31) -> {
        recurse_87 = (recurse_86, map_32) -> {
            __core__chooseList(map_32, () -> {
                true
            }, () -> {
                head_82 = __core__headList__safe(map_32);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_82)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_82)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_32))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_31)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_227) -> {
        __core__chooseData(data_227, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_227))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_228) -> {
        __core__chooseData(data_228, () -> {
            pair_62 = __core__unConstrData__safe(data_228);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 2),
                () -> {
                    data_229 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_229, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_229);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_83 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_83),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_84 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_84),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, () -> {
                                                    false
                                                }, () -> {
                                                    head_85 = __core__headList__safe(fields_136);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_85),
                                                        () -> {
                                                            fields_137 = __core__tailList__safe(fields_136);
                                                            __core__chooseList(fields_137, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_230) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_230),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_230),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_230),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_231) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_231),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_231
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_232) -> {
        __helios__common__enum_tag_equals(data_232, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_233) -> {
        __core__chooseData(data_233, () -> {
            pair_63 = __core__unConstrData__safe(data_233);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 0),
                () -> {
                    data_234 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_234, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_138 = __core__unListData__safe(data_234);
                        __core__chooseList(fields_138, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_235) -> {
        __helios__common__enum_tag_equals(data_235, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_236) -> {
        __core__chooseData(data_236, () -> {
            pair_64 = __core__unConstrData__safe(data_236);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 1),
                () -> {
                    data_237 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_237, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_237);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_86 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_86),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, () -> {
                                        false
                                    }, () -> {
                                        head_87 = __core__headList__safe(fields_140);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_87),
                                            () -> {
                                                fields_141 = __core__tailList__safe(fields_140);
                                                __core__chooseList(fields_141, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_168) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_168))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_169) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_169))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_238) -> {
        __helios__common__enum_tag_equals(data_238, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_239) -> {
        __core__chooseData(data_239, () -> {
            pair_65 = __core__unConstrData__safe(data_239);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 2),
                () -> {
                    data_240 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_240, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_240);
                        __core__chooseList(fields_142, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_142);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_88),
                                () -> {
                                    fields_143 = __core__tailList__safe(fields_142);
                                    __core__chooseList(fields_143, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_143);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_89),
                                            () -> {
                                                fields_144 = __core__tailList__safe(fields_143);
                                                __core__chooseList(fields_144, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_170) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_170))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_171) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_171))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_241) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_241),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_241),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_241),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_241),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_241),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_241),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_242) -> {
            ignore_17 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_242),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_242
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_243) -> {
        __helios__common__enum_tag_equals(data_243, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_244) -> {
        __core__chooseData(data_244, () -> {
            pair_66 = __core__unConstrData__safe(data_244);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 0),
                () -> {
                    data_245 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_245, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_245);
                        __core__chooseList(fields_145, () -> {
                            false
                        }, () -> {
                            head_90 = __core__headList__safe(fields_145);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_90),
                                () -> {
                                    fields_146 = __core__tailList__safe(fields_145);
                                    __core__chooseList(fields_146, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_172) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_172))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_246) -> {
        __helios__common__enum_tag_equals(data_246, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_247) -> {
        __core__chooseData(data_247, () -> {
            pair_67 = __core__unConstrData__safe(data_247);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 1),
                () -> {
                    data_248 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_248, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_248);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_249) -> {
        __helios__common__enum_tag_equals(data_249, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_250) -> {
        __core__chooseData(data_250, () -> {
            pair_68 = __core__unConstrData__safe(data_250);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 2),
                () -> {
                    data_251 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_251, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_251);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_252) -> {
        __helios__common__enum_tag_equals(data_252, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_253) -> {
        __core__chooseData(data_253, () -> {
            pair_69 = __core__unConstrData__safe(data_253);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_69), 3),
                () -> {
                    data_254 = __core__listData(__core__sndPair(pair_69));
                    __core__chooseData(data_254, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_149 = __core__unListData__safe(data_254);
                        __core__chooseList(fields_149, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_255) -> {
        __helios__common__enum_tag_equals(data_255, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_256) -> {
        __core__chooseData(data_256, () -> {
            pair_70 = __core__unConstrData__safe(data_256);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_70), 4),
                () -> {
                    data_257 = __core__listData(__core__sndPair(pair_70));
                    __core__chooseData(data_257, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_150 = __core__unListData__safe(data_257);
                        __core__chooseList(fields_150, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_258) -> {
        __helios__common__enum_tag_equals(data_258, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_259) -> {
        __core__chooseData(data_259, () -> {
            pair_71 = __core__unConstrData__safe(data_259);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_71), 5),
                () -> {
                    data_260 = __core__listData(__core__sndPair(pair_71));
                    __core__chooseData(data_260, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_260);
                        __core__chooseList(fields_151, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_15) -> {
        charterAc = __helios__assetclass__new(mph_15, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_16, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_261) -> {
        __core__chooseData(data_261, () -> {
            pair_72 = __core__unConstrData__safe(data_261);
            index_9 = __core__fstPair(pair_72);
            fields_152 = __core__sndPair(pair_72);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_152, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_152), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_152))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_152, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_262) -> {
        __core__chooseData(data_262, () -> {
            pair_73 = __core__unConstrData__safe(data_262);
            index_10 = __core__fstPair(pair_73);
            fields_153 = __core__sndPair(pair_73);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_153, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_153), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_153))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_153, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_173) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_173))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_174) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_174))
    };
    __helios__option[__helios__string]__from_data = (data_263) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_263),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_263
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_175) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_175))
    };
    __helios__option[__helios__txinput]__from_data = (data_264) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_264),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_264
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_176) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_176))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_177) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_177))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_17) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_17), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_178) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_178))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_179) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_179))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_154 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_154);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_180) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_180)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_181) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_181)(), __module__CapoHelpers__DelegateInput[]__serialize(self_181)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_181)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_182) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_182)(), __module__CapoHelpers__DelegateInput[]__serialize(self_182)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_182)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_182))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_183) -> {
        (index_12) -> {
            recurse_89 = (recurse_88, self_184, i_9) -> {
                __core__chooseList(self_184, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_184)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_184), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_183, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_185) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_185, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_186) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_186)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_156 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_156)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_186)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_155 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_155)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_186)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_186)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_186)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_186)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_187) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_187);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_187)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_158 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_158));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_187)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_187)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_187)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_15);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_157 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_157));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_187)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_187)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_187)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_188) -> {
        () -> {
            __lhs_0_41 = self_188;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_18 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_18, false, (), false, ()), "no"), self_188))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_189) -> {
        () -> {
            __lhs_0_47 = self_189;
            true
        }
    };
    __module__CapoHelpers__DgDataDetails[]__dataSrc = (self_190) -> {
        __module__CapoHelpers__dgd_DataSrc[]__from_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2)(__helios__common__struct_field_0(self_190))
    };
    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, type, mph_19) -> {
        __core__mkCons(__module__CapoHelpers__dgd_DataSrc[]____to_data(dataSrc), __core__mkCons(__helios__bytearray____to_data(id_1), __core__mkCons(__helios__string____to_data(type), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_19), __core__mkNilData(())))))
    };
    __module__CapoHelpers__DgDataDetails[]__creating = (id_2, output_1, mph_20) -> {
        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Output____new(output_1), id_2, "", mph_20)
    };
    __module__CapoHelpers__DgDataDetails[]__output = (self_191) -> {
        () -> {
            __cond_28 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_191);
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Output____is(__cond_28),
                () -> {
                    (__lhs_0_49) -> {
                        txo_1 = __module__CapoHelpers__dgd_DataSrc[]__Output__txo(__lhs_0_49);
                        txo_1
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_28),
                        () -> {
                            (__lhs_0_48) -> {
                                txo = __module__CapoHelpers__dgd_DataSrc[]__Both__txo(__lhs_0_48);
                                txo
                            }
                        },
                        () -> {
                            (__27) -> {
                                __helios__error("no output data")
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __module__CapoHelpers__DgDataDetails[]__outputData = (self_192) -> {
        () -> {
            __cond_29 = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__DgDataDetails[]__output(self_192)()));
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_29),
                () -> {
                    (__lhs_0_50) -> {
                        fields_159 = __helios__data__constrdata__fields(__lhs_0_50);
                        __helios__list[__helios__data]__head(fields_159)
                    }
                },
                () -> {
                    (__28) -> {
                        __helios__error("expected ConstrData{mStruct} for DgData output")
                    }
                }
            )()(__cond_29)
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_193) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_193))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_194) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_194))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_21, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_21), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__creatingDgData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_195) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                output_2 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_195)(recIdBytes_1);
                __module__CapoHelpers__DgDataDetails[]__creating(recIdBytes_1, output_2, __module__CapoHelpers__CapoCtx[]__mph(self_195))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_196) -> {
        () -> {
            e = "requires charter as input";
            __cond_30 = __module__CapoHelpers__CapoCtx[]__charter(self_196);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_30),
                () -> {
                    (__lhs_0_59) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_30),
                        () -> {
                            (__lhs_0_58) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_51) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_51);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_31 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_31),
                                    () -> {
                                        (__lhs_0_57) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_31),
                                            () -> {
                                                (__lhs_0_56) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_31),
                                                    () -> {
                                                        (__lhs_0_55) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_31),
                                                            () -> {
                                                                (__lhs_0_54) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_31),
                                                                    () -> {
                                                                        (__lhs_0_53) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_52) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_31)
                            }
                        }
                    )()
                }
            )()(__cond_30)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_197) -> {
        (key_16) -> {
            __helios__common__map_get(self_197, __helios__string____to_data(key_16), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_198) -> {
            (key_17) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_17)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_198)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_17))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_265) -> {
        __helios__common__enum_tag_equals(data_265, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_199) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_199))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_266) -> {
        __helios__common__enum_tag_equals(data_266, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_200) -> {
            (key_18, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_200)(key_18);
                __cond_32 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_32),
                    () -> {
                        (__lhs_0_61) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_18)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_60) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_60);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_32)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_201) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_201)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_202) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_202))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_203) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_203)()))(__module__CapoHelpers__CapoCtx[]__mph(self_203), false, (), false, ()), "no way m"), self_203))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_267) -> {
        __helios__common__enum_tag_equals(data_267, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_204) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_204))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_205) -> {
        (key_19) -> {
            __helios__common__map_get(self_205, __helios__string____to_data(key_19), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_206) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_33 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_206)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_33),
                    () -> {
                        (__lhs_0_64) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_62) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_62);
                            __cond_34 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_34),
                                () -> {
                                    (__lhs_0_63) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_63);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_63);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__29) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_34)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_206)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_33)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_207) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_207)()))(__module__CapoHelpers__CapoCtx[]__mph(self_207));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_208) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_208)()))(__module__CapoHelpers__CapoCtx[]__mph(self_208));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_209) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_66);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_65);
                                datum_2
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1) -> {
        (self_210) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_210), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_210)();
                __cond_36 = __module__CapoHelpers__CapoCtx[]__charter(self_210);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_36),
                    () -> {
                        (__lhs_0_67) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo_2) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo_2), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo_2))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__31) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_36)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2 = (self_211) -> {
        () -> {
            __cond_37 = __module__CapoHelpers__CapoCtx[]__charter(self_211);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_37),
                () -> {
                    (__lhs_0_69) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_69);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_37),
                        () -> {
                            (__lhs_0_68) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_68);
                                utxo_3
                            }
                        },
                        () -> {
                            (__32) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_37)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_212) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_212), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_212))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_2 = (self_213) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2(self_213)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_214) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_214)(false, (), true, recIdBytes_3);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_38 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_38),
                    () -> {
                        (__lhs_0_71) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_70) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_70);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_38))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_215) -> {
            (__useopt__recId_2, recId_5, __useopt__recIdBytes_2, recIdBytes_4) -> {
                recId_6 = __core__ifThenElse(
                    __useopt__recId_2,
                    () -> {
                        recId_5
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_5 = __core__ifThenElse(
                    __useopt__recIdBytes_2,
                    () -> {
                        recIdBytes_4
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_6)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_215)(false, (), true, recIdBytes_5);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_5)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_39 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_39),
                    () -> {
                        (__lhs_0_73) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_72) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_72);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_39))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_216) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_3) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_4 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_216)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_4), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_268 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_40 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_268);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                            () -> {
                                (__lhs_0_74) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_268));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__33) -> {
                                    false
                                }
                            }
                        )()(__cond_40)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_217) -> {
        (typeName_3, __useopt__id_1, id_5) -> {
            id_6 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_5
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(self_217)();
            (txo_3) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_3), capoAddr_2),
                    () -> {
                        data_269 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_3));
                        __cond_41 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_269);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_41),
                            () -> {
                                (__lhs_0_75) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_269));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_6, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_6)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__34) -> {
                                    false
                                }
                            }
                        )()(__cond_41)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1) -> {
        (self_218) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_218)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_42 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_42),
                    () -> {
                        (__lhs_0_76) -> {
                            data_270 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_270), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_270))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_270), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_270))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__35) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_42)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_271) -> {
        __helios__common__enum_tag_equals(data_271, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2 = (self_219) -> {
        (recId_7) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_7)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_219), recId_7);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(self_219)();
            __cond_43 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_43),
                () -> {
                    (__lhs_0_78) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_77);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_43)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_220) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_220);
                __cond_44 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                    () -> {
                        (__lhs_0_84) -> {
                            self_220
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                            () -> {
                                (__lhs_0_83) -> {
                                    self_220
                                }
                            },
                            () -> {
                                (__lhs_0_79) -> {
                                    __lhs_0_80 = self_220;
                                    mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_80);
                                    charterAc_3 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_45),
                                        () -> {
                                            (__lhs_0_82) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_220)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_81) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_81);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_45)
                                }
                            }
                        )()
                    }
                )()(__cond_44))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_221) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_221);
            __cond_46 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                () -> {
                    (__lhs_0_90) -> {
                        self_221
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_85) -> {
                                __lhs_0_86 = self_221;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_86);
                                charterAc_4 = __helios__assetclass__new(mph_23, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_47 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_47),
                                    () -> {
                                        (__lhs_0_88) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_88);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_47)))
                            }
                        }
                    )()
                }
            )()(__cond_46))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_222) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_222);
            __cond_48 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_48),
                () -> {
                    (__lhs_0_94) -> {
                        self_222
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_48),
                        () -> {
                            (__lhs_0_93) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_91) -> {
                                __lhs_0_92 = self_222;
                                mph_24 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_92);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_24);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_223) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_223, (z_3, pair_74) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_74)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_74)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_224) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_224))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_225) -> {
        (fn_22) -> {
            fn_23 = (pair_75) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_75)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_75)))
            };
            __helios__common__all(self_225, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_226) -> {
        (fn_24) -> {
            __helios__common__all(self_226, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_272) -> {
        __helios__common__enum_tag_equals(data_272, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_227) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_227)();
            mph_25 = __module__CapoHelpers__CapoCtx[]__mph(self_227);
            __lhs_0_95 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_95);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_95);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_95);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_95);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_95);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_227)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_25, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_20, entry_1) -> {
                    __cond_50 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_50),
                        () -> {
                            (__lhs_0_98) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_98);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_25, true))()
                            }
                        },
                        () -> {
                            (__36) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_20)), true)
                            }
                        }
                    )()(__cond_50)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_21, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_21)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_25, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_49 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_25, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_49),
                () -> {
                    (__lhs_0_97) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_96) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_49)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_228) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_228, self_228)
            }), "prevent unused var"), __cond_51 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_51),
                () -> {
                    (__lhs_0_105) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_51),
                        () -> {
                            (__lhs_0_104) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_51),
                                () -> {
                                    (__lhs_0_103) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_51),
                                        () -> {
                                            (__lhs_0_102) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_51),
                                                () -> {
                                                    (__lhs_0_101) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_51),
                                                        () -> {
                                                            (__lhs_0_100) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_99) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_51))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_229) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_229)(), __module__CapoHelpers__CapoCtx[]__serialize(self_229)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_26) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_26, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__37) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_273) -> {
        __helios__common__enum_tag_equals(data_273, 1)
    };
    __helios__option[__helios__data]__some__some = (self_230) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_230))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_231) -> {
        (key_22) -> {
            __helios__common__map_get(self_231, __helios__scriptpurpose____to_data(key_22), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_27, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_27);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_53 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_53),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__38) -> {
                            false
                        }
                    }
                )()(__cond_53)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_54 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_54),
                () -> {
                    (__lhs_0_113) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_108) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_108);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_55 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_55),
                            () -> {
                                (__lhs_0_109) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_109);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_56 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_56),
                                        () -> {
                                            (__lhs_0_112) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_56),
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_110) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_56)))
                                }
                            },
                            () -> {
                                (__39) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_55)
                    }
                }
            )()(__cond_54)))
        }(__cond_52 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_52),
            () -> {
                (__lhs_0_107) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_107);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_106) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_52))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_232) -> {
        (fn_25) -> {
            recurse_91 = (recurse_90, map_33) -> {
                __core__chooseList(map_33, () -> {
                    ()
                }, () -> {
                    head_91 = __core__headList__safe(map_33);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_91)), __helios__int__from_data(__core__sndPair(head_91))), recurse_90(recurse_90, __core__tailList__safe(map_33)))
                })()
            };
            recurse_91(recurse_91, self_232)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_233) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_233, (pair_76) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_76)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_76)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_234) -> {
        (fn_27) -> {
            recurse_93 = (recurse_92, map_34) -> {
                __core__chooseList(map_34, () -> {
                    ()
                }, () -> {
                    head_92 = __core__headList__safe(map_34);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_92)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_92))), recurse_92(recurse_92, __core__tailList__safe(map_34)))
                })()
            };
            recurse_93(recurse_93, self_234)
        }
    };
    __helios__option[__helios__int]__none____is = (data_274) -> {
        __helios__common__enum_tag_equals(data_274, 1)
    };
    __helios__option[__helios__int]__some__some = (self_235) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_235))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_236) -> {
        (key_23) -> {
            __helios__common__map_get(self_236, __helios__bytearray____to_data(key_23), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_237) -> {
        (key_24) -> {
            key_25 = __helios__mintingpolicyhash____to_data(key_24);
            recurse_95 = (recurse_94, self_238) -> {
                __core__chooseList(self_238, () -> {
                    self_238
                }, () -> {
                    head_93 = __core__headList__safe(self_238);
                    tail_5 = __core__tailList__safe(self_238);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_93)),
                        () -> {
                            recurse_94(recurse_94, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_93, recurse_94(recurse_94, tail_5))
                        }
                    )()
                })()
            };
            recurse_95(recurse_95, self_237)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_239, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_239), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_240) -> {
        (comp_4) -> {
            __helios__common__sort(self_240, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_241) -> {
        recurse_97 = (recurse_96, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_96(recurse_96, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_97(recurse_97, self_241)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_242) -> {
        (fn_28) -> {
            __helios__common__map(self_242, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_28, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_114 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_28, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_28, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_28, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_28)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_28)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_28))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_28);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __40) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_28)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_28),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_28))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_57 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_57),
                                                () -> {
                                                    (__lhs_0_116) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_115) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_115);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_57)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__NeighborhoodData__SubscriptionFeeFrequency[]__is_valid_data = (__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch__is_valid_data, __module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly__is_valid_data, __module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly__is_valid_data) -> {
        (data_275) -> {
            __core__ifThenElse(
                __module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly__is_valid_data(data_275),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly__is_valid_data(data_275),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch__is_valid_data(data_275),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch__is_valid_data_1 = (data_276) -> {
        __core__chooseData(data_276, () -> {
            pair_77 = __core__unConstrData__safe(data_276);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_277 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_277, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_160 = __core__unListData__safe(data_277);
                        __core__chooseList(fields_160, () -> {
                            false
                        }, () -> {
                            head_94 = __core__headList__safe(fields_160);
                            __core__ifThenElse(
                                __helios__value__is_valid_data(head_94),
                                () -> {
                                    fields_161 = __core__tailList__safe(fields_160);
                                    __core__chooseList(fields_161, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly__is_valid_data_1 = (data_278) -> {
        __core__chooseData(data_278, () -> {
            pair_78 = __core__unConstrData__safe(data_278);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 1),
                () -> {
                    data_279 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_279, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_162 = __core__unListData__safe(data_279);
                        __core__chooseList(fields_162, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_162);
                            __core__ifThenElse(
                                __helios__value__is_valid_data(head_95),
                                () -> {
                                    fields_163 = __core__tailList__safe(fields_162);
                                    __core__chooseList(fields_163, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly__is_valid_data_1 = (data_280) -> {
        __core__chooseData(data_280, () -> {
            pair_79 = __core__unConstrData__safe(data_280);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 2),
                () -> {
                    data_281 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_281, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_164 = __core__unListData__safe(data_281);
                        __core__chooseList(fields_164, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_164);
                            __core__ifThenElse(
                                __helios__value__is_valid_data(head_96),
                                () -> {
                                    fields_165 = __core__tailList__safe(fields_164);
                                    __core__chooseList(fields_165, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__FeeSource[]__is_valid_data = (__module__NeighborhoodData__FeeSource[]__EndUser__is_valid_data, __module__NeighborhoodData__FeeSource[]__SponsorContract__is_valid_data) -> {
        (data_282) -> {
            __core__ifThenElse(
                __module__NeighborhoodData__FeeSource[]__SponsorContract__is_valid_data(data_282),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodData__FeeSource[]__EndUser__is_valid_data(data_282),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__NeighborhoodData__FeeSource[]__EndUser__is_valid_data_1 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_80 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_166, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__FeeSource[]__SponsorContract__is_valid_data_1 = (data_285) -> {
        __core__chooseData(data_285, () -> {
            pair_81 = __core__unConstrData__safe(data_285);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 1),
                () -> {
                    data_286 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_286, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_167 = __core__unListData__safe(data_286);
                        __core__chooseList(fields_167, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_167);
                            __core__ifThenElse(
                                __helios__scripthash__is_valid_data(head_97),
                                () -> {
                                    fields_168 = __core__tailList__safe(fields_167);
                                    __core__chooseList(fields_168, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__RevenueModel[]__is_valid_data = (__module__NeighborhoodData__RevenueModel[]__TransactionBased__is_valid_data, __module__NeighborhoodData__RevenueModel[]__Subscription__is_valid_data) -> {
        (data_287) -> {
            __core__ifThenElse(
                __module__NeighborhoodData__RevenueModel[]__Subscription__is_valid_data(data_287),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodData__RevenueModel[]__TransactionBased__is_valid_data(data_287),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __helios__option[__helios__value]__is_valid_data = (data_288) -> {
        __core__chooseData(data_288, () -> {
            pair_82 = __core__unConstrData__safe(data_288);
            index_16 = __core__fstPair(pair_82);
            fields_169 = __core__sndPair(pair_82);
            __core__ifThenElse(
                __core__equalsInteger(index_16, 0),
                () -> {
                    __core__chooseList(fields_169, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_169), () -> {
                            __helios__value__is_valid_data(__core__headList__safe(fields_169))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_16, 1),
                        () -> {
                            __core__chooseList(fields_169, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__RevenueModel[]__TransactionBased__is_valid_data_1 = (data_289) -> {
        __core__chooseData(data_289, () -> {
            pair_83 = __core__unConstrData__safe(data_289);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 0),
                () -> {
                    data_290 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_290, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_290);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__value__is_valid_data(head_98),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, () -> {
                                        false
                                    }, () -> {
                                        head_99 = __core__headList__safe(fields_171);
                                        __core__ifThenElse(
                                            __helios__option[__helios__value]__is_valid_data(head_99),
                                            () -> {
                                                fields_172 = __core__tailList__safe(fields_171);
                                                __core__chooseList(fields_172, () -> {
                                                    false
                                                }, () -> {
                                                    head_100 = __core__headList__safe(fields_172);
                                                    __core__ifThenElse(
                                                        __module__NeighborhoodData__FeeSource[]__is_valid_data(__module__NeighborhoodData__FeeSource[]__EndUser__is_valid_data_1, __module__NeighborhoodData__FeeSource[]__SponsorContract__is_valid_data_1)(head_100),
                                                        () -> {
                                                            fields_173 = __core__tailList__safe(fields_172);
                                                            __core__chooseList(fields_173, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__NeighborhoodData__SubscriptionFeeFrequency[]]__is_valid_data_internal = (lst_25) -> {
        recurse_99 = (recurse_98, lst_26) -> {
            __core__chooseList(lst_26, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__NeighborhoodData__SubscriptionFeeFrequency[]__is_valid_data(__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch__is_valid_data_1, __module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly__is_valid_data_1, __module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly__is_valid_data_1)(__core__headList__safe(lst_26)),
                    () -> {
                        recurse_98(recurse_98, __core__tailList__safe(lst_26))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_99(recurse_99, lst_25)
    };
    __helios__list[__module__NeighborhoodData__SubscriptionFeeFrequency[]]__is_valid_data = (data_291) -> {
        __core__chooseData(data_291, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__NeighborhoodData__SubscriptionFeeFrequency[]]__is_valid_data_internal(__core__unListData__safe(data_291))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__RevenueModel[]__Subscription__is_valid_data_1 = (data_292) -> {
        __core__chooseData(data_292, () -> {
            pair_84 = __core__unConstrData__safe(data_292);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 1),
                () -> {
                    data_293 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_293, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_293);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __helios__list[__module__NeighborhoodData__SubscriptionFeeFrequency[]]__is_valid_data(head_101),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__NeighborhoodData__RevenueModel[]]__is_valid_data_internal = (lst_27) -> {
        recurse_101 = (recurse_100, lst_28) -> {
            __core__chooseList(lst_28, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__NeighborhoodData__RevenueModel[]__is_valid_data(__module__NeighborhoodData__RevenueModel[]__TransactionBased__is_valid_data_1, __module__NeighborhoodData__RevenueModel[]__Subscription__is_valid_data_1)(__core__headList__safe(lst_28)),
                    () -> {
                        recurse_100(recurse_100, __core__tailList__safe(lst_28))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_101(recurse_101, lst_27)
    };
    __helios__list[__module__NeighborhoodData__RevenueModel[]]__is_valid_data = (data_294) -> {
        __core__chooseData(data_294, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__NeighborhoodData__RevenueModel[]]__is_valid_data_internal(__core__unListData__safe(data_294))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodData__AppInfo[]__is_valid_data = (data_295) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_295, __core__bData(#7265764d646c), __helios__list[__module__NeighborhoodData__RevenueModel[]]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_295, __core__bData(#75726c), __helios__string__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AppInfo.url", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AppInfo.revMdl", () -> {
                    false
                })()
            }
        )()
    };
    __module__NeighborhoodData__NodeOpsInfo[]__is_valid_data = (data_296) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_296, __core__bData(#6d696e557074), __helios__int__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_296, __core__bData(#6d696e53746b), __helios__value__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_296, __core__bData(#634d6178), __helios__int__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_296, __core__bData(#634d696e), __helios__int__is_valid_data),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in NodeOpsInfo.cMin", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in NodeOpsInfo.cMax", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in NodeOpsInfo.minStk", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in NodeOpsInfo.minUpt", () -> {
                    false
                })()
            }
        )()
    };
    __module__NeighborhoodData__NeighborhoodData[]__is_valid_data = (data_297) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_297, __core__bData(#6f7073), __module__NeighborhoodData__NodeOpsInfo[]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_297, __core__bData(#617070), __module__NeighborhoodData__AppInfo[]__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_297, __core__bData(#647363), __helios__string__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_297, __core__bData(#6e6d), __helios__string__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_297, __core__bData(#6d74), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_297, __core__bData(#747065), __helios__string__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_297, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid data in NeighborhoodData.@id", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid data in NeighborhoodData.tpe", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid data in NeighborhoodData.mt", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in NeighborhoodData.nm", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in NeighborhoodData.dsc", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in NeighborhoodData.app", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in NeighborhoodData.ops", () -> {
                    false
                })()
            }
        )()
    };
    __module__NeighborhoodData__NeighborhoodData[]____eq = (a_17, b_16) -> {
        aFields = __core__unMapData(a_17);
        bFields = __core__unMapData(b_16);
        __core__ifThenElse(
            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #406964), __helios__common__mStruct_field_internal(bFields, #406964)),
            () -> {
                __core__ifThenElse(
                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #747065), __helios__common__mStruct_field_internal(bFields, #747065)),
                    () -> {
                        __core__ifThenElse(
                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6d74), __helios__common__mStruct_field_internal(bFields, #6d74)),
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e6d), __helios__common__mStruct_field_internal(bFields, #6e6d)),
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #647363), __helios__common__mStruct_field_internal(bFields, #647363)),
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #617070), __helios__common__mStruct_field_internal(bFields, #617070)),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6f7073), __helios__common__mStruct_field_internal(bFields, #6f7073)),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            },
            () -> {
                false
            }
        )()
    };
    __module__NeighborhoodData__NeighborhoodData[]__from_data = (data_298) -> {
        ignore_18 = __core__ifThenElse(
            __module__NeighborhoodData__NeighborhoodData[]__is_valid_data(data_298),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid NeighborhoodData data", ())
            }
        )();
        data_298
    };
    __module__NeighborhoodData__NeighborhoodData[]__memberToken = (self_243) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_243, #6d74))
    };
    __module__NeighborhoodData__NeighborhoodData[]__validate = (self_244) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__NeighborhoodData__NeighborhoodData[]____eq(self_244, self_244)
            }), "no way"), true)
        }
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__is_valid_data = (__module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_299) -> {
            __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_299),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_299),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_299),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__from_data = (__module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_300) -> {
            ignore_19 = __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateDatum[]__is_valid_data(__module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_300),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_300
        }
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_301) -> {
        __core__chooseData(data_301, () -> {
            pair_85 = __core__unConstrData__safe(data_301);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 0),
                () -> {
                    data_302 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_302, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_302);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_102),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, () -> {
                                        false
                                    }, () -> {
                                        head_103 = __core__headList__safe(fields_177);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_103),
                                            () -> {
                                                fields_178 = __core__tailList__safe(fields_177);
                                                __core__chooseList(fields_178, () -> {
                                                    false
                                                }, () -> {
                                                    head_104 = __core__headList__safe(fields_178);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_104),
                                                        () -> {
                                                            fields_179 = __core__tailList__safe(fields_178);
                                                            __core__chooseList(fields_179, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation____is = (data_303) -> {
        __helios__common__enum_tag_equals(data_303, 1)
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_304) -> {
        __core__chooseData(data_304, () -> {
            pair_86 = __core__unConstrData__safe(data_304);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 1),
                () -> {
                    data_305 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_305, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_305);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_105),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__dd = (self_245) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_245))
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData____is = (data_306) -> {
        __helios__common__enum_tag_equals(data_306, 2)
    };
    __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_307) -> {
        __core__chooseData(data_307, () -> {
            pair_87 = __core__unConstrData__safe(data_307);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 2),
                () -> {
                    data_308 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_308, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_308);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_106 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __module__NeighborhoodData__NeighborhoodData[]__is_valid_data(head_106),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, () -> {
                                        false
                                    }, () -> {
                                        head_107 = __core__headList__safe(fields_183);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_107),
                                            () -> {
                                                fields_184 = __core__tailList__safe(fields_183);
                                                __core__chooseList(fields_184, () -> {
                                                    false
                                                }, () -> {
                                                    head_108 = __core__headList__safe(fields_184);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_108),
                                                        () -> {
                                                            fields_185 = __core__tailList__safe(fields_184);
                                                            __core__chooseList(fields_185, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__MintingActivity[]__is_valid_data = (__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_309) -> {
            __core__ifThenElse(
                __module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_309),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__NeighborhoodPolicy__MintingActivity[]__from_data = (__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_310) -> {
            ignore_20 = __core__ifThenElse(
                __module__NeighborhoodPolicy__MintingActivity[]__is_valid_data(__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_310),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_310
        }
    };
    __module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_311) -> {
        __core__chooseData(data_311, () -> {
            pair_88 = __core__unConstrData__safe(data_311);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 0),
                () -> {
                    data_312 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_312, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_312);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_109),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__seed = (self_246) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_246))
    };
    __module__NeighborhoodPolicy__SpendingActivity[]__is_valid_data = (__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_313) -> {
            __core__ifThenElse(
                __module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_313),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__NeighborhoodPolicy__SpendingActivity[]__from_data = (__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_314) -> {
            ignore_21 = __core__ifThenElse(
                __module__NeighborhoodPolicy__SpendingActivity[]__is_valid_data(__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_314),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_314
        }
    };
    __module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_315) -> {
        __core__chooseData(data_315, () -> {
            pair_89 = __core__unConstrData__safe(data_315);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_89), 0),
                () -> {
                    data_316 = __core__listData(__core__sndPair(pair_89));
                    __core__chooseData(data_316, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_188 = __core__unListData__safe(data_316);
                        __core__chooseList(fields_188, () -> {
                            false
                        }, () -> {
                            head_110 = __core__headList__safe(fields_188);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_110),
                                () -> {
                                    fields_189 = __core__tailList__safe(fields_188);
                                    __core__chooseList(fields_189, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__id = (self_247) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_247))
    };
    __module__NeighborhoodPolicy__BurningActivity[]__is_valid_data = (__module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_317) -> {
            __core__ifThenElse(
                __module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_317),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_318) -> {
        __core__chooseData(data_318, () -> {
            pair_90 = __core__unConstrData__safe(data_318);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_90), 0),
                () -> {
                    data_319 = __core__listData(__core__sndPair(pair_90));
                    __core__chooseData(data_319, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_190 = __core__unListData__safe(data_319);
                        __core__chooseList(fields_190, () -> {
                            false
                        }, () -> {
                            head_111 = __core__headList__safe(fields_190);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_111),
                                () -> {
                                    fields_191 = __core__tailList__safe(fields_190);
                                    __core__chooseList(fields_191, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__is_valid_data = (__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_320) -> {
            __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_320),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_320),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_320),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_320),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_320),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_320),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_320),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_320),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_320),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__from_data = (__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_321) -> {
            ignore_22 = __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateActivity[]__is_valid_data(__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_321),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_321
        }
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_322) -> {
        __helios__common__enum_tag_equals(data_322, 0)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_323) -> {
        __core__chooseData(data_323, () -> {
            pair_91 = __core__unConstrData__safe(data_323);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_91), 0),
                () -> {
                    data_324 = __core__listData(__core__sndPair(pair_91));
                    __core__chooseData(data_324, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_192 = __core__unListData__safe(data_324);
                        __core__chooseList(fields_192, () -> {
                            false
                        }, () -> {
                            head_112 = __core__headList__safe(fields_192);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_112),
                                () -> {
                                    fields_193 = __core__tailList__safe(fields_192);
                                    __core__chooseList(fields_193, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_248) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_248))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_325) -> {
        __helios__common__enum_tag_equals(data_325, 1)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_326) -> {
        __core__chooseData(data_326, () -> {
            pair_92 = __core__unConstrData__safe(data_326);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_92), 1),
                () -> {
                    data_327 = __core__listData(__core__sndPair(pair_92));
                    __core__chooseData(data_327, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_194 = __core__unListData__safe(data_327);
                        __core__chooseList(fields_194, () -> {
                            false
                        }, () -> {
                            head_113 = __core__headList__safe(fields_194);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_113),
                                () -> {
                                    fields_195 = __core__tailList__safe(fields_194);
                                    __core__chooseList(fields_195, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_249) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_249))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities____is = (data_328) -> {
        __helios__common__enum_tag_equals(data_328, 2)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_329) -> {
        __core__chooseData(data_329, () -> {
            pair_93 = __core__unConstrData__safe(data_329);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_93), 2),
                () -> {
                    data_330 = __core__listData(__core__sndPair(pair_93));
                    __core__chooseData(data_330, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_196 = __core__unListData__safe(data_330);
                        __core__chooseList(fields_196, () -> {
                            false
                        }, () -> {
                            head_114 = __core__headList__safe(fields_196);
                            __core__ifThenElse(
                                __module__NeighborhoodPolicy__SpendingActivity[]__is_valid_data(__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_114),
                                () -> {
                                    fields_197 = __core__tailList__safe(fields_196);
                                    __core__chooseList(fields_197, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__activity = (self_250) -> {
        __module__NeighborhoodPolicy__SpendingActivity[]__from_data(__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_250))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities____is = (data_331) -> {
        __helios__common__enum_tag_equals(data_331, 3)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_332) -> {
        __core__chooseData(data_332, () -> {
            pair_94 = __core__unConstrData__safe(data_332);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_94), 3),
                () -> {
                    data_333 = __core__listData(__core__sndPair(pair_94));
                    __core__chooseData(data_333, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_198 = __core__unListData__safe(data_333);
                        __core__chooseList(fields_198, () -> {
                            false
                        }, () -> {
                            head_115 = __core__headList__safe(fields_198);
                            __core__ifThenElse(
                                __module__NeighborhoodPolicy__MintingActivity[]__is_valid_data(__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_115),
                                () -> {
                                    fields_199 = __core__tailList__safe(fields_198);
                                    __core__chooseList(fields_199, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__activity = (self_251) -> {
        __module__NeighborhoodPolicy__MintingActivity[]__from_data(__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_251))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities____is = (data_334) -> {
        __helios__common__enum_tag_equals(data_334, 4)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_335) -> {
        __core__chooseData(data_335, () -> {
            pair_95 = __core__unConstrData__safe(data_335);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_95), 4),
                () -> {
                    data_336 = __core__listData(__core__sndPair(pair_95));
                    __core__chooseData(data_336, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_200 = __core__unListData__safe(data_336);
                        __core__chooseList(fields_200, () -> {
                            false
                        }, () -> {
                            head_116 = __core__headList__safe(fields_200);
                            __core__ifThenElse(
                                __module__NeighborhoodPolicy__BurningActivity[]__is_valid_data(__module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_116),
                                () -> {
                                    fields_201 = __core__tailList__safe(fields_200);
                                    __core__chooseList(fields_201, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_337) -> {
        __helios__common__enum_tag_equals(data_337, 5)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_338) -> {
        __core__chooseData(data_338, () -> {
            pair_96 = __core__unConstrData__safe(data_338);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_96), 5),
                () -> {
                    data_339 = __core__listData(__core__sndPair(pair_96));
                    __core__chooseData(data_339, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_202 = __core__unListData__safe(data_339);
                        __core__chooseList(fields_202, () -> {
                            false
                        }, () -> {
                            head_117 = __core__headList__safe(fields_202);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_117),
                                () -> {
                                    fields_203 = __core__tailList__safe(fields_202);
                                    __core__chooseList(fields_203, () -> {
                                        false
                                    }, () -> {
                                        head_118 = __core__headList__safe(fields_203);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_118),
                                            () -> {
                                                fields_204 = __core__tailList__safe(fields_203);
                                                __core__chooseList(fields_204, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_252) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_252))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_253) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_253))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_340) -> {
        __helios__common__enum_tag_equals(data_340, 6)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_341) -> {
        __core__chooseData(data_341, () -> {
            pair_97 = __core__unConstrData__safe(data_341);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_97), 6),
                () -> {
                    data_342 = __core__listData(__core__sndPair(pair_97));
                    __core__chooseData(data_342, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_205 = __core__unListData__safe(data_342);
                        __core__chooseList(fields_205, () -> {
                            false
                        }, () -> {
                            head_119 = __core__headList__safe(fields_205);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_119),
                                () -> {
                                    fields_206 = __core__tailList__safe(fields_205);
                                    __core__chooseList(fields_206, () -> {
                                        false
                                    }, () -> {
                                        head_120 = __core__headList__safe(fields_206);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_120),
                                            () -> {
                                                fields_207 = __core__tailList__safe(fields_206);
                                                __core__chooseList(fields_207, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_254) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_254))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_255) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_255))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_343) -> {
        __helios__common__enum_tag_equals(data_343, 7)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_344) -> {
        __core__chooseData(data_344, () -> {
            pair_98 = __core__unConstrData__safe(data_344);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_98), 7),
                () -> {
                    data_345 = __core__listData(__core__sndPair(pair_98));
                    __core__chooseData(data_345, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_208 = __core__unListData__safe(data_345);
                        __core__chooseList(fields_208, () -> {
                            false
                        }, () -> {
                            head_121 = __core__headList__safe(fields_208);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_121),
                                () -> {
                                    fields_209 = __core__tailList__safe(fields_208);
                                    __core__chooseList(fields_209, () -> {
                                        false
                                    }, () -> {
                                        head_122 = __core__headList__safe(fields_209);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_122),
                                            () -> {
                                                fields_210 = __core__tailList__safe(fields_209);
                                                __core__chooseList(fields_210, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_256) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_256))
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_346) -> {
        __helios__common__enum_tag_equals(data_346, 8)
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_347) -> {
        __core__chooseData(data_347, () -> {
            pair_99 = __core__unConstrData__safe(data_347);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_99), 8),
                () -> {
                    data_348 = __core__listData(__core__sndPair(pair_99));
                    __core__chooseData(data_348, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_211 = __core__unListData__safe(data_348);
                        __core__chooseList(fields_211, () -> {
                            false
                        }, () -> {
                            head_123 = __core__headList__safe(fields_211);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_123),
                                () -> {
                                    fields_212 = __core__tailList__safe(fields_211);
                                    __core__chooseList(fields_212, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_257) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_257))
    };
    __helios__list[__helios__txinput]__for_each = (self_258) -> {
        (fn_29) -> {
            recurse_103 = (recurse_102, lst_29) -> {
                __core__chooseList(lst_29, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_29(__helios__txinput__from_data(__core__headList__safe(lst_29))), recurse_102(recurse_102, __core__tailList__safe(lst_29)))
                })()
            };
            recurse_103(recurse_103, self_258)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_259) -> {
        (fn_30) -> {
            __helios__common__filter_list(self_259, (item_14) -> {
                fn_30(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__additionalDelegateValidation = (self_260) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt val "), __helios__bool__or(() -> {
                __cond_58 = self_260;
                __core__ifThenElse(
                    __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_58),
                    () -> {
                        (__lhs_0_127) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_58),
                            () -> {
                                (__lhs_0_126) -> {
                                    __helios__error("unreachable in a dgDataPolicy")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities____is(__cond_58),
                                    () -> {
                                        (__lhs_0_121) -> {
                                            VMA = __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_121);
                                            __cond_60 = VMA;
                                            __lhs_0_122 = __cond_60;
                                            seed_3 = __module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_122);
                                            __core__chooseUnit(__helios__print("registering a new Neighborhood..."), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the operator must provide a valid minting seed", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the seed must have a Neighborhood.operator token in it", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            mintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("nbhd"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ());
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), newRecData = __module__CapoHelpers__CapoCtx[]__creatingDgData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx)(true, mkTn("nbhd"), false, ());
                                            __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData)();
                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("send the fee to Treasury w/ acctg info"), reg = __module__NeighborhoodData__NeighborhoodData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(newRecData)());
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), memberToken = __module__NeighborhoodData__NeighborhoodData[]__memberToken(reg);
                                            __core__chooseUnit(__core__ifThenElse(
                                                __helios__bool____not(__helios__string__starts_with(memberToken)("member-")),
                                                () -> {
                                                    __helios__error("invalid member token name")
                                                },
                                                () -> {
                                                    () -> {
                                                        ()
                                                    }()
                                                }
                                            )(), memberTokenAc = __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), __helios__string__encode_utf8(memberToken)());
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    __cond_61 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {
                                                        __helios__int____eq(__helios__value__get_safe(__helios__txinput__value(i_13))(memberTokenAc), 1)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__txinput]__none____is(__cond_61),
                                                        () -> {
                                                            (__lhs_0_125) -> {
                                                                __helios__error("missing member token")
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_124) -> {
                                                                true
                                                            }
                                                        }
                                                    )()(__cond_61)
                                                }, () -> {
                                                    __module__NeighborhoodData__NeighborhoodData[]__validate(reg)()
                                                })
                                            }, () -> {
                                                mintingOk
                                            }))))))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities____is(__cond_58),
                                            () -> {
                                                (__lhs_0_118) -> {
                                                    VSA = __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_118);
                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __cond_59 = VSA;
                                                    __lhs_0_119 = __cond_59;
                                                    recId_8 = __module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord__id(__lhs_0_119);
                                                    __core__chooseUnit(__helios__print("updating the registration details for a single Neighborhood..."), hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "nbhd", true, recId_8);
                                                    hasRecOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("nbhd", true, recId_8);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasRecInput))((utxo_6) -> {
                                                        __lhs_0_120 = __module__NeighborhoodData__NeighborhoodData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasRecOutput);
                                                        updatedData = __module__NeighborhoodData__NeighborhoodData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __core__chooseUnit(__helios__assert(__module__NeighborhoodData__NeighborhoodData[]__validate(updatedData)(), "<-- that throws; this can't."), ())
                                                    }), true)))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities____is(__cond_58),
                                                    () -> {
                                                        (__lhs_0_117) -> {
                                                            __helios__error("no burn activity here yet")
                                                        }
                                                    },
                                                    () -> {
                                                        (__41) -> {
                                                            false
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_58)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__NeighborhoodPolicy__DelegateActivity[]__otherDatumValidation = (self_261) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_62 = self_261;
            __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                () -> {
                    (__lhs_0_129) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                        () -> {
                            (__lhs_0_128) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__42) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_62)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#4e65696768626f72686f6f64506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_262) -> {
        (fn_31) -> {
            __helios__common__all(self_262, (item_15) -> {
                fn_31(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_263, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_263), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_264) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_264))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_265) -> {
        (fn_32) -> {
            __helios__common__all(self_265, (item_16) -> {
                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_266) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_266))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_267) -> {
        () -> {
            recurse_105 = (recurse_104, self_268, first) -> {
                __core__chooseList(self_268, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_124 = __core__headList__safe(self_268);
                    key_data = __core__fstPair(head_124);
                    key_26 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_124);
                    value_8 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_26((valid_7, key_27) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_27)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_8((valid_6, value_9) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_9)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_104(recurse_104, __core__tailList__safe(self_268), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_105(recurse_105, self_267, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_269) -> {
        (fn_33, a0) -> {
            __helios__common__fold(self_269, (prev_4, item_17) -> {
                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_270) -> {
        (key_28) -> {
            key_29 = __helios__bytearray____to_data(key_28);
            recurse_107 = (recurse_106, self_271) -> {
                __core__chooseList(self_271, () -> {
                    self_271
                }, () -> {
                    head_125 = __core__headList__safe(self_271);
                    tail_6 = __core__tailList__safe(self_271);
                    __core__ifThenElse(
                        __core__equalsData(key_29, __core__fstPair(head_125)),
                        () -> {
                            recurse_106(recurse_106, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_125, recurse_106(recurse_106, tail_6))
                        }
                    )()
                })()
            };
            recurse_107(recurse_107, self_270)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_349) -> {
        __helios__common__enum_tag_equals(data_349, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_272) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_272))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_273) -> {
        (key_30) -> {
            __helios__common__map_get(self_273, __helios__mintingpolicyhash____to_data(key_30), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_274) -> {
        (fn_34, a0_1, b0_1) -> {
            __helios__common__fold(self_274, (prev_5, item_18) -> {
                prev_5((a_18, b_17) -> {
                    fn_34(a_18, b_17, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_275) -> {
        __helios__common__length(self_275)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_276) -> {
        head_126 = __core__headList(self_276);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_126)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_126)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_277) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_277))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_278) -> {
        (key_31) -> {
            key_32 = __helios__string____to_data(key_31);
            recurse_109 = (recurse_108, self_279) -> {
                __core__chooseList(self_279, () -> {
                    self_279
                }, () -> {
                    head_127 = __core__headList__safe(self_279);
                    tail_7 = __core__tailList__safe(self_279);
                    __core__ifThenElse(
                        __core__equalsData(key_32, __core__fstPair(head_127)),
                        () -> {
                            recurse_108(recurse_108, tail_7)
                        },
                        () -> {
                            __core__mkCons(head_127, recurse_108(recurse_108, tail_7))
                        }
                    )()
                })()
            };
            recurse_109(recurse_109, self_278)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_280, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_280), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_281) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_281))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_282) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_282))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_63 = mdd;
            __core__ifThenElse(
                __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData____is(__cond_63),
                () -> {
                    (__lhs_0_267) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation____is(__cond_63),
                        () -> {
                            (isD) -> {
                                dd = __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__dd(isD);
                                __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__int__serialize(__module__BasicDelegate__rev)()), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __module__BasicDelegate__instance), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__NeighborhoodPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_65 = activity_3;
                                __core__ifThenElse(
                                    __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_65),
                                    () -> {
                                        (__lhs_0_245) -> {
                                            activities_2 = __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_245);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            mintDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                    a_19 = __module__NeighborhoodPolicy__DelegateActivity[]__from_data(__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                    __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_114 = a_19;
                                                                    __core__ifThenElse(
                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_114),
                                                                        () -> {
                                                                            (__lhs_0_251) -> {
                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_19)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_114),
                                                                                () -> {
                                                                                    (__lhs_0_250) -> {
                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_19)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_114),
                                                                                        () -> {
                                                                                            (__lhs_0_249) -> {
                                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                                                                                () -> {
                                                                                                    (__lhs_0_248) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                                                                                        () -> {
                                                                                                            (__lhs_0_247) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_114),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_246) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__78) -> {
                                                                                                                        __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_114)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            spendDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                    a_20 = __module__NeighborhoodPolicy__DelegateActivity[]__from_data(__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                    __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_115 = a_20;
                                                                    __core__ifThenElse(
                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_115),
                                                                        () -> {
                                                                            (__lhs_0_257) -> {
                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                    __module__BasicDelegate__isSpendDelegate
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                                }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_115),
                                                                                () -> {
                                                                                    (__lhs_0_256) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_115),
                                                                                        () -> {
                                                                                            (__lhs_0_255) -> {
                                                                                                __helios__error("TODO: validate spending the datum for burn")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_115),
                                                                                                () -> {
                                                                                                    (__lhs_0_254) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_115),
                                                                                                        () -> {
                                                                                                            (__lhs_0_253) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_115),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_252) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__79) -> {
                                                                                                                        __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_115)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            dgDataPolicyCheck = __core__ifThenElse(
                                                __helios__bool__or(() -> {
                                                    __module__BasicDelegate__isMintDelegate
                                                }, () -> {
                                                    __module__BasicDelegate__isSpendDelegate
                                                }),
                                                () -> {
                                                    __core__chooseUnit(__helios__assert(__module__BasicDelegate__isDgDataPolicy, "ack! delegated-data policy can't be a mint/spend delegate"), true)
                                                },
                                                () -> {
                                                    () -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                            a_21 = __module__NeighborhoodPolicy__DelegateActivity[]__from_data(__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                            __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_116 = a_21;
                                                            __core__ifThenElse(
                                                                __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_116),
                                                                () -> {
                                                                    (__lhs_0_266) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_116),
                                                                        () -> {
                                                                            (__lhs_0_265) -> {
                                                                                __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_116),
                                                                                () -> {
                                                                                    (__lhs_0_264) -> {
                                                                                        __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities____is(__cond_116),
                                                                                        () -> {
                                                                                            (__lhs_0_263) -> {
                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities____is(__cond_116),
                                                                                                () -> {
                                                                                                    (__lhs_0_262) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities____is(__cond_116),
                                                                                                        () -> {
                                                                                                            (__lhs_0_261) -> {
                                                                                                                __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_116),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_260) -> {
                                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_116),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_259) -> {
                                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_258) -> {
                                                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_116)))
                                                        }))
                                                    }()
                                                }
                                            )();
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    mintDgtCheck_1
                                                }, () -> {
                                                    spendDgtCheck_1
                                                })
                                            }, () -> {
                                                dgDataPolicyCheck
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_65),
                                            () -> {
                                                (__lhs_0_239) -> {
                                                    innerActivity = __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_239);
                                                    __cond_112 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_112),
                                                        () -> {
                                                            (__lhs_0_243) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_243);
                                                                purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_243);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_113),
                                                                    () -> {
                                                                        (__lhs_0_244) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__77) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_113)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_112),
                                                                () -> {
                                                                    (__lhs_0_242) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        __lhs_0_241 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_112)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_65),
                                                    () -> {
                                                        (__lhs_0_139) -> {
                                                            dCLA = __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_139);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_110),
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_238);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_110),
                                                                        () -> {
                                                                            (__lhs_0_236) -> {
                                                                                __cond_111 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_111),
                                                                                    () -> {
                                                                                        (__lhs_0_237) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__76) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_111)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__75) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_110), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_67 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_67),
                                                                        () -> {
                                                                            (__lhs_0_232) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_232);
                                                                                purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_232);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_108 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_108),
                                                                                    () -> {
                                                                                        (__lhs_0_233) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_109 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)()))(purpose_7);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_109),
                                                                                                () -> {
                                                                                                    (__lhs_0_235) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_234) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_234);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_109))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_108)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_67),
                                                                                () -> {
                                                                                    (__lhs_0_180) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_181 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_181);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_106 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_106),
                                                                                                () -> {
                                                                                                    (__lhs_0_230) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_107 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_107),
                                                                                                            () -> {
                                                                                                                (__lhs_0_231) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__73) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_107))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__72) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_106), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_105 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_105),
                                                                                                () -> {
                                                                                                    (__lhs_0_229) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_105),
                                                                                                        () -> {
                                                                                                            (__lhs_0_228) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_228);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_228);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_228);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_227) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_227);
                                                                                                                purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_227);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_227);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_105)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })))
                                                                                                    }(__cond_94 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_94),
                                                                                                        () -> {
                                                                                                            (__lhs_0_226) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_94),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_200) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_95 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_95),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_201);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_96 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_96),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_202) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_202);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__66) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_96)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__65) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_95)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_97 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_97),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_224) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_104 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_104),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_225) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__71) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_104), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_97),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_205) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_205);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_103 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_103),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_223) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_103),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_222) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_103),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_221) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__70) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_103), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_102 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_102),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_220) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_102),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_102),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_218) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_102),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__69) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_102)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_101 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_101),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_216) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_101),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_215) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_101),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_101),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_101),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_101),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_101),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_209) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_101)))
                                                                                                                                            }(__cond_99 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_99),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_208) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_206);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_100 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_100),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_207);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__68) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_100)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_99))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_98 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_98),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__67) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_98), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_97))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__64) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_94))
                                                                                                }(__cond_87 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_87),
                                                                                                    () -> {
                                                                                                        (__lhs_0_199) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_87),
                                                                                                            () -> {
                                                                                                                (__lhs_0_183) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_88 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_88),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_191) -> {
                                                                                                                                    __core__chooseUnit(__cond_93 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_93),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_198) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_93),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_197) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_93),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_196) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_93),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_93),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_93),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_193) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_93),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__63) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_93), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__60) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_90 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_90),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_186) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_91 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_91),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_188) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_188);
                                                                                                                                                                __lhs_0_189 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_189);
                                                                                                                                                                __cond_92 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_92),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_190) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_190);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__62) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_92)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_187) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_91), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__61) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_90)))
                                                                                                                                    }(__cond_89 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_89),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_185) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_184) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_184);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_89))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_88)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__59) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_87))
                                                                                            }))))
                                                                                        }(__cond_86 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_86),
                                                                                            () -> {
                                                                                                (__lhs_0_182) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_182);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__58) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_86)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_67),
                                                                                        () -> {
                                                                                            (__lhs_0_179) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_67),
                                                                                                () -> {
                                                                                                    (__lhs_0_156) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                        () -> {
                                                                                                                            true
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                    (pdChange) -> {
                                                                                                                                        (pendingTypeName) -> {
                                                                                                                                            __core__chooseUnit(__cond_75 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_75),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_165) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_78 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_78),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_166) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__54) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_78))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__51) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                }()
                                                                                                                                                            }
                                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                            ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_161 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_161);
                                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_161);
                                                                                                                                                            refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_161);
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                            pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                            }(__cond_76 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_76),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_163) -> {
                                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_163);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_77 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_77),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_164) -> {
                                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__53) -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_77), idPrefix_6))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_76),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_162) -> {
                                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_162);
                                                                                                                                                                                idPrefix_5
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__52) -> {
                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_76)))))))))
                                                                                                                                                        })))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_75), __cond_74 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_74),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                                        (callback_12) -> {
                                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__50) -> {
                                                                                                                                                        (callback_11) -> {
                                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_74))
                                                                                                                                        }(__cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_73),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_159) -> {
                                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_159);
                                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_4)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__49) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_73))
                                                                                                                                    }(__cond_72 = pcChange;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_72),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_158) -> {
                                                                                                                                                dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_158);
                                                                                                                                                dgtChange
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_157) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_72))
                                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                                }))
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }()
                                                                                                            }
                                                                                                        )();
                                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                            mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                            len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __helios__int____gt(len, 1),
                                                                                                                                () -> {
                                                                                                                                    __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), (observedTokenBurn) -> {
                                                                                                                                remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                        __cond_81 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_81),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_171) -> {
                                                                                                                                                    typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_171);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_5)), __cond_82 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_82),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                                foldingBurn
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__56) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_83 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_83),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_177) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_5))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_172) -> {
                                                                                                                                                                            __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_172);
                                                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                            tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                            mph_30 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                            __cond_84 = mph_30;
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __helios__option[__helios__mintingpolicyhash]__some____is(__cond_84),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_176) -> {
                                                                                                                                                                                        __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__57) -> {
                                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_173 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                        refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_173);
                                                                                                                                                                                        tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                        __cond_85 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __helios__option[__helios__int]__none____is(__cond_85),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_175) -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_174) -> {
                                                                                                                                                                                                    burningCount = __helios__option[__helios__int]__some__some(__lhs_0_174);
                                                                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                        __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                        },
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                ()
                                                                                                                                                                                                            }()
                                                                                                                                                                                                        }
                                                                                                                                                                                                    )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()(__cond_85))
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_84)
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_83))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_82))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__55) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_81)
                                                                                                                                    }(__cond_80 = pcChange_1;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_80),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_170);
                                                                                                                                                dgtChange_1
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_169) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_80)))
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                            }(__cond_79 = mintThisPolicy;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_79),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_168) -> {
                                                                                                                                        minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_168);
                                                                                                                                        minted
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_167) -> {
                                                                                                                                        __core__mkNilPairData(())
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_79)))))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )();
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                            }, () -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                            }),
                                                                                                            () -> {
                                                                                                                __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }()
                                                                                                            }
                                                                                                        )(), __helios__bool__and(() -> {
                                                                                                            mintDgtCheck
                                                                                                        }, () -> {
                                                                                                            spendDgtCheck
                                                                                                        })))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_67),
                                                                                                        () -> {
                                                                                                            (__lhs_0_146) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_146);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_68 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_68),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_155) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_68),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_154) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_68),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_148) -> {
                                                                                                                                            key_33 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_148);
                                                                                                                                            tokenName_4 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_148);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_149 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_4);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_69 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_69),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_153) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_33))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_150) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_150);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_33)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_4), "token-name mismatch"), __core__chooseUnit(__cond_71 = mph_29;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_71),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__48) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_71), __cond_70 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_70),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_151) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__47) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_70)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_69), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_68),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_147) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__46) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_68), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_67),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_145) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_144) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_67)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_66 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_66),
                                                                () -> {
                                                                    (__lhs_0_143) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_66),
                                                                        () -> {
                                                                            (__lhs_0_142) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_66),
                                                                                () -> {
                                                                                    (__lhs_0_141) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_66),
                                                                                        () -> {
                                                                                            (__lhs_0_140) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__45) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_66)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_65),
                                                            () -> {
                                                                (__lhs_0_138) -> {
                                                                    seed_4 = __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_138);
                                                                    dataTypePurpose_1 = __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_138);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                        () -> {
                                                                            __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                                purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                                newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                                })
                                                                                            }, () -> {
                                                                                                __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                                }))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_65),
                                                                    () -> {
                                                                        (__lhs_0_137) -> {
                                                                            dDataType = __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_137);
                                                                            recId_10 = __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_137);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                () -> {
                                                                                    __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_10))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_10);
                                                                                        __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                            __helios__string____eq("settings", dDataType),
                                                                                            () -> {
                                                                                                curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                    false,
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bytearray____eq(curSettingsId, recId_10),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_10)();
                                                                                                                    curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __helios__bool__and(() -> {
                                                                                            __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_2)(recId_10, dDataType))("  -- did output delegated data? ")
                                                                                        }, () -> {
                                                                                            true
                                                                                        }))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_65),
                                                                            () -> {
                                                                                (__lhs_0_135) -> {
                                                                                    recId_9 = __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_135);
                                                                                    __core__ifThenElse(
                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                        () -> {
                                                                                            __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_136 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_9);
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                            }()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities____is(__cond_65),
                                                                                    () -> {
                                                                                        (__lhs_0_134) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities____is(__cond_65),
                                                                                            () -> {
                                                                                                (__lhs_0_133) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_132) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_65))))))
                            }
                        },
                        () -> {
                            (__43) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_64 = activity_3;
                                __core__ifThenElse(
                                    __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_64),
                                    () -> {
                                        (__lhs_0_131) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_64),
                                            () -> {
                                                (__lhs_0_130) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__44) -> {
                                                    __module__NeighborhoodPolicy__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_64)
                            }
                        }
                    )()
                }
            )()(__cond_63)))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__NeighborhoodPolicy__DelegateDatum[]__from_data(__module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__NeighborhoodPolicy__DelegateActivity[]__from_data(__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/DredNeighborhood/NeighborhoodPolicy.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f18590019053408186d0119057204186e011905720419016e02190126181f1901700219012b1419017d02190138181f1903e002190163181b19048f001905a1181e1904ef0219016a18201904f40219016a181c190536001906980819055f001906a1183319095001190231182419112300190560182019117401190464183a19117c01190463184f1912ef011901f91821191304011901f91821191319011901f9182119132e011901f91821191343011901f91821191358011901f91821191360011901f91821191363001904b80919138b011901cb1827191502031901bb182e191503031901bb182e191512031901c01839191513031901c0183919156a031822161915ad031901d8183719174e0418360e1918170019018a184b1918390019018a184d19185703190160183419193d0319012a181b191989001906e108191a02001906e914191a4000190168184b191a7100190168184d191a84001906b808191b00001906c31846191b01001906c31825191b8f0019058b181f191c070019058c1822191cf7001905250c191d7d0019041815191d7e0019041815191f1b0519014d0c191f4d0519013e183f19201905190145181b192031051901350b19206f0418a20aff", "variableNames": "", "termDescriptions": "a8190170646d6b546e190536676368617274657219150262746e19150362746e1919896763686172746572191a846763686172746572191d7d683c7377697463683e191d7e683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/DredNeighborhood/NeighborhoodPolicy.hl", "src/DredNeighborhood/NeighborhoodData.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1904110019016718321904410019025b182a190443001902cf183a190445001902fd0b19044b001903341019044d00190371081904830019051b0819048700190534081905b501190572041905b601190572041905e50118bf183a1905e60118bf183a1905e90118c0182e1905ea0118c0182e1905eb0118c0091905ec0118c0041905ed0118c018271905ef0118c018271905f00118c018191905f20118c018191905f30118c00a190600011905700a19060301190570182919060401190570181a19068f0119055a1019069d0119055b183619069f0119055b182d19073a0119014c181c19082001190128181c1908ee0118f5181c190a74011901a41826190ba30119023118241910c3011902ac18281912f30119044d181c19131d01190401183719136501190404182019147f0119043318651915010119040218351915060119040218311915240119038b182919152b0119038b182519171f0119037f18321917290119037e185219172f0119037d184e19188201190466183419188b01190466183019188f01190464183a19189a01190463184f1918b80119047f182f1918bf0119047f182b19194501190496181d19197701190203182719197e0119020318231919a70119020c18271919ae0119020c18231919d60119021418241919dd0119021418201919e901190216182b1919f0011902161827191a06011901f91825191a0a011901f91821191a10011901cb1827191a28011904a41826191a3c011904a714191a44011904a8181f191a4b011904a8181b191a95011904cc181f191a98011904cd181e191a99011904cd181e191ab5011904d7181b191abc011904d717191ac7011904dc1838191ae0011904ac182e191aea011904ac182a191aed011904a71831191b1c011904f114191b24011904f2181f191b2b011904f2181b191b5e011904f81820191b68011904f8181c191bbb011905201828191bdd01190526182b191be50119050a1845191be80119050a182c191bef0119050a1828191bfc0119052d1818191c030119052d14191c08011904ff182c191c11011904ff1828191c15011904f11831191c420119053514191c4a01190536181f191c5101190536181b191cac0119053e182d191cb50119053e1829191cb9011905351831191f2c02190199181e191f57021901181827191f580219011a08191f590219011a08191f9602190126181f191fb50219012b14191fc202190138181f1920590219013d18351920660219013d183119208402190130181e19208502190130181e19208e0219013318251920bb02190163181b1920df0219017118411921090219016f182019210f0219016f181c1921120219016a18201921190219016a181c192b8a03183e12192b9d03183f182a193300041901b31826193301041901b3183119331e041901bb182e19331f041901bb182e193321041901bc0c193332041901bd182c19334e041901c0183919334f041901c01839193356041901c2101933bb041901d818371933f6041901e3182d1935380419016018341936d40419012a181b1936f00419011e0e19370b04190114181b19375204185d0519375304185b182d1937690418631419379c04186d1719380304184d0919380404184d182e19381e0418470619381f0418441819193895041830184419389604183018441938b704181f021938b804181f021938d2041822161938d90418230d1938e80418260e1939070019079f182719392300190799182c19393c0019077610193a9f001907601832193aa200190747182c193aa800190749181f193ac60019074b183b193b000019073412193b0100190734182b193b030019072a0d193b0400190725182a193b28001907261830193bb1001906e108193bb2001906e20f193bed001906e914193c08001906b808193c09001906b90f193c50001906c31846193c51001906c31825193c9d0019069808193c9e001906990f193cc4001906a11833193d82001906571825193da7001906291833193e5c001905a1181e193edd001905870f193eed0019058b181f193f440019058c1822193f940019057c10193fc40019056e1823193fc50019056e1823193fd7001905601820193fe10019055f08193ff400190562101940190019055a182819401a0019055a1841194035001905501119407f00190533181c1940b200190522181c1940f40019052a1818194101001905250c19410e0019051a181819414a001905020919415100190500181d19416a001904f71820194190001904ef09194197001904ed181b194219001904d5184d194227001904d51844194285001904b0181e194286001904b1183d194291001904b8091942aa001904b5101942e0001904460b1942e1001904460b1942e700190448184c19433900190438183f19433b00190437182119433c00190437182119436f00190416181c194379001904181519437a001904181519446b001903d3141944910019037010194501001902fb10194507001902ce181b19451a001902f51827194523001902f6182e194534001902f60f194549001902e111194570001902e6184719457e001902ea1832194588001902ea18221945a9001902f0182d1945da00190258091945f80019025a187819460300190262081946050019025c182619460f0019025c0e1946100019025e181b1946170019025f184119462200190260185519463400190262182719463500190262182719463d001902711119465300190266183819466e0019026918431946790019026a184d1946890019026a18451946bd00190275183d1946c40019027618521946d60019027618261946d800190278101946d9001902a618621946e4001902aa111946ff001902ab185119470a001902af1119473c0019027d181d19475400190283181d19476c0019028b181d1947980019029318441947b30019029618501947be00190297185c1947cc0019029818441947ce0019029718541947cf0019029718541947e90019029d1857194818001902b3183119483200190225185d19484d001902311119488f00190236184c19489d0019023618211948a000190246185b1948ab0019024718601948be0019024818501948c90019024918681949070019023c18441949510019024e18301949ad001901e918561949af001901e8151949b0001901e8151949b4001901e9141949b9001901e90f1949c5001901e918441949c6001901eb184f1949c8001901e9184e1949c9001901e9184e1949d5001901ec184f1949ec001901ec182e1949ed001901f1131949fb001901de171949fc001901de171949fd001901df18561949ff001901de182b194a00001901de182b194a04001901df14194a09001901df0f194a15001901df1844194a1a001901df184e194a1b001901df184e194a2d001901d41821194a47001901bf1827194a4a001901d108194a4c001901d009194a62001901c51853194a6d001901c5184b194a89001901c8184a194c580019018e13194c680019018a184b194c6d0019018a1830194c700019018a184d194cb900190168184b194cbe001901681830194cc100190168184d19617b0519014d0c19619a0519015418371961ae051901500c1961bb0519015a151961be0519015a18361961c00519015a18361961c10519015a18311961f20519013e183f1961f50519013f183419622705190145182919622805190145181b196244051901350b196256051901320a19630405190113161963170519010e1319631d05190109185a19635d0518e40a1976d305182b04197b230618a20a197b4a0618a512197ced0618360e197d0e0618321819197d170618291819197d2806182a08197d2906182a08197d330618241818197d420618260eff", "variableNames": "", "termDescriptions": "b8381905e5646d61696e1905e6646d61696e19073a616119082061611908ee6161191a3c6463637478191b1c6463637478191c426463637478191f2c6473656c66191f576473656c66191f586463637478191f596463637478191fb5646d6b546e1920df647574786f192b8a6473656c6619331e62746e19331f62746e19332165746e53747219380367707572706f7365193895781a6e6f4f7468657241637469766974696573537570706f72746564193896781a6e6f4f7468657241637469766974696573537570706f727465641938b76b686173536565645574786f1938b86b686173536565645574786f193907696d6b4361706f437478193bb16763686172746572193c086763686172746572193c9d67636861727465721940356473656c6619407f6473656c661940b26473656c6619410e6473656c661942856473656c661942e0683c7377697463683e1942e1683c7377697463683e19433b636b657919433c636b657919436f6473656c66194379683c7377697463683e19437a683c7377697463683e19446b6473656c661944916473656c661945016473656c661945076473656c66194634683c7377697463683e194635683c7377697463683e1946d870616374734f6e546869735265636f72641949af636d73671949b0636d73671949fb6b617373657274696f6e4f6b1949fc6b617373657274696f6e4f6b1949ff636d7367194a00636d7367194a2d6473656c66194a476473656c66197d1769617373657274696f6e197d3369617373657274696f6e" } },
      scriptHash: "5265b59168f910abdb4e05f437d3940ba11b1197b4ced9c63fabd8d1",
      config: { "rev": "1", "delegateName": "NeighborhoodPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": false }
    }
  };
  specializedDelegateModule = NeighborhoodPolicy_hl;
  requiresGovAuthority = false;
  // includeFromCapoModules(): string[] {
  //     return [ 
  //         "TieredScale",
  //         "SampleOtherModule"
  //     ]
  // }
  // get Xparams() {
  //     return {
  //         rev: 1n,
  //         delegateName: "nodeOpRegistry",
  //         isMintDelegate: false,
  //         isSpendDelegate: false,
  //         isDgDataPolicy: true,
  //     }
  // }
  get modules() {
    return [
      ...super.modules,
      NeighborhoodData_hl,
      NeighborhoodSettings_hl
      // xxx Don't include ProtocolSettings here.  Instead, use any abstract settings
      // definition instead.
      // ProtocolSettings
    ];
  }
}

export { NeighborhoodBundle as default };
//# sourceMappingURL=Neighborhood.hlb.mjs.map
