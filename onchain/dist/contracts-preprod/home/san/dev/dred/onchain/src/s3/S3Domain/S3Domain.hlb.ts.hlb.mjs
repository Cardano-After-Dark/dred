import { DelegatedDataBundle } from '@donecollectively/stellar-contracts';
import { makeSource } from '@helios-lang/compiler-utils';
import '../../../../../../../../../ProtocolSettings.mjs';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';

const S3DomainPolicy_hl = makeSource(
  "module S3DomainPolicy\n\n// specialized to ...\n//   -   NOT YET SPECIALIZED (replace with your specialization notes here) - \n// original notes about (un)specialization follow:\n\n\n//  //! provides a basic version, not yet specialized,\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    mkUutTnFactory\n} from CapoMintHelpers\n\n// import {\n//     ProtocolSettings\n// } from ProtocolSettings\n\nimport {\n    S3DomainData\n    // AbstractSettingsForS3Domain as ProtocolSettings\n} from S3DomainData\n\nimport {\n    CapoCtx,\n    mkCapoCtx,\n    DgDataDetails,\n    mkTv,\n    AnyData \n} from CapoHelpers\n\nimport {\n    TODO,\n    REQT\n} from StellarHeliosHelpers\n\n// import {\n//     TierLookupResult\n// } from TieredScale\n//\n// import {\n//     PriceNeeded,\n//     validateRequiredValue,\n//     ValueValidator\n// } from PriceValidator\n\n\n\nenum DelegateDatum {\n    // we only have to use this if we decide Constr#0 is essential for practical CIP-68 compat\n    Cip68RefToken {  \n        // NOTE: this datum contains reference details for a user-facing token minted according to the cip-68 standard \n        //  - the asset name (in the Value of this UTXO) MUST be:  #000643b0 + tokenName\n        //     - this asset name can serve user-side tokens using the CIP-68 \"222\", \"333\" or other token types.\n        //     - the user-side asset name with its (222/333/etc) CIP-67 prefix and \n        //       ... its remaining tokenName will be matched to this asset name (#000643b0 +tokenName)\n        //       ... to locate this reference datum; this datum content will be interpreted\n        //       ... according to the semantics implied by the user-side asset-name prefix.\n        //\n        //  - The attached 'meta' field in this Datum variant contains the relevant data, depending on the token type\n        //    - for \"222\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"files\" :   // {mediaType, src (url), name?, ... otherFields)\n        //        - \"image\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //    - for \"333\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"ticker\" : String\n        //        - \"url\": String  // project URL\n        //        - \"logo\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //                    - it must have a mime type `image/png`, `image/jpeg` or `image/svg+xml`\n        //        - \"decimals\" : Int\n\n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data\n        // otherDetails: Data // can be Unit () or anything else\n    }\n\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: S3DomainData\n        version: Int\n        otherDetails: Data \n    }\n\n    // func validateSettings(self, settings: ProtocolSettings) -> Bool{\n    // ... get the settings object from the contract manifest via cctx\n    //     assert(false, \"not valid (stubbed)\");\n    //     settings.serialize() != self.serialize() &&\n    //     true\n    // }\n}\n\n\nenum MintingActivity {\n    CreatingRecord{\n        seed: TxOutputId\n    }\n}\n\n//! The minting delegate can also be used as a general spending \n// delegate (this is the default arrangement during the Capo \n// charter mint).  These activities are required by the Capo when\n// spending utxos having DelegatedDatum type.\nenum SpendingActivity {\n    UpdatingRecord {\n        id: ByteArray\n    }\n}\n\nfunc ensureConstrainedTxValidity() -> () {\n    assert(\n        tx.time_range.end - tx.time_range.start \n            <= Duration::HOUR,\n        \"txn duration err\"\n    )\n}\n\nfunc daysInFuture(nowPlusDays: Int) -> TimeRange {\n    ensureConstrainedTxValidity();\n    expiryDuration : Duration = Duration::DAY * nowPlusDays;\n    leeway : Duration = 1 * Duration::HOUR;\n    latestAcceptable : Time = tx.time_range.end + expiryDuration + leeway;\n    \n    TimeRange::new(\n        tx.time_range.start + expiryDuration,\n        latestAcceptable\n    )\n}\n\nenum BurningActivity {\n    DeletingRecord {\n        id: ByteArray\n    }\n}\n\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        activity: BurningActivity\n    }\n    \n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // record id created from seed\n    }\n\n    UpdatingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    DeletingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        // todo: change this back when the recursive enum's `__is_valid_data not found` error is resolved\n        activities: []Data // actually a DelegateActivity\n    }\n    // this function gives a general-purpose implementation of checking for \n    // valid uut minting. \n    //\n    // A specialization might modify it to use different policies\n    // or enforce additional requirements\n    // \n    // func genericUutMinting(self, \n    //     mdd: DelegateDatum\n    // ) -> Bool {\n    //     //!!! replace with an activity using the same seed-txn pattern:\n    //     // MintingActivities::SomethingMintingUuts{sTxId, sIdx, purposes} = self;\n    //     DelegateDatum::IsDelegation{dd} = mdd;\n    //     returnsAuthzToken : Bool = mustReturnValueToScript(dd.tvAuthorityToken());\n\n    //     o : []TxOutput = get_cont_outputs();\n    //     if (o.length != 1) { error(\"single utxo only\") };\n\n    //     print (\"in unsp_MD\");\n    //     isOk : Bool = returnsAuthzToken && \n\n    //     unmodifiedDelegation( /* isD, same as mdd */ mdd.serialize()) &&\n\n    //     // This call can serve as a template for enforcing expected mints \n    //     // of uuts (and additional token values) in validation of application-\n    //     // specific activities, given (mph, sTxId, sIdx, purposes)\n    //     validateUutMinting(\n    //         mph: dd.mph,\n    //         seedTxId: sTxId, \n    //         seedIdx: sIdx, \n    //         purposes: purposes,\n    //         // otherMintedValue: ()\n    //         mkTokenName: mkUutTnFactory(sTxId, sIdx)\n    //     );\n\n    //     isOk\n    // }\n\n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {\n        print(\"  -- addl dgt val \");\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            CapoLifecycleActivities => {\n                // only mint/spend delegates answer to CapoLifecycleActivities\n                error(\"unreachable in a dgDataPolicy\")\n            },\n            MintingActivities{VMA} => VMA.switch {\n                CreatingRecord{seed} => {\n                    print(\"registering a new s3domain...\");\n\n                    REQT(\"the operator must provide a valid minting seed\");\n                    mkTn : (String) -> String = mkUutTnFactory(seed);\n\n                    // mints a s3domain UUT\n                    mintingOk : Bool = validateUutMinting(\n                        mph: priorMddd.dd.mph,\n                        seed: seed,\n                        purposes: []String{\"s3dom\"},\n                        // otherMintedValue: ()\n                        mkTokenName: mkTn,\n                        // WE ARE the mint delegate.\n                        needsMintDelegateApproval: false \n                    );\n\n                    assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n                    // _settings = ProtocolSettings::from_data(cctx.getManifestedData(\"currentSettings\"));\n\n                    // vaultValue: Value = mkTv(priorMddd.dd.mph, mkTn(\"lbmVault\"));\n                    // print(\"vaultValue: \"+ vaultValue.show());\n                    newRecData : DgDataDetails = cctx.creatingDgData(mkTn(\"s3dom\"));\n                    _newDataOut : TxOutput = newRecData.output();\n                        //cctx.hasDelegatedDataOutput(vaultValue);\n                    TODO(\"send the fee to Treasury w/ acctg info\");\n\n                    reg: S3DomainData = S3DomainData::from_data(\n                        newRecData.outputData()\n                    );\n\n                    assert(\n                        tx.time_range.end - tx.time_range.start \n                            <= Duration::HOUR,\n                        \"txn duration err\"\n                    );\n                    // has the right expiration date from settings\n                    // acceptableExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                    // has the member-token reference\n                    // memberToken : String = reg.memberToken;\n                    // if (!memberToken.starts_with(\"member-\")) { \n                    //     error(\"invalid member token name\"\n                    // ) };\n                    // memberTokenAc : AssetClass = AssetClass::new(\n                    //     priorMddd.dd.mph, memberToken.encode_utf8()\n                    // );\n\n                    // // has the member-token in the txn\n                    // tx.inputs.find_safe((i: TxInput) -> Bool {\n                    //     i.value.get_safe(memberTokenAc) == 1\n                    // }).switch {\n                    //     None => error(\"missing member token\"),\n                    //     Some => true\n                    // } &&\n                    reg.validate() &&\n                    mintingOk\n                }\n            },\n            SpendingActivities{VSA} => {\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n\n                VSA.switch {                    \n                    UpdatingRecord{recId} => {\n                        print(\"updating the registration details for a single s3domain...\");\n\n                        hasRecInput : (TxInput) -> Bool = \n                            cctx.mkDelegatedDataPredicate(\"s3dom\", recId);                        \n                        // _settings = ProtocolSettings::from_data(\n                        //     cctx.getManifestedData(\"currentSettings\")\n                        // );                        \n                        hasRecOutput : (TxOutput) -> Bool = \n                            cctx.mkDelegatedDataOutputPredicate(\"s3dom\", recId);\n    \n                        tx.inputs.filter(hasRecInput).for_each( (utxo : TxInput) -> () {\n                            // they're all album vaults, because of the above.\n                            _inputData : S3DomainData = \n                                S3DomainData::from_data(utxo.datum.inline);\n                            updatedUtxo : TxOutput = tx.outputs.find(hasRecOutput);\n                            updatedData : S3DomainData = \n                                S3DomainData::from_data(updatedUtxo.datum.inline);\n\n                            // possibly move this to a separate SpendingActivity\n                            REQT(\"the lastHeartbeat must be extended by settings.expectedHeartbeatInterval\");\n                            // _freshExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                            assert(updatedData.validate(), \"<-- that throws; this can't.\"); // throws if invalid\n                            ()\n                        });\n                        true\n                    }\n                }\n            },\n            BurningActivities => error(\"no burn activity here yet\"),\n            _ => false\n        } || tx.serialize() == priorMddd.serialize()        \n    }\n\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way\" );\n        []String{ \n            // \"nothingHereYet\",\n        }\n    }\n\n    //! Used only for validating non-IsDelegation datum types and activities.\n    // if you have any special admininstrative data structures that inform \n    // ...  your minting policy, this might be useful.  Otherwise, and typically,\n    // ... you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation(self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/s3/S3Domain/S3DomainPolicy.hl", // source filename
    moduleName:  "S3DomainPolicy",
});

makeSource(
  "module <%= modelName %>Settings\n\n/**\n * allows this data-model to use settings details from the ProtocolSettings record\n * without preconceptions about the other areas of ProtocolSettings that may be present.\n * \n * This allows other settings to be included in the ProtocolSettings record, without\n * needing the policy for this module to be aware of them.\n * \n */\nstruct AbstractSettingsFor<%= modelName %> {\n    <%= modelName %>Settings: <%= settingsStructName %> \"<%= nestedSettingsFieldKey %>\"\n}\n\nstruct <%= settingsStructName %> {\n    <%= settingsFields %>\n}\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/s3/S3Domain/S3DomainSettings.hl", // source filename
    moduleName:  "to",
});

const S3DomainData_hl = makeSource(
  "module S3DomainData\n\n// import {\n//     ProtocolSettings as AbstractSettingsForS3\n// } from S3DomainSettings\n\nstruct S3DomainData {\n    id : ByteArray \"@id\" // = \"<%= s3d-XXXXyyyyZZZZ\"\n    type : String \"tpe\" // = \"s3domain\"\n\n    // needs typeSchema support in Helios - use ByteArray encoding\n    // nodePublicKey: PubKey \"pubk\"\n\n    name: String \"name\"\n    description: String \"desc\"\n    primaryDriver: String \"pDrv\"\n    p2drivers: []String \"p2Drvs\"\n    keyMetrics: []String \"keyMets\"\n\n    func validate(self) -> Bool {\n        assert(true || /*never executed*/ self == self, \"no way\");\n        // assert(self.memberToken != null, \"memberToken is null\");\n        true\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/s3/S3Domain/S3DomainData.hl", // source filename
    moduleName:  "S3DomainData",
});

class S3DomainBundle extends DelegatedDataBundle.usingCapoBundleClass(DredCapoBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "cf6165831afcf3e8fba778522c291e6a5b889f8784b13b07cfc9d42096b10bbb", "src/CapoMintHelpers.hl": "016bc2d80eb050e974b99b673a7e82178bbe70859d14fe3aee212eed62187a80", "src/delegation/CapoDelegateHelpers.hl": "0456441fc9d80ddf923514f2265e03f17d1858f5a1e7bdaeb8c934bde037920f", "src/StellarHeliosHelpers.hl": "17367f95ed34644b7348c2904c310f1733217c8b65231c8c7b2d17c8d4febbef", "src/CapoHelpers.hl": "63af299e4c9d85cc740191c02ec4a9374949eb582659072340a963ccde18bc3c", "src/s3/S3Domain/S3DomainData.hl": "f2b45f2e1e6028affb4a1bb386aad9cf8e04c11ff97988e12425fa4c6b75108a", "generatedSpecializedDelegateModule": "81e2dd6f60a0eba30b824e7436b1683ce839fa877632b6fedd68d791afe17cb8", "src/s3/S3Domain/S3DomainPolicy.hl": "85d1356ba0f09eb28e4430cfdd633d06dfb484ab9ea29f3aebcd1471f617071f", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##4e5333446f6d61696e506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87980;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common12 = __core__unConstrData(__CONTEXT);
    __common13 = __core__sndPair(__common12);
    __helios__value__new = (assetClass, i) -> {
        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))
    };
    __helios__bytearray__show = (self_8) -> {
        recurse_3 = (recurse_2, self_9) -> {
            n = __core__lengthOfByteString(self_9);
            __core__ifThenElse(
                __core__lessThanInteger(0, n),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_6 = __core__indexByteString__safe(self_9, 0);
                    recurse_1 = (recurse, self_7, bytes) -> {
                        digit = __core__modInteger(self_7, 16);
                        bytes_1 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_7, 16),
                            () -> {
                                bytes_1
                            },
                            () -> {
                                recurse(recurse, __core__divideInteger(self_7, 16), bytes_1)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_6, 0),
                        () -> {
                            __core__consByteString(45, recurse_1(recurse_1, __core__multiplyInteger(self_6, -1), #))
                        },
                        () -> {
                            recurse_1(recurse_1, self_6, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_9)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_3(recurse_3, self_8)
    };
    __helios__tx__minted = (self_15) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_15))))))))
    };
    __helios__scriptcontext__tx = __core__headList(__common13);
    __helios__common__assert_constr_index = (data, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_1),
            () -> {
                data
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__fold = (self_16, fn, z) -> {
        recurse_5 = (recurse_4, self_17, z_1) -> {
            __core__chooseList(self_17, () -> {
                z_1
            }, () -> {
                recurse_4(recurse_4, __core__tailList__safe(self_17), fn(z_1, __core__headList__safe(self_17)))
            })()
        };
        recurse_5(recurse_5, self_16, z)
    };
    __helios__int__show = (self_18) -> {
        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i_2, bytes_2) -> {
            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i_2, 10), 48), bytes_2);
            __core__ifThenElse(
                __core__lessThanInteger(i_2, 10),
                () -> {
                    bytes_3
                },
                () -> {
                    recurse_6(recurse_6, __core__divideInteger(i_2, 10), bytes_3)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_18, 0),
            () -> {
                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_18, -1), #))
            },
            () -> {
                recurse_7(recurse_7, self_18, #)
            }
        )())
    };
    __helios__value__show = (self_23) -> {
        __helios__common__fold(self_23, (prev_1, pair_3) -> {
            mph_4 = __core__unBData__safe(__core__fstPair(pair_3));
            __helios__common__fold(__core__unMapData__safe(__core__sndPair(pair_3)), (prev_2, pair_4) -> {
                token_name_2 = __core__unBData__safe(__core__fstPair(pair_4));
                qty = __core__unIData__safe(__core__sndPair(pair_4));
                __core__appendString(prev_2, __core__ifThenElse(
                    __core__equalsByteString(mph_4, #),
                    () -> {
                        __core__appendString("lovelace: ", __core__appendString(__helios__int__show(qty), "
"))
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph_4), __core__appendString(".", __core__appendString(__helios__bytearray__show(token_name_2), __core__appendString(": ", __core__appendString(__helios__int__show(qty), "
")))))
                    }
                )())
            }, prev_1)
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common13));
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_13 = (recurse_12, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                error()
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__common__map_get = (self_32, key_1, fnFound, fnNotFound) -> {
        recurse_15 = (recurse_14, self_33, key_2) -> {
            __core__chooseList(self_33, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_33);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(self_33), key_2)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, self_32, key_1)
    };
    __helios__common__length = (lst_3) -> {
        recurse_17 = (recurse_16, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_16(recurse_16, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_17(recurse_17, lst_3)
    };
    __helios__common__all = (self_34, fn_1) -> {
        recurse_19 = (recurse_18, self_35, fn_2) -> {
            __core__chooseList(self_35, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_35)),
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_35), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_34, fn_1)
    };
    __helios__common__enum_fields_after_4 = (self_38) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_38)))))))
    };
    __helios__txoutputdatum__inline = (self_43) -> {
        pair_5 = __core__unConstrData(self_43);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__filter = (self_48, fn_3, nil) -> {
        recurse_21 = (recurse_20, self_49, fn_4) -> {
            __core__chooseList(self_49, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_49);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_20(recurse_20, __core__tailList__safe(self_49), fn_4))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_49), fn_4)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_48, fn_3)
    };
    __helios__value__contains_policy = (self_51, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_25 = (recurse_24, map_5) -> {
            __core__chooseList(map_5, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_5)), mph_6),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_5))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_51)
    };
    __helios__value__is_zero = (self_53) -> {
        recurse_29 = (recurse_28, map_6) -> {
            __core__chooseList(map_6, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_6)));
                    recurse_27 = (recurse_26, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_26(recurse_26, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_27(recurse_27, tokens_1),
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(map_6))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_29(recurse_29, self_53)
    };
    __helios__value__get_policy = (self_54, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_31 = (recurse_30, map_7) -> {
            __core__chooseList(map_7, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_8),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_7))
                    }
                )()
            })()
        };
        recurse_31(recurse_31, self_54)
    };
    __helios__value__get_inner_map_int = (map_8, key_4) -> {
        recurse_33 = (recurse_32, map_9, key_5) -> {
            __core__chooseList(map_9, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), key_5),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_9)))
                    },
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_9), key_5)
                    }
                )()
            })()
        };
        recurse_33(recurse_33, map_8, key_4)
    };
    __helios__common__any = (self_55, fn_6) -> {
        recurse_37 = (recurse_36, self_56, fn_7) -> {
            __core__chooseList(self_56, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_56)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(self_56), fn_7)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, self_55, fn_6)
    };
    __helios__common__concat = (a_5, b_5) -> {
        recurse_39 = (recurse_38, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_38(recurse_38, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_39(recurse_39, b_5, a_5)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        (aKeys) -> {
            recurse_41 = (recurse_40, keys, map_12) -> {
                __core__chooseList(map_12, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_7 = __core__fstPair(__core__headList__safe(map_12));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_7)
                        }),
                        () -> {
                            recurse_40(recurse_40, keys, __core__tailList__safe(map_12))
                        },
                        () -> {
                            __core__mkCons(key_7, recurse_40(recurse_40, keys, __core__tailList__safe(map_12)))
                        }
                    )()
                })()
            };
            __helios__common__concat(aKeys, recurse_41(recurse_41, aKeys, b_6))
        }(recurse_35 = (recurse_34, map_11) -> {
            __core__chooseList(map_11, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_11)), recurse_34(recurse_34, __core__tailList__safe(map_11)))
            })()
        };
        recurse_35(recurse_35, a_6))
    };
    __helios__value__get_inner_map = (map_13, mph_9) -> {
        recurse_45 = (recurse_44, map_14) -> {
            __core__chooseList(map_14, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_14)))
                    },
                    () -> {
                        recurse_44(recurse_44, __core__tailList__safe(map_14))
                    }
                )()
            })()
        };
        recurse_45(recurse_45, map_13)
    };
    __helios__value____add = (a_9, b_9) -> {
        recurse_47 = (recurse_46, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_9 = __core__headList__safe(keys_2);
                tail_1 = recurse_46(recurse_46, __core__tailList__safe(keys_2));
                item_5 = (a_7, b_7) -> {
                    recurse_43 = (recurse_42, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_8 = __core__headList__safe(keys_1);
                            tail = recurse_42(recurse_42, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_7, key_8), __helios__value__get_inner_map_int(b_7, key_8));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_43(recurse_43, __helios__value__merge_map_keys(a_7, b_7))
                }(__helios__value__get_inner_map(a_9, key_9), __helios__value__get_inner_map(b_9, key_9));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_47(recurse_47, __helios__value__merge_map_keys(a_9, b_9))
    };
    __helios__value__get_safe = (self_67, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_15) -> {
            __core__chooseList(map_15, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_15)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_15))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_15))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_16) -> {
            __core__chooseList(map_16, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_16)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_16))
                    }
                )()
            })()
        }, self_67)
    };
    __helios__txinput__address = (self_72) -> {
        self_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))));
        __core__headList(__core__sndPair(__core__unConstrData(self_2)))
    };
    __helios__tx__value_locked_by = (self_82, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_50 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_82))))));
        __helios__common__filter(self_50, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_79 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_79)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_2 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_2))))
        }, __core__mkNilData(())))
    };
    __helios__real__round_calc_result = (res) -> {
        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))
    };
    __helios__common__mStruct_field = (self_100, name_1) -> {
        map_3 = __core__unMapData(self_100);
        name_data = __core__bData(name_1);
        recurse_23 = (recurse_22, map_4) -> {
            __core__chooseList(map_4, () -> {
                error()
            }, () -> {
                head_3 = __core__headList__safe(map_4);
                key_3 = __core__fstPair(head_3);
                value_2 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_2
                    },
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(map_4))
                    }
                )()
            })()
        };
        recurse_23(recurse_23, map_3)
    };
    __helios__common__find_safe = (self_102, fn_13) -> {
        recurse_65 = (recurse_64, self_103, fn_14) -> {
            __core__chooseList(self_103, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_7 = __core__headList__safe(self_103);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_103), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_102, fn_13)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __helios__list[__helios__txoutput]__find = (self_104, fn_15) -> {
        recurse_67 = (recurse_66, lst_12) -> {
            __core__chooseList(lst_12, () -> {
                error()
            }, () -> {
                item_6 = __core__headList__safe(lst_12);
                __core__ifThenElse(
                    fn_15(item_6),
                    () -> {
                        item_6
                    },
                    () -> {
                        recurse_66(recurse_66, __core__tailList__safe(lst_12))
                    }
                )()
            })()
        };
        recurse_67(recurse_67, self_104)
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_110) -> {
        d = __helios__common__mStruct_field(self_110, #747065);
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_114) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_114)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_120) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_120)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_123) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_123)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_134, mph_11) -> {
        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_134);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_141, mph_14) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_141));
            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_140, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_141);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_161, fn_21) -> {
        __helios__common__filter(self_161, (pair_36) -> {
            fn_21(__core__unBData(__core__fstPair(pair_36)), __core__unMapData(__core__sndPair(pair_36)))
        }, __core__mkNilPairData(()))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_165)))))))
    };
    __module__CapoHelpers__DgDataDetails[]__output = (self_193) -> {
        __cond_28 = __core__headList(self_193);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 2),
            () -> {
                (self_2) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 3),
                    () -> {
                        (self_4) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_198) -> {
        __cond_30 = __core__headList(__core__tailList(self_198));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 0),
            () -> {
                (__lhs_0_59) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 1),
                    () -> {
                        (__lhs_0_58) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_51) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_51))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __common30 = __core__unConstrData(activity);
                            __common31 = __core__fstPair(__common30);
                            __core__ifThenElse(
                                __core__equalsInteger(__common31, 2),
                                () -> {
                                    (__lhs_0_57) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__common31, 4),
                                        () -> {
                                            (__lhs_0_56) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common31, 1),
                                                () -> {
                                                    (__lhs_0_55) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common31, 5),
                                                        () -> {
                                                            (__lhs_0_54) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common31, 3),
                                                                () -> {
                                                                    (__lhs_0_53) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_52) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_30)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_199, key_14) -> {
        __helios__common__map_get(self_199, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_209) -> {
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_209)), __core__unBData(__core__headList(self_209)));
        a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        )
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_210, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_162 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_210);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_162)))), __core__unBData(__core__headList(self_210)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_211) -> {
        __cond_35 = __core__headList(__core__tailList(self_211));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),
            () -> {
                (self_170) -> {
                    data_136 = __core__headList(__core__sndPair(__core__unConstrData(self_170)));
                    __helios__common__assert_constr_index(data_136, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
                    () -> {
                        (self_172) -> {
                            data_136 = __core__headList(__core__sndPair(__core__unConstrData(self_172)));
                            __helios__common__assert_constr_index(data_136, 0)
                        }
                    },
                    () -> {
                        (__31) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_35)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address_1, self_212) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_212)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_212);
        __cond_36 = __core__headList(__core__tailList(self_212));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 2),
            () -> {
                (__lhs_0_67) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_44 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo_2) -> {
                        __core__ifThenElse(
                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_2))), capoAddr),
                            () -> {
                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo_2))))), charterAc_2);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            },
                            () -> {
                                false
                            }
                        )()
                    });
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))), 0)
                }
            },
            () -> {
                (__32) -> {
                    error()
                }
            }
        )()(__cond_36)
    };
    __module__CapoHelpers__CapoCtx[]__address_2 = (self_215) -> {
        __helios__txinput__address(__cond_37 = __core__headList(__core__tailList(self_215));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
            () -> {
                (self_4) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 2),
                    () -> {
                        (self_4) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                        }
                    },
                    () -> {
                        (__33) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_37))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_218, __useopt__typeName, id_3) -> {
        typeName_2 = __core__ifThenElse(
            __useopt__typeName,
            () -> {
                "s3dom"
            },
            () -> {
                ""
            }
        )();
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_218);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_158 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_158)), 2),
                        () -> {
                            (__lhs_0_74) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_158);
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        __core__equalsString(typeName_2, ""),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "s3dom")
                                        }
                                    )(),
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsByteString(id_3, #),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_3)
                                            }
                                        )()
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__34) -> {
                                false
                            }
                        }
                    )()(data_158)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2 = (self_221, recId_7) -> {
        recIdStr_3 = __core__decodeUtf8(recId_7);
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_221)), recId_7);
        capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(self_221);
        (__cond_43) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),
                () -> {
                    (__lhs_0_78) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)))
                    }
                }
            )()(__cond_43)
        }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_140, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_223) -> {
        charter_2 = __core__headList(__core__tailList(self_223));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_90) -> {
                    self_223
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_89) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_85) -> {
                            mph_24 = __core__unBData(__core__headList(self_223));
                            charterAc_4 = __helios__assetclass__new(mph_24, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                __helios__common__assert_constr_index(data_136, 0), 0);
                                __core__mkCons(__core__bData(mph_24), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_47) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_47)), 0),
                                    () -> {
                                        (self_2) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_47)
                            }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_137, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_224) -> {
        charter_3 = __core__headList(__core__tailList(self_224));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_94) -> {
                    self_224
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_93) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_91) -> {
                            mph_25 = __core__unBData(__core__headList(self_224));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                __helios__common__assert_constr_index(data_136, 0), 0);
                                __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_25, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_2) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_137, (txin) -> {
                                a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_234, fn_27) -> {
        recurse_89 = (recurse_88, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_27(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_88(recurse_88, __core__tailList__safe(map_29)))
            })()
        };
        recurse_89(recurse_89, self_234)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_237, key_21) -> {
        __helios__common__map_get(self_237, __core__bData(key_21), (x_12) -> {
            __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_241, comp_4) -> {
        recurse_53 = (recurse_52, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_52(recurse_52, __core__tailList__safe(lst_11));
                x_1 = __core__headList__safe(lst_11);
                recurse_51 = (recurse_50, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_1, lst_9)
                    }, () -> {
                        head_4 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_1)), __core__unIData(__core__sndPair(x_1)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),
                            () -> {
                                __core__mkCons(x_1, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_4, recurse_50(recurse_50, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_51(recurse_51, tail_2)
            })()
        };
        recurse_53(recurse_53, self_241)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_29, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        (delegateApproval) -> {
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_242) -> {
                recurse_95 = (recurse_94, lst_25) -> {
                    __core__chooseList(lst_25, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_25)), recurse_94(recurse_94, __core__tailList__safe(lst_25)))
                    })()
                };
                recurse_95(recurse_95, self_242)
            }(recurse_49 = (recurse_48, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    __module__StellarHeliosHelpers__mkTv(mph_29, mkTokenName_1(purpose_2))), recurse_48(recurse_48, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_49(recurse_49, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted, mph_29),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_29), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                tnStr_1 = __core__decodeUtf8(tn_3);
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_29);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                tnStr = __core__decodeUtf8(tn_2);
                ()
            }), msg_1 = __helios__value__show(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(valueMinted, (b_19, __41) -> {
                __core__ifThenElse(
                    __core__equalsByteString(b_19, mph_29),
                    false,
                    true
                )
            }));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                });
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), otherPoliciesMintOk = __core__ifThenElse(
                b = __helios__value__is_zero(otherMintedValue_1);
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    true
                },
                () -> {
                    remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue, mph_29),
                        () -> {
                            key_23 = __core__bData(mph_29);
                            recurse_93 = (recurse_92, self_239) -> {
                                __core__chooseList(self_239, () -> {
                                    self_239
                                }, () -> {
                                    head_45 = __core__headList__safe(self_239);
                                    tail_4 = __core__tailList__safe(self_239);
                                    __core__ifThenElse(
                                        __core__equalsData(key_23, __core__fstPair(head_45)),
                                        () -> {
                                            recurse_92(recurse_92, tail_4)
                                        },
                                        () -> {
                                            __core__mkCons(head_45, recurse_92(recurse_92, tail_4))
                                        }
                                    )()
                                })()
                            };
                            recurse_93(recurse_93, expectedValue)
                        },
                        () -> {
                            expectedValue
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint),
                        () -> {
                            true
                        },
                        () -> {
                            __core__chooseUnit(recurse_91 = (recurse_90, map_30) -> {
                                __core__chooseList(map_30, () -> {
                                    ()
                                }, () -> {
                                    head_44 = __core__headList__safe(map_30);
                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_4, expectedCount) -> {
                                            __core__ifThenElse(
                                                (b) -> {
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    )
                                                }(__cond_57 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_4);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_57)), 1),
                                                    () -> {
                                                        (__lhs_0_116) -> {
                                                            false
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_115) -> {
                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115))));
                                                            __core__equalsInteger(actualCount, expectedCount)
                                                        }
                                                    }
                                                )()(__cond_57)),
                                                () -> {
                                                    error()
                                                },
                                                () -> {
                                                    ()
                                                }
                                            )()
                                        })
                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_90(recurse_90, __core__tailList__safe(map_30)))
                                })()
                            };
                            recurse_91(recurse_91, remainingExpectedMint), true)
                        }
                    )()
                }
            )();
            __core__chooseUnit(__core__ifThenElse(
                otherPoliciesMintOk,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    otherPoliciesMintOk
                },
                () -> {
                    false
                }
            )()))))))
        }(__lhs_0_114 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        charterAc_1 = __helios__assetclass__new(mph_29, #63686172746572);
        hasCharter_1 = (txin_1) -> {
            a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_1);
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_3, 0),
                false,
                true
            )
        };
        (charterUtxo_1) -> {
            __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
            __helios__common__assert_constr_index(data_136, 0), 0)
        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
            () -> {
                (self_2) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    (__cond_14) -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                            () -> {
                                (self_2) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                }
                            },
                            () -> {
                                (__lhs_0_22) -> {
                                    error()
                                }
                            }
                        )()(__cond_14)
                    }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                    __helios__common__find_safe(self_137, hasCharter_1))
                }
            }
        )()(__cond_13)), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
        true)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_271) -> {
        (key_24) -> {
            key_25 = __core__bData(__core__encodeUtf8(key_24));
            recurse_99 = (recurse_98, self_272) -> {
                __core__chooseList(self_272, () -> {
                    self_272
                }, () -> {
                    head_47 = __core__headList__safe(self_272);
                    tail_5 = __core__tailList__safe(self_272);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_47)),
                        () -> {
                            recurse_98(recurse_98, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_47, recurse_98(recurse_98, tail_5))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_271)
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main, mdd, activity_3) -> {
        __common6 = __core__fstPair(__core__unConstrData(mdd));
        __core__ifThenElse(
            __core__equalsInteger(__common6, 2),
            () -> {
                (__lhs_0_265) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common6, 1),
                    () -> {
                        (isD) -> {
                            __common14 = __core__sndPair(__core__unConstrData(isD));
                            __common15 = __core__headList(__common14);
                            __common16 = __core__unListData(__common15);
                            __common40 = __core__tailList(__common16);
                            __common42 = __core__headList(__common40);
                            __common43 = __core__unBData(__common42);
                            (myDgTkn) -> {
                                checkNonDelegatedActivities = __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),
                                    () -> {
                                        (__lhs_0_243) -> {
                                            activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_243))));
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                            __helios__common__all(activities_2, (rawActivity) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 6),
                                                    () -> {
                                                        (__lhs_0_252) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 5),
                                                            () -> {
                                                                (__lhs_0_251) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 7),
                                                                    () -> {
                                                                        (__lhs_0_250) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 2),
                                                                            () -> {
                                                                                (__lhs_0_249) -> {
                                                                                    __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 3),
                                                                                    () -> {
                                                                                        (__lhs_0_248) -> {
                                                                                            __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity)
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 4),
                                                                                            () -> {
                                                                                                (__lhs_0_247) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_246) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_245) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_244) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(rawActivity)
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                            () -> {
                                                (__lhs_0_237) -> {
                                                    innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_237)));
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),
                                                        () -> {
                                                            __common33 = __core__tailList(__common40);
                                                            __common34 = __core__headList(__common33);
                                                            __common35 = __core__unBData(__common34);
                                                            (__lhs_0_241) -> {
                                                                seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_241)));
                                                                (purpose_8) -> {
                                                                    otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common43, __common35), -1);
                                                                    tnStr_3 = __core__decodeUtf8(__common35);
                                                                    cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                                    (isUpdatingCharter) -> {
                                                                        isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common43, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                                        __core__ifThenElse(
                                                                            isMintingOk,
                                                                            () -> {
                                                                                isUpdatingCharter
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    }(__cond_112 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_112)), 5),
                                                                        () -> {
                                                                            (__lhs_0_242) -> {
                                                                                true
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__78) -> {
                                                                                false
                                                                            }
                                                                        }
                                                                    )()(__cond_112))
                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_241))));
                                                                __core__decodeUtf8(__core__unBData(d)))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        __core__equalsInteger((self_10, assetClass_1) -> {
                                                                            __common36 = __core__unConstrData(assetClass_1);
                                                                            __common37 = __core__sndPair(__common36);
                                                                            mph_2 = __core__headList(__common37);
                                                                            tokenName_1 = __core__headList(__core__tailList(__common37));
                                                                            outer_1 = (outer, inner, map) -> {
                                                                                __core__chooseList(map, () -> {
                                                                                    error()
                                                                                }, () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                                                                                        () -> {
                                                                                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                                        },
                                                                                        () -> {
                                                                                            outer(outer, inner, __core__tailList__safe(map))
                                                                                        }
                                                                                    )()
                                                                                })()
                                                                            };
                                                                            outer_1(outer_1, (inner_1, map_1) -> {
                                                                                __core__chooseList(map_1, () -> {
                                                                                    error()
                                                                                }, () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                                        () -> {
                                                                                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                                        },
                                                                                        () -> {
                                                                                            inner_1(inner_1, __core__tailList__safe(map_1))
                                                                                        }
                                                                                    )()
                                                                                })()
                                                                            }, self_10)
                                                                        }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__common43, __core__unBData(__core__headList(__core__tailList(__common40))))), -1)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(innerActivity)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                    () -> {
                                                        __common41 = __core__bData(__common43);
                                                        (__lhs_0_137) -> {
                                                            dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_137)));
                                                            (cctx_4) -> {
                                                                __core__chooseUnit(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                                                __common32 = __core__fstPair(__core__unConstrData(__cond_109));
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common32, 0),
                                                                    () -> {
                                                                        (__lhs_0_236) -> {
                                                                            cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_236)));
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(cCLA, dCLA),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common32, 5),
                                                                            () -> {
                                                                                (__lhs_0_234) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_235) -> {
                                                                                                ()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__77) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(dCLA)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__76) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_109), neededRole = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),
                                                                    () -> {
                                                                        (__lhs_0_105) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                            () -> {
                                                                                (__lhs_0_104) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                                    () -> {
                                                                                        (__lhs_0_103) -> {
                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                                            () -> {
                                                                                                (__lhs_0_102) -> {
                                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                                                    () -> {
                                                                                                        (__lhs_0_101) -> {
                                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                                            () -> {
                                                                                                                (__lhs_0_100) -> {
                                                                                                                    __core__constrData(6, __core__mkNilData(()))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_99) -> {
                                                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(dCLA);
                                                                myCurrentRole = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),
                                                                    () -> {
                                                                        (__lhs_0_141) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),
                                                                            () -> {
                                                                                (__lhs_0_140) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),
                                                                                    () -> {
                                                                                        (__lhs_0_139) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),
                                                                                            () -> {
                                                                                                (__lhs_0_138) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4),
                                                                                                        () -> {
                                                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                                () -> {
                                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__46) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(neededRole);
                                                                __core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_230)));
                                                                                (purpose_7) -> {
                                                                                    mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_231) -> {
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__common43, seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }
                                                                                                )(), (__cond_108) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_108)), 1),
                                                                                                        () -> {
                                                                                                            (__lhs_0_233) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_232) -> {
                                                                                                                dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232))));
                                                                                                                __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                                                __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));
                                                                                                                __core__ifThenElse(
                                                                                                                    cond,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common43))
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_108)
                                                                                                }((self_207) -> {
                                                                                                    __helios__common__map_get(self_207, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {
                                                                                                        __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                                                    }, () -> {
                                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                                    })
                                                                                                }(self_164 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_164)))))))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__75) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(myCurrentRole)
                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_230))));
                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                                () -> {
                                                                                    (__lhs_0_178) -> {
                                                                                        charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                        __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                        nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                                                        newChange = __core__headList(nextChangeList);
                                                                                        __lhs_0_179 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_179))));
                                                                                        __common25 = __core__tailList(__lhs_0_0_2);
                                                                                        action = __core__headList(__lhs_0_0_2);
                                                                                        __common4 = __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1);
                                                                                        role_2 = __core__headList(__common25);
                                                                                        __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);
                                                                                        OdgtLink = __core__headList(__core__tailList(__common25));
                                                                                        newDgtRoleName = __core__ifThenElse(
                                                                                            __common3,
                                                                                            () -> {
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                            },
                                                                                            () -> {
                                                                                                (__59) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(role_2);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __common4,
                                                                                            () -> {
                                                                                                (__lhs_0_228) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__73) -> {
                                                                                                    ()
                                                                                                }
                                                                                            }
                                                                                        )()(action), __core__chooseUnit((cond) -> {
                                                                                            __core__ifThenElse(
                                                                                                cond,
                                                                                                () -> {
                                                                                                    ()
                                                                                                },
                                                                                                () -> {
                                                                                                    error()
                                                                                                }
                                                                                            )()
                                                                                        }(self_263 = __core__tailList(nextChangeList);
                                                                                        __core__equalsData(__core__listData(self_263), __core__listData(__common0))), __core__ifThenElse(
                                                                                            __common4,
                                                                                            () -> {
                                                                                                (__lhs_0_227) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_226) -> {
                                                                                                            __common28 = __core__sndPair(__core__unConstrData(__lhs_0_226));
                                                                                                            seed_7 = __core__headList(__common28);
                                                                                                            (purpose_6) -> {
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_226);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }(d = __core__headList(__core__tailList(__common28));
                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_225) -> {
                                                                                                            seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_225)));
                                                                                                            (purpose_5) -> {
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_225);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_225))));
                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                            possibleMintDgtVerifications = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_197) -> {
                                                                                                        true
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                        () -> {
                                                                                                            (__lhs_0_181) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __common4,
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_189) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__61) -> {
                                                                                                                            mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                            mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common43, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());
                                                                                                                            dgtLink_2 = __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_183) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (self_206) -> {
                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_206))))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(OdgtLink);
                                                                                                                            (__common1) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsString(__common1, mkTokenName_2(purpose_4)),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), (delegateTakesOwnership) -> {
                                                                                                                                    possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_184) -> {
                                                                                                                                                __core__chooseUnit(__cond_90 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_90)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_186) -> {
                                                                                                                                                            dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_186)));
                                                                                                                                                            entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_188) -> {
                                                                                                                                                                        (idPrefix_7) -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    error()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_188))));
                                                                                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__63) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(entryType_1)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_185) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_90), true)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__62) -> {
                                                                                                                                                true
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(action);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            mintedDgTkn,
                                                                                                                                            () -> {
                                                                                                                                                true
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                false
                                                                                                                                            }
                                                                                                                                        )(),
                                                                                                                                        () -> {
                                                                                                                                            possibleExtraReplacementCheck
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            false
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common43);
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    assertion_2,
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), true)))
                                                                                                                            }(d = __core__headList(dgtLink_2);
                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(action)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__60) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(myCurrentRole);
                                                                                            otherPossibleVerifications = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_224) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                        () -> {
                                                                                                            (__lhs_0_198) -> {
                                                                                                                isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_199) -> {
                                                                                                                                __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_199))));
                                                                                                                                pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_200) -> {
                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_200);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                                                false,
                                                                                                                                                true
                                                                                                                                            )
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__67) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(pendingRole)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__66) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(pdChange_2)
                                                                                                                });
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_222) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_223) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__72) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(existingRoleEntryMaybe), true)
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                                            () -> {
                                                                                                                                __common26 = __core__unConstrData(role_2);
                                                                                                                                __common27 = __core__fstPair(__common26);
                                                                                                                                __common29 = __core__equalsInteger(__common27, 2);
                                                                                                                                (__lhs_0_203) -> {
                                                                                                                                    replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_203))))));
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __common29,
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_221) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common27, 3),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_220) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__common27, 7),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_219) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__71) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_206) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_204) -> {
                                                                                                                                                __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_204)));
                                                                                                                                                entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (self_153) -> {
                                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_153))))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__69) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(entryType_2)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(existingRoleEntryMaybe);
                                                                                                                                    existingDgTkn = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__common27, 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common43);
                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common27, 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_213) -> {
                                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common43);
                                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __common3,
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_212) -> {
                                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common43);
                                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__common27, 5),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_211) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsInteger(__common27, 6),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_210) -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __common29,
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_209) -> {
                                                                                                                                                                                        error()
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __core__equalsInteger(__common27, 3),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_208) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_207) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2);
                                                                                                                                    __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        cond,
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )(), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_201) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(action);
                                                                                                                __core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        possibleReplacementIsCorrect
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )())
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__65) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(myCurrentRole);
                                                                                            __core__ifThenElse(
                                                                                                possibleMintDgtVerifications,
                                                                                                () -> {
                                                                                                    otherPossibleVerifications
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        })))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                                        () -> {
                                                                                            (__lhs_0_177) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                                () -> {
                                                                                                    (__lhs_0_154) -> {
                                                                                                        (pendingChangesList) -> {
                                                                                                            (previousManifest) -> {
                                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                                __common21 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                                                                nextManifest = __core__unMapData(__core__headList(__common21));
                                                                                                                __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common21)))), 0);
                                                                                                                __core__ifThenElse(
                                                                                                                    cond,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), __core__ifThenElse(
                                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                                    () -> {
                                                                                                                        __helios__common__fold(pendingChangesList, (prev_4, item_17) -> {
                                                                                                                            prev_4((a_22, b_21) -> {
                                                                                                                                pdChange_1 = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(item_17)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (self_145) -> {
                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_145))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_167) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(item_17);
                                                                                                                                (pendingTypeName) -> {
                                                                                                                                    __core__chooseUnit(__cond_81 = __core__headList(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_81)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_175) -> {
                                                                                                                                                __cond_84 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_21, pendingTypeName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_84)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_176) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__58) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_84)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__55) -> {
                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__helios__common__length(b_21), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        error()
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                )(), head_46 = __core__headList(b_21);
                                                                                                                                                (CME_key, __lhs_1) -> {
                                                                                                                                                    ME_type_1 = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                                                    __lhs_0_171 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                    ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_171))));
                                                                                                                                                    (ME_idPrefix) -> {
                                                                                                                                                        refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_171))))));
                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(refCount_1, 1),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsString(pendingTypeName, CME_key),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )(), __core__chooseUnit(msg_1 = __core__appendString("  -- ME policy link ", (self_22) -> {
                                                                                                                                                            __core__appendString("'", __core__appendString(self_22, "'"))
                                                                                                                                                        }(d = __core__headList(ME_policyLink);
                                                                                                                                                        __core__decodeUtf8(__core__unBData(d))));
                                                                                                                                                        (), __core__chooseUnit(msg_1 = __core__appendString("  -- pdChange policy link ", (self_22) -> {
                                                                                                                                                            __core__appendString("'", __core__appendString(self_22, "'"))
                                                                                                                                                        }((self_132) -> {
                                                                                                                                                            d = __core__headList(self_132);
                                                                                                                                                            __core__decodeUtf8(__core__unBData(d))
                                                                                                                                                        }(self_270 = __core__headList(__core__tailList(__core__tailList(pdChange_1)));
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_270)))))));
                                                                                                                                                        (), __core__chooseUnit((cond) -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                cond,
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }((other_3) -> {
                                                                                                                                                            __core__equalsData(__core__listData(ME_policyLink), __core__listData(other_3))
                                                                                                                                                        }(self_270 = __core__headList(__core__tailList(__core__tailList(pdChange_1)));
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_270)))))), (nextIdPrefix) -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }(__cond_82 = __core__headList(pdChange_1);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_82)), 2),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_173) -> {
                                                                                                                                                                    idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_173);
                                                                                                                                                                    __core__chooseUnit(__cond_83 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(nextManifest), pendingTypeName);
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_83)), 0),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_174) -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__57) -> {
                                                                                                                                                                                ()
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_83), idPrefix_6)
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_82)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__56) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_82)))))))
                                                                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_171))));
                                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_46))), __core__sndPair(head_46)))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_81), __cond_80 = __core__headList(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_80)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                                (callback_12) -> {
                                                                                                                                                    callback_12(a_22, __core__tailList(b_21))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__54) -> {
                                                                                                                                                (callback_11) -> {
                                                                                                                                                    callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_22)(pendingTypeName), __core__tailList(b_21))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_80))
                                                                                                                                }(__cond_79 = __core__headList(__core__tailList(pdChange_1));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_79)), 4),
                                                                                                                                    () -> {
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__53) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_79))
                                                                                                                            })
                                                                                                                        }, (callback_9) -> {
                                                                                                                            callback_9(previousManifest, nextManifest)
                                                                                                                        })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                            __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                                                        })
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4),
                                                                                                                            () -> {
                                                                                                                                mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                                                                mintThisPolicy = __helios__common__map_get(mint, __common41, (x_13) -> {
                                                                                                                                    __core__constrData(0, __core__mkCons(x_13, __core__mkNilData(())))
                                                                                                                                }, () -> {
                                                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                                                });
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    ),
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                )(), observedTokenBurn = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (self_279) -> {
                                                                                                                                            __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_279))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_155) -> {
                                                                                                                                            __core__mkNilPairData(())
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(mintThisPolicy);
                                                                                                                                remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange) -> {
                                                                                                                                    pdChange = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (self_145) -> {
                                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_145))))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_157) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(pcChange);
                                                                                                                                    __cond_73 = __core__headList(__core__tailList(pdChange));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_73)), 4),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_159) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_159);
                                                                                                                                                __cond_74 = __core__headList(pdChange);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__51) -> {
                                                                                                                                                            __cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_75)), 1),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_165) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                                                        __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_160)));
                                                                                                                                                                        ME_type = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                                                        tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                                                        mph_31 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_31)), 0),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_164) -> {
                                                                                                                                                                                    foldingBurn
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__52) -> {
                                                                                                                                                                                    __lhs_0_161 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                                                    refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_161))))));
                                                                                                                                                                                    tnStr_2 = __core__decodeUtf8(tn_5);
                                                                                                                                                                                    __cond_77 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_77)), 1),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_162) -> {
                                                                                                                                                                                                burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_162))));
                                                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                                        __core__equalsInteger(__core__subtractInteger(0, refCount), burningCount),
                                                                                                                                                                                                        false,
                                                                                                                                                                                                        true
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        error()
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        ()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), key_29 = __core__bData(tn_5);
                                                                                                                                                                                                recurse_103 = (recurse_102, self_278) -> {
                                                                                                                                                                                                    __core__chooseList(self_278, () -> {
                                                                                                                                                                                                        self_278
                                                                                                                                                                                                    }, () -> {
                                                                                                                                                                                                        head_49 = __core__headList__safe(self_278);
                                                                                                                                                                                                        tail_6 = __core__tailList__safe(self_278);
                                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                                            __core__equalsData(key_29, __core__fstPair(head_49)),
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                recurse_102(recurse_102, tail_6)
                                                                                                                                                                                                            },
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                __core__mkCons(head_49, recurse_102(recurse_102, tail_6))
                                                                                                                                                                                                            }
                                                                                                                                                                                                        )()
                                                                                                                                                                                                    })()
                                                                                                                                                                                                };
                                                                                                                                                                                                recurse_103(recurse_103, foldingBurn))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_77)
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(mph_31)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_75)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_74)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__50) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_73)
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), true))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )())
                                                                                                            }(self_168 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                            __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_168)))))
                                                                                                        }(self_169 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                        __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(self_169))))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                                                        () -> {
                                                                                                            (__lhs_0_144) -> {
                                                                                                                manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144)));
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_153) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_146) -> {
                                                                                                                                            (key_31) -> {
                                                                                                                                                tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_146)))));
                                                                                                                                                charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                                                                                nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                                                                __common22 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                                                __common23 = __core__headList(__common22);
                                                                                                                                                __common24 = __core__unMapData(__common23);
                                                                                                                                                (__lhs_0_147) -> {
                                                                                                                                                    __core__chooseUnit(__cond_68 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common24, key_31);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_68)), 1),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_151) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_148) -> {
                                                                                                                                                                __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_148)));
                                                                                                                                                                entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                                                tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                                                mph_30 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsByteString(tn_4, tokenName_5),
                                                                                                                                                                    () -> {
                                                                                                                                                                        ()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_30)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_150) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__49) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(mph_30), __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_149) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__48) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(entryType)))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_68), (cond) -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            cond,
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }(self_273 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                                                    __core__equalsData(__core__mapData(self_273), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common24)(key_31)))))
                                                                                                                                                }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);
                                                                                                                                                recIdStr = __core__decodeUtf8(tokenName_5);
                                                                                                                                                (__cond_38) -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_38)), 1),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_71) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_70) -> {
                                                                                                                                                                __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_70)))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_38)
                                                                                                                                                }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                                                __helios__common__find_safe(self_137, hasDD)))
                                                                                                                                            }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_146)));
                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(manifestActivity), true)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_143) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_142) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(dCLA),
                                                                    () -> {
                                                                        true
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )())
                                                            }(self_205 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__core__mkCons(__common41, __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                            __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_167 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_205);
                                                            __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_167))), __core__unBData(__core__headList(self_205)));
                                                            __core__ifThenElse(
                                                                cond,
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), self_205))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                                            () -> {
                                                                (__lhs_0_136) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                                                    () -> {
                                                                        (__lhs_0_135) -> {
                                                                            (dDataType) -> {
                                                                                recId_10 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_135)))));
                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                                                __core__ifThenElse(
                                                                                    cond,
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit((cond) -> {
                                                                                    ()
                                                                                }(self_191 = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1, self_189) -> {
                                                                                    __core__chooseUnit(__cond_25 = __core__headList(__core__tailList(self_189));
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                                                        () -> {
                                                                                            (__lhs_0_40) -> {
                                                                                                ()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__27) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_25), strId = __core__decodeUtf8(recId_10);
                                                                                    (__cond_21) -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 2),
                                                                                            () -> {
                                                                                                (__lhs_0_38) -> {
                                                                                                    sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_38)));
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__chooseData(sa_1, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        })(),
                                                                                                        () -> {
                                                                                                            (__lhs_0_39) -> {
                                                                                                                index_13 = __core__fstPair(__core__unConstrData(__lhs_0_39));
                                                                                                                fields_74 = __core__sndPair(__core__unConstrData(__lhs_0_39));
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    __core__equalsInteger(index_13, index_13),
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), foundRecId_1 = __core__unBData(__core__headList(fields_74));
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsByteString(recId_10, foundRecId_1),
                                                                                                                        false,
                                                                                                                        true
                                                                                                                    ),
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    }
                                                                                                                )())
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__26) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 8),
                                                                                                    () -> {
                                                                                                        (__lhs_0_32) -> {
                                                                                                            activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_19) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 5),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_37) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 6),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_36) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 7),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_35) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 2),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_33) -> {
                                                                                                                                                    sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__chooseData(sa, () -> {
                                                                                                                                                            true
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        })(),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_34) -> {
                                                                                                                                                                index_12 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                                fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(index_12, index_12),
                                                                                                                                                                    () -> {
                                                                                                                                                                        ()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsByteString(recId_10, foundRecId),
                                                                                                                                                                        false,
                                                                                                                                                                        true
                                                                                                                                                                    ),
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        true
                                                                                                                                                                    }
                                                                                                                                                                )())
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__25) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(sa)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__24) -> {
                                                                                                                                                    false
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(a_19)
                                                                                                            }, __core__mkNilData(()));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__lessThanEqualsInteger(__helios__common__length(actsOnThisRecord), 0),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__equalsInteger(__helios__common__length(actsOnThisRecord), 1),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189))))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__23) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_21)
                                                                                    }((i_8) -> {
                                                                                        inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__chooseData(inputData, () -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            })(),
                                                                                            () -> {
                                                                                                (__lhs_0_25) -> {
                                                                                                    index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                                                                                                    fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                                                                                                    __cond_16 = __core__headList(fields_70);
                                                                                                    __core__ifThenElse(
                                                                                                        __core__chooseData(__cond_16, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        })(),
                                                                                                        () -> {
                                                                                                            (__lhs_0_26) -> {
                                                                                                                index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                                                                                                ()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__18) -> {
                                                                                                                ()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_16)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__17) -> {
                                                                                                    ()
                                                                                                }
                                                                                            }
                                                                                        )()(inputData), inputData)
                                                                                    }(self_2 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_189))));
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2))))))
                                                                                }((self_190) -> {
                                                                                    link_1 = __core__unListData(__core__headList(self_190));
                                                                                    input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_190))));
                                                                                    mph_19 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_190))))));
                                                                                    (uut_1) -> {
                                                                                        validatorHash_1 = __core__headList(__core__tailList(link_1));
                                                                                        targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, uut_1);
                                                                                        returnedUnchanged = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                                                                                            () -> {
                                                                                                (__lhs_0_44) -> {
                                                                                                    vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_44))));
                                                                                                    __core__chooseUnit((assertionOk) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            assertionOk,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )()
                                                                                                    }(a_13 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                                                                                                    recurse_57 = (recurse_56, keys_4) -> {
                                                                                                        __core__chooseList(keys_4, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            key_11 = __core__headList__safe(keys_4);
                                                                                                            __core__ifThenElse(
                                                                                                                b = (a_11, b_11) -> {
                                                                                                                    recurse_55 = (recurse_54, keys_3) -> {
                                                                                                                        __core__chooseList(keys_3, () -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            key_10 = __core__headList__safe(keys_3);
                                                                                                                            __core__ifThenElse(
                                                                                                                                b = (a_qty, b_qty) -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanInteger(a_qty, b_qty),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    )
                                                                                                                                }(__helios__value__get_inner_map_int(a_11, key_10), __helios__value__get_inner_map_int(b_11, key_10));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    b,
                                                                                                                                    false,
                                                                                                                                    true
                                                                                                                                ),
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    recurse_54(recurse_54, __core__tailList__safe(keys_3))
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        })()
                                                                                                                    };
                                                                                                                    recurse_55(recurse_55, __helios__value__merge_map_keys(a_11, b_11))
                                                                                                                }(__helios__value__get_inner_map(a_13, key_11), __helios__value__get_inner_map(targetValue, key_11));
                                                                                                                __core__ifThenElse(
                                                                                                                    b,
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    recurse_56(recurse_56, __core__tailList__safe(keys_4))
                                                                                                                }
                                                                                                            )()
                                                                                                        })()
                                                                                                    };
                                                                                                    recurse_57(recurse_57, __helios__value__merge_map_keys(a_13, targetValue))), (__cond_27) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_46) -> {
                                                                                                                    true
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_45) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_27)
                                                                                                    }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                                                                                                    __helios__common__find_safe(self_140, (o_1) -> {
                                                                                                        __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_46 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                                                                                                        self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_46))));
                                                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))
                                                                                                    })))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_43) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(validatorHash_1);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            returnedUnchanged,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_19);
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), self_190))
                                                                                    }(d = __core__headList(link_1);
                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                }, __cond_33 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_168 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2);
                                                                                __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_168)))), dDataType);
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),
                                                                                    () -> {
                                                                                        (__lhs_0_64) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_62) -> {
                                                                                            entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_62)));
                                                                                            __cond_34 = __helios__common__mStruct_field(entry, #747065);
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_63) -> {
                                                                                                        policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_63))));
                                                                                                        (idPrefix_2) -> {
                                                                                                            (callback_8) -> {
                                                                                                                callback_8(policyLink, idPrefix_2)
                                                                                                            }
                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_63))));
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__30) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_34)((dgtLink, idPrefix_1) -> {
                                                                                                (role_1, idPrefix_3) -> {
                                                                                                    (input, mph_18) -> {
                                                                                                        __core__mkCons(__core__listData(dgtLink), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_18), __core__mkNilData(()))))))
                                                                                                    }((inputs_1, mph_13) -> {
                                                                                                        (uutName) -> {
                                                                                                            __cond_6 = __core__headList(__core__tailList(dgtLink));
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_8) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_6) -> {
                                                                                                                        vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                                                                                                                        needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                                                                                                                        ac = __helios__assetclass__new(mph_13, __core__encodeUtf8(uutName));
                                                                                                                        __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsData(self_2 = __helios__txinput__address(i_7);
                                                                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2))), needsAddrWithCred),
                                                                                                                                () -> {
                                                                                                                                    a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                                                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), ac);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanEqualsInteger(a_3, 0),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    )
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        });
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                                                                                                            () -> {
                                                                                                                                (foundGood) -> {
                                                                                                                                    foundGood
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_7) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_7)
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_6)
                                                                                                        }(d = __core__headList(dgtLink);
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(cctx_2))), __core__unBData(__core__headList(cctx_2)))
                                                                                                }(__core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(dDataType)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                                                                                            })
                                                                                        }
                                                                                    }
                                                                                )()(__cond_33));
                                                                                true), (inputDD) -> {
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsData(inputDD, inputDD),
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsString("settings", dDataType),
                                                                                        () -> {
                                                                                            (curSettingsId) -> {
                                                                                                ()
                                                                                            }((self_282) -> {
                                                                                                __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_282))))
                                                                                            }((oe) -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_61) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_60) -> {
                                                                                                            e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60)));
                                                                                                            some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                                            __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                                                        }
                                                                                                    }
                                                                                                )()(oe)
                                                                                            }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                                                        },
                                                                                        () -> {
                                                                                            ()
                                                                                        }
                                                                                    )(), __core__ifThenElse(
                                                                                        dgData = __helios__txoutputdatum__inline(self_44 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(cctx_2, recId_10);
                                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
                                                                                            () -> {
                                                                                                (__lhs_0_76) -> {
                                                                                                    data_160 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                                                                                                    recIdStr_2 = __core__decodeUtf8(recId_10);
                                                                                                    __core__ifThenElse(
                                                                                                        self_52 = __core__unBData(__helios__common__mStruct_field(data_160, #406964));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsByteString(self_52, recId_10),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                self_21 = __module__StellarHeliosHelpers__AnyData[]__type(data_160);
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsString(self_21, dDataType),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__36) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(dgData),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()))
                                                                                }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, false, recId_10);
                                                                                recIdStr_1 = __core__decodeUtf8(recId_10);
                                                                                (__cond_39) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 1),
                                                                                        () -> {
                                                                                            (__lhs_0_73) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_72) -> {
                                                                                                __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_72)))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_39)
                                                                                }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                                __helios__common__find_safe(self_137, hasDD_1)))))
                                                                            }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_135)));
                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                                            () -> {
                                                                                (__lhs_0_133) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                                                    () -> {
                                                                                        (__lhs_0_132) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                                            () -> {
                                                                                                (__lhs_0_131) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_130) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(activity_3);
                                __core__chooseUnit(__core__ifThenElse(
                                    checkNonDelegatedActivities,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )(), (cctx_7) -> {
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                                () -> {
                                                    (__lhs_0_125) -> {
                                                        true
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                        () -> {
                                                            (__lhs_0_124) -> {
                                                                error()
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                () -> {
                                                                    __common2 = __core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))));
                                                                    __common38 = __core__unConstrData(__common2);
                                                                    __common39 = __core__sndPair(__common38);
                                                                    (__lhs_0_121) -> {
                                                                        VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_121)));
                                                                        seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));
                                                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                                                        mintingOk = __module__CapoMintHelpers__validateUutMinting(__common43, seed_3, __core__mkCons(__core__bData(#7333646f6d), __core__mkNilData(())), true, mkTn, false, ());
                                                                        __core__chooseUnit((cond) -> {
                                                                            ()
                                                                        }(self_231 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);
                                                                        true), (newRecData) -> {
                                                                            __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);
                                                                            (reg) -> {
                                                                                __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__core__unIData((self_2) -> {
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                                                                }(self_2 = __core__headList(__core__tailList(__common39));
                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2))))), __core__unIData((self_2) -> {
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                                                                }(self_2 = __core__headList(__common39);
                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2)))))), 3600000);
                                                                                __core__ifThenElse(
                                                                                    cond,
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), mintingOk)
                                                                            }(__cond_29 = __helios__txoutputdatum__inline(self_44 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);
                                                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                                                            __core__ifThenElse(
                                                                                __core__chooseData(__cond_29, () -> {
                                                                                    true
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                })(),
                                                                                () -> {
                                                                                    (__lhs_0_50) -> {
                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_50)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__29) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(__cond_29))
                                                                        }(recIdBytes_1 = __core__encodeUtf8(mkTn("s3dom"));
                                                                        output_2 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(cctx_7, recIdBytes_1);
                                                                        mph_21 = __core__unBData(__core__headList(cctx_7));
                                                                        __core__mkCons(__core__constrData(2, __core__mkCons(output_2, __core__mkNilData(()))), __core__mkCons(__core__bData(recIdBytes_1), __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(mph_21), __core__mkNilData(())))))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                                        () -> {
                                                                            (__lhs_0_118) -> {
                                                                                VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_118)));
                                                                                __core__chooseUnit((cond) -> {
                                                                                    ()
                                                                                }(self_231 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);
                                                                                true), recId_8 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));
                                                                                hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_7, true, recId_8);
                                                                                (hasRecOutput) -> {
                                                                                    __core__chooseUnit((self_258) -> {
                                                                                        recurse_97 = (recurse_96, lst_26) -> {
                                                                                            __core__chooseList(lst_26, () -> {
                                                                                                ()
                                                                                            }, () -> {
                                                                                                __core__chooseUnit(__lhs_0_120 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__core__headList__safe(lst_26)))));
                                                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                                                                                updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasRecOutput);
                                                                                                updatedData = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));
                                                                                                (), recurse_96(recurse_96, __core__tailList__safe(lst_26)))
                                                                                            })()
                                                                                        };
                                                                                        recurse_97(recurse_97, self_258)
                                                                                    }(self_50 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                                    __helios__common__filter(self_50, hasRecInput, __core__mkNilData(()))), true)
                                                                                }(capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(cctx_7);
                                                                                (txo_3) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_3))), capoAddr_2),
                                                                                        () -> {
                                                                                            data_159 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_3))))));
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),
                                                                                                () -> {
                                                                                                    (__lhs_0_75) -> {
                                                                                                        x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "s3dom"),
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsByteString(recId_8, #),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_8)
                                                                                                                    }
                                                                                                                )()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                false
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__35) -> {
                                                                                                        false
                                                                                                    }
                                                                                                }
                                                                                            )()(data_159)
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),
                                                                                () -> {
                                                                                    (__lhs_0_117) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__42) -> {
                                                                                        false
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()(activity_3),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))
                                            }
                                        )(),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            error()
                                        }
                                    )()
                                }(self_222 = __core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));
                                charter_1 = __core__headList(__core__tailList(self_222));
                                __common19 = __core__unConstrData(charter_1);
                                __common20 = __core__fstPair(__common19);
                                __core__ifThenElse(
                                    __core__equalsInteger(__common20, 1),
                                    () -> {
                                        (__lhs_0_84) -> {
                                            self_222
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__common20, 2),
                                            () -> {
                                                (__lhs_0_83) -> {
                                                    self_222
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_79) -> {
                                                    mph_23 = __core__unBData(__core__headList(self_222));
                                                    charterAc_3 = __helios__assetclass__new(mph_23, #63686172746572);
                                                    (__cond_45) -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 1),
                                                            () -> {
                                                                (__lhs_0_82) -> {
                                                                    __module__CapoHelpers__CapoCtx[]__withCharterInput_1(self_222)
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_81) -> {
                                                                    charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_81)));
                                                                    datum_4 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_44 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                                                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))))));
                                                                    __helios__common__assert_constr_index(data_136, 0), 0);
                                                                    __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                                                }
                                                            }
                                                        )()(__cond_45)
                                                    }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                    __helios__common__find_safe(self_137, (txin_5) -> {
                                                        a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_3);
                                                        __core__ifThenElse(
                                                            __core__lessThanEqualsInteger(a_3, 0),
                                                            false,
                                                            true
                                                        )
                                                    }))
                                                }
                                            }
                                        )()
                                    }
                                )()(charter_1)))
                            }((v) -> {
                                others = __helios__value__show(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__common__filter(v, (pair_8) -> {
                                    b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_8)), #);
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    )
                                }, __core__mkNilPairData(())), (someMph, __10) -> {
                                    __core__ifThenElse(
                                        __core__equalsByteString(__common43, someMph),
                                        false,
                                        true
                                    )
                                }));
                                ada = __core__appendString((self_95) -> {
                                    show_positive = (x_3) -> {
                                        __core__appendString(__helios__int__show(__core__divideInteger(__core__ifThenElse(
                                            __core__lessThanInteger(x_3, 0),
                                            () -> {
                                                __core__multiplyInteger(x_3, -1)
                                            },
                                            () -> {
                                                x_3
                                            }
                                        )(), 1000000)), __core__appendString(".", __core__decodeUtf8__safe(self_94 = __core__modInteger(x_3, 1000000);
                                        recurse_61 = (recurse_60, x_2, pos_1, bytes_8) -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(x_2, 0),
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(6, pos_1),
                                                        () -> {
                                                            bytes_8
                                                        },
                                                        () -> {
                                                            recurse_60(recurse_60, 0, __core__addInteger(pos_1, 1), __core__consByteString(48, bytes_8))
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    recurse_60(recurse_60, __core__divideInteger(x_2, 10), __core__addInteger(pos_1, 1), __core__consByteString(__core__addInteger(__core__modInteger(x_2, 10), 48), bytes_8))
                                                }
                                            )()
                                        };
                                        recurse_61(recurse_61, self_94, 0, #))))
                                    };
                                    __core__ifThenElse(
                                        __core__lessThanInteger(self_95, 0),
                                        () -> {
                                            __core__appendString("-", show_positive(__core__multiplyInteger(self_95, -1)))
                                        },
                                        () -> {
                                            show_positive(self_95)
                                        }
                                    )()
                                }((a_14) -> {
                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_14, 10000000000000), 1000000000))
                                }((self_96) -> {
                                    __core__quotientInteger(__core__addInteger(self_96, __core__ifThenElse(
                                        __core__lessThanInteger(self_96, 0),
                                        -500000,
                                        500000
                                    )), 1000000)
                                }((a_15) -> {
                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_15, 10000000), 1000000000))
                                }(b_16 = __helios__value__get_safe(v, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(())))));
                                __core__multiplyInteger(b_16, 1000000))))), " ADA");
                                (mine) -> {
                                    __core__appendString(__core__appendString(__core__appendString(mine, " + "), ada), others)
                                }((self_159) -> {
                                    recurse_77 = (recurse_76, lst_18, sep) -> {
                                        __core__chooseList(lst_18, () -> {
                                            ""
                                        }, () -> {
                                            __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_18)))), recurse_76(recurse_76, __core__tailList__safe(lst_18), " + "))
                                        })()
                                    };
                                    recurse_77(recurse_77, self_159, "")
                                }(self_160 = __helios__value__get_policy(v, __common43);
                                __helios__common__fold(self_160, (z_3, pair_35) -> {
                                    (tokenName_3, c_3) -> {
                                        __helios__common__concat(__core__mkCons(__core__bData(__core__encodeUtf8(__helios__int__show(c_3))), __core__mkCons(__core__bData(#c397f09f92b420), __core__mkCons(s = __core__decodeUtf8(tokenName_3);
                                        __core__bData(__core__encodeUtf8(s)), __core__mkNilData(())))), z_3)
                                    }(__core__unBData(__core__fstPair(pair_35)), __core__unIData(__core__sndPair(pair_35)))
                                }, __core__mkNilData(()))))
                            }(self_30 = __helios__scriptcontext__get_current_input();
                            self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_30))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29)))))))
                        }
                    },
                    () -> {
                        (__44) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                () -> {
                                    (__lhs_0_129) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                        () -> {
                                            (__lhs_0_128) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__45) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                                    () -> {
                                                        (__lhs_0_127) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                            () -> {
                                                                (__lhs_0_126) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__43) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(activity_3)
                                            }
                                        }
                                    )()
                                }
                            )()(activity_3)
                        }
                    }
                )()
            }
        )()(mdd)
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1, __DATUM, __REDEEMER),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__int____geq = (a, b_1) -> {
        __helios__bool____not(__core__lessThanInteger(a, b_1))
    };
    __helios__bool__and = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                b_2()
            },
            () -> {
                false
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__bytearray__decode_utf8 = (self) -> {
        () -> {
            __core__decodeUtf8(self)
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_1) -> {
        __core__sndPair(__core__unConstrData(self_1))
    };
    __helios__common__enum_field_0 = (self_2) -> {
        __core__headList(__helios__common__enum_fields(self_2))
    };
    __helios__common__enum_fields_after_0 = (self_3) -> {
        __core__tailList(__helios__common__enum_fields(self_3))
    };
    __helios__common__enum_field_1 = (self_4) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_4))
    };
    __helios__int____to_data = __core__iData;
    __helios__value__new = (assetClass, i) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_5) -> {
        __core__multiplyInteger(self_5, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__int__to_hex = (self_6) -> {
        () -> {
            recurse_1 = (recurse) -> {
                (self_7, bytes) -> {
                    digit = __core__modInteger(self_7, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_7, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse(recurse)(__core__divideInteger(self_7, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_6, 0),
                () -> {
                    __core__consByteString(45, recurse_1(recurse_1)(__core__multiplyInteger(self_6, -1), #))
                },
                () -> {
                    recurse_1(recurse_1)(self_6, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_8) -> {
        () -> {
            recurse_3 = (recurse_2, self_9) -> {
                n = __core__lengthOfByteString(self_9);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_9, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_9)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_3(recurse_3, self_8)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_10) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_10)
        }
    };
    __helios__common__enum_fields_after_1 = (self_11) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__common__enum_fields_after_2 = (self_12) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_12))
    };
    __helios__common__enum_fields_after_3 = (self_13) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_13))
    };
    __helios__common__enum_field_4 = (self_14) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_14))
    };
    __helios__tx__minted = (self_15) -> {
        __core__unMapData(__helios__common__enum_field_4(self_15))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_1),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_16, fn, z) -> {
        recurse_5 = (recurse_4, self_17, z_1) -> {
            __core__chooseList(self_17, () -> {
                z_1
            }, () -> {
                recurse_4(recurse_4, __core__tailList__safe(self_17), fn(z_1, __core__headList__safe(self_17)))
            })()
        };
        recurse_5(recurse_5, self_16, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_18) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i_2, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i_2), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i_2, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i_2, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_18, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_18, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_18, #)
                }
            )())
        }
    };
    __helios__data__show = (self_19) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_9, data_2) -> {
                recurse_9(recurse_9, data_2)
            }((recurse_8, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_8(recurse_8, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_8(recurse_8, __core__fstPair(pair));
                        value_1 = recurse_8(recurse_8, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_8(recurse_8, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_4 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_4)()
                })()
            }, self_19)
        }
    };
    __helios__data__show_constr_data = (callback) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_1) -> {
        (list_1) -> {
            recurse_11 = (recurse_10) -> {
                (lst_1, i_3) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_3, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_1(head)
                            },
                            () -> {
                                recurse_10(recurse_10)(__core__tailList__safe(lst_1), __core__subtractInteger(i_3, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_11(recurse_11)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_2) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_2(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_20) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_20)()
                    }
                )()
            })(self_20)
        }
    };
    __helios__string____neq = (self_21, other) -> {
        __helios__bool____not(__helios__string____eq(self_21, other))
    };
    __helios__string__show = (self_22) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_22, "'"))
        }
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__value__show = (self_23) -> {
        () -> {
            __helios__common__fold(self_23, (prev_1, pair_3) -> {
                mph_4 = __core__unBData__safe(__core__fstPair(pair_3));
                tokens = __core__unMapData__safe(__core__sndPair(pair_3));
                __helios__common__fold(tokens, (prev_2, pair_4) -> {
                    token_name_2 = __core__unBData__safe(__core__fstPair(pair_4));
                    qty = __core__unIData__safe(__core__sndPair(pair_4));
                    __helios__string____add(prev_2, __core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            __helios__string____add("lovelace: ", __helios__string____add(__helios__int__show(qty)(), "
"))
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), __helios__string____add(".", __helios__string____add(__helios__bytearray__show(token_name_2)(), __helios__string____add(": ", __helios__string____add(__helios__int__show(qty)(), "
")))))
                        }
                    )())
                }, prev_1)
            }, "")
        }
    };
    __helios__int____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__int____eq(self_24, other_1))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_25) -> {
        () -> {
            self_25
        }
    };
    __helios__string__encode_utf8 = (self_26) -> {
        () -> {
            __core__encodeUtf8(self_26)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_27) -> {
        () -> {
            __core__ifThenElse(
                self_27,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_28) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_28)()), self_28)
        }
    };
    __helios__txoutput__value = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_1(self_29))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_30) -> {
        __helios__txoutput__value(__helios__txinput__output(self_30))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_31) -> {
        __core__unListData(__helios__common__enum_field_0(self_31))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__map_get = (self_32, key_1, fnFound, fnNotFound) -> {
        recurse_15 = (recurse_14, self_33, key_2) -> {
            __core__chooseList(self_33, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_33);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(self_33), key_2)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, self_32, key_1)
    };
    __helios__common__enum_tag_equals = (data_5, i_4) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_5)), i_4)
    };
    __helios__option__NONE_FUNC = (callback_3) -> {
        callback_3(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_4) -> {
            callback_4(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_6) -> {
        __core__chooseData(data_6, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_6))
        })()
    };
    __helios__int__from_data_safe = (data_7) -> {
        __core__chooseData(data_7, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_7))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__length = (lst_3) -> {
        recurse_17 = (recurse_16, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_16(recurse_16, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_17(recurse_17, lst_3)
    };
    __helios__common__all = (self_34, fn_1) -> {
        recurse_19 = (recurse_18, self_35, fn_2) -> {
            __core__chooseList(self_35, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_35)),
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_35), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_34, fn_1)
    };
    __helios__common__identity = (self_36) -> {
        self_36
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__bool__or = (a_4, b_4) -> {
        __core__ifThenElse(
            a_4(),
            () -> {
                true
            },
            () -> {
                b_4()
            }
        )()
    };
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_37) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_37))))
    };
    __helios__common__enum_fields_after_4 = (self_38) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_38))
    };
    __helios__common__enum_fields_after_5 = (self_39) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_39))
    };
    __helios__common__enum_fields_after_6 = (self_40) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_40))
    };
    __helios__common__enum_field_7 = (self_41) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_41))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_42) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_42))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__txoutputdatum__inline = (self_43) -> {
        pair_5 = __core__unConstrData(self_43);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_44) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_44))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__tx__outputs = (self_45) -> {
        __core__unListData(__helios__common__enum_field_2(self_45))
    };
    __helios__txinput__datum = (self_46) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_46))
    };
    __helios__common__serialize = (self_47) -> {
        () -> {
            __core__serialiseData(self_47)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_48, fn_3, nil) -> {
        recurse_21 = (recurse_20, self_49, fn_4) -> {
            __core__chooseList(self_49, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_49);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_20(recurse_20, __core__tailList__safe(self_49), fn_4))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_49), fn_4)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_48, fn_3)
    };
    __helios__common__filter_list = (self_50, fn_5) -> {
        __helios__common__filter(self_50, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__parse_utf8_cont_byte = (byte, callback_5) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback_5(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback_5(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_1 = __core__lengthOfByteString(bytes_5);
        recurse_23 = (recurse_22, i_5) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_5, n_1),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_5);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_22(recurse_22, __core__addInteger(i_5, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_5, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_1),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_22(recurse_22, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_5, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_1),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_22(recurse_22, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_5, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_1),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_22(recurse_22, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_23(recurse_23, 0)
    };
    __helios__string__is_valid_data = (data_8) -> {
        __core__chooseData(data_8, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_8))
        })()
    };
    __helios__bytearray__is_valid_data = (data_9) -> {
        __core__chooseData(data_9, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_10, index_2, test_a, test_b) -> {
        __core__chooseData(data_10, () -> {
            pair_6 = __core__unConstrData__safe(data_10);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_6), index_2),
                () -> {
                    fields_3 = __core__sndPair(pair_6);
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_3)),
                            () -> {
                                tail = __core__tailList__safe(fields_3);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_2) -> {
        (data_11) -> {
            __core__chooseData(data_11, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_6 = __core__unBData__safe(data_11);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_6), n_2),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, () -> {
            pair_7 = __core__unConstrData__safe(data_12);
            index_3 = __core__fstPair(pair_7);
            fields_4 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_4), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_4))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_13) -> {
        __core__chooseData(data_13, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_14) -> {
        __helios__common__test_constr_data_2(data_14, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_15) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_3, name) -> {
        name_data = __core__bData(name);
        recurse_25 = (recurse_24, map_4) -> {
            __core__chooseList(map_4, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_4);
                key_3 = __core__fstPair(head_3);
                value_2 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_2
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_4))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, map_3)
    };
    __helios__common__test_mStruct_field = (self_51, name_1, inner_test) -> {
        __core__chooseData(self_51, () -> {
            false
        }, () -> {
            map_5 = __core__unMapData__safe(self_51);
            recurse_27 = (recurse_26, map_6) -> {
                __core__chooseList(map_6, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_1))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_6);
                    key_4 = __core__fstPair(head_4);
                    value_3 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_1),
                        () -> {
                            inner_test(value_3)
                        },
                        () -> {
                            recurse_26(recurse_26, __core__tailList__safe(map_6))
                        }
                    )()
                })()
            };
            recurse_27(recurse_27, map_5)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__value__contains_policy = (self_52) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_29 = (recurse_28, map_7) -> {
                __core__chooseList(map_7, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_7))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, self_52)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__bytearray____neq = (self_53, other_2) -> {
        __helios__bool____not(__helios__bytearray____eq(self_53, other_2))
    };
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_31 = (recurse_30, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_31(recurse_31, tokens_1)
    };
    __helios__value__is_zero = (self_54) -> {
        () -> {
            recurse_33 = (recurse_32, map_8) -> {
                __core__chooseList(map_8, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_8))))
                    }, () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_8))
                    })
                })()
            };
            recurse_33(recurse_33, self_54)
        }
    };
    __helios__value__get_policy = (self_55) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_35 = (recurse_34, map_9) -> {
                __core__chooseList(map_9, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))
                        },
                        () -> {
                            recurse_34(recurse_34, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_35(recurse_35, self_55)
        }
    };
    __helios__value__get_inner_map_int = (map_10, key_5) -> {
        recurse_37 = (recurse_36, map_11, key_6) -> {
            __core__chooseList(map_11, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_6),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_6)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, map_10, key_5)
    };
    __helios__value__get_map_keys = (map_12) -> {
        recurse_39 = (recurse_38, map_13) -> {
            __core__chooseList(map_13, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))
            })()
        };
        recurse_39(recurse_39, map_12)
    };
    __helios__common__any = (self_56, fn_6) -> {
        recurse_41 = (recurse_40, self_57, fn_7) -> {
            __core__chooseList(self_57, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_57)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(self_57), fn_7)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, self_56, fn_6)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_7) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_7)
        })
    };
    __helios__common__concat = (a_5, b_5) -> {
        recurse_43 = (recurse_42, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_43(recurse_43, b_5, a_5)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        aKeys = __helios__value__get_map_keys(a_6);
        recurse_45 = (recurse_44, keys, map_14) -> {
            __core__chooseList(map_14, () -> {
                __helios__common__list_0
            }, () -> {
                key_8 = __core__fstPair(__core__headList__safe(map_14));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_8),
                    () -> {
                        recurse_44(recurse_44, keys, __core__tailList__safe(map_14))
                    },
                    () -> {
                        __core__mkCons(key_8, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_45(recurse_45, aKeys, b_6);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_7, b_7) -> {
            recurse_47 = (recurse_46, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_9 = __core__headList__safe(keys_1);
                    tail_1 = recurse_46(recurse_46, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_7, key_9), __helios__value__get_inner_map_int(b_7, key_9));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_47(recurse_47, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_15, mph_9) -> {
        recurse_49 = (recurse_48, map_16) -> {
            __core__chooseList(map_16, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_49(recurse_49, map_15)
    };
    __helios__value__add_or_subtract = (a_8, b_8, op_1) -> {
        recurse_51 = (recurse_50, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_10 = __core__headList__safe(keys_2);
                tail_2 = recurse_50(recurse_50, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_8, key_10), __helios__value__get_inner_map(b_8, key_10));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_51(recurse_51, __helios__value__merge_map_keys(a_8, b_8), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_9, b_9) -> {
        __helios__value__add_or_subtract(a_9, b_9, __core__addInteger)
    };
    __helios__common__map = (self_58, fn_8, init) -> {
        recurse_53 = (recurse_52, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_53(recurse_53, self_58, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_1, lst_8, comp) -> {
        recurse_55 = (recurse_54, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_1, lst_9)
            }, () -> {
                head_5 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_1, head_5),
                    () -> {
                        __core__mkCons(x_1, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_5, recurse_54(recurse_54, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_55(recurse_55, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_6, tail_3) -> {
                    __helios__common__insert_in_sorted(head_6, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_56(recurse_56, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_57(recurse_57, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_10, b_10) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_10, b_10),
            b_10,
            a_10
        )
    };
    __helios__common__slice_bytearray = (self_59, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_59), 1), pos)
                    },
                    () -> {
                        pos
                    }
                )()
            };
            fn_10 = (start_1) -> {
                fn_9 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_59)
                };
                fn_9(normalize(end))
            };
            fn_10(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_60) -> {
        __helios__common__slice_bytearray(self_60, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_61) -> {
        () -> {
            __core__blake2b_256(self_61)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__int__serialize = (self_62) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_62))
        }
    };
    __helios__txoutputid__index = (self_63) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_63))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_64) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_64))
    };
    __helios__common__enum_fields_after_8 = (self_65) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_65))
    };
    __helios__common__enum_field_9 = (self_66) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_66))
    };
    __helios__tx__redeemers = (self_67) -> {
        __core__unMapData(__helios__common__enum_field_9(self_67))
    };
    __helios__scriptpurpose__spending____is = (data_16) -> {
        __helios__common__enum_tag_equals(data_16, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_68) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_17) -> {
                __core__chooseList(map_17, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_17)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_17))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_17))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_18) -> {
                __core__chooseList(map_18, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_18)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_68)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_69) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_7) -> {
                            __helios__bytearray__show(bytes_7)()
                        }))(fields_5)
                    },
                    () -> {
                        __helios__data__show(self_69)()
                    }
                )()
            })(self_69)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_17) -> {
            callback_nok_2 = __helios__data__show(data_17);
            __core__chooseData(data_17, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
                callback_6(__core__unIData__safe(data_17))
            }, callback_nok_2)()
        }
    };
    __helios__txoutputid__show = (self_70) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_6);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_6);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_70)()
                    }
                )()
            })(self_70)
        }
    };
    __helios__tx__ref_inputs = (self_71) -> {
        __core__unListData(__helios__common__enum_field_1(self_71))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__string__serialize = (self_72) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_72))
        }
    };
    __helios__txinput__address = (self_73) -> {
        __helios__txoutput__address(__helios__txinput__output(self_73))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_74) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_74))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_75) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_75))
        }
    };
    __helios__struct____eq = (self_76, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_76), __helios__struct____to_data(other_3))
    };
    __helios__data__constrdata____is = (data_18) -> {
        __core__chooseData(data_18, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_19) -> {
        __core__sndPair(__core__unConstrData(data_19))
    };
    __helios__value__compare_inner = (comp_2, a_11, b_11) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_11 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_11, key_11), __helios__value__get_inner_map_int(b_11, key_11))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value__compare = (a_12, b_12, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_12 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_12, key_12), __helios__value__get_inner_map(b_12, key_12))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, b_12))
    };
    __helios__value____geq = (a_13, b_13) -> {
        __helios__value__compare(a_13, b_13, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_77) -> {
        (value_4) -> {
            __helios__value____geq(self_77, value_4)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_78, fn_11) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_78), fn_11)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_79) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_79)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_80) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_80))
    };
    __helios__spendingcredential__validator__cast = (data_20) -> {
        __helios__common__assert_constr_index(data_20, 1)
    };
    __helios__txoutput__is_locked_by = (self_81) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_81));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_82) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_82, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_83) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_83)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata__tag = (data_21) -> {
        __core__fstPair(__core__unConstrData(data_21))
    };
    __helios__common__struct_fields_after_1 = (self_84) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_84))
    };
    __helios__common__struct_fields_after_2 = (self_85) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_85))
    };
    __helios__common__struct_fields_after_3 = (self_86) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_86))
    };
    __helios__common__struct_field_4 = (self_87) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_87))
    };
    __helios__common__struct_field_3 = (self_88) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_88))
    };
    __helios__common__struct_field_2 = (self_89) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_89))
    };
    __helios__txoutput__is_valid_data = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_23) -> {
        __helios__common__test_constr_data_2(data_23, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_90) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_90))
    };
    __helios__common__enum_field_5 = (self_91) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_91))
    };
    __helios__common__enum_field_3 = (self_92) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_92))
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_93) -> {
        () -> {
            __core__divideInteger(self_93, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_94) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_94, 0),
                () -> {
                    __core__multiplyInteger(self_94, -1)
                },
                () -> {
                    self_94
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_95, n_3) -> {
        recurse_63 = (recurse_62, x_2, pos_1, bytes_8) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_2, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_3, pos_1),
                        () -> {
                            bytes_8
                        },
                        () -> {
                            recurse_62(recurse_62, 0, __core__addInteger(pos_1, 1), __core__consByteString(48, bytes_8))
                        }
                    )()
                },
                () -> {
                    recurse_62(recurse_62, __core__divideInteger(x_2, 10), __core__addInteger(pos_1, 1), __core__consByteString(__helios__int__show_digit(x_2), bytes_8))
                }
            )()
        };
        recurse_63(recurse_63, self_95, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_96) -> {
        () -> {
            show_positive = (x_3) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_3)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_3, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_96, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_96, -1)))
                },
                () -> {
                    show_positive(self_96)
                }
            )()
        }
    };
    __helios__real__round_calc_result = (res) -> {
        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))
    };
    __helios__real__ONESQ = 1000000000000;
    __helios__int____div1 = (a_14, b_14) -> {
        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_14, __core__multiplyInteger(__helios__real__ONESQ, 10)), b_14))
    };
    __helios__real__MINUS_HALF = -500000;
    __helios__real__HALF = 500000;
    __helios__real__round = (self_97) -> {
        () -> {
            __core__quotientInteger(__core__addInteger(self_97, __core__ifThenElse(
                __core__lessThanInteger(self_97, 0),
                __helios__real__MINUS_HALF,
                __helios__real__HALF
            )), __helios__real__ONE)
        }
    };
    __helios__real____div = (a_15, b_15) -> {
        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_15, __core__multiplyInteger(__helios__real__ONE, 10)), b_15))
    };
    __helios__real____add1 = (a_16, b_16) -> {
        __core__addInteger(a_16, __core__multiplyInteger(b_16, __helios__real__ONE))
    };
    __helios__assetclass__ADA = __helios__assetclass__new(#, #);
    __helios__value__get_lovelace = (self_98) -> {
        () -> {
            __helios__value__get_safe(self_98)(__helios__assetclass__ADA)
        }
    };
    __helios__common__filter_map = (self_99, fn_12) -> {
        __helios__common__filter(self_99, fn_12, __core__mkNilPairData(()))
    };
    __helios__value__get_assets = (self_100) -> {
        () -> {
            __helios__common__filter_map(self_100, (pair_8) -> {
                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_8)), #))
            })
        }
    };
    __helios__common__mStruct_field = (self_101, name_2) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_101), name_2)
    };
    __helios__mintingpolicyhash__is_valid_data = (data_24) -> {
        __core__chooseData(data_24, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_24);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__txoutput____to_data = __helios__common__identity;
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            pair_9 = __core__unConstrData__safe(data_25);
            index_4 = __core__fstPair(pair_9);
            fields_7 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_26) -> {
        __core__chooseData(data_26, () -> {
            pair_10 = __core__unConstrData__safe(data_26);
            tag_4 = __core__fstPair(pair_10);
            fields_8 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            pair_11 = __core__unConstrData__safe(data_27);
            index_5 = __core__fstPair(pair_11);
            fields_9 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_28) -> {
        __helios__common__test_constr_data_2(data_28, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_102, fn_13, callback_7) -> {
        recurse_65 = (recurse_64, self_103, fn_14) -> {
            __core__chooseList(self_103, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_7 = __core__headList__safe(self_103);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_7)))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_103), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_102, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_17) -> {
        __core__constrData(__core__ifThenElse(
            b_17,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_29) -> {
            __core__chooseData(data_29, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_29);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_30) -> {
        __helios__common__test_constr_data_2(data_30, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_31) -> {
        __core__chooseData(data_31, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_104) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_104)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_105) -> {
        __helios__common__length(self_105)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_106) -> {
        __helios__common__length(self_106)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_32) -> {
        map_21 = __core__unMapData(data_32);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_107) -> {
        (key_13) -> {
            __helios__common__map_get(self_107, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_108) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_108)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_33) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_33, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_33, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid AnyData data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_34) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_34),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_34
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_109) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_109, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_110) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_110, #747065))
    };
    __helios__list[__helios__data]__head = (self_111) -> {
        __helios__data__from_data(__core__headList(self_111))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_35) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_35),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_35),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_35),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_36) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_36),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_36
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_37) -> {
        __helios__common__enum_tag_equals(data_37, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_38) -> {
        __core__chooseData(data_38, () -> {
            pair_12 = __core__unConstrData__safe(data_38);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 0),
                () -> {
                    data_39 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_39, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_39);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_112) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_112))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_113) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_113))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_13 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 1),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_14 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 2),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_46) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_46),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_46),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_46),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_46),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_46),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_46),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_46),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_46),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_47) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_47),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_47
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_48) -> {
        __helios__common__enum_tag_equals(data_48, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_49) -> {
        __core__chooseData(data_49, () -> {
            pair_15 = __core__unConstrData__safe(data_49);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 0),
                () -> {
                    data_50 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_50, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_50);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_16 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 1),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_17 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 2),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_18 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 3),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_19 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 4),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_114) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_114))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_115) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_115)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_20 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 5),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_21 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 6),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_22 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 7),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_72) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_72),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_72),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_72),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_72),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_72),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_73) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_73),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_73
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_74) -> {
        __helios__common__enum_tag_equals(data_74, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_75) -> {
        __core__chooseData(data_75, () -> {
            pair_23 = __core__unConstrData__safe(data_75);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 0),
                () -> {
                    data_76 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_76, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_76);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_24 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 1),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_25 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 2),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_116))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_117) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_117))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_26 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 3),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_27 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 4),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_88) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_88),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_88),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_88),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_89) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_89),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_89
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_90) -> {
        __helios__common__enum_tag_equals(data_90, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_28 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 0),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_118) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_120) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_120))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_29 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 1),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_30 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 2),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_123) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_124) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_124))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_99) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_99),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_99),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_99),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_99),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_99),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_99),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_99),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_100) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_100),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_100
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_31 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 0),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_125) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_125))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_126) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_126))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_32 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 1),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_33 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 2),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_34 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 3),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_35 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 4),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_36 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 5),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_37 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 6),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_127) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_122) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_122),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_122),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_122),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_122),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_122),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_122),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_122),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_122),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_122),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_123) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_123),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_123
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_124) -> {
        __core__chooseData(data_124, () -> {
            pair_38 = __core__unConstrData__safe(data_124);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 0),
                () -> {
                    data_125 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_125, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_125);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_126) -> {
        __helios__common__enum_tag_equals(data_126, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_39 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 1),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_128) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_128))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_40 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 2),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_129) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_129))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_41 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 3),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_130) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_135) -> {
        __core__chooseData(data_135, () -> {
            pair_42 = __core__unConstrData__safe(data_135);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 4),
                () -> {
                    data_136 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_136, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_136);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_43 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 5),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_44 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 6),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_45 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 7),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_147) -> {
        __core__chooseData(data_147, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_147))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_148) -> {
        __core__chooseData(data_148, () -> {
            pair_46 = __core__unConstrData__safe(data_148);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 8),
                () -> {
                    data_149 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_149, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_149);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_150) -> {
        lst_15 = __core__unListData(data_150);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_131) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_151) -> {
        __helios__common__enum_tag_equals(data_151, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_152) -> {
        __helios__common__enum_tag_equals(data_152, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_153) -> {
        __core__chooseData(data_153, () -> {
            pair_47 = __core__unConstrData__safe(data_153);
            index_6 = __core__fstPair(pair_47);
            fields_86 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_154) -> {
        __core__chooseData(data_154, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_154);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_155) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_155),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_155)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_132) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_132))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_156) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_156),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_156
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_133) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_133))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_134) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_134))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_157) -> {
        __helios__common__enum_tag_equals(data_157, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_135) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_135))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_136) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_136)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_17 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_17;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_136)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_136)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_158) -> {
        __helios__common__enum_tag_equals(data_158, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_159) -> {
        __helios__common__enum_tag_equals(data_159, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_137) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_137, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_138) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_138))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_139) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_139);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_139);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_140) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_140, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_141) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_141;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_141)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_162) -> {
        __core__chooseData(data_162, () -> {
            pair_48 = __core__unConstrData__safe(data_162);
            index_7 = __core__fstPair(pair_48);
            fields_91 = __core__sndPair(pair_48);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_163) -> {
        __core__chooseData(data_163, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_163);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_164) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_164),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_164)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_142) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_142))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_143) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_143))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_165) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_165),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_165
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_144) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_144))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_166) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_166),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_166),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_167) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_167),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_167
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_168) -> {
        __helios__common__enum_tag_equals(data_168, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_169) -> {
        __core__chooseData(data_169, () -> {
            pair_49 = __core__unConstrData__safe(data_169);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 0),
                () -> {
                    data_170 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_170, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_170);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_145) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_145))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_171) -> {
        __core__chooseData(data_171, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_171))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_172) -> {
        __core__chooseData(data_172, () -> {
            pair_50 = __core__unConstrData__safe(data_172);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 1),
                () -> {
                    data_173 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_173, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_173);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_174) -> {
        __core__chooseData(data_174, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_174);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_175) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_175),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_175)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_146) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_146))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_147) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_147))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_148) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_148), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_148))
        }
    };
    __helios__list[__helios__txinput]__any = (self_149) -> {
        (fn_19) -> {
            __helios__common__any(self_149, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]____to_data = __helios__common__identity;
    __module__CapoHelpers__dgd_DataSrc[]__is_valid_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data) -> {
        (data_176) -> {
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data(data_176),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data(data_176),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data(data_176),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data(data_176),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__from_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1) -> {
        (data_177) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__is_valid_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1)(data_177),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid dgd_DataSrc data", ())
                }
            )();
            data_177
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2 = (data_178) -> {
        __core__chooseData(data_178, () -> {
            pair_51 = __core__unConstrData__safe(data_178);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 0),
                () -> {
                    data_179 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_179, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_179);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2 = (data_180) -> {
        __core__chooseData(data_180, () -> {
            pair_52 = __core__unConstrData__safe(data_180);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 1),
                () -> {
                    data_181 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_181, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_181);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_61),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____is = (data_182) -> {
        __helios__common__enum_tag_equals(data_182, 2)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2 = (data_183) -> {
        __core__chooseData(data_183, () -> {
            pair_53 = __core__unConstrData__safe(data_183);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 2),
                () -> {
                    data_184 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_184, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_108 = __core__unListData__safe(data_184);
                        __core__chooseList(fields_108, () -> {
                            false
                        }, () -> {
                            head_62 = __core__headList__safe(fields_108);
                            __core__ifThenElse(
                                __helios__txoutput__is_valid_data(head_62),
                                () -> {
                                    fields_109 = __core__tailList__safe(fields_108);
                                    __core__chooseList(fields_109, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__txo = (self_150) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_150))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____new = (self_151) -> {
        __core__constrData(2, __helios__common__list_1(__helios__txoutput____to_data(self_151)))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both____is = (data_185) -> {
        __helios__common__enum_tag_equals(data_185, 3)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2 = (data_186) -> {
        __core__chooseData(data_186, () -> {
            pair_54 = __core__unConstrData__safe(data_186);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 3),
                () -> {
                    data_187 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_187, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_187);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_63 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_63),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_64 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__txoutput__is_valid_data(head_64),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__txo = (self_152) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_1(self_152))
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_188) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_188),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_188),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_188),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_188),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_188),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_189) -> {
            ignore_12 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_189),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_189
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_190) -> {
        __helios__common__enum_tag_equals(data_190, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_55 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 0),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_193) -> {
        __helios__common__enum_tag_equals(data_193, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_56 = __core__unConstrData__safe(data_194);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 1),
                () -> {
                    data_195 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_195, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_195);
                        __core__chooseList(fields_114, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_114);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_65),
                                () -> {
                                    fields_115 = __core__tailList__safe(fields_114);
                                    __core__chooseList(fields_115, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_115);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_66),
                                            () -> {
                                                fields_116 = __core__tailList__safe(fields_115);
                                                __core__chooseList(fields_116, () -> {
                                                    false
                                                }, () -> {
                                                    head_67 = __core__headList__safe(fields_116);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_67),
                                                        () -> {
                                                            fields_117 = __core__tailList__safe(fields_116);
                                                            __core__chooseList(fields_117, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_153) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_153))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_154) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_154))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_155) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_155))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_196) -> {
        __core__chooseData(data_196, () -> {
            pair_57 = __core__unConstrData__safe(data_196);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 2),
                () -> {
                    data_197 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_197, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_197);
                        __core__chooseList(fields_118, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_118);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_68),
                                () -> {
                                    fields_119 = __core__tailList__safe(fields_118);
                                    __core__chooseList(fields_119, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_119);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_69),
                                            () -> {
                                                fields_120 = __core__tailList__safe(fields_119);
                                                __core__chooseList(fields_120, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_198) -> {
        __core__chooseData(data_198, () -> {
            pair_58 = __core__unConstrData__safe(data_198);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 3),
                () -> {
                    data_199 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_199, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_199);
                        __core__chooseList(fields_121, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_200) -> {
        __core__chooseData(data_200, () -> {
            pair_59 = __core__unConstrData__safe(data_200);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 4),
                () -> {
                    data_201 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_201, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_122 = __core__unListData__safe(data_201);
                        __core__chooseList(fields_122, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            pair_60 = __core__unConstrData__safe(data_202);
            index_8 = __core__fstPair(pair_60);
            fields_123 = __core__sndPair(pair_60);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_123, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_123), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_123))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_123, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_203) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_203, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_203, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_203, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_204) -> {
        ignore_13 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_204),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_204
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_156) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_156, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_157) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_157, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_205) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_205),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_205
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_158) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_158, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_206) -> {
        __helios__common__enum_tag_equals(data_206, 0)
    };
    __helios__list[__helios__string]__join = (self_159) -> {
        (__useopt__separator, separator) -> {
            separator_1 = __core__ifThenElse(
                __useopt__separator,
                separator,
                ""
            );
            recurse_77 = (recurse_76, lst_18, sep) -> {
                __core__chooseList(lst_18, () -> {
                    ""
                }, () -> {
                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_18))), recurse_76(recurse_76, __core__tailList__safe(lst_18), separator_1))
                })()
            };
            recurse_77(recurse_77, self_159, "")
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__fold[__helios__list[__helios__string]] = (self_160) -> {
        (fn_20, z_2) -> {
            __helios__common__fold(self_160, (z_3, pair_61) -> {
                fn_20(z_3, __helios__bytearray__from_data(__core__fstPair(pair_61)), __helios__int__from_data(__core__sndPair(pair_61)))
            }, z_2)
        }
    };
    __helios__list[__helios__string]____add = __helios__common__concat;
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_161) -> {
        (fn_21) -> {
            __helios__common__filter_map(self_161, (pair_62) -> {
                fn_21(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_62)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_62)))
            })
        }
    };
    __module__CapoHelpers__mkTokenShow = (mph_15) -> {
        (v) -> {
            others = __helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(__helios__value__get_assets(v)())())((someMph, __10) -> {
                __helios__mintingpolicyhash____neq(mph_15, someMph)
            })))();
            ada = __helios__string____add(__helios__real__show(__helios__int____div1(__helios__real__round(__helios__real____div(__helios__real____add1(0, __helios__value__get_lovelace(v)()), 1000000000))(), 1000000000))(), " ADA");
            mine = __helios__list[__helios__string]__join(__helios__map[__helios__bytearray@__helios__int]__fold[__helios__list[__helios__string]](__helios__value__get_policy(v)(mph_15))((previous, tokenName_3, c_3) -> {
                __helios__list[__helios__string]____add(__core__mkCons(__helios__string____to_data(__helios__int__show(c_3)()), __core__mkCons(__helios__string____to_data("\xD7\u{1F4B4} "), __core__mkCons(__helios__string____to_data(__helios__bytearray__decode_utf8(tokenName_3)()), __core__mkNilData(())))), previous)
            }, __core__mkNilData(())))(true, " + ");
            __helios__string____add(__helios__string____add(__helios__string____add(mine, " + "), ada), others)
        }
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_207) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_207),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_207),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_207),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_208) -> {
            ignore_14 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_208),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_208
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_209) -> {
        __core__chooseData(data_209, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_209))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_81 = (recurse_80, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_70 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_70)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_70)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_210) -> {
        __core__chooseData(data_210, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_210))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_83 = (recurse_82, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_71 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_71)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_71)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_211) -> {
        __core__chooseData(data_211, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_211))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {
        recurse_85 = (recurse_84, lst_22) -> {
            __core__chooseList(lst_22, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_22))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_21)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_212) -> {
        __core__chooseData(data_212, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_212))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_213) -> {
        __core__chooseData(data_213, () -> {
            pair_63 = __core__unConstrData__safe(data_213);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 0),
                () -> {
                    data_214 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_214, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_124 = __core__unListData__safe(data_214);
                        __core__chooseList(fields_124, () -> {
                            false
                        }, () -> {
                            head_72 = __core__headList__safe(fields_124);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_72),
                                () -> {
                                    fields_125 = __core__tailList__safe(fields_124);
                                    __core__chooseList(fields_125, () -> {
                                        false
                                    }, () -> {
                                        head_73 = __core__headList__safe(fields_125);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_73),
                                            () -> {
                                                fields_126 = __core__tailList__safe(fields_125);
                                                __core__chooseList(fields_126, () -> {
                                                    false
                                                }, () -> {
                                                    head_74 = __core__headList__safe(fields_126);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_74),
                                                        () -> {
                                                            fields_127 = __core__tailList__safe(fields_126);
                                                            __core__chooseList(fields_127, () -> {
                                                                false
                                                            }, () -> {
                                                                head_75 = __core__headList__safe(fields_127);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_75),
                                                                    () -> {
                                                                        fields_128 = __core__tailList__safe(fields_127);
                                                                        __core__chooseList(fields_128, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_76 = __core__headList__safe(fields_128);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_76),
                                                                                () -> {
                                                                                    fields_129 = __core__tailList__safe(fields_128);
                                                                                    __core__chooseList(fields_129, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_77 = __core__headList__safe(fields_129);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_77),
                                                                                            () -> {
                                                                                                fields_130 = __core__tailList__safe(fields_129);
                                                                                                __core__chooseList(fields_130, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_78 = __core__headList__safe(fields_130);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_78),
                                                                                                        () -> {
                                                                                                            fields_131 = __core__tailList__safe(fields_130);
                                                                                                            __core__chooseList(fields_131, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_79 = __core__headList__safe(fields_131);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_79),
                                                                                                                    () -> {
                                                                                                                        fields_132 = __core__tailList__safe(fields_131);
                                                                                                                        __core__chooseList(fields_132, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_215) -> {
        ignore_15 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_215),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_215
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_162) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_162))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_216) -> {
        lst_23 = __core__unListData(data_216);
        __11 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_163) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_163))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_217) -> {
        map_27 = __core__unMapData(data_217);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_164) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_164))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_165))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_166) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_166))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_167) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_167))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_218) -> {
        map_28 = __core__unMapData(data_218);
        __13 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_168) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_168))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_219) -> {
        lst_24 = __core__unListData(data_219);
        __14 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_24
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_169) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_169))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_64 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 1),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_133, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_87 = (recurse_86, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_80 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_80)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_80)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_223) -> {
        __core__chooseData(data_223, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_223))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_224) -> {
        __core__chooseData(data_224, () -> {
            pair_65 = __core__unConstrData__safe(data_224);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 2),
                () -> {
                    data_225 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_225, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_225);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_81 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_81),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_82 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_82),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, () -> {
                                                    false
                                                }, () -> {
                                                    head_83 = __core__headList__safe(fields_136);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_83),
                                                        () -> {
                                                            fields_137 = __core__tailList__safe(fields_136);
                                                            __core__chooseList(fields_137, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_226) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_226),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_226),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_226),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_227) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_227),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_227
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_228) -> {
        __helios__common__enum_tag_equals(data_228, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_229) -> {
        __core__chooseData(data_229, () -> {
            pair_66 = __core__unConstrData__safe(data_229);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 0),
                () -> {
                    data_230 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_230, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_138 = __core__unListData__safe(data_230);
                        __core__chooseList(fields_138, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_231) -> {
        __helios__common__enum_tag_equals(data_231, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_232) -> {
        __core__chooseData(data_232, () -> {
            pair_67 = __core__unConstrData__safe(data_232);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 1),
                () -> {
                    data_233 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_233, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_233);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_84),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, () -> {
                                        false
                                    }, () -> {
                                        head_85 = __core__headList__safe(fields_140);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_85),
                                            () -> {
                                                fields_141 = __core__tailList__safe(fields_140);
                                                __core__chooseList(fields_141, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_170) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_170))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_171) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_171))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_234) -> {
        __helios__common__enum_tag_equals(data_234, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_235) -> {
        __core__chooseData(data_235, () -> {
            pair_68 = __core__unConstrData__safe(data_235);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 2),
                () -> {
                    data_236 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_236, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_236);
                        __core__chooseList(fields_142, () -> {
                            false
                        }, () -> {
                            head_86 = __core__headList__safe(fields_142);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_86),
                                () -> {
                                    fields_143 = __core__tailList__safe(fields_142);
                                    __core__chooseList(fields_143, () -> {
                                        false
                                    }, () -> {
                                        head_87 = __core__headList__safe(fields_143);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_87),
                                            () -> {
                                                fields_144 = __core__tailList__safe(fields_143);
                                                __core__chooseList(fields_144, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_172) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_172))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_173) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_173))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_237) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_237),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_237),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_237),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_237),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_237),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_237),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_238) -> {
            ignore_17 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_238),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_238
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_69 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_69), 0),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_69));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_145, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_145);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_88),
                                () -> {
                                    fields_146 = __core__tailList__safe(fields_145);
                                    __core__chooseList(fields_146, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_174) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_174))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_70 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_70), 1),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_70));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_71 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_71), 2),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_71));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_248) -> {
        __helios__common__enum_tag_equals(data_248, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_72 = __core__unConstrData__safe(data_249);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_72), 3),
                () -> {
                    data_250 = __core__listData(__core__sndPair(pair_72));
                    __core__chooseData(data_250, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_149 = __core__unListData__safe(data_250);
                        __core__chooseList(fields_149, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_251) -> {
        __helios__common__enum_tag_equals(data_251, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_252) -> {
        __core__chooseData(data_252, () -> {
            pair_73 = __core__unConstrData__safe(data_252);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 4),
                () -> {
                    data_253 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_253, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_150 = __core__unListData__safe(data_253);
                        __core__chooseList(fields_150, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_255) -> {
        __core__chooseData(data_255, () -> {
            pair_74 = __core__unConstrData__safe(data_255);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 5),
                () -> {
                    data_256 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_256, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_256);
                        __core__chooseList(fields_151, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_257) -> {
        __core__chooseData(data_257, () -> {
            pair_75 = __core__unConstrData__safe(data_257);
            index_9 = __core__fstPair(pair_75);
            fields_152 = __core__sndPair(pair_75);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_152, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_152), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_152))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_152, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_258) -> {
        __core__chooseData(data_258, () -> {
            pair_76 = __core__unConstrData__safe(data_258);
            index_10 = __core__fstPair(pair_76);
            fields_153 = __core__sndPair(pair_76);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_153, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_153), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_153))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_153, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_175) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_175))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_176) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_176))
    };
    __helios__option[__helios__string]__from_data = (data_259) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_259),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_259
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_177) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_177))
    };
    __helios__option[__helios__txinput]__from_data = (data_260) -> {
        __16 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_260),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_260
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_178) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_178))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_179) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_179))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_180) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_180))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_181) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_181))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_154 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_154);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__17) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_182) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_182)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_183) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_183)(), __module__CapoHelpers__DelegateInput[]__serialize(self_183)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_183)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_184) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_184)(), __module__CapoHelpers__DelegateInput[]__serialize(self_184)())
            }), msg_4), __core__chooseUnit(__helios__print("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: "), __core__chooseUnit(__helios__print(__module__CapoHelpers__mkTokenShow(__module__CapoHelpers__DelegateInput[]__mph(self_184))(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_184))()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_185) -> {
        (index_12) -> {
            recurse_89 = (recurse_88, self_186, i_9) -> {
                __core__chooseList(self_186, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_186)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_186), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_185, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_187) -> {
        (fn_22) -> {
            __helios__common__filter_list(self_187, (item_11) -> {
                fn_22(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_188) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_188)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_156 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_156)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__22) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_18) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_18);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_155 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_155)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__21) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__20) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())))))
                                }
                            },
                            () -> {
                                (__19) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_189) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_189);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__27) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_189)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_158 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_158));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__26) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_19) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_19);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_157 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_157));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__25) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__24) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)()))))))
                                }
                            },
                            () -> {
                                (__23) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_190) -> {
        () -> {
            __lhs_0_41 = self_190;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"), self_190))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_191) -> {
        () -> {
            __lhs_0_47 = self_191;
            true
        }
    };
    __module__CapoHelpers__DgDataDetails[]__dataSrc = (self_192) -> {
        __module__CapoHelpers__dgd_DataSrc[]__from_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2)(__helios__common__struct_field_0(self_192))
    };
    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, type, mph_20) -> {
        __core__mkCons(__module__CapoHelpers__dgd_DataSrc[]____to_data(dataSrc), __core__mkCons(__helios__bytearray____to_data(id_1), __core__mkCons(__helios__string____to_data(type), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkNilData(())))))
    };
    __module__CapoHelpers__DgDataDetails[]__creating = (id_2, output_1, mph_21) -> {
        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Output____new(output_1), id_2, "", mph_21)
    };
    __module__CapoHelpers__DgDataDetails[]__output = (self_193) -> {
        () -> {
            __cond_28 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_193);
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Output____is(__cond_28),
                () -> {
                    (__lhs_0_49) -> {
                        txo_1 = __module__CapoHelpers__dgd_DataSrc[]__Output__txo(__lhs_0_49);
                        txo_1
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_28),
                        () -> {
                            (__lhs_0_48) -> {
                                txo = __module__CapoHelpers__dgd_DataSrc[]__Both__txo(__lhs_0_48);
                                txo
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("no output data")
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __module__CapoHelpers__DgDataDetails[]__outputData = (self_194) -> {
        () -> {
            __cond_29 = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__DgDataDetails[]__output(self_194)()));
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_29),
                () -> {
                    (__lhs_0_50) -> {
                        fields_159 = __helios__data__constrdata__fields(__lhs_0_50);
                        __helios__list[__helios__data]__head(fields_159)
                    }
                },
                () -> {
                    (__29) -> {
                        __helios__error("expected ConstrData{mStruct} for DgData output")
                    }
                }
            )()(__cond_29)
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_195) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_195))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_196) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_196))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_22, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_22), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__creatingDgData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_197) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                output_2 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_197)(recIdBytes_1);
                __module__CapoHelpers__DgDataDetails[]__creating(recIdBytes_1, output_2, __module__CapoHelpers__CapoCtx[]__mph(self_197))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_198) -> {
        () -> {
            e = "requires charter as input";
            __cond_30 = __module__CapoHelpers__CapoCtx[]__charter(self_198);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_30),
                () -> {
                    (__lhs_0_59) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_30),
                        () -> {
                            (__lhs_0_58) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_51) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_51);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_31 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_31),
                                    () -> {
                                        (__lhs_0_57) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_31),
                                            () -> {
                                                (__lhs_0_56) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_31),
                                                    () -> {
                                                        (__lhs_0_55) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_31),
                                                            () -> {
                                                                (__lhs_0_54) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_31),
                                                                    () -> {
                                                                        (__lhs_0_53) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_52) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_31)
                            }
                        }
                    )()
                }
            )()(__cond_30)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_199) -> {
        (key_14) -> {
            __helios__common__map_get(self_199, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_200) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_200)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_201) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_201))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_202) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_202)(key_16);
                __cond_32 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_32),
                    () -> {
                        (__lhs_0_61) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_60) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_60);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_32)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_203) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_203)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_204) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_204))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_205) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_205)()))(__module__CapoHelpers__CapoCtx[]__mph(self_205), false, (), false, ()), "no way m"), self_205))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_206) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_206))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_207) -> {
        (key_17) -> {
            __helios__common__map_get(self_207, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_208) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_33 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_208)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_33),
                    () -> {
                        (__lhs_0_64) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_62) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_62);
                            __cond_34 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_34),
                                () -> {
                                    (__lhs_0_63) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_63);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_63);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__30) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_34)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_208)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_33)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_209) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_209)()))(__module__CapoHelpers__CapoCtx[]__mph(self_209));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_210) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_210)()))(__module__CapoHelpers__CapoCtx[]__mph(self_210));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_211) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_211);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_66);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_65);
                                datum_2
                            }
                        },
                        () -> {
                            (__31) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1) -> {
        (self_212) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_212), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_212)();
                __cond_36 = __module__CapoHelpers__CapoCtx[]__charter(self_212);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_36),
                    () -> {
                        (__lhs_0_67) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo_2) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo_2), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo_2))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__32) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_36)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2 = (self_213) -> {
        () -> {
            __cond_37 = __module__CapoHelpers__CapoCtx[]__charter(self_213);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_37),
                () -> {
                    (__lhs_0_69) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_69);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_37),
                        () -> {
                            (__lhs_0_68) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_68);
                                utxo_3
                            }
                        },
                        () -> {
                            (__33) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_37)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_214) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_214), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_214))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_2 = (self_215) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2(self_215)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_216) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_216)(false, (), true, recIdBytes_3);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_38 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_38),
                    () -> {
                        (__lhs_0_71) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_70) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_70);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_38))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_217) -> {
            (__useopt__recId_2, recId_5, __useopt__recIdBytes_2, recIdBytes_4) -> {
                recId_6 = __core__ifThenElse(
                    __useopt__recId_2,
                    () -> {
                        recId_5
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_5 = __core__ifThenElse(
                    __useopt__recIdBytes_2,
                    () -> {
                        recIdBytes_4
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_6)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_217)(false, (), true, recIdBytes_5);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_5)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_39 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_39),
                    () -> {
                        (__lhs_0_73) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_72) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_72);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_39))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_218) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_3) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_4 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_218)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_4), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_264 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_40 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_264);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                            () -> {
                                (__lhs_0_74) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_264));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__34) -> {
                                    false
                                }
                            }
                        )()(__cond_40)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_219) -> {
        (typeName_3, __useopt__id_1, id_5) -> {
            id_6 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_5
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(self_219)();
            (txo_3) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_3), capoAddr_2),
                    () -> {
                        data_265 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_3));
                        __cond_41 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_265);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_41),
                            () -> {
                                (__lhs_0_75) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_265));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_6, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_6)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__35) -> {
                                    false
                                }
                            }
                        )()(__cond_41)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1) -> {
        (self_220) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_220)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_42 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_42),
                    () -> {
                        (__lhs_0_76) -> {
                            data_266 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_266), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_266))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_266), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_266))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__36) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_42)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_267) -> {
        __helios__common__enum_tag_equals(data_267, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2 = (self_221) -> {
        (recId_7) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_7)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_221), recId_7);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(self_221)();
            __cond_43 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_43),
                () -> {
                    (__lhs_0_78) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_77);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_43)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_222) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_222);
                __cond_44 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                    () -> {
                        (__lhs_0_84) -> {
                            self_222
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                            () -> {
                                (__lhs_0_83) -> {
                                    self_222
                                }
                            },
                            () -> {
                                (__lhs_0_79) -> {
                                    __lhs_0_80 = self_222;
                                    mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_80);
                                    charterAc_3 = __helios__assetclass__new(mph_23, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_45),
                                        () -> {
                                            (__lhs_0_82) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_222)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_81) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_81);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_45)
                                }
                            }
                        )()
                    }
                )()(__cond_44))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_223) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_223);
            __cond_46 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                () -> {
                    (__lhs_0_90) -> {
                        self_223
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_85) -> {
                                __lhs_0_86 = self_223;
                                mph_24 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_86);
                                charterAc_4 = __helios__assetclass__new(mph_24, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_47 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_47),
                                    () -> {
                                        (__lhs_0_88) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_88);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_47)))
                            }
                        }
                    )()
                }
            )()(__cond_46))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_224) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_224);
            __cond_48 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_48),
                () -> {
                    (__lhs_0_94) -> {
                        self_224
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_48),
                        () -> {
                            (__lhs_0_93) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_91) -> {
                                __lhs_0_92 = self_224;
                                mph_25 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_92);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_25);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_225) -> {
        (fn_23, z_4) -> {
            __helios__common__fold(self_225, (z_5, pair_77) -> {
                fn_23(z_5, __helios__string__from_data(__core__fstPair(pair_77)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_77)))
            }, z_4)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_226) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_226))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_227) -> {
        (fn_24) -> {
            fn_25 = (pair_78) -> {
                fn_24(__helios__string__from_data(__core__fstPair(pair_78)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_78)))
            };
            __helios__common__all(self_227, fn_25)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_228) -> {
        (fn_26) -> {
            __helios__common__all(self_228, (item_12) -> {
                fn_26(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_229) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_229)();
            mph_26 = __module__CapoHelpers__CapoCtx[]__mph(self_229);
            __lhs_0_95 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_95);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_95);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_95);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_95);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_95);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_229)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_26, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_50 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_50),
                        () -> {
                            (__lhs_0_98) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_98);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_26, true))()
                            }
                        },
                        () -> {
                            (__37) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_50)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_26, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_49 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_26, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_49),
                () -> {
                    (__lhs_0_97) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_96) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_49)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_230) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_230, self_230)
            }), "prevent unused var"), __cond_51 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_51),
                () -> {
                    (__lhs_0_105) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_51),
                        () -> {
                            (__lhs_0_104) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_51),
                                () -> {
                                    (__lhs_0_103) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_51),
                                        () -> {
                                            (__lhs_0_102) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_51),
                                                () -> {
                                                    (__lhs_0_101) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_51),
                                                        () -> {
                                                            (__lhs_0_100) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_99) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_51))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_231) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_231)(), __module__CapoHelpers__CapoCtx[]__serialize(self_231)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_27) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_27, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__38) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_269) -> {
        __helios__common__enum_tag_equals(data_269, 1)
    };
    __helios__option[__helios__data]__some__some = (self_232) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_232))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_233) -> {
        (key_20) -> {
            __helios__common__map_get(self_233, __helios__scriptpurpose____to_data(key_20), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_28, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_28);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_53 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_53),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__39) -> {
                            false
                        }
                    }
                )()(__cond_53)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_54 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_54),
                () -> {
                    (__lhs_0_113) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_108) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_108);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_55 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_55),
                            () -> {
                                (__lhs_0_109) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_109);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_56 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_56),
                                        () -> {
                                            (__lhs_0_112) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_56),
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_110) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_56)))
                                }
                            },
                            () -> {
                                (__40) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_55)
                    }
                }
            )()(__cond_54)))
        }(__cond_52 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_52),
            () -> {
                (__lhs_0_107) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_107);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_106) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_52))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_234) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_89 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_27(__helios__bytearray__from_data(__core__fstPair(head_89)), __helios__int__from_data(__core__sndPair(head_89))), recurse_90(recurse_90, __core__tailList__safe(map_31)))
                })()
            };
            recurse_91(recurse_91, self_234)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_235) -> {
        (fn_28) -> {
            recurse_93 = (recurse_92, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_90 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_28(__helios__mintingpolicyhash__from_data(__core__fstPair(head_90)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_90))), recurse_92(recurse_92, __core__tailList__safe(map_32)))
                })()
            };
            recurse_93(recurse_93, self_235)
        }
    };
    __helios__option[__helios__int]__none____is = (data_270) -> {
        __helios__common__enum_tag_equals(data_270, 1)
    };
    __helios__option[__helios__int]__some__some = (self_236) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_236))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_237) -> {
        (key_21) -> {
            __helios__common__map_get(self_237, __helios__bytearray____to_data(key_21), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_238) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_95 = (recurse_94, self_239) -> {
                __core__chooseList(self_239, () -> {
                    self_239
                }, () -> {
                    head_91 = __core__headList__safe(self_239);
                    tail_4 = __core__tailList__safe(self_239);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_91)),
                        () -> {
                            recurse_94(recurse_94, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_91, recurse_94(recurse_94, tail_4))
                        }
                    )()
                })()
            };
            recurse_95(recurse_95, self_238)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_240, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_240), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_241) -> {
        (comp_4) -> {
            __helios__common__sort(self_241, (a_20, b_18) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_20)), __helios__int__from_data(__core__sndPair(a_20)), __helios__bytearray__from_data(__core__fstPair(b_18)), __helios__int__from_data(__core__sndPair(b_18)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_242) -> {
        recurse_97 = (recurse_96, lst_25) -> {
            __core__chooseList(lst_25, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_96(recurse_96, __core__tailList__safe(lst_25)))
            })()
        };
        recurse_97(recurse_97, self_242)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_243) -> {
        (fn_29) -> {
            __helios__common__map(self_243, (item_13) -> {
                __helios__value____to_data(fn_29(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_29, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_114 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_29, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_29, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_29, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_29)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_29)();
                valStr = __helios__value__show(valueMinted)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_29))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_29);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_19, __41) -> {
                    __helios__mintingpolicyhash____neq(b_19, mph_29)
                })))())))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_29),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_29))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_4, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_57 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_4);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_57),
                                                () -> {
                                                    (__lhs_0_116) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_115) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_115);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_57)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8(tokenName_4)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __helios__list[__helios__string]__is_valid_data_internal = (lst_26) -> {
        recurse_99 = (recurse_98, lst_27) -> {
            __core__chooseList(lst_27, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__headList__safe(lst_27)),
                    () -> {
                        recurse_98(recurse_98, __core__tailList__safe(lst_27))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_99(recurse_99, lst_26)
    };
    __helios__list[__helios__string]__is_valid_data = (data_271) -> {
        __core__chooseData(data_271, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__string]__is_valid_data_internal(__core__unListData__safe(data_271))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainData__S3DomainData[]__is_valid_data = (data_272) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_272, __core__bData(#6b65794d657473), __helios__list[__helios__string]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_272, __core__bData(#703244727673), __helios__list[__helios__string]__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_272, __core__bData(#70447276), __helios__string__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_272, __core__bData(#64657363), __helios__string__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_272, __core__bData(#6e616d65), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_272, __core__bData(#747065), __helios__string__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_272, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid S3DomainData data", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid S3DomainData data", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid S3DomainData data", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid S3DomainData data", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid S3DomainData data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid S3DomainData data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid S3DomainData data", () -> {
                    false
                })()
            }
        )()
    };
    __module__S3DomainData__S3DomainData[]____eq = (a_21, b_20) -> {
        aFields = __core__unMapData(a_21);
        bFields = __core__unMapData(b_20);
        __core__ifThenElse(
            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #406964), __helios__common__mStruct_field_internal(bFields, #406964)),
            () -> {
                __core__ifThenElse(
                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #747065), __helios__common__mStruct_field_internal(bFields, #747065)),
                    () -> {
                        __core__ifThenElse(
                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e616d65), __helios__common__mStruct_field_internal(bFields, #6e616d65)),
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #64657363), __helios__common__mStruct_field_internal(bFields, #64657363)),
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #70447276), __helios__common__mStruct_field_internal(bFields, #70447276)),
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #703244727673), __helios__common__mStruct_field_internal(bFields, #703244727673)),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6b65794d657473), __helios__common__mStruct_field_internal(bFields, #6b65794d657473)),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            },
            () -> {
                false
            }
        )()
    };
    __module__S3DomainData__S3DomainData[]__from_data = (data_273) -> {
        ignore_18 = __core__ifThenElse(
            __module__S3DomainData__S3DomainData[]__is_valid_data(data_273),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid S3DomainData data", ())
            }
        )();
        data_273
    };
    __module__S3DomainData__S3DomainData[]__validate = (self_244) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__S3DomainData__S3DomainData[]____eq(self_244, self_244)
            }), "no way"), true)
        }
    };
    __module__S3DomainPolicy__DelegateDatum[]__is_valid_data = (__module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_274) -> {
            __core__ifThenElse(
                __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_274),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_274),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_274),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__S3DomainPolicy__DelegateDatum[]__from_data = (__module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_275) -> {
            ignore_19 = __core__ifThenElse(
                __module__S3DomainPolicy__DelegateDatum[]__is_valid_data(__module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_275),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_275
        }
    };
    __module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_276) -> {
        __core__chooseData(data_276, () -> {
            pair_79 = __core__unConstrData__safe(data_276);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_277 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_277, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_160 = __core__unListData__safe(data_277);
                        __core__chooseList(fields_160, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_160);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_92),
                                () -> {
                                    fields_161 = __core__tailList__safe(fields_160);
                                    __core__chooseList(fields_161, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_161);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_162 = __core__tailList__safe(fields_161);
                                                __core__chooseList(fields_162, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_162);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_163 = __core__tailList__safe(fields_162);
                                                            __core__chooseList(fields_163, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__S3DomainPolicy__DelegateDatum[]__IsDelegation____is = (data_278) -> {
        __helios__common__enum_tag_equals(data_278, 1)
    };
    __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_80 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 1),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_164 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_164, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_164);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_95),
                                () -> {
                                    fields_165 = __core__tailList__safe(fields_164);
                                    __core__chooseList(fields_165, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__dd = (self_245) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_245))
    };
    __module__S3DomainPolicy__DelegateDatum[]__capoStoredData____is = (data_281) -> {
        __helios__common__enum_tag_equals(data_281, 2)
    };
    __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_282) -> {
        __core__chooseData(data_282, () -> {
            pair_81 = __core__unConstrData__safe(data_282);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 2),
                () -> {
                    data_283 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_283, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_283);
                        __core__chooseList(fields_166, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_166);
                            __core__ifThenElse(
                                __module__S3DomainData__S3DomainData[]__is_valid_data(head_96),
                                () -> {
                                    fields_167 = __core__tailList__safe(fields_166);
                                    __core__chooseList(fields_167, () -> {
                                        false
                                    }, () -> {
                                        head_97 = __core__headList__safe(fields_167);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_97),
                                            () -> {
                                                fields_168 = __core__tailList__safe(fields_167);
                                                __core__chooseList(fields_168, () -> {
                                                    false
                                                }, () -> {
                                                    head_98 = __core__headList__safe(fields_168);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_98),
                                                        () -> {
                                                            fields_169 = __core__tailList__safe(fields_168);
                                                            __core__chooseList(fields_169, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__MintingActivity[]__is_valid_data = (__module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_284) -> {
            __core__ifThenElse(
                __module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_284),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DomainPolicy__MintingActivity[]__from_data = (__module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_285) -> {
            ignore_20 = __core__ifThenElse(
                __module__S3DomainPolicy__MintingActivity[]__is_valid_data(__module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_285),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_285
        }
    };
    __module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_82 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_99),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__MintingActivity[]__CreatingRecord__seed = (self_246) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_246))
    };
    __module__S3DomainPolicy__SpendingActivity[]__is_valid_data = (__module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DomainPolicy__SpendingActivity[]__from_data = (__module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_289) -> {
            ignore_21 = __core__ifThenElse(
                __module__S3DomainPolicy__SpendingActivity[]__is_valid_data(__module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_289),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_289
        }
    };
    __module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_290) -> {
        __core__chooseData(data_290, () -> {
            pair_83 = __core__unConstrData__safe(data_290);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 0),
                () -> {
                    data_291 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_291, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_291);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_100),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__id = (self_247) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_247))
    };
    __module__S3DomainPolicy__BurningActivity[]__is_valid_data = (__module__S3DomainPolicy__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_292) -> {
            __core__ifThenElse(
                __module__S3DomainPolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_292),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DomainPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_293) -> {
        __core__chooseData(data_293, () -> {
            pair_84 = __core__unConstrData__safe(data_293);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 0),
                () -> {
                    data_294 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_294, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_294);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_101),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__is_valid_data = (__module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_295) -> {
            __core__ifThenElse(
                __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_295),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_295),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_295),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_295),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_295),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_295),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_295),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_295),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_295),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__S3DomainPolicy__DelegateActivity[]__from_data = (__module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_296) -> {
            ignore_22 = __core__ifThenElse(
                __module__S3DomainPolicy__DelegateActivity[]__is_valid_data(__module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_296),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_296
        }
    };
    __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_297) -> {
        __helios__common__enum_tag_equals(data_297, 0)
    };
    __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_298) -> {
        __core__chooseData(data_298, () -> {
            pair_85 = __core__unConstrData__safe(data_298);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 0),
                () -> {
                    data_299 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_299, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_299);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_102),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_248) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_248))
    };
    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_300) -> {
        __helios__common__enum_tag_equals(data_300, 1)
    };
    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_301) -> {
        __core__chooseData(data_301, () -> {
            pair_86 = __core__unConstrData__safe(data_301);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 1),
                () -> {
                    data_302 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_302, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_302);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_103),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_249) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_249))
    };
    __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities____is = (data_303) -> {
        __helios__common__enum_tag_equals(data_303, 2)
    };
    __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_304) -> {
        __core__chooseData(data_304, () -> {
            pair_87 = __core__unConstrData__safe(data_304);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 2),
                () -> {
                    data_305 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_305, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_305);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_104 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__S3DomainPolicy__SpendingActivity[]__is_valid_data(__module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_104),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__activity = (self_250) -> {
        __module__S3DomainPolicy__SpendingActivity[]__from_data(__module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_250))
    };
    __module__S3DomainPolicy__DelegateActivity[]__MintingActivities____is = (data_306) -> {
        __helios__common__enum_tag_equals(data_306, 3)
    };
    __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_307) -> {
        __core__chooseData(data_307, () -> {
            pair_88 = __core__unConstrData__safe(data_307);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 3),
                () -> {
                    data_308 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_308, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_308);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __module__S3DomainPolicy__MintingActivity[]__is_valid_data(__module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_105),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__activity = (self_251) -> {
        __module__S3DomainPolicy__MintingActivity[]__from_data(__module__S3DomainPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_251))
    };
    __module__S3DomainPolicy__DelegateActivity[]__BurningActivities____is = (data_309) -> {
        __helios__common__enum_tag_equals(data_309, 4)
    };
    __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_310) -> {
        __core__chooseData(data_310, () -> {
            pair_89 = __core__unConstrData__safe(data_310);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_89), 4),
                () -> {
                    data_311 = __core__listData(__core__sndPair(pair_89));
                    __core__chooseData(data_311, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_184 = __core__unListData__safe(data_311);
                        __core__chooseList(fields_184, () -> {
                            false
                        }, () -> {
                            head_106 = __core__headList__safe(fields_184);
                            __core__ifThenElse(
                                __module__S3DomainPolicy__BurningActivity[]__is_valid_data(__module__S3DomainPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_106),
                                () -> {
                                    fields_185 = __core__tailList__safe(fields_184);
                                    __core__chooseList(fields_185, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_312) -> {
        __helios__common__enum_tag_equals(data_312, 5)
    };
    __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_313) -> {
        __core__chooseData(data_313, () -> {
            pair_90 = __core__unConstrData__safe(data_313);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_90), 5),
                () -> {
                    data_314 = __core__listData(__core__sndPair(pair_90));
                    __core__chooseData(data_314, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_314);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_107),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_187);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_108),
                                            () -> {
                                                fields_188 = __core__tailList__safe(fields_187);
                                                __core__chooseList(fields_188, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_252) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_252))
    };
    __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_253) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_253))
    };
    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_315) -> {
        __helios__common__enum_tag_equals(data_315, 6)
    };
    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_316) -> {
        __core__chooseData(data_316, () -> {
            pair_91 = __core__unConstrData__safe(data_316);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_91), 6),
                () -> {
                    data_317 = __core__listData(__core__sndPair(pair_91));
                    __core__chooseData(data_317, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_189 = __core__unListData__safe(data_317);
                        __core__chooseList(fields_189, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_189);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_109),
                                () -> {
                                    fields_190 = __core__tailList__safe(fields_189);
                                    __core__chooseList(fields_190, () -> {
                                        false
                                    }, () -> {
                                        head_110 = __core__headList__safe(fields_190);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_110),
                                            () -> {
                                                fields_191 = __core__tailList__safe(fields_190);
                                                __core__chooseList(fields_191, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_254) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_254))
    };
    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_255) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_255))
    };
    __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_318) -> {
        __helios__common__enum_tag_equals(data_318, 7)
    };
    __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_319) -> {
        __core__chooseData(data_319, () -> {
            pair_92 = __core__unConstrData__safe(data_319);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_92), 7),
                () -> {
                    data_320 = __core__listData(__core__sndPair(pair_92));
                    __core__chooseData(data_320, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_192 = __core__unListData__safe(data_320);
                        __core__chooseList(fields_192, () -> {
                            false
                        }, () -> {
                            head_111 = __core__headList__safe(fields_192);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_111),
                                () -> {
                                    fields_193 = __core__tailList__safe(fields_192);
                                    __core__chooseList(fields_193, () -> {
                                        false
                                    }, () -> {
                                        head_112 = __core__headList__safe(fields_193);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_112),
                                            () -> {
                                                fields_194 = __core__tailList__safe(fields_193);
                                                __core__chooseList(fields_194, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_256) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_256))
    };
    __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_321) -> {
        __helios__common__enum_tag_equals(data_321, 8)
    };
    __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_322) -> {
        __core__chooseData(data_322, () -> {
            pair_93 = __core__unConstrData__safe(data_322);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_93), 8),
                () -> {
                    data_323 = __core__listData(__core__sndPair(pair_93));
                    __core__chooseData(data_323, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_195 = __core__unListData__safe(data_323);
                        __core__chooseList(fields_195, () -> {
                            false
                        }, () -> {
                            head_113 = __core__headList__safe(fields_195);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_113),
                                () -> {
                                    fields_196 = __core__tailList__safe(fields_195);
                                    __core__chooseList(fields_196, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_257) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_257))
    };
    __helios__list[__helios__txinput]__for_each = (self_258) -> {
        (fn_30) -> {
            recurse_101 = (recurse_100, lst_28) -> {
                __core__chooseList(lst_28, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_30(__helios__txinput__from_data(__core__headList__safe(lst_28))), recurse_100(recurse_100, __core__tailList__safe(lst_28)))
                })()
            };
            recurse_101(recurse_101, self_258)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_259) -> {
        (fn_31) -> {
            __helios__common__filter_list(self_259, (item_14) -> {
                fn_31(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__S3DomainPolicy__DelegateActivity[]__additionalDelegateValidation = (self_260) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt val "), __helios__bool__or(() -> {
                __cond_58 = self_260;
                __core__ifThenElse(
                    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_58),
                    () -> {
                        (__lhs_0_125) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_58),
                            () -> {
                                (__lhs_0_124) -> {
                                    __helios__error("unreachable in a dgDataPolicy")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__S3DomainPolicy__DelegateActivity[]__MintingActivities____is(__cond_58),
                                    () -> {
                                        (__lhs_0_121) -> {
                                            VMA = __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_121);
                                            __cond_60 = VMA;
                                            __lhs_0_122 = __cond_60;
                                            seed_3 = __module__S3DomainPolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_122);
                                            __core__chooseUnit(__helios__print("registering a new s3domain..."), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the operator must provide a valid minting seed", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            mintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__S3DomainPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("s3dom"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ());
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), newRecData = __module__CapoHelpers__CapoCtx[]__creatingDgData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx)(true, mkTn("s3dom"), false, ());
                                            __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData)();
                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("send the fee to Treasury w/ acctg info"), reg = __module__S3DomainData__S3DomainData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(newRecData)());
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), __helios__bool__and(() -> {
                                                __module__S3DomainData__S3DomainData[]__validate(reg)()
                                            }, () -> {
                                                mintingOk
                                            }))))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities____is(__cond_58),
                                            () -> {
                                                (__lhs_0_118) -> {
                                                    VSA = __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_118);
                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __cond_59 = VSA;
                                                    __lhs_0_119 = __cond_59;
                                                    recId_8 = __module__S3DomainPolicy__SpendingActivity[]__UpdatingRecord__id(__lhs_0_119);
                                                    __core__chooseUnit(__helios__print("updating the registration details for a single s3domain..."), hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "s3dom", true, recId_8);
                                                    hasRecOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("s3dom", true, recId_8);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasRecInput))((utxo_6) -> {
                                                        __lhs_0_120 = __module__S3DomainData__S3DomainData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasRecOutput);
                                                        updatedData = __module__S3DomainData__S3DomainData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the lastHeartbeat must be extended by settings.expectedHeartbeatInterval", false, ()), __core__chooseUnit(__helios__assert(__module__S3DomainData__S3DomainData[]__validate(updatedData)(), "<-- that throws; this can't."), ()))
                                                    }), true)))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__S3DomainPolicy__DelegateActivity[]__BurningActivities____is(__cond_58),
                                                    () -> {
                                                        (__lhs_0_117) -> {
                                                            __helios__error("no burn activity here yet")
                                                        }
                                                    },
                                                    () -> {
                                                        (__42) -> {
                                                            false
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_58)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__S3DomainPolicy__DelegateActivity[]__otherDatumValidation = (self_261) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_61 = self_261;
            __core__ifThenElse(
                __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_61),
                () -> {
                    (__lhs_0_127) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_61),
                        () -> {
                            (__lhs_0_126) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__43) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_61)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#5333446f6d61696e506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_262) -> {
        (fn_32) -> {
            __helios__common__all(self_262, (item_15) -> {
                fn_32(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_263, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_263), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__option[__helios__assetclass]__unwrap = (self_264) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_264))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_265) -> {
        (fn_33) -> {
            __helios__common__all(self_265, (item_16) -> {
                fn_33(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_266) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_266))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_267) -> {
        (fn_34, a0, b0_1) -> {
            __helios__common__fold(self_267, (prev_4, item_17) -> {
                prev_4((a_22, b_21) -> {
                    fn_34(a_22, b_21, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
                })
            }, (callback_9) -> {
                callback_9(a0, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_268) -> {
        __helios__common__length(self_268)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_269) -> {
        head_114 = __core__headList(self_269);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_114)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_114)))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_270) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_270))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_271) -> {
        (key_24) -> {
            key_25 = __helios__string____to_data(key_24);
            recurse_103 = (recurse_102, self_272) -> {
                __core__chooseList(self_272, () -> {
                    self_272
                }, () -> {
                    head_115 = __core__headList__safe(self_272);
                    tail_5 = __core__tailList__safe(self_272);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_115)),
                        () -> {
                            recurse_102(recurse_102, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_115, recurse_102(recurse_102, tail_5))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_271)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_273, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_273), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_274) -> {
        () -> {
            recurse_105 = (recurse_104, self_275, first) -> {
                __core__chooseList(self_275, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_116 = __core__headList__safe(self_275);
                    key_data = __core__fstPair(head_116);
                    key_26 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_116);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_26((valid_7, key_27) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_27)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_104(recurse_104, __core__tailList__safe(self_275), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_105(recurse_105, self_274, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_276) -> {
        (fn_35, a0_1) -> {
            __helios__common__fold(self_276, (prev_5, item_18) -> {
                fn_35(prev_5, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
            }, a0_1)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_277) -> {
        (key_28) -> {
            key_29 = __helios__bytearray____to_data(key_28);
            recurse_107 = (recurse_106, self_278) -> {
                __core__chooseList(self_278, () -> {
                    self_278
                }, () -> {
                    head_117 = __core__headList__safe(self_278);
                    tail_6 = __core__tailList__safe(self_278);
                    __core__ifThenElse(
                        __core__equalsData(key_29, __core__fstPair(head_117)),
                        () -> {
                            recurse_106(recurse_106, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_117, recurse_106(recurse_106, tail_6))
                        }
                    )()
                })()
            };
            recurse_107(recurse_107, self_277)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_324) -> {
        __helios__common__enum_tag_equals(data_324, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_279) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_279))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_280) -> {
        (key_30) -> {
            __helios__common__map_get(self_280, __helios__mintingpolicyhash____to_data(key_30), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__unwrap = (self_281) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_281))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_282) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_282))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), __core__chooseUnit(__helios__assert(__helios__int____geq(__module__BasicDelegate__rev, 1), "rev must be at least 1"), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_62 = mdd;
            __core__ifThenElse(
                __module__S3DomainPolicy__DelegateDatum[]__capoStoredData____is(__cond_62),
                () -> {
                    (__lhs_0_265) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DomainPolicy__DelegateDatum[]__IsDelegation____is(__cond_62),
                        () -> {
                            (isD) -> {
                                dd = __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__dd(isD);
                                showMyTokens = __module__CapoHelpers__mkTokenShow(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                myDgTkn = showMyTokens(__helios__txinput__value(__helios__scriptcontext__get_current_input()));
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__S3DomainPolicy__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__S3DomainPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_64 = activity_3;
                                __core__ifThenElse(
                                    __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_64),
                                    () -> {
                                        (__lhs_0_243) -> {
                                            activities_2 = __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_243);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                a_23 = __module__S3DomainPolicy__DelegateActivity[]__from_data(__module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                __core__ifThenElse(
                                                    __helios__bool__and(() -> {
                                                        __module__BasicDelegate__isMintDelegate
                                                    }, () -> {
                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                                    }),
                                                    () -> {
                                                        __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_115 = a_23;
                                                        __core__ifThenElse(
                                                            __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_115),
                                                            () -> {
                                                                (__lhs_0_264) -> {
                                                                    __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_115),
                                                                    () -> {
                                                                        (__lhs_0_263) -> {
                                                                            __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_115),
                                                                            () -> {
                                                                                (__lhs_0_262) -> {
                                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_115),
                                                                                    () -> {
                                                                                        (__lhs_0_261) -> {
                                                                                            __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_115),
                                                                                            () -> {
                                                                                                (__lhs_0_260) -> {
                                                                                                    __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_115),
                                                                                                    () -> {
                                                                                                        (__lhs_0_259) -> {
                                                                                                            __helios__error("multi:multi: nesting not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__80) -> {
                                                                                                            __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_115)))
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __module__BasicDelegate__isSpendDelegate
                                                            }, () -> {
                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                                            }),
                                                            () -> {
                                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_114 = a_23;
                                                                __core__ifThenElse(
                                                                    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_114),
                                                                    () -> {
                                                                        (__lhs_0_258) -> {
                                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                __module__BasicDelegate__isSpendDelegate
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_114),
                                                                            () -> {
                                                                                (__lhs_0_257) -> {
                                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_114),
                                                                                    () -> {
                                                                                        (__lhs_0_256) -> {
                                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                                                                            () -> {
                                                                                                (__lhs_0_255) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                                                                                    () -> {
                                                                                                        (__lhs_0_254) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_114),
                                                                                                            () -> {
                                                                                                                (__lhs_0_253) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__79) -> {
                                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_114)))
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                    }, () -> {
                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                    }), "ack! delegated-data policy can't be a mint/spend delegate"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_113 = a_23;
                                                                    __core__ifThenElse(
                                                                        __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_113),
                                                                        () -> {
                                                                            (__lhs_0_252) -> {
                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_113),
                                                                                () -> {
                                                                                    (__lhs_0_251) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_113),
                                                                                        () -> {
                                                                                            (__lhs_0_250) -> {
                                                                                                __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities____is(__cond_113),
                                                                                                () -> {
                                                                                                    (__lhs_0_249) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__S3DomainPolicy__DelegateActivity[]__MintingActivities____is(__cond_113),
                                                                                                        () -> {
                                                                                                            (__lhs_0_248) -> {
                                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__S3DomainPolicy__DelegateActivity[]__BurningActivities____is(__cond_113),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_247) -> {
                                                                                                                        __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_246) -> {
                                                                                                                                __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_245) -> {
                                                                                                                                        __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_244) -> {
                                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_113)))))
                                                                }()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_64),
                                            () -> {
                                                (__lhs_0_237) -> {
                                                    innerActivity = __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_237);
                                                    __cond_111 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_111),
                                                        () -> {
                                                            (__lhs_0_241) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_241);
                                                                purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_241);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_112 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_112),
                                                                    () -> {
                                                                        (__lhs_0_242) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__78) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_112)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_111),
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        __lhs_0_239 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_111)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_64),
                                                    () -> {
                                                        (__lhs_0_137) -> {
                                                            dCLA = __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_137);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_109),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_236);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_109),
                                                                        () -> {
                                                                            (__lhs_0_234) -> {
                                                                                __cond_110 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_110),
                                                                                    () -> {
                                                                                        (__lhs_0_235) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__77) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_110)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__76) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_109), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_66 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_66),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_230);
                                                                                purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_230);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_107 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_107),
                                                                                    () -> {
                                                                                        (__lhs_0_231) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_108 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)()))(purpose_7);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_108),
                                                                                                () -> {
                                                                                                    (__lhs_0_233) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_232) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_232);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_108))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__75) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_107)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_66),
                                                                                () -> {
                                                                                    (__lhs_0_178) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_179 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_179);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_105 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_105),
                                                                                                () -> {
                                                                                                    (__lhs_0_228) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_106 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_106),
                                                                                                            () -> {
                                                                                                                (__lhs_0_229) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__74) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_106))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__73) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_105), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_104 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_104),
                                                                                                () -> {
                                                                                                    (__lhs_0_227) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_104),
                                                                                                        () -> {
                                                                                                            (__lhs_0_226) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_226);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_226);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_226);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_225) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_225);
                                                                                                                purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_225);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_225);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_104)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })
                                                                                                    }(__cond_93 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_93),
                                                                                                        () -> {
                                                                                                            (__lhs_0_224) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_93),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_198) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_94 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_94),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_199) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_199);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_95 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_95),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_200);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__67) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_95)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__66) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_94)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_96 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_96),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_222) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_103 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_103),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_223) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__72) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_103), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_96),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_203);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_102 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_102),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_221) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_102),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_220) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_102),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__71) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_102), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_101 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_101),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_218) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_101),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_101),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_101),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__70) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_101)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_100 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_100),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_100),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_100),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_100),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_100),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_100),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_100),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_207) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_100)))
                                                                                                                                            }(__cond_98 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_98),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_204);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_99 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_99),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_205);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__69) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_99)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_98))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_201) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_97 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_97),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__68) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_97), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_96))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__65) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_93))
                                                                                                }(__cond_86 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_86),
                                                                                                    () -> {
                                                                                                        (__lhs_0_197) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_86),
                                                                                                            () -> {
                                                                                                                (__lhs_0_181) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_87 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_87),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_189) -> {
                                                                                                                                    __core__chooseUnit(__cond_92 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_92),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_196) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_92),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_92),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_92),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_193) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_92),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_92),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_191) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_92),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__64) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_92), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__61) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_89 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_89),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_184) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_90 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_90),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_186) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_186);
                                                                                                                                                                __lhs_0_187 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_187);
                                                                                                                                                                __cond_91 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_91),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_188);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__63) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_91)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_185) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_90), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__62) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_89)))
                                                                                                                                    }(__cond_88 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_88),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_183) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_182);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_88))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_87)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__60) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_86))
                                                                                            }))))
                                                                                        }(__cond_85 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_85),
                                                                                            () -> {
                                                                                                (__lhs_0_180) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_180);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__59) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_85)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_66),
                                                                                        () -> {
                                                                                            (__lhs_0_177) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_66),
                                                                                                () -> {
                                                                                                    (__lhs_0_154) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange_1) -> {
                                                                                                                    (pdChange_1) -> {
                                                                                                                        (pendingTypeName) -> {
                                                                                                                            __core__chooseUnit(__cond_81 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_81),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_175) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgt-change: Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_84 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_84),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_176) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__58) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_84))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__55) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                            () -> {
                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                () -> {
                                                                                                                                                    ()
                                                                                                                                                }()
                                                                                                                                            }
                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                            __lhs_0_171 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_171);
                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_171);
                                                                                                                                            refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_171);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount_1, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), __core__chooseUnit(__helios__print(__helios__string____add("  -- ME policy link ", __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))())), __core__chooseUnit(__helios__print(__helios__string____add("  -- pdChange policy link ", __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange_1))()))())), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange_1))()), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("     vv @entry: ", CME_key)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy")))
                                                                                                                                            }(__cond_82 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_82),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_173) -> {
                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_173);
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_83 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextManifest))(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_83),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_174) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__57) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_83), idPrefix_6))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_82),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_172) -> {
                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_172);
                                                                                                                                                                idPrefix_5
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__56) -> {
                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_82))))))))
                                                                                                                                        })))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_81), __cond_80 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_80),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_170) -> {
                                                                                                                                        (callback_12) -> {
                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__54) -> {
                                                                                                                                        (callback_11) -> {
                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_80))
                                                                                                                        }(__cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_79),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                    typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_169);
                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_5)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__53) -> {
                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_79))
                                                                                                                    }(__cond_78 = pcChange_1;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_78),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_168) -> {
                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_168);
                                                                                                                                dgtChange_1
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_78))
                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                }))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                        mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                        len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __helios__int____gt(len, 1),
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))()), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                }()
                                                                                                                            }
                                                                                                                        )(), (observedTokenBurn) -> {
                                                                                                                            remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange) -> {
                                                                                                                                    __cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_73),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_159) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_159);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_74 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_74),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__51) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_75),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_165) -> {
                                                                                                                                                                        __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                                                        __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_160);
                                                                                                                                                                        ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                        tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                        mph_31 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                        __cond_76 = mph_31;
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_76),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_164) -> {
                                                                                                                                                                                    __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__52) -> {
                                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_161 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_161);
                                                                                                                                                                                    tnStr_2 = __helios__bytearray__decode_utf8(tn_5)();
                                                                                                                                                                                    __cond_77 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __helios__option[__helios__int]__none____is(__cond_77),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                                                                __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_162) -> {
                                                                                                                                                                                                burningCount = __helios__option[__helios__int]__some__some(__lhs_0_162);
                                                                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __helios__int____neq(__helios__int____sub(0, refCount), burningCount),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            ()
                                                                                                                                                                                                        }()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_77))
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_76)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_75))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_74))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__50) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_73)
                                                                                                                                }(__cond_72 = pcChange;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_72),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_158) -> {
                                                                                                                                            dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_158);
                                                                                                                                            dgtChange
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_157) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_72)))
                                                                                                                            }, observedTokenBurn);
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                        }(__cond_71 = mintThisPolicy;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_71),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_156) -> {
                                                                                                                                    minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_156);
                                                                                                                                    minted
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_155) -> {
                                                                                                                                    __core__mkNilPairData(())
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_71)))))
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )())))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_66),
                                                                                                        () -> {
                                                                                                            (__lhs_0_144) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_144);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_67 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_67),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_153) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_67),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_67),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_146) -> {
                                                                                                                                            key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_146);
                                                                                                                                            tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_146);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_147 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_68 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_68),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_151) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_148) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_148);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_30 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_70 = mph_30;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_70),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_150) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__49) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_70), __cond_69 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_69),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_149) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__48) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_69)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_68), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_67),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_67), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_66),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_143) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_142) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_66)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_65 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_65),
                                                                () -> {
                                                                    (__lhs_0_141) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_65),
                                                                        () -> {
                                                                            (__lhs_0_140) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_65),
                                                                                () -> {
                                                                                    (__lhs_0_139) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_65),
                                                                                        () -> {
                                                                                            (__lhs_0_138) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__46) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_65)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_64),
                                                            () -> {
                                                                (__lhs_0_136) -> {
                                                                    seed_4 = __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_136);
                                                                    dataTypePurpose_1 = __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_136);
                                                                    cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        __module__BasicDelegate__isMintDelegate
                                                                    }, () -> {
                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ())
                                                                    }), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                    tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                    purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                    newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                    __helios__bool__and(() -> {
                                                                        __helios__bool__and(() -> {
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        true
                                                                                    }, () -> {
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                })
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                            })
                                                                        }, () -> {
                                                                            __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                        })
                                                                    }, () -> {
                                                                        __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                    }))))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_64),
                                                                    () -> {
                                                                        (__lhs_0_135) -> {
                                                                            dDataType = __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_135);
                                                                            recId_10 = __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_135);
                                                                            cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_10))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_10);
                                                                            __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                __helios__string____eq("settings", dDataType),
                                                                                () -> {
                                                                                    curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                        false,
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __helios__bytearray____eq(curSettingsId, recId_10),
                                                                                                () -> {
                                                                                                    __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        recIdStr_4 = __helios__bytearray__decode_utf8(recId_10)();
                                                                                                        curSettingsIdStr = __helios__bytearray__decode_utf8(curSettingsId)();
                                                                                                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                    }()
                                                                                                }
                                                                                            )()
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )())
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        ()
                                                                                    }()
                                                                                }
                                                                            )(), __helios__bool__and(() -> {
                                                                                __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_2)(recId_10, dDataType))("  -- did output delegated data? ")
                                                                            }, () -> {
                                                                                true
                                                                            }))))))))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_64),
                                                                            () -> {
                                                                                (__lhs_0_133) -> {
                                                                                    recId_9 = __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_133);
                                                                                    cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_134 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_9);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), __helios__bool__and(() -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ())
                                                                                    }, () -> {
                                                                                        false
                                                                                    }))))))))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities____is(__cond_64),
                                                                                    () -> {
                                                                                        (__lhs_0_132) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DomainPolicy__DelegateActivity[]__MintingActivities____is(__cond_64),
                                                                                            () -> {
                                                                                                (__lhs_0_131) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_130) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_64)))
                            }
                        },
                        () -> {
                            (__44) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_63 = activity_3;
                                __core__ifThenElse(
                                    __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_63),
                                    () -> {
                                        (__lhs_0_129) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_63),
                                            () -> {
                                                (__lhs_0_128) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__45) -> {
                                                    __module__S3DomainPolicy__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_63)
                            }
                        }
                    )()
                }
            )()(__cond_62))))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__S3DomainPolicy__DelegateDatum[]__from_data(__module__S3DomainPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__S3DomainPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__S3DomainPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__S3DomainPolicy__DelegateActivity[]__from_data(__module__S3DomainPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__S3DomainPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/s3/S3Domain/S3DomainPolicy.hl", "src/delegation/CapoDelegateHelpers.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f18670019052508186b0019053e0818850119053b0418860119053b0419012c02190122181f19012e021901261419013b02190133181f1902750219015e181b190324001905ab181e19038402190165182019038902190165181c1903cd001906a2081903f6001906ab1833190820011902131824190ecb01190397183019110e011903d518201912ee0119035e18321913000119035d18521913130119035c184e1914360019056a182019148901190432183a19149101190431184f19154f011901f6182419155d011901f8182b191563011901f8182719157c011901db1821191591011901db18211915a6011901db18211915bb011901db18211915d0011901db18211915e5011901db18211915ed011901db18211915f0001904c209191618011901ad182719165b011904bc1419166d011904bd181f191673011904bd181b19168200190256091916a800190260081916b10019026018271916b20019026018271916c20019026f111916e700190264183819170f00190267184319174d001902741852191755001901de184e191756001901de184e19176a001902761019176b001902a811191773001901de184e191774001901de184e191787001902ad1119178f001901de184e191790001901de184e1917b90019027b181d1917ce00190281181d1917e300190289181d19181b00190291184419184300190294185019185c0019029b185719187b001902b1183119187f001901d008191881001901cf09191918001902f31827191927001902f4182e191954001902df1119195e001901de184e19195f001901de184e191a1c001902e41847191a1f001902e81832191a8a001902ee182d191bb203190113181d191c3c011904c3181c191c6a011904c3181c191c93011904d51845191ca8001904500b191ca9001904500b191cb700190452184c191cfc001906331833191d27011904f814191d51011904f814191d71011904f814191dbb011904bc1831191e2c001882181c191e3c00188508191e8900188012191f5700187c16191f7a00187b1829191f94001876171920f9041901b9182e1920fa041901b9182e1920fc041901ba0c19210a041901be183919210b041901be183919213204181f0219213304181f0219215304182016192196041901d618371923ca00190189184b1923ec00190189184d19240a0419015e183419250804190128181b192554001906eb081925cd001906f31419260b00190167184b19263c00190167184d19264f001906c2081926cb001906cd18461926cc001906cd18251927dd00190595181f1928550019059618221929450019052f0c1929b40019050c09192a940019042215192a950019042215192bfe0319013f10192dee05183204192def05183204192e17051832181aff", "variableNames": "b9049500675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046a5f5f636f6d6d6f6e3132066a5f5f636f6d6d6f6e313308745f5f68656c696f735f5f76616c75655f5f6e65770a78195f5f68656c696f735f5f6173736574636c6173735f5f6e65770c78195f5f68656c696f735f5f6279746561727261795f5f73686f770e745f5f68656c696f735f5f74785f5f6d696e74656410781b5f5f68656c696f735f5f736372697074636f6e746578745f5f74781278255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e64657814765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c6416735f5f68656c696f735f5f696e745f5f73686f771818755f5f68656c696f735f5f76616c75655f5f73686f77181a78205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f7365181c782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e707574181e78195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f676574182078185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e6774681822755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c182478255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f341826781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e65182878185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572182a78205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c696379182c78185f5f68656c696f735f5f76616c75655f5f69735f7a65726f182e781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c696379183078225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e741832755f5f68656c696f735f5f636f6d6d6f6e5f5f616e79183478185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e6361741836781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b6579731838781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d6170183a765f5f68656c696f735f5f76616c75655f5f5f5f616464183c78195f5f68656c696f735f5f76616c75655f5f6765745f73616665183e781a5f5f68656c696f735f5f7478696e7075745f5f616464726573731840781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f6279184278215f5f68656c696f735f5f7265616c5f5f726f756e645f63616c635f726573756c741844781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c641846781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f736166651848646d6b5476184a78285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e64184c756d75737446696e64496e70757452656465656d6572184e782f5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f7479706518507066726f6d436970363857726170706572185278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d65185478455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f6964507265666978185678495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69645072656669781858782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e185a782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f7574707574185c78635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c746572185e78415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b18607544674461746144657461696c733a3a6f75747075741862781b4361706f4374783a3a6765744368617274657252656465656d6572186478545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f736166651866781b4361706f4374783a3a6e6f77416374696e6741734d696e744467741868781c4361706f4374783a3a6e6f77416374696e6741735370656e64446774186a774361706f4374783a3a6765744368617274657244617461186c781b4361706f4374783a3a6765744e6578744368617274657244617461186e704361706f4374783a3a61646472657373187078214361706f4374783a3a6d6b44656c656761746564446174615072656469636174651872781a4361706f4374783a3a64656c65676174656454784f7574707574187478194361706f4374783a3a7769746843686172746572496e7075741876774361706f4374783a3a776974684368617274657252656618786e6d6b557574546e466163746f7279187a783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f65616368187c783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f73616665187e78365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f727418807276616c69646174655575744d696e74696e67188278525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c6574651884646d61696e1896781d5f5f6d6f64756c655f5f426173696344656c65676174655f5f6d61696e1897636d64641898686163746976697479189a695f5f636f6d6d6f6e3618a86b5f5f6c68735f305f32363518b76369734418b96a5f5f636f6d6d6f6e313418bb6a5f5f636f6d6d6f6e313518bd6a5f5f636f6d6d6f6e313618bf6a5f5f636f6d6d6f6e343018c16a5f5f636f6d6d6f6e343218c36a5f5f636f6d6d6f6e343318c5676d794467546b6e18c7781b636865636b4e6f6e44656c6567617465644163746976697469657318d866636374785f3718f86b5f5f6c68735f305f31323519010d6b5f5f6c68735f305f313234190123695f5f636f6d6d6f6e321901256a5f5f636f6d6d6f6e33381901276a5f5f636f6d6d6f6e33391901286b5f5f6c68735f305f31323119012a63564d4119012c66736565645f3319012e646d6b546e190130696d696e74696e674f6b19013664636f6e641901396873656c665f32333119013f6a6e6577526563446174611901416b5f5f6c68735f305f3132331901436372656719014964636f6e6419015e6673656c665f3219016a6673656c665f3219017f6673656c665f3219018b6673656c665f3219019d695f5f636f6e645f32391901ba6a5f5f6c68735f305f35301901c6645f5f32391901cc6773656c665f34341901e46c726563496442797465735f311901e6686f75747075745f321901e8666d70685f32311902686b5f5f6c68735f305f31313819026a6356534119027064636f6e641902736873656c665f3233311902796772656349645f3819027b6b686173526563496e70757419027d6c6861735265634f75747075741902836873656c665f3235381902856a726563757273655f393719028b6a726563757273655f393619028c666c73745f323619029d6b5f5f6c68735f305f31323019029f6b757064617465645574786f1902a16b75706461746564446174611902ce6773656c665f34341902f86773656c665f353019030e6a6361706f416464725f3219030f683c61737369676e3e19032668646174615f31353919033a6a5f5f6c68735f305f373519033c63785f3819036a645f5f33351903b46b5f5f6c68735f305f3131371903b7645f5f34321903cb6873656c665f3232321903cd69636861727465725f311903cf6a5f5f636f6d6d6f6e31391903d16a5f5f636f6d6d6f6e32301903df6a5f5f6c68735f305f38341903ee6a5f5f6c68735f305f38331903f16a5f5f6c68735f305f37391903f3666d70685f32331903f56b6368617274657241635f331903f7695f5f636f6e645f343519040b6a5f5f6c68735f305f38321904106a5f5f6c68735f305f38311904126d636861727465725574786f5f3219041467646174756d5f3419043468646174615f31333619043d6773656c665f34341904686873656c665f31333719046d667478696e5f3519046f63615f331904806773656c665f32391904e36b5f5f6c68735f305f3234331904e56c616374697669746965735f321904e766636374785f361904ec6b72617741637469766974791905006b5f5f6c68735f305f3235321905156b5f5f6c68735f305f32353119052a6b5f5f6c68735f305f32353019053f6b5f5f6c68735f305f32343919055a6b5f5f6c68735f305f3234381905756b5f5f6c68735f305f32343719058a6b5f5f6c68735f305f32343619059f6b5f5f6c68735f305f3234351905a26b5f5f6c68735f305f3234341905ce6b5f5f6c68735f305f3233371905d06d696e6e657241637469766974791905e56a5f5f636f6d6d6f6e33331905e76a5f5f636f6d6d6f6e33341905e96a5f5f636f6d6d6f6e33351905ea6b5f5f6c68735f305f3234311905ec66736565645f391905ee69707572706f73655f381905f0726f746865724d696e74656456616c75655f321905f267746e5374725f331905f466636374785f351905f67169735570646174696e67436861727465721905f86b69734d696e74696e674f6b19061d6a5f5f636f6e645f3131321906316b5f5f6c68735f305f323432190634645f5f3738190651616419068c6b5f5f6c68735f305f3234301906926773656c665f31301906936c6173736574436c6173735f311906956a5f5f636f6d6d6f6e33361906976a5f5f636f6d6d6f6e3337190699656d70685f3219069b6b746f6b656e4e616d655f3119069d676f757465725f311906a367696e6e65725f311906a4656d61705f311906d7656f757465721906d865696e6e65721906d9636d61701907366b5f5f6c68735f305f3233381907576a5f5f636f6d6d6f6e34311907586b5f5f6c68735f305f31333719075a6464434c4119075c66636374785f341907626a5f5f636f6e645f3130391907646a5f5f636f6d6d6f6e33321907726b5f5f6c68735f305f3233361907746463434c4119079b6b5f5f6c68735f305f3233341907af6b5f5f6c68735f305f3233351907b2645f5f37371907b6645f5f37361907c46a6e6565646564526f6c651907c66d6d7943757272656e74526f6c651907e06b5f5f6c68735f305f3233301907e266736565645f381907e469707572706f73655f371907e6666d6b546e5f311907fa6b5f5f6c68735f305f3233311908226a5f5f636f6e645f3130381908366b5f5f6c68735f305f3233331908396b5f5f6c68735f305f32333219083b696467744c696e6b5f3319084164636f6e6419085161641908716873656c665f32303719087d63785f3619088b6873656c665f3136341908a4645f5f37351908ab61641908db6b5f5f6c68735f305f3137381908dd6d63686172746572446174615f341908df695f5f636f6d6d6f6e301908e1716e65787443686172746572446174615f321908e36e6e6578744368616e67654c6973741908e5696e65774368616e67651908e76b5f5f6c68735f305f3137391908e96b5f5f6c68735f305f305f321908eb6a5f5f636f6d6d6f6e32351908ed66616374696f6e1908ef695f5f636f6d6d6f6e341908f166726f6c655f321908f3695f5f636f6d6d6f6e331908f5684f6467744c696e6b1908f76e6e6577446774526f6c654e616d651909056b5f5f6c68735f305f323238190908645f5f373319091064636f6e6419091d6873656c665f3236331909356b5f5f6c68735f305f32323719094a6b5f5f6c68735f305f32323619094c6a5f5f636f6d6d6f6e323819094e66736565645f3719095069707572706f73655f361909526a69645072656669785f391909536b63616c6c6261636b5f313419095f61641909786b5f5f6c68735f305f32323519097a66736565645f3619097c69707572706f73655f3519097e6a69645072656669785f3819097f6b63616c6c6261636b5f313319098b61641909a966736565645f351909aa69707572706f73655f341909ab7570656e64696e67416374696f6e49645072656669781909ad781c706f737369626c654d696e74446774566572696669636174696f6e731909af781a6f74686572506f737369626c65566572696669636174696f6e731909ce6b5f5f6c68735f305f3232341909e36b5f5f6c68735f305f3139381909e56f69734e6f74414475706c69636174651909f6766578697374696e67526f6c65456e7472794d617962651909f8781c706f737369626c655265706c6163656d656e744973436f7272656374190a176b5f5f6c68735f305f323232190a2f6b5f5f6c68735f305f323233190a32645f5f3732190a4a6a5f5f636f6d6d6f6e3236190a4c6a5f5f636f6d6d6f6e3237190a4e6a5f5f636f6d6d6f6e3239190a4f6b5f5f6c68735f305f323033190a516b7265706c61636573446774190a5f6b5f5f6c68735f305f323231190a6e6b5f5f6c68735f305f323230190a7d6b5f5f6c68735f305f323139190a80645f5f3731190a84716578697374696e674467744c696e6b5f31190a866d6578697374696e674467546b6e190a8c64636f6e64190ab46b5f5f6c68735f305f323134190ab666736f6d655f34190ad56b5f5f6c68735f305f323133190ad766736f6d655f34190afb6b5f5f6c68735f305f323132190afd66736f6d655f34190b1a6b5f5f6c68735f305f323131190b296b5f5f6c68735f305f323130190b346b5f5f6c68735f305f323039190b436b5f5f6c68735f305f323038190b466b5f5f6c68735f305f323037190b5c6b5f5f6c68735f305f323036190b5f6b5f5f6c68735f305f323034190b616b5f5f6c68735f305f305f34190b636b656e747279547970655f32190b776873656c665f313533190b85645f5f3639190bb96b5f5f6c68735f305f323031190bcf6a70644368616e67655f32190be36b5f5f6c68735f305f313939190be56b5f5f6c68735f305f305f33190be76b70656e64696e67526f6c65190bfb6b5f5f6c68735f305f323030190bfd6f6368616e67696e674467744e616d65190c0e645f5f3637190c25645f5f3636190c29645f5f3635190c3f6b5f5f6c68735f305f313937190c546b5f5f6c68735f305f313831190c5e6b5f5f6c68735f305f313839190c61645f5f3631190c636d6d6b546f6b656e4e616d655f32190c656b6d696e7465644467546b6e190c67696467744c696e6b5f32190c69695f5f636f6d6d6f6e31190c807664656c656761746554616b65734f776e657273686970190c82781d706f737369626c6545787472615265706c6163656d656e74436865636b190cab6b5f5f6c68735f305f313834190cb1695f5f636f6e645f3930190cc56b5f5f6c68735f305f313836190cc763646465190cc96b656e747279547970655f31190cdd6b5f5f6c68735f305f313838190cdf6a69645072656669785f37190cf06164190d04645f5f3633190d176b5f5f6c68735f305f313835190d2b645f5f3632190d2f6b617373657274696f6e5f32190d466164190d636b5f5f6c68735f305f313833190d666873656c665f323036190d93645f5f3630190da1645f5f3539190e1d6b5f5f6c68735f305f313737190e326b5f5f6c68735f305f313534190e347270656e64696e674368616e6765734c697374190e367070726576696f75734d616e6966657374190e38716e65787443686172746572446174615f31190e3a6a5f5f636f6d6d6f6e3231190e3c6c6e6578744d616e6966657374190e4264636f6e64190e7166707265765f34190e72676974656d5f3137190e7564615f3232190e7664625f3231190e786a70644368616e67655f31190e7a6f70656e64696e67547970654e616d65190e80695f5f636f6e645f3831190e946b5f5f6c68735f305f313735190e96695f5f636f6e645f3834190eaa6b5f5f6c68735f305f313736190ead645f5f3538190eb6645f5f3535190ecd67686561645f3436190ed067434d455f6b6579190ed1675f5f6c68735f31190ed3694d455f747970655f31190ed56b5f5f6c68735f305f313731190ed76d4d455f706f6c6963794c696e6b190ed96b4d455f6964507265666978190edb6a726566436f756e745f31190f07656d73675f31190f0e6773656c665f3232190f196164190f28656d73675f31190f2f6773656c665f3232190f3a6873656c665f313332190f3c6164190f476873656c665f323730190f6364636f6e64190f70676f746865725f33190f7b6873656c665f323730190f936c6e6578744964507265666978190fa4695f5f636f6e645f3832190fb86b5f5f6c68735f305f313733190fba6a69645072656669785f36190fc0695f5f636f6e645f3833190fd46b5f5f6c68735f305f313734190fd7645f5f3537190ffb645f5f35361910156164191056695f5f636f6e645f383019106a6b5f5f6c68735f305f31373019106b6b63616c6c6261636b5f3132191075645f5f35341910766b63616c6c6261636b5f3131191089695f5f636f6e645f373919109f645f5f35331910bc6873656c665f3134351910ca6b5f5f6c68735f305f3136371910cd6a63616c6c6261636b5f391910d375707265764d616e696665737452656d61696e6465721910d4756e6578744d616e696665737452656d61696e6465721910ec646d696e741910ee6e6d696e7454686973506f6c696379191110716f62736572766564546f6b656e4275726e1911126d72656d61696e696e674d696e7419112e6b666f6c64696e674275726e19112f6870634368616e67651911316870644368616e6765191133695f5f636f6e645f37331911476b5f5f6c68735f305f3135391911496a747970654e616d655f3419114b695f5f636f6e645f373419115f6b5f5f6c68735f305f313636191162645f5f3531191164695f5f636f6e645f37351911786b5f5f6c68735f305f31363519117b6b5f5f6c68735f305f31363019117d6b5f5f6c68735f305f305f3119117f674d455f7479706519118164746e5f35191183666d70685f33311911976b5f5f6c68735f305f31363419119a645f5f353219119c6b5f5f6c68735f305f31363119119e68726566436f756e741911a067746e5374725f321911a2695f5f636f6e645f37371911b66b5f5f6c68735f305f3136331911b96b5f5f6c68735f305f3136321911bb6c6275726e696e67436f756e741911db666b65795f32391911dd6b726563757273655f3130331911e36b726563757273655f3130321911e46873656c665f3237381911f167686561645f34391911f3667461696c5f36191276645f5f35301912936873656c665f3134351912a16b5f5f6c68735f305f3135371912b86873656c665f3237391912c66b5f5f6c68735f305f3135351912d064785f31331912f46873656c665f3136381913046873656c665f3136391913296b5f5f6c68735f305f31343419132b706d616e696665737441637469766974791913436b5f5f6c68735f305f3135331913586b5f5f6c68735f305f31353219136d6b5f5f6c68735f305f31343619136f666b65795f33311913716b746f6b656e4e616d655f351913736d63686172746572446174615f331913756f6e65787443686172746572446174611913776a5f5f636f6d6d6f6e32321913796a5f5f636f6d6d6f6e323319137b6a5f5f636f6d6d6f6e323419137d6b5f5f6c68735f305f313437191383695f5f636f6e645f36381913976b5f5f6c68735f305f31353119139a6b5f5f6c68735f305f31343819139c695f5f6c68735f305f3019139e69656e747279547970651913a064746e5f341913a2666d70685f33301913cd6b5f5f6c68735f305f3135301913d0645f5f34391913e66b5f5f6c68735f305f3134391913e9645f5f343819140e64636f6e6419141b6873656c665f323733191435656861734444191437687265634964537472191439695f5f636f6e645f333819144d6a5f5f6c68735f305f37311914506a5f5f6c68735f305f373019145d6873656c665f3133371914a561641914c86b5f5f6c68735f305f3134351914cb645f5f34371914ec6b5f5f6c68735f305f3134331914ef6b5f5f6c68735f305f3134321915096b5f5f6c68735f305f31343119151e6b5f5f6c68735f305f3134301915336b5f5f6c68735f305f3133391915486b5f5f6c68735f305f313338191569645f5f343619157f6b5f5f6c68735f305f3130351915946b5f5f6c68735f305f3130341915a96b5f5f6c68735f305f3130331915be6b5f5f6c68735f305f3130321915d36b5f5f6c68735f305f3130311915e86b5f5f6c68735f305f3130301915eb6a5f5f6c68735f305f39391915ef6873656c665f3230351915f564636f6e641916056873656c665f3136371916406b5f5f6c68735f305f3133361916556b5f5f6c68735f305f313335191657696444617461547970651916596872656349645f313019165b66636374785f3219166164636f6e6419167964636f6e6419167c6873656c665f313931191680783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765645f311916816873656c665f313839191687695f5f636f6e645f323519169b6a5f5f6c68735f305f343019169e645f5f32371916a96573747249641916ab695f5f636f6e645f32311916bf6a5f5f6c68735f305f33381916c16473615f311916e26a5f5f6c68735f305f33391916e468696e6465785f31331916e6696669656c64735f37341916fb6c666f756e6452656349645f31191727645f5f323619174a6a5f5f6c68735f305f333219174c6c616374697669746965735f3119176a70616374734f6e546869735265636f72641917a464615f31391917b86a5f5f6c68735f305f33371917cd6a5f5f6c68735f305f33361917e26a5f5f6c68735f305f33351917f76a5f5f6c68735f305f33331917f96273611918166a5f5f6c68735f305f333419181868696e6465785f313219181a696669656c64735f373319182f6a666f756e64526563496419185b645f5f3235191869645f5f323419187a645f5f323319187e63695f3819188069696e707574446174611918a16a5f5f6c68735f305f32351918a367696e6465785f391918a5696669656c64735f37301918a7695f5f636f6e645f31361918c46a5f5f6c68735f305f32361918c666696e646578321918d0645f5f31381918e6645f5f31371918ee6673656c665f321919096873656c665f31393019190b666c696e6b5f3119190d6a3c64657374727563743e19190f6a3c64657374727563743e191911683c61737369676e3e1919136f76616c696461746f72486173685f311919156b74617267657456616c75651919177172657475726e6564556e6368616e67656419192c64636f6e641919516a5f5f6c68735f305f34341919536476685f341919596b617373657274696f6e4f6b19196664615f31331919686a726563757273655f35371919726a726563757273655f3536191973666b6579735f34191980666b65795f3131191988616219199364615f313119199464625f31311919966a726563757273655f35351919a06a726563757273655f35341919a1666b6579735f331919ae666b65795f31301919b661621919c165615f7174791919c265625f717479191a07695f5f636f6e645f3237191a1b6a5f5f6c68735f305f3436191a1e6a5f5f6c68735f305f3435191a226873656c665f313430191a27636f5f31191a406773656c665f3436191a426773656c665f3434191a896a5f5f6c68735f305f3433191a996164191ac9695f5f636f6e645f3333191add6a5f5f6c68735f305f3634191ae06a5f5f6c68735f305f3632191ae265656e747279191ae5695f5f636f6e645f3334191af96a5f5f6c68735f305f3633191afb6a706f6c6963794c696e6b191afd6a69645072656669785f32191afe6a63616c6c6261636b5f38191b056164191b25645f5f3330191b2d676467744c696e6b191b2e6a69645072656669785f31191b3166726f6c655f31191b326a69645072656669785f33191b3565696e707574191b36666d70685f3138191b5768696e707574735f31191b58666d70685f3133191b5a677575744e616d65191b5c685f5f636f6e645f36191b70695f5f6c68735f305f38191b73695f5f6c68735f305f36191b756476685f32191b77716e65656473416464725769746843726564191b79626163191b7b685f5f636f6e645f37191b8f69666f756e64476f6f64191b92695f5f6c68735f305f37191b9963695f37191ba46673656c665f32191bb563615f33191bc66773656c665f3239191c0e6164191c5b6873656c665f313638191c6c67696e7075744444191c916d63757253657474696e67734964191c946873656c665f323832191ca2626f65191cb66a5f5f6c68735f305f3631191cb96a5f5f6c68735f305f3630191cbb63655f31191cbd66736f6d655f32191cdd6b6368617274657244617461191cfd66646744617461191d116a5f5f6c68735f305f3736191d1368646174615f313630191d156a72656349645374725f32191d1d6773656c665f3532191d3b6773656c665f3231191d56645f5f3336191d5c6773656c665f3434191d776768617344445f31191d79683c61737369676e3e191d7b695f5f636f6e645f3339191d8f6a5f5f6c68735f305f3733191d926a5f5f6c68735f305f3732191d9f6873656c665f313337191dd56164191df86b5f5f6c68735f305f313333191e0d6b5f5f6c68735f305f313332191e226b5f5f6c68735f305f313331191e256b5f5f6c68735f305f313330191e296176191e2b666f7468657273191e2d63616461191e2f646d696e65191e3e6873656c665f313539191e406a726563757273655f3737191e486a726563757273655f3736191e49666c73745f3138191e4a63736570191e706873656c665f313630191e76637a5f33191e7767706169725f3335191e7a6b746f6b656e4e616d655f33191e7b63635f33191e946173191eb76773656c665f3935191eb96d73686f775f706f736974697665191ed563785f33191ef96773656c665f3934191efb6a726563757273655f3631191f056a726563757273655f3630191f0663785f32191f0765706f735f31191f086762797465735f38191f5864615f3134191f656773656c665f3936191f7b64615f3135191f8864625f3136191f9e66706169725f38191fa06162191fb567736f6d654d7068191fb6645f5f3130191fc46773656c665f3330191fc66773656c665f3239191fff645f5f34341920136b5f5f6c68735f305f3132391920286b5f5f6c68735f305f31323819202b645f5f343519203f6b5f5f6c68735f305f3132371920546b5f5f6c68735f305f313236192057645f5f34331920636873656c665f323731192064666b65795f3234192066666b65795f32351920686a726563757273655f393919206e6a726563757273655f393819206f6873656c665f32373219207c67686561645f343719207e667461696c5f351920ac666d70685f32391920ad66736565645f321920ae64736565641920af755f5f7573656f70745f5f6d6b546f6b656e4e616d651920b06b6d6b546f6b656e4e616d651920b1781a5f5f7573656f70745f5f6f746865724d696e74656456616c75651920b2706f746865724d696e74656456616c75651920b46d6d6b546f6b656e4e616d655f311920b6726f746865724d696e74656456616c75655f311920b87064656c6567617465417070726f76616c1920ba6b76616c75654d696e7465641920bc6d657870656374656456616c75651920d874657870656374656456616c756573536f727465641920e164746e5f331920e264695f31321920e467746e5374725f311920ea7461637475616c54686973506f6c6963794d696e741920ec781a61637475616c54686973506f6c6963794d696e74536f727465641920f964746e5f321920fa64695f31311920fc65746e537472192102656d73675f3119210a64625f313919210b645f5f34311921197074686973506f6c6963794d696e744f4b19212e64636f6e6419213b616219215367696e7075745f34192168736f74686572506f6c69636965734d696e744f6b19218a616219219a7572656d61696e696e6745787065637465644d696e741921ac6a726563757273655f39311921b26a726563757273655f39301921b3666d61705f33301921c067686561645f34341921c7686f746865724d70681921c878186578706563746564546f6b656e7354686973506f6c6963791921ca706d696e74656454686973506f6c6963791921cf6b746f6b656e4e616d655f341921d06d6578706563746564436f756e741921d861621921e2695f5f636f6e645f35371921f66b5f5f6c68735f305f3131361921f96b5f5f6c68735f305f3131351921fb6b61637475616c436f756e74192244666b65795f32331922466a726563757273655f393319224c6a726563757273655f393219224d6873656c665f32333919225a67686561645f343519225c667461696c5f34192297626b31192298635f7631192299626b3219229a635f76321922ad626b311922ae635f76311922af626b321922b0635f76321922bf6873656c665f3234321922c16a726563757273655f39351922c76a726563757273655f39341922c8666c73745f32351922e66a726563757273655f34391922ec6a726563757273655f34381922ed6572656d5f3119230069707572706f73655f3219231c6b5f5f6c68735f305f31313419231e676d696e744467741923276b726566496e707574735f311923296b6368617274657241635f3119232b6c686173436861727465725f3119232d6d636861727465725574786f5f3119233268646174615f31333619233b6773656c665f343419235b695f5f636f6e645f313319236f6673656c665f3219237b6a5f5f6c68735f305f323119237d695f5f636f6e645f31341923916673656c665f3219239d6a5f5f6c68735f305f32321923a16873656c665f3133371923b9667478696e5f311923bb63615f331923cc6773656c665f32391924176873656c665f32343119241866636f6d705f3419241a6a726563757273655f35331924206a726563757273655f3532192421666c73745f313119242e667461696c5f3219243063785f311924326a726563757273655f35311924386a726563757273655f3530192439656c73745f3919244b66686561645f341924986873656c665f323337192499666b65795f32311924a364785f31321924b06873656c665f3233341924b165666e5f32371924b36a726563757273655f38391924b96a726563757273655f38381924ba666d61705f32391924c767686561645f34331924e966736565645f311924eb6873656564547849641924ed67736565644964781924ef6869647842797465731924f167726177547849641924f36774786f496e666f1924f5636d68731924f661701925526873656c665f32323419255469636861727465725f331925686a5f5f6c68735f305f393419257d6a5f5f6c68735f305f39331925806a5f5f6c68735f305f3931192582666d70685f3235192584667574786f5f3519258667646174756d5f361925a668646174615f3133361925af6773656c665f34341925cf696368617274657241631925d1695f5f636f6e645f31321925e56673656c665f321925f16a5f5f6c68735f305f31391925f56873656c665f3133371925fa647478696e1925fc63615f3319260d6773656c665f323919264d6873656c665f32323319264f69636861727465725f321926636a5f5f6c68735f305f39301926786a5f5f6c68735f305f383919267b6a5f5f6c68735f305f383519267d666d70685f323419267f6b6368617274657241635f341926816d636861727465725574786f5f3319268367646174756d5f351926a368646174615f3133361926ac6773656c665f34341926cc695f5f636f6e645f34371926e06673656c665f321926ec6a5f5f6c68735f305f38371926f06873656c665f3133371926f5667478696e5f361926f763615f331927086773656c665f32391927456873656c665f3232311927466772656349645f371927486a72656349645374725f3319274a6461635f3219274c6a6361706f416464725f3319274e695f5f636f6e645f34331927626a5f5f6c68735f305f37381927656a5f5f6c68735f305f37371927726873656c665f3134301927776574786f75741927c86873656c665f3231381927c9725f5f7573656f70745f5f747970654e616d651927ca6469645f331927cc78214361706f4374783a3a6d6b44656c656761746564446174615072656469636174651927ce6a6361706f416464725f311927cf667478696e5f341927df68646174615f3135381927f36a5f5f6c68735f305f37341927f563785f37192831645f5f33341928376773656c665f34341928656873656c665f323135192869695f5f636f6e645f333719287d6673656c665f3419289e6673656c665f341928ad645f5f33331928b7782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f616464726573735f311928b86873656c665f3231321928ba6b6368617274657241635f321928bc686361706f416464721928be683c61737369676e3e1928d26a5f5f6c68735f305f36371928d96773656c665f34341928ff6574786f5f3219291663615f3319293a645f5f33321929516873656c665f323131192953695f5f636f6e645f33351929676873656c665f31373019296968646174615f31333619298c6873656c665f31373219298e68646174615f31333619299f645f5f33311929a978325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f361929aa6873656c665f3231301929ab745f5f7573656f70745f5f72657175697265645f361929ad6b72657175697265645f31331929af67696e7075745f331929b16a61635370656e644467741929b3683c61737369676e3e1929d663615f331929e76773656c665f3239192a096873656c665f313632192a2c78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f35192a2d6873656c665f323039192a2f67696e7075745f32192a316961634d696e74446774192a3363615f33192a446773656c665f3239192a726873656c665f313939192a73666b65795f3134192a7f63785f35192a8c6873656c665f313938192a8e695f5f636f6e645f3330192aa26a5f5f6c68735f305f3539192ab76a5f5f6c68735f305f3538192aba6a5f5f6c68735f305f3531192abc667574786f5f32192abe686163746976697479192ac06a5f5f636f6d6d6f6e3330192ac26a5f5f636f6d6d6f6e3331192ad06a5f5f6c68735f305f3537192adf6a5f5f6c68735f305f3536192aee6a5f5f6c68735f305f3535192afd6a5f5f6c68735f305f3534192b0c6a5f5f6c68735f305f3533192b0f6a5f5f6c68735f305f3532192b326873656c665f313933192b34695f5f636f6e645f3238192b486673656c665f32192b666673656c665f34192b75645f5f3238192b7c6873656c665f313635192b926873656c665f313631192b9365666e5f3231192b9967706169725f3336192bac6873656c665f313431192bad666d70685f3134192baf63757574192bb16d76616c696461746f7248617368192bb36461635f31192bb56b68617344656c6567617465192bea6a5f5f6c68735f305f3135192bec6476685f33192bee63615f33192c116a5f5f6c68735f305f3132192c13695f5f636f6e645f3130192c276a5f5f6c68735f305f3134192c2a6a5f5f6c68735f305f3133192c2e6873656c665f313430192c33616f192c3563615f33192c776164192c816873656c665f313334192c82666d70685f3131192c8a6164192c946873656c665f313233192c966164192cac6873656c665f313230192cae6164192cc46873656c665f313134192cc66164192cd66776616c75655f35192cf3675f5f6c68735f30192cf5686669656c64735f37192cf7685f5f636f6e645f32192d14695f5f6c68735f305f31192d1a635f5f33192d29635f5f32192d2c6873656c665f313130192d2e6164192d39677478496e707574192d3b687461726765744964192d3d6972656465656d657273192d3f737370656e64734578706563746564496e707574192d4763785f34192d4c6a726563757273655f3731192d526a726563757273655f3730192d53666d61705f3232192d60666974656d5f37192d7a627370192d8a635f5f31192dbe6873656c665f313034192dbf65666e5f3135192dc16a726563757273655f3637192dc76a726563757273655f3636192dc8666c73745f3132192dd5666974656d5f36192dee666d70685f3130192def62746e192df169746e42797465735f31192e1a6873656c665f313032192e1b65666e5f3133192e1d6a726563757273655f3635192e256a726563757273655f3634192e266873656c665f313033192e2765666e5f3134192e3466686561645f37192e586873656c665f313030192e59666e616d655f31192e5b656d61705f33192e5d696e616d655f64617461192e5f6a726563757273655f3233192e656a726563757273655f3232192e66656d61705f34192e7366686561645f33192e75656b65795f33192e776776616c75655f32192ea263726573192eb46773656c665f3832192eb56476685f31192eb7676f757470757473192ebd66707265765f33192ebe6874784f7574707574192ed46773656c665f3530192eda666f7574707574192edc6a63726564656e7469616c192ef46773656c665f3739192f096673656c665f32192f316773656c665f3732192f336673656c665f32192f4b6773656c665f3637192f4c6c6173736574436c6173735f32192f4e716d696e74696e67506f6c69637948617368192f506b746f6b656e4e616d655f32192f52676f757465725f33192f5867696e6e65725f34192f59666d61705f3136192f8c676f757465725f32192f8d67696e6e65725f33192f8e666d61705f3135192fdd63615f39192fde63625f39192fe06a726563757273655f3437192fea6a726563757273655f3436192feb666b6579735f32192ff8656b65795f39192ffa667461696c5f31192ffc666974656d5f3519301663615f3719301763625f371930196a726563757273655f34331930236a726563757273655f3432193024666b6579735f31193031656b65795f38193033647461696c1930356373756d19307f666d61705f3133193080656d70685f391930826a726563757273655f34351930886a726563757273655f3434193089666d61705f31341930bb63615f361930bc63625f361930be65614b6579731930c06a726563757273655f34311930cc6a726563757273655f34301930cd646b6579731930ce666d61705f31321930db656b65795f371930e6666974656d5f341931106a726563757273655f33351931166a726563757273655f3334193117666d61705f313119313763615f3519313863625f3519313a6a726563757273655f33391931426a726563757273655f3338193143656c73745f361931446372656d1931626773656c665f353519316364666e5f361931656a726563757273655f333719316d6a726563757273655f333619316e6773656c665f353619316f64666e5f37193194656d61705f38193195656b65795f341931976a726563757273655f333319319f6a726563757273655f33321931a0656d61705f391931a1656b65795f351931d56773656c665f35341931d6656d70685f371931d8656d70685f381931da6a726563757273655f33311931e06a726563757273655f33301931e1656d61705f371932166773656c665f35331932186a726563757273655f323919321e6a726563757273655f323819321f656d61705f3619323268746f6b656e735f311932346a726563757273655f323719323a6a726563757273655f323619323b68746f6b656e735f3219327b6773656c665f353119327c656d70685f3519327e656d70685f361932806a726563757273655f32351932866a726563757273655f3234193287656d61705f351932b36773656c665f34381932b464666e5f331932b5636e696c1932b76a726563757273655f32311932bf6a726563757273655f32301932c06773656c665f34391932c164666e5f341932ce66686561645f321932f76773656c665f34331932f966706169725f351932fb67696e6465785f311932fd686669656c64735f3219331d6773656c665f33381933346773656c665f333419333564666e5f311933376a726563757273655f313919333f6a726563757273655f31381933406773656c665f333519334164666e5f32193366656c73745f331933686a726563757273655f313719336e6a726563757273655f313619336f656c73745f341933876773656c665f3332193388656b65795f3119338967666e466f756e6419338a6a666e4e6f74466f756e6419338c6a726563757273655f31351933946a726563757273655f31341933956773656c665f3333193396656b65795f321933a266686561645f311933cb6269641933cd6a726563757273655f31331933de6a726563757273655f31321933df656c73745f321933ec666974656d5f331934216773656c665f323319342766707265765f3119342866706169725f3319342a656d70685f3419343666707265765f3219343766706169725f341934396c746f6b656e5f6e616d655f3219343b6371747919348a6773656c665f313819348e69726563757273655f371934b269726563757273655f361934b363695f321934b46762797465735f321934b66762797465735f331934dd6773656c665f31361934de62666e1934df617a1934e169726563757273655f351934e969726563757273655f341934ea6773656c665f31371934eb637a5f31193508646461746119350963695f311935236773656c665f313519353c6673656c665f3819353e69726563757273655f3319354469726563757273655f321935456673656c665f39193547616e19355a696865785f62797465731935706673656c665f3619357269726563757273655f3119359867726563757273651935996673656c665f3719359a65627974657319359c65646967697419359e6762797465735f311935ea656d70685f311935eb6a746f6b656e5f6e616d651935ff6a6173736574436c6173731936006169193602636d706819360469746f6b656e4e616d65", "termDescriptions": "b319012e646d6b546e1903cd676368617274657219165b64636374781916b1683c7377697463683e1916b2683c7377697463683e19176a70616374734f6e546869735265636f7264191ca8683c7377697463683e191ca9683c7377697463683e1920f962746e1920fa62746e1920fc65746e5374721921326b686173536565645574786f1921336b686173536565645574786f192554676368617274657219264f6763686172746572192a94683c7377697463683e192a95683c7377697463683e192dee67746e4279746573192def67746e4279746573" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/s3/S3Domain/S3DomainPolicy.hl", "src/s3/S3Domain/S3DomainData.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f19042100190166183219045100190259182a190453001902cd183a190455001902fb0b19045b001903321019045d0019036f0819049300190525081904970019053e081905a10119053b041905a20119053b041905d10118bf183a1905d20118bf183a1905d50118c0182e1905d60118c0182e1905d70118c0091905d80118c0041905d90118c018271905db0118c018271905dc0118c018191905de0118c018191905df0118c00a1905eb0118c10a1905ec0118c10f1905f9011905390a1905fc0119053918291905fd01190539181a190657011905231019066501190524183619066701190524182d1906cd0118ec18181909bf011901861826190aee011902131824190ff40119028e182819128d011903971830191450011903d5182019156a0119040418651915ec011903d318351915f1011903d318311916020119035e183219160c0119035d18521916120119035c184e19176501190434183419176e01190434183019177201190432183a19177d01190431184f19179b0119044d182f1917a20119044d182b19182801190464181d19185a011901e51827191861011901e5182319188a011901ee1827191891011901ee18231918b9011901f618241918c0011901f618201918cc011901f8182b1918d3011901f818271918e9011901db18251918ed011901db18211918f3011901ad182719190b01190472182619190f011904731419192801190475183119192f01190475182d19196e01190498181f19197101190499181e19197201190499181e19198e011904a3181b191995011904a3171919a0011904a818381919b901190478182e1919c301190478182a1919c60119047318311919e5011904bc141919ed011904bd181f1919f4011904bd181b191a27011904c31820191a31011904c3181c191a84011904eb1828191aa6011904f1182b191aae011904d51845191ab1011904d5182c191ab8011904d51828191ac5011904f81818191acc011904f814191ad1011904ca182c191ada011904ca1828191ade011904bc1831191afb011904fe14191b570119050f1818191b5e0119050f14191b6201190506182d191b6b011905061829191b6f011904fe1831191de202190191181e191e0d021901141827191e0e0219011608191e0f0219011608191e4c02190122181f191e600219012614191e6d02190133181f191eac021901381835191eb9021901381831191ed70219012b181e191ed80219012b181e191ee10219012e1825191f0e0219015e181b191f320219016c1841191f670219016a1820191f6d0219016a181c191f70021901651820191f7702190165181c1929e80313121929fb0314182a192c30041901b11826192c31041901b11831192c4e041901b9182e192c4f041901b9182e192c51041901ba0c192c62041901bb182c192c7d041901be1839192c7e041901be1839192ce8041901d61837192e620419015e1834192fe604190128181b1930020419011c0e19301d04190112181b19306404185b05193065041859182d19307b041861141930ae04186b1719311504184b0919311604184b182e1931300418450619313104184218191931a704182e18441931a804182e18441931c904181f021931ca04181f021931d9041820161931e00418210d1931ef0418240e19320e001907a9182719322a001907a3182c19324300190780101933a60019076a18321933a900190751182c1933af00190753181f1933cd00190755183b1934070019073e121934080019073e182b19340a001907340d19340b0019072f182a19342f0019073018301934b8001906eb081934b9001906ec0f1934f4001906f31419350f001906c208193510001906c30f193557001906cd1846193558001906cd18251935a4001906a2081935a5001906a30f1935cb001906ab18331936890019066118251936ae001906331833193763001905ab181e1937e4001905910f1937f400190595181f19384b00190596182219389b00190586101938cb0019057818231938cc0019057818231938de0019056a18201938e800190569081938fb0019056c1019392000190564182819392100190564184119393c0019055a111939860019053d181c1939b90019052c181c1939fb001905341818193a080019052f0c193a15001905241818193a510019050c09193a580019050a181d193a71001905011820193a97001904f909193a9e001904f7181b193b20001904df184d193b2e001904df1844193b8c001904ba181e193b8d001904bb183d193b98001904c209193bb1001904bf10193be7001904500b193be8001904500b193bee00190452184c193c4000190442183f193c42001904411821193c43001904411821193c7600190420181c193c800019042215193c810019042215193d72001903d114193d980019036e10193e08001902f910193e0e001902cc181b193e21001902f31827193e2a001902f4182e193e3b001902f40f193e50001902df11193e77001902e41847193e85001902e81832193e8f001902e81822193eb0001902ee182d193ee10019025609193eff001902581878193f0a0019026008193f0c0019025a1826193f160019025a0e193f170019025c181b193f1e0019025d1841193f290019025e1855193f3b001902601827193f3c001902601827193f440019026f11193f5a001902641838193f75001902671843193f8000190268184d193f90001902681845193fc400190273183d193fcb001902741852193fdd001902741826193fdf0019027610193fe0001902a41862193feb001902a811194006001902a91851194011001902ad111940430019027b181d19405b00190281181d19407300190289181d19409f0019029118441940ba0019029418501940c500190295185c1940d30019029618441940d50019029518541940d60019029518541940f00019029b185719411f001902b1183119413900190223185d1941540019022f1119419600190234184c1941a40019023418211941a700190244185b1941b20019024518601941c50019024618501941d000190247186819420e0019023a18441942580019024c18301942b4001901e818561942b6001901e7151942b7001901e7151942bb001901e8141942c0001901e80f1942cc001901e818441942cd001901ea183c1942cf001901e8184e1942d0001901e8184e1942d4001901ee091942e8001901ef131942f6001901dd171942f7001901dd171942f8001901de18561942fa001901dd182b1942fb001901dd182b1942ff001901de14194304001901de0f194310001901de1844194315001901de184e194316001901de184e194328001901d31821194342001901be1827194345001901d008194347001901cf0919435d001901c41853194368001901c4184b194384001901c7184a1945530019018d1319456300190189184b19456800190189183019456b00190189184d1945b400190167184b1945b90019016718301945bc00190167184d195006001882181c19501600188508195033001880121950390018801619505200187d1119505400187c1619505600187d0a19505800187c0e19505a00187b182919506600187b1825195068001876171950690018780a195b410519013a09195b420519013a09195b7805190151183d195b83051901541819195b86051901541837195b9705190150181d195ba90519015a15195baa0519015a1836195bad0519015a1837195bdc0519013f10195ced05190113181d195df10518c304195e0d0518bc04195f3e0518b10819627d051895081963010518920819638805188f0819654805188108196861051866081968670518650819699705185e0819699d051858081969a3051857081969a905185608196af105184f08196af705184e08196afd05184d08196d4b05183f08196d5105183e081970c505182c081974140518200819741a05181f081976b3061832041976b4061832041976b5061832041976b6061832041976b7061832041976b8061832041976b9061832041976ed061832181aff", "variableNames": "", "termDescriptions": "b83d1905d1646d61696e1905d2646d61696e1906cd616119190f64636374781919e56463637478191afb6463637478191de26473656c66191e0d6473656c66191e0e6463637478191e0f6463637478191e60646d6b546e191f32647574786f1929e86473656c66192c4e62746e192c4f62746e192c5165746e53747219311567707572706f73651931a7781a6e6f4f7468657241637469766974696573537570706f727465641931a8781a6e6f4f7468657241637469766974696573537570706f727465641931c96b686173536565645574786f1931ca6b686173536565645574786f19320e696d6b4361706f4374781934b8676368617274657219350f67636861727465721935a4676368617274657219393c6473656c661939866473656c661939b96473656c66193a156473656c66193b8c6473656c66193be7683c7377697463683e193be8683c7377697463683e193c42636b6579193c43636b6579193c766473656c66193c80683c7377697463683e193c81683c7377697463683e193d726473656c66193d986473656c66193e086473656c66193e0e6473656c66193f3b683c7377697463683e193f3c683c7377697463683e193fdf70616374734f6e546869735265636f72641942b6636d73671942b7636d73671942f66b617373657274696f6e4f6b1942f76b617373657274696f6e4f6b1942fa636d73671942fb636d73671943286473656c661943426473656c66195b41683c61737369676e3e195b42683c61737369676e3e1976b367746e42797465731976b467746e42797465731976b567746e42797465731976b667746e42797465731976b767746e42797465731976b867746e42797465731976b967746e4279746573" } },
      scriptHash: "0643b057a3b94927fa677ac980c2028827a0b8a4c339d7cc04528df0",
      config: { "rev": "1", "delegateName": "S3DomainPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": false }
    }
  };
  specializedDelegateModule = S3DomainPolicy_hl;
  requiresGovAuthority = false;
  // includeFromCapoModules(): string[] {
  //     return [ 
  //         "TieredScale",
  //         "ArtistVaultData"
  //     ]
  // }
  // get Xparams() {
  //     return {
  //         rev: 1n,
  //         delegateName: "nodeOpRegistry",
  //         isMintDelegate: false,
  //         isSpendDelegate: false,
  //         isDgDataPolicy: true,
  //     }
  // }
  get modules() {
    return [
      ...super.modules,
      S3DomainData_hl
      // S3DomainSettings,
      // ProtocolSettings
    ];
  }
}

export { S3DomainBundle as default };
//# sourceMappingURL=S3Domain.hlb.ts.hlb.mjs.map
