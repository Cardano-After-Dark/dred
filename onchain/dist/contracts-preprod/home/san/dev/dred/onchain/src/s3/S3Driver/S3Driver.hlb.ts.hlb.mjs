import { DelegatedDataBundle } from '@donecollectively/stellar-contracts';
import { makeSource } from '@helios-lang/compiler-utils';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';

const S3DriverPolicy_hl = makeSource(
  "module S3DriverPolicy\n\n// specialized to ...\n//   -   NOT YET SPECIALIZED (replace with your specialization notes here) - \n// original notes about (un)specialization follow:\n\n\n//  //! provides a basic version, not yet specialized,\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    mkUutTnFactory\n} from CapoMintHelpers\n\n// import {\n//     ProtocolSettings\n// } from ProtocolSettings\n\nimport {\n    S3DriverData\n    // AbstractSettingsForS3Driver as ProtocolSettings\n} from S3DriverData\n\nimport {\n    CapoCtx,\n    mkCapoCtx,\n    DgDataDetails,\n    mkTv,\n    AnyData \n} from CapoHelpers\n\nimport {\n    TODO,\n    REQT\n} from StellarHeliosHelpers\n\n// import {\n//     TierLookupResult\n// } from TieredScale\n//\n// import {\n//     PriceNeeded,\n//     validateRequiredValue,\n//     ValueValidator\n// } from PriceValidator\n\n\n\nenum DelegateDatum {\n    // we only have to use this if we decide Constr#0 is essential for practical CIP-68 compat\n    Cip68RefToken {  \n        // NOTE: this datum contains reference details for a user-facing token minted according to the cip-68 standard \n        //  - the asset name (in the Value of this UTXO) MUST be:  #000643b0 + tokenName\n        //     - this asset name can serve user-side tokens using the CIP-68 \"222\", \"333\" or other token types.\n        //     - the user-side asset name with its (222/333/etc) CIP-67 prefix and \n        //       ... its remaining tokenName will be matched to this asset name (#000643b0 +tokenName)\n        //       ... to locate this reference datum; this datum content will be interpreted\n        //       ... according to the semantics implied by the user-side asset-name prefix.\n        //\n        //  - The attached 'meta' field in this Datum variant contains the relevant data, depending on the token type\n        //    - for \"222\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"files\" :   // {mediaType, src (url), name?, ... otherFields)\n        //        - \"image\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //    - for \"333\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"ticker\" : String\n        //        - \"url\": String  // project URL\n        //        - \"logo\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //                    - it must have a mime type `image/png`, `image/jpeg` or `image/svg+xml`\n        //        - \"decimals\" : Int\n\n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data\n        // otherDetails: Data // can be Unit () or anything else\n    }\n\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: S3DriverData\n        version: Int\n        otherDetails: Data \n    }\n\n    // func validateSettings(self, settings: ProtocolSettings) -> Bool{\n    // ... get the settings object from the contract manifest via cctx\n    //     assert(false, \"not valid (stubbed)\");\n    //     settings.serialize() != self.serialize() &&\n    //     true\n    // }\n}\n\n\nenum MintingActivity {\n    CreatingRecord{\n        seed: TxOutputId\n    }\n}\n\n//! The minting delegate can also be used as a general spending \n// delegate (this is the default arrangement during the Capo \n// charter mint).  These activities are required by the Capo when\n// spending utxos having DelegatedDatum type.\nenum SpendingActivity {\n    UpdatingRecord {\n        id: ByteArray\n    }\n}\n\nfunc ensureConstrainedTxValidity() -> () {\n    assert(\n        tx.time_range.end - tx.time_range.start \n            <= Duration::HOUR,\n        \"txn duration err\"\n    )\n}\n\nfunc daysInFuture(nowPlusDays: Int) -> TimeRange {\n    ensureConstrainedTxValidity();\n    expiryDuration : Duration = Duration::DAY * nowPlusDays;\n    leeway : Duration = 1 * Duration::HOUR;\n    latestAcceptable : Time = tx.time_range.end + expiryDuration + leeway;\n    \n    TimeRange::new(\n        tx.time_range.start + expiryDuration,\n        latestAcceptable\n    )\n}\n\nenum BurningActivity {\n    DeletingRecord {\n        id: ByteArray\n    }\n}\n\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        activity: BurningActivity\n    }\n    \n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // record id created from seed\n    }\n\n    UpdatingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    DeletingDelegatedData {\n        // no seed\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        // todo: change this back when the recursive enum's `__is_valid_data not found` error is resolved\n        activities: []Data // actually a DelegateActivity\n    }\n    // this function gives a general-purpose implementation of checking for \n    // valid uut minting. \n    //\n    // A specialization might modify it to use different policies\n    // or enforce additional requirements\n    // \n    // func genericUutMinting(self, \n    //     mdd: DelegateDatum\n    // ) -> Bool {\n    //     //!!! replace with an activity using the same seed-txn pattern:\n    //     // MintingActivities::SomethingMintingUuts{sTxId, sIdx, purposes} = self;\n    //     DelegateDatum::IsDelegation{dd} = mdd;\n    //     returnsAuthzToken : Bool = mustReturnValueToScript(dd.tvAuthorityToken());\n\n    //     o : []TxOutput = get_cont_outputs();\n    //     if (o.length != 1) { error(\"single utxo only\") };\n\n    //     print (\"in unsp_MD\");\n    //     isOk : Bool = returnsAuthzToken && \n\n    //     unmodifiedDelegation( /* isD, same as mdd */ mdd.serialize()) &&\n\n    //     // This call can serve as a template for enforcing expected mints \n    //     // of uuts (and additional token values) in validation of application-\n    //     // specific activities, given (mph, sTxId, sIdx, purposes)\n    //     validateUutMinting(\n    //         mph: dd.mph,\n    //         seedTxId: sTxId, \n    //         seedIdx: sIdx, \n    //         purposes: purposes,\n    //         // otherMintedValue: ()\n    //         mkTokenName: mkUutTnFactory(sTxId, sIdx)\n    //     );\n\n    //     isOk\n    // }\n\n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {\n        print(\"  -- addl dgt val \");\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            CapoLifecycleActivities => {\n                // only mint/spend delegates answer to CapoLifecycleActivities\n                error(\"unreachable in a dgDataPolicy\")\n            },\n            MintingActivities{VMA} => VMA.switch {\n                CreatingRecord{seed} => {\n                    print(\"registering a new S3Driver...\");\n\n                    REQT(\"the operator must provide a valid minting seed\");\n                    REQT(\"the seed must have a S3Driver.operator token in it\");\n                    mkTn : (String) -> String = mkUutTnFactory(seed);\n\n                    // mints a S3Driver UUT\n                    mintingOk : Bool = validateUutMinting(\n                        mph: priorMddd.dd.mph,\n                        seed: seed,\n                        purposes: []String{\"s3drv\"},\n                        // otherMintedValue: ()\n                        mkTokenName: mkTn,\n                        // WE ARE the mint delegate.\n                        needsMintDelegateApproval: false \n                    );\n\n                    assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n                    // _settings = ProtocolSettings::from_data(cctx.getManifestedData(\"currentSettings\"));\n\n                    // vaultValue: Value = mkTv(priorMddd.dd.mph, mkTn(\"lbmVault\"));\n                    // print(\"vaultValue: \"+ vaultValue.show());\n                    newRecData : DgDataDetails = cctx.creatingDgData(mkTn(\"s3drv\"));\n                    _newDataOut : TxOutput = newRecData.output();\n                        //cctx.hasDelegatedDataOutput(vaultValue);\n                    TODO(\"send the fee to Treasury w/ acctg info\");\n\n                    reg: S3DriverData = S3DriverData::from_data(\n                        newRecData.outputData()\n                    );\n\n                    assert(\n                        tx.time_range.end - tx.time_range.start \n                            <= Duration::HOUR,\n                        \"txn duration err\"\n                    );\n                    // has the right expiration date from settings\n                    // acceptableExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                    // has the member-token reference\n                    memberToken : String = reg.memberToken;\n                    if (!memberToken.starts_with(\"member-\")) { \n                        error(\"invalid member token name\"\n                    ) };\n                    memberTokenAc : AssetClass = AssetClass::new(\n                        priorMddd.dd.mph, memberToken.encode_utf8()\n                    );\n\n                    // has the member-token in the txn\n                    tx.inputs.find_safe((i: TxInput) -> Bool {\n                        i.value.get_safe(memberTokenAc) == 1\n                    }).switch {\n                        None => error(\"missing member token\"),\n                        Some => true\n                    } &&\n                    reg.validate() &&\n                    mintingOk\n                }\n            },\n            SpendingActivities{VSA} => {\n                assert(cctx.withCharterRef().orFail(), \"no charter ref\");\n\n                VSA.switch {                    \n                    UpdatingRecord{recId} => {\n                        print(\"updating the details for a single S3Driver...\");\n\n                        hasRecInput : (TxInput) -> Bool = \n                            cctx.mkDelegatedDataPredicate(\"s3driver\", recId);                        \n                        // _settings = ProtocolSettings::from_data(\n                        //     cctx.getManifestedData(\"currentSettings\")\n                        // );                        \n                        hasRecOutput : (TxOutput) -> Bool = \n                            cctx.mkDelegatedDataOutputPredicate(\"s3driver\", recId);\n    \n                        tx.inputs.filter(hasRecInput).for_each( (utxo : TxInput) -> () {\n                            // they're all album vaults, because of the above.\n                            _inputData : S3DriverData = \n                                S3DriverData::from_data(utxo.datum.inline);\n                            updatedUtxo : TxOutput = tx.outputs.find(hasRecOutput);\n                            updatedData : S3DriverData = \n                                S3DriverData::from_data(updatedUtxo.datum.inline);\n\n                            // possibly move this to a separate SpendingActivity\n                            REQT(\"the lastHeartbeat must be extended by settings.expectedHeartbeatInterval\");\n                            // _freshExpiry : TimeRange = daysInFuture(settings.artistVaultSettings.albumCommissionDiscountDays.trunc());\n\n                            assert(updatedData.validate(), \"<-- that throws; this can't.\"); // throws if invalid\n                            ()\n                        });\n                        true\n                    }\n                }\n            },\n            BurningActivities => error(\"no burn activity here yet\"),\n            _ => false\n        } || tx.serialize() == priorMddd.serialize()        \n    }\n\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way\" );\n        []String{ \n            // \"nothingHereYet\",\n        }\n    }\n\n    //! Used only for validating non-IsDelegation datum types and activities.\n    // if you have any special admininstrative data structures that inform \n    // ...  your minting policy, this might be useful.  Otherwise, and typically,\n    // ... you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation(self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/s3/S3Driver/S3DriverPolicy.hl", // source filename
    moduleName:  "S3DriverPolicy",
});

const S3DriverData_hl = makeSource(
  "module S3DriverData\n\n// import {\n//     ProtocolSettings as AbstractSettingsWithNOS\n// } from ProtocolSettings\n\n// Helios data structure for S3 Driver\nstruct S3DriverData {\n    id: ByteArray \"id\"\n    type: String \"type\"\n    memberToken: String \"mt\"\n    name: String \"nm\"\n    tension: String \"tnsn\"\n    purpose: String \"purp\"\n    vision: String \"vsn\"\n    description: String \"desc\"\n    metrics: []String \"mtrcs\"\n\n    func validate(self) -> Bool {\n        assert(true || /*never executed*/ self == self, \"no way\");\n        // assert(self.memberToken != null, \"memberToken is null\");\n        true\n    }\n}\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/s3/S3Driver/S3DriverData.hl", // source filename
    moduleName:  "S3DriverData",
});

class S3DriverBundle extends DelegatedDataBundle.usingCapoBundleClass(DredCapoBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "cf6165831afcf3e8fba778522c291e6a5b889f8784b13b07cfc9d42096b10bbb", "src/CapoMintHelpers.hl": "016bc2d80eb050e974b99b673a7e82178bbe70859d14fe3aee212eed62187a80", "src/delegation/CapoDelegateHelpers.hl": "0456441fc9d80ddf923514f2265e03f17d1858f5a1e7bdaeb8c934bde037920f", "src/StellarHeliosHelpers.hl": "17367f95ed34644b7348c2904c310f1733217c8b65231c8c7b2d17c8d4febbef", "src/CapoHelpers.hl": "63af299e4c9d85cc740191c02ec4a9374949eb582659072340a963ccde18bc3c", "src/s3/S3Driver/S3DriverData.hl": "67a149299c616ec44b14e6d15c10669621ee1c59783900972184f13bc63cbfb8", "generatedSpecializedDelegateModule": "612285e553f12804be86671694edd360ecd8891ae8a02622a7ce4026c3461a8c", "src/s3/S3Driver/S3DriverPolicy.hl": "941224530a7c2415e7d92a22b84c486fe52938987f168df88ff14a7ec3375ee3", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##4e5333447269766572506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87980;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "59dd9559dda40a209c0961ac0a666666666607e07a07406e06806205e05604e0481aa0a2930986982a4811976616c69646174696f6e2072657475726e65642066616c73650022233573661a80a661a60a661a60a9211220f09f9aa5e29d9364656c65676174653a200001f491010a00335736661a40a661a00a040900124916726576206d757374206265206174206c656173742031003233573661aa0a661a80a661a80a920113f09f9aa5f09f9fa22064656c65676174653a2000020491063a206f6b210a0000132353335734609e0022461ae0a9217f446174612044656c656761746573206d757374206e657665722073746f726520746865206361706f53746f726564446174612076617269616e7420696e20746865207363726970743b2075736564206f6e6c7920666f7220646174612d7374727563747572696e67206361706f2d73746f726564207574786f20646174756d0015333573460a40022464646466ae6cc36414cc360152411720202d2d206973207370656e64696e67206467546b6e200000132335736661b00a00292122636865636b4e6f6e44656c65676174656441637469766974696573206661696c6564003357366661b4069201112e2e2e2066696e616c20636865636b733a004a093191986b028a999ab9a30d80502314a22a2a666ae68c360140885288a8a983ca9984c00848008008a999ab9a330d60513330da034901202e2e2e206164646974696f6e616c44656c656761746556616c69646174696f6e004a0930999814804003000899ab9b30db05330da05330da0549010a64656c65676174653a2000026491233a206164646974696f6e616c44656c656761746556616c69646174696f6e206f6b210a004a22a261b80a661b40a661b40a92010a64656c65676174653a2000026491483a206164646974696f6e616c44656c656761746556616c69646174696f6e2072657475726e65642066616c73652028776974686f757420616e79207468726f776e206572726f7229005330820108101307730b102305500532353335734605a00224646466046004464a666ae68cc3681440a44cccc258042500400d28a50133573661be0a92012420202d2d206d696e7444677420636865636b696e67206d756c74692d6163746976697479003357366661be06920160696e20746865206d696e742064656c65676174652c206f6e6c79207b4372656174652c44656c6574657d44656c656761746564446174612061637469766974696573206172652076616c696420696e206d756c74692d61637469766974696573004a093191a999ab9a303e0011233301001000f003153335734606c0022466602002001e0062a666ae68c0e800448c38815241315570646174696e6744656c65676174656444617461206f6e6c79206f6b206174206c6576656c2d31207370656e644467740015333573460920022461c40a9201286d756c74693a44656c65676174654c6966656379636c6541637469766974696573206e6f74206f6b0015333573460980022461c40a9201246d756c74693a4361706f4c6966656379636c6541637469766974696573206e6f74206f6b0015333573460660022461c40a92011b6d756c74693a6d756c74693a206e657374696e67206e6f74206f6b001230e2054901346d756c74693a6e6f6e2d6d696e74696e6720616374697669746965732061726520696e76616c696420666f72206d696e7444677400001001153335734661b40a20502666612a021280200694528099ab9b30df0549012520202d2d207370656e6444677420636865636b696e67206d756c74692d6163746976697479003357366661be06920165696e20746865207370656e642064656c65676174652c206f6e6c79207b5570646174696e672c44656c6574696e677d44656c656761746564446174612061637469766974696573206172652076616c696420696e206d756c74692d61637469766974696573004a093191a999ab9a303a00112335736661be0a661b80a20542666612e0212c0200a941264901315570646174696e6744656c65676174656444617461206f6e6c79206f6b206174206c6576656c2d31207370656e644467740033301001000f003153335734607c0022461c40a921284372656174696e6744656c65676174656444617461206f6e6c79206f6b20696e206d696e7444677400153335734606c0022461c40a92012a544f444f3a2076616c6964617465207370656e64696e672074686520646174756d20666f72206275726e0015333573460920022461c40a9201286d756c74693a44656c65676174654c6966656379636c6541637469766974696573206e6f74206f6b0015333573460980022461c40a9201246d756c74693a4361706f4c6966656379636c6541637469766974696573206e6f74206f6b0015333573460660022461c40a92011b6d756c74693a6d756c74693a206e657374696e67206e6f74206f6b001230e2054901376d756c74693a206e6f6e2d7370656e64696e6720616374697669746965732061726520696e76616c696420666f72207370656e6444677400001001151335736661ba0a661b40a261b80a052261b80a0509213961636b212064656c6567617465642d6461746120706f6c6963792063616e27742062652061206d696e742f7370656e642064656c65676174650033573661c006920115617373657274206973446744617461506f6c6963790033573661be0a92012920202d2d20646744617461506f6c69637920636865636b696e67206d756c74692d6163746976697479003357366661be06920143696e20446744617461506f6c6963792c206f6e6c79204d696e74696e672f4275726e696e672f5370656e64696e672061637469766974696573206172652076616c6964004a093191a999ab9a303a0011230e2054915a5570646174696e6744656c65676174656444617461206f6e6c79206f6b206174206c6576656c2d31207370656e6444677420287573652061205370656e64696e67416374697669747920696e20646744617461506f6c6963792900153335734607c0022461c40a9201504372656174696e6744656c65676174656444617461206f6e6c79206f6b20696e206d696e7444677420287573652061204d696e74696e67416374697669747920696e20646744617461506f6c6963792900153335734606c0022461c40a92015544656c6574696e6744656c65676174656444617461206f6e6c79206f6b206174206d696e742f7370656e64206467742028757365204275726e696e67416374697669747920696e20646744617461506f6c6963792900153335734608c0022466602002001e0062a666ae68c10c00448ccc04004003c00c54ccd5cd18200008919ab9b330df054a092148544f444f3a20737570706f7274206d756c74693a4275726e696e674163746976697469657320666f7220646744617461506f6c696379206f72206f746865722064656c65676174650033301001000f00315333573460920022461c40a921286d756c74693a44656c65676174654c6966656379636c6541637469766974696573206e6f74206f6b0015333573460980022461c40a9201246d756c74693a4361706f4c6966656379636c6541637469766974696573206e6f74206f6b001230e20549011b6d756c74693a6d756c74693a206e657374696e67206e6f74206f6b00001001333333333304b04904604304003d03b0370330300015308201307930b302006302c00115333573460860022464646a666ae68c3280c00448c8c8c8c8c8cd5cd987182998710299871029987102a48118636865636b696e67205265706c6163696e674d65206f6e2000004491023a20000013357366661c6069213b6e6565647320746865206368617274657220746f20626520617070726f76696e672074686520746865206e6577206d696e742d64656c6567617465004a09319ab9b30e4034913520205e5e5e2073686f756c6420717565756520746865206e65772064656c656761746520696e2070656e64696e674368616e67657300323232330e1051001100233333333333333306e30bc0200f00733574061be0a00c6ec5264a093250499288022514a094528250498c8d4ccd5cd186a8080089251124a0002a615802002a61140261000261740401aa61b60a617004018661a60a6619a0a617004016616e0401600261960a90011864818011864818008a999ab9a30c60300112330c805330c40530bf050bd05530b30200830c9054800848c8cd5cd987001a492f696d706f72742073657474696e67732066726f6d2064656c656761746520616e642076616c6964617465207468656d00335736661ba0a661b40a2940528a492556616c696461746553657474696e67732074656d706f726172696c792064697361626c6564004a0661780a66619602616a040109412648000004004c10800454ccd5cd1823000891919ab9b3330dc03491252e2e2e207769746820616e79204361706f4c6966656379636c652061637469766974793a20004a0931919ab9b3330dd034914a726571756972657320746865204361706f277320436861727465724461746120616374697669747920746f206d6174636820746869732064656c65676174652773206163746976697479004a09319ab9b3235333573461b402002246466ae6ccc37814cc2440c004015241326163746976697479206d69736d617463682077697468204361706f27732043686172746572446174612061637469766974790030e00549013820202d2d206f6b2c204368617274657244617461206361706f4c6966656379636c654163746976697479206d617463686573206f7572730a0030d901001153335734619c0200224646a666ae68c2380c00448c384152413d6f6b2c204361706f3a7570646174696e674368617274657220776f726b7320666f72206e6f772077697468204372656174696e6744656c65676174650a001230e2054901477768656e204361706f206973205570646174696e67436861727465722c20746865206d696e7444656c6567617465206d757374206265204372656174696e6744656c6567617465000010041230e00549013c74686973206163746976697479206d757374206d6174636820746865206361706f2773206f776e20436861727465724461746120616374697669747900001530a5010013232330da05132353335734611c0600224646466ae6cc3900d241525858582069742073686f756c64206f757470757420746865206e65772064656c656761746520746f6b656e20746f20746865204361706f20617320612050656e64696e6744656c656761746520646174756d003357366661c6069201692e2e2e206865726520696e20746865204d696e744467743a2076616c696461746573206372656174696f6e206f662055555420666f7220746865206e65772064656c65676174652c20616c69676e656420746f2074686520707572706f736520696e64696361746564004a09319191a999ab9a30c703001123357366661cc069212a76616c69646174657320746865206e65772064656c6567617465277320555554206973206d696e746564004a09319ab9b533357346666666666666660de617a0402000a66ae80c38014010dd8a4c94400d2824c941264a29412824c94126130e6054912720202d2d206f6b2c206d696e74656420746865206e65772064656c65676174652773205555540a00151498cd5cd99987301a494974686520555554206d75737420686176652074686520726967687420646973706f736974696f6e2028697320697420636865636b656420736f6d65776865726520656c73653f213f29004a093191a999ab9a30a3010011230e90549142746865206e65772064656c6567617465206973206e6f742070726573656e7420696e20746865204361706f2773206e616d65642d64656c656761746573206c697374001232335736661ce0a6618c0a61c804002600c00e9201107575744e616d65206d69736d61746368003333330d20200130c0020134a294528a875011851808008009985000984181299984d0084c8084b0080500209187382a492b756e726561636861626c652077726f6e6720726f6c6520666f72204372656174696e6744656c6567617465000010063079002308d03002308d030011533357346114060022466ae6cccc3840d241262e2e2e20666f722074686520616464696e6750656e64696e674467742061637469766974793a004a0931919ab9b3330e2034914b546865206e65772070656e64696e672d64656c656761746520616374696f6e20697320666f756e64206174207468652068656164206f6620746865206e6577206368616e67652d6c697374004a0931919191919ab9b30e70349120737570706f7274206f746865724d616e69666573744368616e6765206865726500323232323232335736646a666ae68c2980c00448cd5cd987702a49352020202d2d20616e6f746865722064656c65676174652d726f6c6520636865636b20776f756c6420626520726564756e64616e742e0032353335734619c060022466ae6cccc3c00d24015276657269666965732074686174207468652064656c65676174652071756575656420666f722072656d6f76616c2069732070726573656e7420696e20746865204361706f2773206368617274657244617461004a093187882a490c696d706c656d656e74206d65001230f10549010b756e726561636861626c650000101012330ec054a29201086e6f20776179206c000010043357366661d8069201347468652072656d61696e646572206f6620746865206368616e67652d6c6973742073686f756c6420626520756e6368616e676564004a09319ab9b330ea0533031303000800a49158696e76616c696420757064617465206f662070656e64696e674368616e6765733b20746865206e657720616374696f6e206d7573742062652070726570656e64656420746f20746865206578697374696e67206c6973742e00332353335734614c060022461de0a9210b756e726561636861626c65001533357346156060022464646446660020080060046154060066154060046154060022464646446660020080060046146060066146060046146060020020084446464661d80a2661d80a294440084004c8d4ccd5cd1868018008918798299878829987882a49297468697320626c6f636b20686164206265656e2072756e206279207370656e644467742c206275740a004901332e2e2e2069742773206d756368206368656170657220746f206c657420746865204d696e7444677420646f206974202e2e2e0a004901262e2e2e2073696e6365206974277320616c726561647920696e766f6c76656420616e797761790015333573461a6060022466ae6cccc3c80d24015d646f65736e277420616c6c6f77206120717565756564206368616e676520746f206475706c696361746520616e79206f746865722070656e64696e6720656e74727920666f72207468652073616d652064656c6567617465206e616d65004a0931919ab9b330f105001330f205490130616c72656164792068617320612070656e64696e67206368616e676520666f7220746869732064656c65676174653a20000083232330f0051330f00514a220062002646a666ae68c2cc0c00448cd5cd99987b01a4930646f65736e277420616c6c6f7720616e2041646420666f7220616e206578697374696e6720706f6c696379206e616d65004a09319ab9b323533357346178020022461f20a661ee0a92013c71756575696e6720416464206661696c65643a20616c72656164792068617320612064656c656761746520666f7220706f6c696379206e616d653a200000d1249800400d288a999ab9a30ac0300112323357366661ee06920127466f72205265706c616365206f6e20616e206578697374696e672064656c65676174652e2e2e20004a09319ab9b3330f7034912b20202d2d205265706c6163653a20696e76617269616e74732063616e6e6f74206265207265706c61636564004a09319ab9b3235333573461a8060022461f40a9212263616e6e6f74205265706c61636520726f6c653a204d696e74496e76617269616e740015333573461a4060022461f40a92012363616e6e6f74205265706c61636520726f6c653a205370656e64496e76617269616e7400153335734618e060022461f40a92013c48616e646c656442794361706f4f6e6c7920726f6c65206973206e6f74206170706c696361626c6520696e2064656c656761746520636f6e74657874001230f90549012c20202d2d206f6b20286e6f7420747279696e6720746f207265706c61636520616e20696e76617269616e74290000100e3357366661ee0692014520202d2d20646f65736e277420616c6c6f772061205265706c6163652069662074686520706f6c6963792d6e616d6520646f65736e277420616c7265616479206578697374004a0931919ab9b3330f8034916f20202d2d205265706c6163653a207468652050656e64696e6744656c6567617465416374696f6e277320726f6c65202b207265706c61636573446774206d757374206d6174636820746865206578697374696e672064656c6567617465277320617574686f7269747920746f6b656e004a0931919ab9b330f705330d4050035303c001330f805330f805330f8054910c7468652063757272656e7420003235333573461b806002249201046d696e740015333573461b206002249201057370656e640015333573461a4060022492010c646744617461506f6c69637900153335734619c06002249201056e616d65640012490118e280b9696e636f6e74686565696965697661626c65e280ba000010104901492064656c6567617465277320617574686f7269747920746f6b656e20646f65736e2774206d61746368207468652071756575656420616374696f6e277320746f6b656e206e616d652000530cc050034a2646a666ae68c36c0c00448c0f0cc3c808c25808064c3440809054ccd5cd186c0180089181e1987901184d8100c9868810120a999ab9a30d103001123357366661f40692015120202d2d205265706c6163653a20646744617461506f6c6963793a20746865206e616d656420706f6c696379206d7573742062652070726573656e7420696e20746865204361706f206d616e6966657374004a093181e19879010019868810120a999ab9a30cd030011230fb05490125756e726561636861626c653a204f746865724e616d65644467742064657072656361746564001533357346196060022461f60a92014c44656c6567617465526f6c653a3a426f74684d696e74416e645370656e64206e6f74206170706c696361626c6520696e20717565756550656e64696e674368616e67652061637469766974790015333573461aa060022461f60a92010b756e726561636861626c650015333573461a6060022461f60a92010b756e726561636861626c65001230fb0549010b756e726561636861626c650000100f323533357346176020022461f40a661f00a9213771756575696e67205265706c616365206661696c65643a2074686520706f6c6963792d6e616d6520646f65736e27742065786973743a200000e12323232353335734617e040022464002617c040022461fc0a661f80a661f80a92132696e76616c6964205265706c6163653b20746865206d61746368696e67206d616e696665737420656e74727920666f7220270001249117272069736e2774206120446744617461506f6c6963792e0000100130b20200130bd0100100100430a803001123357366661ec069213f646f65736e277420616c6c6f7720612052656d6f76652069662074686520706f6c6963792d6e616d6520646f65736e277420616c7265616479206578697374004a09319ab9b323533357346174020022461f20a661ee0a92013671756575696e672052656d6f7665206661696c65643a2074686520706f6c6963792d6e616d6520646f65736e27742065786973743a200000d1249800400cc3dc15240125756e726561636861626c653a2052656d6f7665206e6f742079657420737570706f727465640000100c330ba01308b020120083303330880201123235333573461a604002246464646a666ae68c3400c00448c8cc3301400403cc33c0c00448c3e8152401386f6e6c7920446744617461506f6c6963792069732079657420737570706f7274656420696e20717565756550656e64696e674368616e67650000100130da0200130d2020011230f6054901256f746865724d616e69666573744368616e6765206e6f742079657420737570706f72746564000010011230f30549010b756e726561636861626c650000101232353335734619e060022494454ccd5cd186901800891987602899987801a481362867656e6572616c2920746865206d696e7444677420636865636b732065766572797468696e672061626f757420746865206d696e74004a0930991a999ab9a30ab0300112335736646a666ae68c3580c00448c3d81524011b63616e6e6f742052656d6f766520726f6c653a204d696e744467740015333573461a6060022461ec0a92011c63616e6e6f742052656d6f766520726f6c653a205370656e644467740015333573461a0060022461ec0a92012163616e6e6f742052656d6f766520726f6c653a204d696e74496e76617269616e7400153335734619c060022461ec0a92012263616e6e6f742052656d6f766520726f6c653a205370656e64496e76617269616e740015333573461980600224661e60a941240104746f646f0015333573461900600224661e60a941240104746f646f00153335734618c060022461ec0a92014c44656c6567617465526f6c653a3a426f74684d696e74416e645370656e64206e6f74206170706c696361626c6520696e20717565756550656e64696e674368616e67652061637469766974790012498004028cd5cd99987981a48145646f65736e277420616c6c6f7720612052656d6f766520746f206475706c696361746520616e20416464206f72205265706c616365206f722052656d6f766520656e747279004a09319ab9b30f403491035e5e5e00335736661e20a9412401217768617420656c73652073686f756c6420626520636865636b656420686572653f004a02466ae6d4ccd5cd2501330f10533330aa010a8010174a093249203c2d2d2d2d2d20746861742063616e206661696c2c20746869732063616e277400151498c8c8c8cd5cd99987b01a4928546865206e657720706f6c6963792d746f6b656e206d757374206d61746368207468652073656564004a0931919ab9b330f505330d40530f202001003330f605330f605330f60549011b7575744e616d65206d69736d617463683b20657870656374656420000034910b2062757420666f756e64200030f2020013232330f4051330f405100410021001323533357346160060022466ae6cccc3e80d24014b5265706c6163653a2074686520717565756564206368616e6765206d757374206d6174636820746865206964507265666978206f66207468652063757272656e742064656c656761746520004a09319ab9b30fb034912356414c49444154452074686973207468726f756768206120756e69742d74657374205e00335736646a666ae68c3000400448c8c8c8c8d4ccd5cd186181000891919ab9b333082044914365787065637473207468652071756575656420696450726566697820746f206d6174636820746865206578697374696e6720706f6c6963792773206964507265666978004a09319ab9b30820633081064901102020202d2d2065787065637465643a200000133573661040c661020c9201102020202d2d20202061637475616c3a20000143308006330df05001014491116964507265666978206d69736d617463680030c102001123082063308006330800649132696e76616c6964205265706c6163653b20746865206d61746368696e67206d616e696665737420656e74727920666f7220270001649117272069736e2774206120446744617461506f6c6963792e0000100130b60200100130c0010011230fd05330fb054901296e6f206578697374696e6720646744617461506f6c69637920666f756e642077697468206b65793a2000011001330c10130920201900f4a224944004040ccc3d80d2413f746865206e657720706f6c6963792d64656c65676174652d736372697074206d7573742074616b65206f776e657273686970206f6620746865206467546b6e004a26666661c004002619c0404294528a5150f802323533357346166020022461f20a9201346d697373696e672072657175697265642064656c6567617465206c696e6b20696e2070656e64696e6720646774206368616e676500123200130b30100100100c330f00513330f40349013e746865206e65772064656c6567617465206973206372656174656420776974682074686520696e6469636174656420617574686f7269747920746f6b656e004a093099999999999999983f18660100f80499aba030ef05008376293251308b010094a09325049928a504a093250498c00401cc2240401c00402448c3c81524010b756e726561636861626c65000010113235333573461880600224640026186060022461dc0a9201386f6e6c7920446744617461506f6c6963792069732079657420737570706f7274656420696e20717565756550656e64696e674368616e67650000100230cc0200330cd0200230cd0200130c402001330c40500148000c094004c3e8040054ccc25c042580424c0401cc3e004004cc2fc154c2580401520001533357346110060022466ae6cc3880d24117696d706c656d656e742072656d6f766550656e64446774003357366661c20692014e616c6c6f7773207468652072656d6f76616c206f662061207175657565642070656e64696e672d64656c65676174652d6368616e676520746861742063616e277420626520636f6d706c65746564004a09319ab9b330df054a0921136e6f742079657420696d706c656d656e746564004a02a666ae68c2180c00448cd5cd99987081a4811e2e2e2e20546f20636f6d6d69742070656e64696e67206368616e6765733a004a09319ab9b3330e1034911d696e76617269616e74732063616e6e6f74206265207265706c61636564004a0931919191919ab9b330e305330e00513330e403490123746865206e6578742d6368616e676573206c697374206d75737420626520656d707479004a093099867829812187d80801240009211e70656e64696e674368616e676573206d75737420626520656d707469656400533357346666136021340201294528099ab9b3330e503491432e2e2e7370656e644467743a2076616c696461746573207468617420616c6c207468652070656e64696e672064656c6567617465732061726520696e7374616c6c6564004a09319999811802111191919ab9b323533357346148060022466ae6cccc3b00d241676467742d6368616e67653a2052656d6f76653a2076657269666965732074686174207468652064656c65676174652071756575656420666f722072656d6f76616c206973206e6f772072656d6f7665642066726f6d20746865204361706f206d616e6966657374004a093191a999ab9a30b2010011230ef05330ed054901407175657565642052656d6f7665206661696c65643a206e616d65207374696c6c2070726573656e7420696e206e6578742d6d616e6966657374206974656d3a200000512498004cc2cc0401800c48cd5cd99987601a495c766572696669657320746861742061646465642026207265706c6163656420656e7472696573206172652070726573656e7420696e207468652075706461746564206d61702028617420697473206e65787420706f736974696f6e29004a09319ab9b53335734661ac0a605200c90000987682a4813d717565756564204164642f5265706c616365206661696c65643a206e6f206d6f7265206974656d7320696e206e6578742d6d616e6966657374206d617000151498cc0a001888c8c8c8c8c8cd5cd987a01a4932737570706f7274206d696e74696e67206d756c7469706c652074687265616473206f66206120646744617461506f6c69637900335736661e20a661ba0a002900124931726566436f756e74206d7573742062652031207768656e20616464696e672061206e657720646744617461506f6c69637900335736661e20a661a00a01400e920134717565756564206368616e67653a206e616d65206d69736d617463682077697468206e6578742d6d616e6966657374206974656d0033573661e60a661e40a9211420202d2d204d4520706f6c696379206c696e6b2000530c40530ee0200333573661e60a661e40a9211a20202d2d2070644368616e676520706f6c696379206c696e6b2000530c40530ee025302e30d50200b335736661e20a661e204006a605c61aa0401692013a717565756564206368616e67653a20706f6c6963794c696e6b206d69736d617463682077697468206e6578742d6d616e6966657374206974656d003233573661e80a661e60a92110202020202076762040656e7472793a20000083357366661e8069215020202d2d204065616368206d616e696665737420656e7472793a206e6578742d6d616e69666573742773206964507265666978206d757374206d617463682074686520717565756564206368616e6765004a09319879029986882800801a49336964507265666978206d69736d617463682077697468206e6578742d6d616e6966657374277320646744617461506f6c6963790032353335734615606002246466ae6cccc3d80d2401495265706c6163653a207665726966696573207468617420746865206e6578742d6d616e6966657374206e6f206c6f6e6765722068617320746865207265706c6163656420656e747279004a09319ab9b323533357346178020022461f20a661ee0a920146717565756564205265706c616365206661696c65643a206475706c6963617465206e616d652072656d61696e696e6720696e206e6578742d6d616e6966657374206d61703a200000f12498004cc2f404c0c0048034004c2a00c00454ccd5cd185901800891900098578180089187b02a490b756e726561636861626c650000130d80200b30b10200330b10200230b102001330cd0500148008c29808004004c33c08008c8d4ccd5cd18548180089119800804181380389119800998130040021813803800986781001191a999ab9a30c203001123233573661d80a92012d20202d2d206f6b3a20446744617461506f6c69637920696e20636f6d6d697450656e64696e674368616e6765730000130c1030011230ec0549013e696e76616c69642064656c65676174652d6368616e676520726f6c652028666f72206e6f772920696e20636f6d6d697450656e64696e674368616e6765730000130cd02001323533357346190040022464002618e040022461d60a9201256f746865724d616e69666573744368616e6765206e6f742079657420737570706f7274656400001001003001223301f0010021533357346666138021340201294528099ab9b3330e5034913d2e2e2e206d696e744467743a2076616c696461746573207468617420616c6c207468652072656d6f766564206467546b6e7320617265206275726e6564004a09319ab9b3330e503491287468652074786e206d757374206861766520616c6c20746865206578706563746564206275726e73004a09319191919ab9b53335734661700a0029001099ab9b30e805530b50530c9050c70530e905330e7054914463757272656e746c7920737570706f7274696e67206f6e6c79206f6e65206d696e74696e6720706f6c696379206265696e67206275726e656420696e207468652074782000530c005001151498c8c8cd5cd99987501a493b726571756972657320616c6c20746865206275726e73206f66206f757220706f6c6963792d696420746f206265206163636f756e74656420666f72004a09319ab9b330e805330d40530e50300148000cc3a4152401276578747261206275726e7320666f756e6420696e20746865207472616e73616374696f6e3a200a00530210013357366661d4069201222e2e2e202d2d20656e64206f6620636f6d6d697450656e64696e674368616e676573004a09325133301f008223357366661d6069213b4558504543545320746865207370656e6444677420746f20636865636b2064657461696c73206f66205265706c6163652061637469766974696573004a09319191a999ab9a30c503001123233573661de0a661dc0a92012f20202d2d206f6b3a20446744617461506f6c69637920696e20636f6d6d697450656e64696e674368616e6765733a200000132353335734615c06002240102466ae6cccc3c40d2401447665726966696573207468617420612064656c65676174652071756575656420666f722072656d6f76616c206f72207265706c6163656d656e74206973206275726e6564004a093191a999ab9a30b5010011230f405330f20549013c7175657565642052656d6f7665206661696c65643a206e6f742070726573656e7420696e2070726576696f75732d6d616e6966657374206d61703a20000051232323232323533357346158040022466ae6cc3e4152413f202020202d2d20544f444f3a206d616e696665737420656e7472792077697468206f746865722d6d70683a20616c6c6f77206f7074696f6e616c206275726e00010123357366661f2069213f656163682070656e64696e67206368616e6765206d75737420686176652061206e616d65207265636f676e697a656420627920746865206d616e6966657374004a093191919191a999ab9a308f010011230ff05330fd054901377175657565642052656d6f76652f5265706c616365206661696c65643a206e6f206275726e2c206f7220646f75626c652d6275726e3a2000003123233573661fe0a661fc0a661fc0a661fc0a920114202020202d2d206f6b3a204255524e20f09f94a500530d705001490107c397f09f92b42000004335736a666ae68cc32c14cc3281520000050011308006330fe05330fe05330fe054912f7175657565642052656d6f76652f5265706c616365206661696c65643a206578706563746564206275726e206f662000530d705005490107c397f09f92b42000004151498cc0d0058028c23c04004004cc2300404c01d4c3d014018c2e408004cc35c14015200200100130ab0200330ac0200230ac0200130b701001001330b80100f00300130d40200430c4030011230ef054913e696e76616c69642064656c65676174652d6368616e676520726f6c652028666f72206e6f772920696e20636f6d6d697450656e64696e674368616e6765730000130d0020013235333573461960400224640026194040022461dc0a9201256f746865724d616e69666573744368616e6765206e6f742079657420737570706f727465640000100100132353335734603a0022464002603a002246ec926001002330b20530e30300248008cc060004c2f4080414c2bc14c3181431014544c39815240124756e726561636861626c653f206e6f74206d696e74446774206f72207370656e644467740030fc01001533309701096010930100730fa01530970100630f7015309601005153335734610006002246466ae6cccc3880d24133646f65736e277420616c6c6f77207570646174696e6720616e797468696e672065786365707420746865206d616e6966657374004a09319ab9b32353335734615c060022466ae6ccc3881528248121544f444f3a20737570706f7274207265746972656d656e74206163746976697479003357366661c806920156646f65736e27742072656d6f7665206120646744617461506f6c69637920656e7472792066726f6d20746865206d616e6966657374202875736520717565756550656e64696e674368616e676520696e737465616429004a09319ab9b3330e4034912b72656d6f7665732074686520696e64696361746564206b65792066726f6d20746865206d616e6966657374004a09319987201a495064656c656761746573204d55535420626520616c6c6f77656420746f2076616c69646174652074686174207468697320646f65736e27742064726f7020736f6d657468696e672074686579206e656564004a0930a999ab9a30ac030011233573661ca069215e69662064656c656761746573206e656564206120686f6f6b20746f2076616c69646174652074686174207468652075706474652069732061636365707461626c652c2074686174206d6967687420626520656e666f72636564206865726500335736661c40a941240124544f444f3a20737570706f7274207570646174696e67456e747279206163746976697479003330e40349013974686520696e6469636174656420746f6b656e204d555354206265207265666572656e63656420696e20746865207472616e73616374696f6e004a0930a999ab9a30aa0300112323232323357366661d0069213974686520696e6469636174656420746f6b656e204d555354206265207265666572656e63656420696e20746865207472616e73616374696f6e004a0931919ab9b3330e9034912f746865206e657720656e747279204d55535420626520666f756e6420696e20746865206e6577206d616e6966657374004a09319ab9b32353335734615a020022461d80a661d40a920123746865206e6577206d616e696665737420656e747279206973206d697373696e673a2000007123232323233573661de0a661dc0a9201272020202d2d206f6b2c20666f756e6420746865206d616e696665737420656e74727920666f72200000b3357366661de069212c746865206e657720656e747279206d75737420686176652074686520726967687420746f6b656e2d6e616d65004a09319ab9b330ed05330be0500200a49113746f6b656e2d6e616d65206d69736d6174636800335736646a666ae68c2900800448c3c81524011b6f746865722d6d7068206e6f742079657420737570706f727465640012498004004c8d4ccd5cd185a8100089187882a481452020202d2d206f6b3a206d61746368696e67206e616d652c2077697468204e616d6564546f6b656e52656620616464656420696e207570646174696e674d616e6966657374001230f205490143616464696e67456e7472793a20746865206e6577206d616e696665737420656e747279206d7573742062652061204e616d6564546f6b656e52656620666f72206e6f770000100330a30200330a40200230a40200130af01001001330b0013081020020053357366661d20692012f7468652072656d61696e646572206f6620746865206d616e6966657374206d75737420626520756e6368616e676564004a09319ab9b330e7053302130810200333022308102002005491266d616e6966657374206d6f64696669656420696e20616e20756e6578706563746564207761790030e90549012120202d2d206f6b21206e6577206d616e696665737420617320657870656374656400333333097010950100c4a093251003533309b0109a010970100b330c4055309b0100a48000c2a40c008c2a40c00454ccd5cd1853018008919ab9b330e205333309b01099010084a0932481203c2d2d2d2d2d20746861742063616e206661696c2c20746869732063616e277400335736661c40a941240129544f444f3a20737570706f727420666f726b696e67546872656164546f6b656e206163746976697479003357366661c80692013974686520696e6469636174656420746f6b656e204d555354206265207265666572656e63656420696e20746865207472616e73616374696f6e004a09319ab9b3330e4034913776616c696461746573207468617420616e6f7468657220636f7079206f662074686520746f6b656e206e616d65206973206d696e746564004a09319ab9b3330e403491467768656e20746865206b6579206973206120446744617461506f6c6963792c20746865206578697374696e67206d616e696665737420656e7472792069732075706461746564004a09319ab9b3330e40349185666f72206d696e742f7370656e642064656c65676174657320616e64206f746865724e616d656444656c6567617465732c2061206e6577206d616e696665737420656e7472792069732063726561746564207769746820726566436f756e743d312b6e6577546872656164436f756e742c20696620697420646f65736e2774206578697374004a09319987201a49567768656e20746865206d616e696665737420616c7265616479206861732074686520656e7472792c2074686520726566436f756e7420697320696e6372656d656e746564206279206e6577546872656164436f756e74004a0930924c002002944c3fc0800454ccd5cd1841018008919ab9b3330e103491526120666f726365642064656c6567617465206368616e676520697320616e206573636170652d6861746368206f6e6c7920696e766f6c76696e6720746865206d696e74657220616e6420746865204361706f004a093187102a495f746865206d696e742f7370656e642064656c6567617465206e6576657220697320696e766f6c766564207768656e20746865206d696e74657220697320696e737472756374656420746f20666f7263652061206e65772064656c656761746500123357366661c2069201526120666f726365642064656c6567617465206368616e676520697320616e206573636170652d6861746368206f6e6c7920696e766f6c76696e6720746865206d696e74657220616e6420746865204361706f004a093187102a4960746865206d696e742f7370656e642064656c6567617465206e6576657220697320696e766f6c766564207768656e20746865207370656e64657220697320696e737472756374656420746f20666f7263652061206e65772064656c6567617465000010041533357349444cd5cd986f82a4814e426173696344656c6567617465206861726e65737320646566657272696e6720746f207370656369616c697a6174696f6e20666f72204361706f4c6966656379636c65416374697669746965730a004a22a2940c8d4ccd5cd18570180089187082a4815964656c656761746520696e766f6b6564207769746820696e76616c6964206573636170652d68617463682061637469766974792028616c776179732068616e646c6564206469726563746c7920627920746865204361706f2900153335734617c060022466ae6cccc3800d2401402e2e2e2074686973204361706f206c6966656379636c65206163746976697479206973206f6e6c792076616c6964206f6e207370656e642064656c6567617465004a205266ae6ccc37814cccc25804254040112824c921203c2d2d2d2d2d20746861742063616e206661696c2c20746869732063616e27740033573661c00a92013020202d2d206f6b3a207370656e6444677420636865636b696e67204361706f4c6966656379636c654163746976697479000031533357346182060022466ae6cccc3800d2413f2e2e2e2074686973204361706f206c6966656379636c65206163746976697479206973206f6e6c792076616c6964206f6e206d696e742064656c6567617465004a205466ae6ccc37814cccc25c04254040112824c921203c2d2d2d2d2d20746861742063616e206661696c2c20746869732063616e27740033573661c00a92012f20202d2d206f6b3a206d696e7444677420636865636b696e67204361706f4c6966656379636c654163746976697479000031533357346162060022466ae6cccc3800d241884974204558504543545320746865204361706f20746f20656e666f726365207468652070726573656e6365206f6620746865206d696e744467742028746f20636865636b20746865207269676874206d696e742920616e64207370656e644467742028746f2076616c69646174652074686520636861727465722d757064617465206c6f67696329004a0932999ab9a333309701095010044a2940543000c54ccd5cd199984b0084a808022514a02a17a062a261c20a661be0a9214774686973204361706f206c6966656379636c65206163746976697479206973206f6e6c792076616c6964206f6e206d696e742f7370656e642064656c65676174652c206e6f74200002b1230e105491086e6f20776179206b000010013307c00100253309901091015308301307930b302006304500115333573460700022464646466ae6cccc3780d2411e636f6e746578743a204372656174696e6744656c65676174656444617461004a09319ab9b330dc05330d90510281333309501093010014a09324811e3c2d2d2d2d206661696c7320696e2074686572652c206e6f742068657265003357366661bc0692015d20202d2d20656e73757265732074686520646174612d636f6e74726f6c6c657220697320696e766f6b6564207769746820697473206d696e74696e6720616374697669747920666f722074686520696e64696361746564207265634964004a093191919191986e8289986e8289986e8289986e8289986e828a51133333333333333306b30b90200c00733574061b80a0046ec5264a2006941264a0932514a0941264a093099987081a493c6974206f75747075747320746865206e65772064656c6567617465642d64617461207265636f726420746f20746865204361706f2061646472657373004a093099998468084580802800803099987081a48158656e73757265732074686520646174612d636f6e74726f6c6c657220697320696e766f6b65642077697468204f4e45206d696e74696e6720616374697669747920666f722074686520696e64696361746564207265634964004a0930a985b0099985c8085b80802003a9855029801000a9808986300801183a80219999984b0084980847808008012504994c20c04c1e8c2d00801cc0dc008c0dc00454ccd5cd181a0008919191919ab9b330dc05333309401093010014a09324811e3c2d2d2d2d206661696c7320696e2074686572652c206e6f742068657265003357366661bc0692016e45585045435453206a36626d66763a20616c6c20616e64204f4e4c592044656c6567617465644461746120646174756d73206d757374206265207370656e74207769746820746865204361706f2773207370656e64696e6744656c65676174656444617461206163746976697479004a09319ab9b3330de034917a696d706c656d656e747320612067656e6572696320646174612d636f6e74726f6c6c65722072652d64656c65676174696f6e20636f6e76656e74696f6e206261736564206f6e20746865206361706f2773206d616e6966657374202874686f7365207769746820747970653d20446744617461506f6c69637929004a09319ab9b3330de0349159656e73757265732074686520646174612d636f6e74726f6c6c657220697320696e766f6b65642077697468204f4e45207370656e64696e6720616374697669747920666f722074686520696e64696361746564207265634964004a09319ab9b330dc05530b2013330b4010b301333333096010930108f010010034a093001249265e5e5e2074686f73652063616e206661696c2c20746869732061737365727420776f6e27742e0032335736661ba0a6614e0a0020029201086e6f20776179206d00335736a666ae68cc2f0152410873657474696e67730000413233573661c206661be0a921407768656e207570646174696e67207468652063757272656e74204361706f2073657474696e67732c207468652064656c656761746573206d75737420616c6c200049013e686176652061206368616e636520746f20656e73757265207468652073657474696e6773206172652076616c696420666f72207468656972206e65656473005333573494054ccd5cd1985782800802099ab9b30e00549104202d3e2000335736661bc0aa6100020069210b6e6f20776179206a6f73650030e005490104203c2d2000151323230e205330e105330e105330e10549011420202d2d204e4f54453a207570646174696e6720000024911e2c2077686963682069736e27742063757272656e7453657474696e67733d00001530da05002530d9050041514994c03ccccc278042500400928a51151498cc368144cc29414cccc228042200400800c01124012020202d2d20646964206f75747075742064656c65676174656420646174613f200014a26666661180211602002941264a2004a61060260f461680400e606600460660022a666ae68c0c000448c8c8cd5cd99986e81a495f7468697320636f64652069732074726967676572656420627920626f746820746865206d696e7444677420616e64207370656e644467742c2077697468206561636820646f696e67207468656972207061727473206f6620746865206a6f62004a09319ab9b3330dd034912c746865207370656e6444677420616c6c6f777320746865207370656e64696e67206f6620746865207574786f004a09319ab9b3330dd034912b746865206d696e7444677420726571756972657320746865206275726e696e67206f662069747320555554004a09319ab9b3330dd03491486974206d757374206e6f742064656c6574652061207265636f726420746861742773207374696c6c207265666572656e63656420627920746865204361706f206d616e6966657374004a09319ab9b3330dd034914861206d61746368696e67206d616e696665737420656e7472792068617320746f206265206368616e676564206f722072656d6f766564207072696f7220746f2064656c6574696f6e004a0931919ab9b30df034911c7665726966792074686520696e7075742077617320666f756e64205e00335736661b80a94124011844656c657465206e6f7420737570706f72746564207965740033573661be06920143696d706c656d656e74207468652067656e6572696320646174612d636f6e74726f6c6c65722072652d64656c65676174696f6e20636f6e76656e74696f6e20686572650033573661be06920148656e737572652074686174207468652072696768742064656c656761746520697320636f6e73756c746564207769746820697473204275726e696e67416374697669746965732e2a00330d9051333309501093010024a0930a5033333308b0108a010014a0932510025308201307930b302006302f00115333573460800022494454ccd5cd181e80089251124a200200c600261360aa12c0a610c04615c0400260a20022464646a666ae68c10400449400c54ccd5cd182200089280189198130030038008020986b82a4810f77726f6e672041637476792f64746d0000100221308e0530c70500121308c0530c60500122333308b0500230bd0500123374a9000186082800899ba548008304148c31c0cc310140048cc21c140052000223232330010010042253335573e002200226464a666ae68cdd78029aab9d0021330040040011335740004660080080026ae88008d5d0800985d82800911199853828019119802001199857810568105481000800909919b96491017b003372c6660020020049452401017d0022253335573e004292010013372c666ae680052401004901012c0032323232323372c66e58cdcb1801912999ab9a0021530bc050011530ab05006491013a00300122533357340042a61580a0022a61560a0086660100106ae8801d281843828009aab9e00330860500135573a0026ae8400888cdd7986f80801186f8080091191919800800802112999aab9f0011001132325333573466ebc014d55ce801099802002000899aba000233004004001357440046ae84004c30c140055d110986181185e028009191198009841829aab9d00230800235573c0046ae840048c3e4100048888ccc2801401088c00888ccc01c008004ccc2a8082a0082900800c8cc00400c0083d8108ccc2840827c0826c08d5d0800911987a8200111801199851010500104e01000919ba548000c2bc14c3c41000484c3bc10c2d0140055d11119baf30d10100230d10100122330f0040022300230ed0400130e8044c103d879800030e7044c0103d87a800030e6044c0103d879800030e5044c0103d879800030f1044c010f4e5333447269766572506f6c6963790030e2044c01010100223232353335734604000224a0062a666ae68c08c00449400c49280008018985b02a490c6e657665722063616c6c656400222335736616a0a9211220202d2d206164646c206467742076616c2000330e204132353335734603e0022494454ccd5cd181100089185c02a4811d756e726561636861626c6520696e206120646744617461506f6c696379001533357346032002246464646466ae6cc2ec1524011d7265676973746572696e672061206e65772053334472697665722e2e2e003357366661760692012e746865206f70657261746f72206d7573742070726f7669646520612076616c6964206d696e74696e672073656564004a09319ab9b3330bb03491327468652073656564206d757374206861766520612053334472697665722e6f70657261746f7220746f6b656e20696e206974004a093191919ab9b330bb055305b530630094910e6e6f20636861727465722072656600323233573661800692012673656e64207468652066656520746f20547265617375727920772f20616363746720696e666f00323357366617c0a661d608661d40861d00861c60813e0a61c40861c60813e0a1c20892011074786e206475726174696f6e206572720032335736a666ae68c2f814cc37c100052401076d656d6265722d00130c20549119696e76616c6964206d656d62657220746f6b656e206e616d6500151498c8cc2f4144cc2f4144c8d4ccd5cd185d0100089186282a49146d697373696e67206d656d62657220746f6b656e00124a2002661620461020a1420a46615a0a661c008610c0a00200490010a982200188031985682984c01181e007298450280098218009821a98470080129847008009999999984300838036833004a513002491057333647276004a093199999999999999822984981181b80480119aba030b605491057333647276003762932510014a09325049928a504a093250498c144004c0bc004004004c06000454ccd5cd180e000891919ab9b330b605530565305e0044910e6e6f2063686172746572207265660032323233573661760a92012d7570646174696e67207468652064657461696c7320666f7220612073696e676c652053334472697665722e2e2e0032323357366601a6601861f8081380a004464646466ae6cccc3040d24148746865206c617374486561727462656174206d75737420626520657874656e6465642062792073657474696e67732e6578706563746564486561727462656174496e74657276616c004a09319ab9b330bf055304300149011c3c2d2d2074686174207468726f77733b20746869732063616e27742e00498c110c37010c36810004cc2f00cc360102781400cc108c36810c358100052899998340042481087333647269766572004a2004666660d000e9452401087333647269766572004a2002605600200200260360022a666ae68c05800448c2e0152401196e6f206275726e20616374697669747920686572652079657400124a00020062661080aa6196081280aa6066004446618e0800446004618e0800244646600200200644a666aae7c00452613357366006618e086ae84004cc008008d5d10009185b0118530280092999999aba40011325333573466e1cd55ce800a4020264a666666ae900045280a5013253335573e00229404c94ccd5cd185d81000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330e804001480408c3a810c2841400494cccccd5d20008992999ab9a3370e6aae74005200e1325333333574800229405280992999aab9f00114a0264a666ae68c300100044c94ccd55cf8008a5013253335734618208002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661ca0800290071187382184f028009187282184f8280092999999aba40011325333573466e1cd55ce800a4018264a666666ae900045280a5013253335573e00229404c94ccd5cd185e020008992999aab9f00114a0264a666ae68c2f4100044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc38410005200c230e204309a05001230b304309b05001253333335748002264a666ae68cdc39aab9d001480284c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30b10400113253335573e00229404c94ccd5cd185d02000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811986e82000a40144a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a50132533357346602c02a002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc36c100052008233017016309605001253333335748002264a666ae68cdc39aab9d001480184c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a3301b0190011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661b008002900311980800798498280092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd1980a009000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330d504001480108cccc2200c2180c2080c2000cc2401400494cccccd5d20008992999ab9a3370e6aae7400520021325333333574800229405280992999aab9f00114a0264a666ae68cccc2300c2240c2140c20c0c0044c8ccd55cf800a514a06ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811986902000a400446666666618c04188041800417c0417804174041700416c04611a0a0024a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a5013253335734666666661940418e04186041820417e0417a041760417204002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc33c10005200022222222223200253335734666666666601601401201000e00c00a008006004002293099ab9c4901265761726e696e673a20696e76616c69642044656c6567617465416374697669747920646174610049888888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a511533357346012002294454ccd5cd18050008a5114a04a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a5013253335734614a08002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a02940894ccd5cd18010008a5114a04619a08610c0a0024a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a5013253335734614408002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a0294088c80094ccd5cd198018010008a4c266ae71241265761726e696e673a20696e76616c6964205370656e64696e674163746976697479206461746100498894ccd5cd18010008a5114a0461340861040a0024a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a5013253335734613008002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a0294088c80094ccd5cd198018010008a4c266ae712401255761726e696e673a20696e76616c6964204d696e74696e674163746976697479206461746100498894ccd5cd18010008a5114a04a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a50132533357346024002264a666aae7c0045280992999ab9a30980400113253335573e00229404c94ccd5cd184c02000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc304100052004230de0130fc04001253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30e2010011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046617c08002900104c8212999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd187d810008992999aab9f00114a0264a666ae68c248100044c94ccd55cf8008a5013253335734612408002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a5022223200253335734666600a008006004002293099ab9c491235761726e696e673a20696e76616c69642044656c6567617465446174756d20646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a04266ae6ccc3f410cc2b010528899802000800a49066e6f20776179004a2461740866108080029101026d7400232002533357346006002293099ab9c491225761726e696e673a20696e76616c69642053334472697665724461746120646174610049888c8c94ccd5cd19baf330860400248902696400330860400148810269640015333573466ebccc2181000922010474797065003308604001488104747970650015333573466ebccc218100092201026d740033086040014881026d740015333573466ebccc218100092201026e6d0033086040014881026e6d0015333573466ebccc21810009220104746e736e003308604001488104746e736e0015333573466ebccc2181000922010470757270003308604001488104707572700015333573466ebccc2181000922010376736e00330860400148810376736e0015333573466ebccc2181000922010464657363003308604001488104646573630015333573466ebccc218100092201056d747263730033086040014881056d747263730014a229405280a5014a029405280a5014a02940dd58011bab002253335734666100080026ea5221056d7472637300002153335734666100080026ea522104646573630008b04153335734666100080026ea52210376736e0008b04153335734666100080026ea522104707572700008b04153335734666100080026ea522104746e736e0008b04153335734666100080026ea5221026e6d0008b04153335734666100080026ea5221026d740008b04153335734666100080026ea522104747970650008b04153335734666100080026ea52210269640008a0414a22a66ae71241225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a02a66ae712401225761726e696e673a20696e76616c69642053334472697665724461746120646174610014a04a666666ae900045280a50130023758002294052811919800800801112999aab9f00114a22a666ae68c22c10d5d08008998010011aba200114a04444444444444446464646464646464646466ae6d4ccd5cd1846829984a0200100c8991919ab9b30920533091054911d20202d2d206e6f206d696e742066726f6d206f757220706f6c696379200000233573661240a00266ae6cc248152401105e5e202076616c7565206d696e74656400309305490134e29d8ce29d8c2076616c69646174655575744d696e74696e6728293a206e6f206d696e742066726f6d206f757220706f6c69637900530de04003530f704019151498c8cd5cd998128009119184a02998498299849829984982a4811a20202020e284b9efb88f20f09f909e2065787065637465643a2000530ec040024901027820000015308c050023232335736a666ae6928899ab9b3302700122323096053309505330950533095054911a20202020e284b9efb88f20f09f909e20202061637475616c3a2000530ee040024901027820000015308e0500233573661260a9211d6f7468657220706f6c6963792076616c756573206d696e7465643a200a00309305530e004309604330c301530dd0400522330960400201e151498cd5cd99984981a48141456e737572657320746865206d696e7420666f72207468697320706f6c6963792d69642069732065786163746c79207468652065787065637465642076616c7565004a0931919ab9b3309205001491146d69736d6174636820696e20555554206d696e740033573661280a92011820202d2d20746869732d706f6c696379206d696e74206f6b00335736661240a660601e6080389201076e6f20736565640033573661280a92013520202d2d206f6b3a20686173207365656420616e6420657870656374656420746869732d706f6c696379206d696e742076616c75650032335736661260a661b6080029211e20202d2d206f746865722d65787065637465642d6d696e7473206f6b3f200049012a756e726561636861626c6520657863657074696f6e3a206f74686572506f6c69636965734d696e744f6b00335736612a0a92011e20e29c852076616c69646174655575744d696e74696e673a20206f6b210a003309005133090051008100210015333573461220aa6126080182944544cd5cd99984a01a492b2e2e2e207769746820616e206164646974696f6e616c206d696e742d76616c756520696e64696361746564004a093192999ab9a530940400114a22a266ae6cccc2540d2401262e2e2e77697468206f746865722d706f6c6963792076616c7565732065787065637465643a20004a09319ab9b3095053309405530e20400149011b5e206f746865722d6d696e742076616c75652065787065637465640033573666612a0692013049742073686f756c64206d696e742065786163746c792074686520696e6469636174656420746f6b656e206e616d6573004a09319ab9b3330950349144446f65736e277420636f6e73747261696e20616e79206d656e74696f6e656420706f6c6963792773206d696e74696e67206f6620616e79206f7468657220746f6b656e73004a09319ab9b33028530df0400122323302c0022253335734612e0a646a666ae68c0b4004492809191984382800802181680080099815001801099184e029984d029984d029984d02a4812ce29d8ce29d8c2076616c69646174655575744d696e74696e6728293a2077726f6e67206d696e7420666f72200053082050064901013a000015309305002151498cc2541002400928a999ab9a330980400501d130970433023530de0400501d151005330200010033301e0010273308f0400301a3301c3308e0400101902533083043308304008007301a330190162333333308e030194a26014002941264a093187782076822999ab9a00114a22a26464a666ae680184cccccc09800406128802a510041514a2615402002661d6086660f402c9412648000c224154c22c100154ccd5cd003880308132999ab9a008100714a2a666ae680244020528a999ab9a00a100910800553335734016201421fe08a666ae68030402c4c07003888ccc3ac0c0088c3ac0cc008c2d410004dd8a4c4646600200200444a666aae7c00443c0104cc3b00cc3a40cc3a00cd5d0800998010011aba200122330e40300222333300330b50435573a004614c086aae78008c2d410d55ce8009853021aab9e001223375e60060046006002e9888c8c8cc004004010894ccd55cf8008800899192999ab9a3375e00a6aae740084cc0100100044cd5d0001198020020009aba20023574200261c00800244666615a0800461c008002466e95200030e30400113374a9001071821184f0218730200091985482000a400444646600200200644a666aae7c0045261323357366600861be066aae74004c3ac08d55cf000998018019aba20023574200244646600200200644a666aae7c00452613233573666008615c086aae74004c27c10d55cf000998018019aba2002357420024444661b6060080044646464646464644661e408661e4080029201012d00002530d9040013330d903530d80300148001200c533357346617e0861ac060049009099ab9b330ed044a09211663626f722874786f496429206c656e203e203920212100002151330d503330d503001530b80449010140000023330d703530d30300348029204a530d10300130cf0300230cd030012222223232323357366661e40492014472657175697265732074686520636861727465722773206d696e742d64656c656761746520746f20617574686f72697a652074686973206d696e74206163746976697479004a09319ab9b30f204330f10449011a20202d2d2066696e64696e6720696e707574206467546b6e3a200030ed010093233573661e60892124202020202d2d20e29c8520e29ea1efb88f2020f09f9281666f756e64206467546b6e205e0032323232330f204100110024a2646a666ae68c04000448c3e01000c48c8c8c8d4ccd5cd184a01000891919ab9b30fd02490147564552494659207765202d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d20646f6e2774206e656564207468652066756e6e792072656465656d65722d636865636b20736b697070696e6700335736a666ae68c3e4100344cd5cd987e022494a207676762077686572657665722069742069732c2070726f6261626c79206265737420697420757365732074686520636865636b4d696e744467744163746976697479206f7074696f6e0030fd0449013c77686572652069732065787472614d696e7444656c656761746552656465656d6572436865636b3d66616c7365207265616c6c79206e65656465643f00151498c8d4ccd5cd1875010008919ab9b30fe044911520202d2d206f6b2c206467546b6e207370656e740a004a22a666ae68c3980800448c3fc1124119444c413a3a5265746972696e672063616e2774206d696e7421001230ff04490123444c413a3a56616c69646174696e6753657474696e67732063616e2774206d696e74210000100130930200112300b003001001333333333309402093020910208e0208b02089020870208502083020ff0100130100010013300d30d3030d404002330f304330f3044901066467546b6e200030ef0100b4911c206e6f74206265696e67207370656e7420617320657870656374656400330ea0230d1030d20423235333573461a40600224661a40661a20600200824940004004c8d4ccd5cd1871808008919185a8200098740080089187a821987982249172020e29d8ce29d8c206d697373696e67206467546b6e200030ef0100b001330e10130b1040d1042330c304330900430b60400100248000cc3a40402001d4ccd5cd00188010805a999ab9a004100314a244666614a08004618806002466e95200030db0400113374a900106d821184c02186f0200091985082000a4004466ae6cc3981124016f79696b65732c206578706563746564207468652064656c656761746520746f207573652061637469766974792044656c65676174654c6966656379636c65416374697669746965733a5265706c6163696e674d65206f7220617574686f72697a696e6744656c65676174652e2e2e0a0033573661cc08661ca08661ca089201512020202d2d206e6f74653a20666f72206f746865722063617365732c206120636f6e746578742d737065636966696320636865636b207669612076616c69646174655575744d696e74696e67277320280a0049014820202e2e2e0a2020636865636b4d696e7444677441637469766974793a2028416273747261637444656c656761746541637469766974696573456e756d29202d3e20426f6f6c290a0049013329206f7074696f6e2063616e206265207573656420746f2073746565722061726f756e642074686973206661696c7572652e0a00335736661c80894124011c756e65787065637465642064656c6567617465206163746976697479004a04466ae6d4ccd5cd1871821985d0098528200111986181985382000801099ab9b30e60449116202d20657870656374656420736565645574786f3a200033573661cc08a617a0600266ae6cc398112401010a00330e4044a09201276d697373696e67206578706563746564207365656420696e70757420666f72206d696e74696e6700151498cd5cd9873022491420202d2d206861732073656564202d3e206f6b0a004a246605c002a0da4266ae6ccc38410cc240105288998590229818000a9818000a490a6372617a792074616c6b004a24466ae6ccc38410cc2401052889981880100124811270726576656e7420756e757365642076617200323533357346110040022461cc0892015874686520666f7263696e674e65775370656e6444656c6567617465206573636170652d686174636820616374697669747920697320616c776179732068616e646c6564206469726563746c7920627920746865204361706f00153335734610c040022461cc0892015774686520666f7263696e674e65774d696e7444656c6567617465206573636170652d686174636820616374697669747920697320616c776179732068616e646c6564206469726563746c7920627920746865204361706f001533357346108040022466ae6cccc394092401252e2e2e20666f72207570646174696e6720746865204361706f206d616e69666573742e2e2e004a0932861010a999ab9a308e02001123357366661ca04921272e2e2e20666f722071756575696e6720612070656e64696e67206467742d6368616e67652e2e2e004a0932862810a999ab9a308c02001123357366661ca049212e2e2e2e20666f722072656d6f76696e6720612070656e64696e67206467742d6368616e676520656e7472792e2e2e004a0932861010a999ab9a308a02001123357366661ca04921292e2e2e20666f7220636f6d6d697474696e672070656e64696e67206467742d6368616e6765732e2e2e004a093285a810919ab9b3330e502491342e2e2e20666f72206372656174696e672061206e65772064656c65676174652028646570726563617465642070617468292e2e2e004a09319ab9b30e6024912664657072656361746520757365206f6620434c413a3a4372656174696e6744656c65676174650050c502001001213232323232323232323357366661d4049201312020202d2d206f6e6c7920746865207370656e642064656c65676174652063616c6c7320746869732066756e6374696f6e004a0931919ab9b3330eb024916a20202d2d207370656e642064656c656761746520726571756972657320746865206f746865722064656c6567617465732076616c69646174652028657863657074206d696e742064656c6567617465203d3d2073616d65206173207370656e642064656c656761746529004a09319ab9b3330eb0249131676f7644656c6567617465204d415920636f6e7472696275746520746f2073657474696e67732076616c69646174696f6e004a093191919ab9b3330ed02491277370656e6420696e76617269616e7473206d7573742076616c69646174652073657474696e6773004a0931919ab9b3330ee02491266d696e7420696e76617269616e7473206d7573742076616c69646174652073657474696e6773004a0931919ab9b3330ef0249128646744617461436f6e74726f6c6c657273206d7573742076616c69646174652073657474696e6773004a0931919ab9b3330f002491266e616d65642064656c656761746573206d7573742076616c69646174652073657474696e6773004a0931919876020998760209987602099876020998760208010803880308020801880099980a80599ab9b3330f0024913420202d2065616368206f746865722d6e616d65642d64656c6567617465206d7573742076616c69646174652073657474696e6773004a09311119ab9b30f304330f2044911a20202d206f746865722d6e616d65642d64656c65676174653a200000233573661e608921010a00330ee0410031530173333330e6010e0010dc0100100a0114a2944cc04801c88c8d4ccd5cd185a8080089192980c199999873808708086e8080080580925130b4010011233573661e608661e40892013220202d2d2069676e6f72696e67206d616e696665737420656e74727920286e6f742061206461746120706f6c696379293a20000044a2002615202002660200100046601e012002466ae6cccc3b40924120696e76617269616e74206d7573742076616c69646174652073657474696e6773004a093298089999998700086d0086b00800802005a5132353335734601a0022494448cd5cd9876822495020202d2d20676f76417574686f726974792069736e27742061207363726970742d62617365642076616c696461746f723b20646f65736e27742076616c6964617465206e65772073657474696e67730a004a20026666661bc021b0021a802008004012940cccc08007c0292824c6150081900861000200a6102020086102020066104020046106020026618208004900018170012980b00091984d02000a40004466128080044600461bc02002446466128080060024660046138086aae74004c26404d55cf0009098460218698200091119985c0200191199802001184e021aab9d00130dd0135573c0020024266ae6cccc36c092413d726571756972657320746865206368617274657220746f206265207265666572656e63656420696e207468652074786e2c2062757420756e7370656e74004a09319191a999ab9a30650011200415333573460c00022461be089201314361706f4374782e776974684368617274657252656628293a20636861727465722069732066726f6d20696e70757473210012323232323302c00333066001002330bf0430840130fd0330f90300148000c138004c0ac004010004004c09800484cd5cd99986d012492e726571756972657320746865206368617274657220746f206265207370656e7420696e2074686520696e70757473004a09319191a999ab9a305f0011200415333573460c80022461bc089201304361706f4374782e7769746843686172746572496e70757428293a20636861727465722069732066726f6d207265662100123232323233573661c208920129202020202d2d204361706f4374782066696e64696e67206368617274657220696e20696e707574730a0032323302d00533062001002330c00430850130fe0330fa0300148000c8d4ccd5cd1869008008919000986b80800891872022491e4d697373696e67207265717569726564206368617274657220696e70757400001330d00130a0040c0040012330b104330fe0330a40400100248000cc32c100054c2a011241076368617274657200302a00100400100130250012213357366661b404920146726571756972657320746865206368617274657220746f20626520617661696c61626c6520696e20746865207472616e73616374696f6e2028696e707574206f722072656629004a09319191a999ab9a30640011200415333573460be002240082464646464646a666ae68c3640400448cd5cd98718224813d4361706f437478206e656564734368617274657228293a206e6f2063686172746572207265663b206d75737420626520696e20696e707574732e2e2e0a005300b00a123233573661c80892012a4361706f437478206e656564734368617274657228293a20666f756e642063686172746572207265660a00323302f00733069001002330c20430870130800430fc0300148000c35c04004004cc34004c2dc0c300100048cc2c410cc3f80cc290100040092000330cb04001530a804491076368617274657200302a00100400100130250012232323232353335734600e0022461be08661ba08920120e29d8ce29d8c20f09f938e205e206f757444443a206e6f7420666f756e643a2000005123233573661be08661bc0892011d2020202020e29c8520f09f938e205e206f757444443a20666f756e642000006001301c001001330c60130f5030bb042330d8041330d80414a2266146086618e08661f406614408002006900124811720202d2d206f7574707574206861732076616c75653f20001330a304330b20330b1030010024913520202020202d2d20666f756e64206f75747075742e2e2e20697320697420617420746865207269676874206361706f416464723f20005300b004330c6043026003002530d20400123309104001480088888cd5cd99986c812481412020202d2d2076616c696461746573207468617420746865206e6577207265636f72642069732073746f72656420696e20746865204361706f2061646472657373004a093191919ab9b3330db02491602020202d2d2076616c696461746573207468617420746865206e6577207265636f7264206d6174636865732074686520747970652d6e616d6520696e6469636174656420696e2074686520646744617461506f6c696379206d616e6966657374004a093191a999ab9a306e00112323253335734661c20661a404004010266ae6cc37c10cc3781124011220202d2d2065787065637465642069643a20000013230e104330df0449011de29d8ce29d8c20f09f938e206f757444443a2077726f6e672069643a2000001530d80430d20200215153335734661620861a20400400e266ae6cc37c10cc378112411420202d2d20657870656374656420747970653a200000730e004330de0449011de29d8ce29d8c20f09f938e206f757444443a2062616420747970653a200030d10200215133573661be08661bc0892125e29c8520f09f938e206f757444443a206f6b3a205e206f7574444420746f204361706f3a20000014a2a61ae0800e61a204619a040082461bc08921196f7574707574206e6f742064656c65676174656420646174610000100133330870107e06d06900130f50330f30333004003002222232322533357346616006615e06002004264646a666ae68c1bc00448c8cc368104cc2f010c344080040284cc230104cc2b81001d221001330ae0430d20200100730d20230ce02003124a0002666611202100020de0d600261ee0661ea060022a29414c0240154ccd5cd00108008a4410022222323232335736661b208661100826615608618406004900009985582186101a985701801a4000921276461746120707265646963617465206d7573742068617665206964206f7220747970654e616d65002533357346616206615c06002004264646a666ae68c1c000448c8cc36c104cc36c105288998468209985e820042481001330bd0430d20200100813308d041330af04007489001330af0430d30200100730d30230cf02003124a0002666611402102020e00d800261f00661e8060022a29414c02801d4ccd5cd00188010a4410053335734008200629201002222223232323233573661b808661b6089211420202d2d20657870656374696e6720696e444420000013235333573461a8020022461be089211ee29d8ce29d8c20f09f938e205e20696e44443a206e6f7420666f756e640a00123233573661be0892011820202020e29c8520f09f938e205e20696e44443a206f6b0a0000130d201001001330cb01309b040bb04002530d404002333330080074a0932510015333573400620042a614408002a666ae68010400c52401002222223232323233573661b608661b4089211520202d2d20657870656374696e6720726566444420000013235333573461a6020022461bc089211fe29d8ce29d8c20f09f938e205e2072656644443a206e6f7420666f756e640a00123233573661bc08920115e29c8520f09f938e205e2072656644443a206f6b0a0000130d101001001330ca0130b1030ba04002530d304002333330080074a0932510015333573400620042a614208002a666ae68010400c5240100213200130a303530040012222222323233333038008007001333330c5010083097040b70430240094a20046048012a666ae6800c4008540254ccd5cd00208018a51109f03213235333573460ae002246400260aa0022a666ae68c14800448c8004c14000448c344112419b4361706f4374782e7265736f6c7665436861727465725574786f28293a20756e6b6e6f776e20636861727465722073747261746567793b2075736520726573756c74206f66207769746843686172746572496e70757428292c20776974684368617274657252656628292c206f72206e6565647343686172746572282920746f207265736f6c76652063686172746572207574786f206669727374000013019001222132323235333573460aa002246400266162086666100020ee0cc0c461de0661da06661a00461d8061640846619e082661520661500600200826614808661e20661320800200a9000240002461a8089201484361706f4374782e6765744e657874436861727465724461746128293a20696e76616c6964206578636570742077697468206368617274657220737472617465677920496e70757400001301c00353003002330bb04301b0015309804491076368617274657200213235333573460aa002246400260a80022a666ae68c14000448c8004c13c00448c33c112401984361706f4374782e676574436861727465724461746128293a20756e6b6e6f776e20636861727465722073747261746567793b2075736520726573756c74206f66207769746843686172746572496e70757428292c20776974684368617274657252656628292c206f72206e6565647343686172746572282920746f207265736f6c7665206368617274657220646174756d206669727374000013017001222232323232335736661a008661fe0620022619e0800892011d6e6f7420616374696e67206173207370656e642064656c656761746521000013309704330a104330ee03309404002001480012412d202020202d2d20616374696e67206f6e207370656e644467742d2a20746f6b656e207269676874206e6f773f2000330c801307153006005301c005508d0453335734004200229448888c8c8c8c8cd5cd99867821987f018800898670200224811c6e6f7420616374696e67206173206d696e742064656c656761746521000013309604330a004330ed03309304002001480012412c202020202d2d20616374696e67206f6e206d696e744467742d2a20746f6b656e207269676874206e6f773f2000330c701306b53006005301b005508c045333573400420022944888888c8c8d4ccd5cd1809800891869021986802249286d697373696e67207265717569726564206461746120706f6c696379207769746820747970653a20000061232332353335734612c02002246464466002006004612a02004612a020022461aa08661a608921256d616e696665737420656e747279206973206e6f742061206461746120706f6c6963793a2000009001308a01001223357366661a804661a60892012c7265717569726573207468652064656c6567617465642d6461746120706f6c69637920666f7220747970653d000094a0931999999805805001185481004a510064a2601a002602a0020026602c60cea600e00a008a666ae680084004528919ba548000c2e010c3081000488cccc20c10008c308100048cdd2a4000617208002266e9520020b904230c30130bc040012330ff0300148008884cd5cd9998628124812d6974206d757374206861766520746865204361706f277320676f76417574686f7269747920617070726f76616c004a09319ab9b330c3043333330ae01305f5300200130110014a093250499241086e6f20776179206d00001230930330b904001222232333330060050044910f63757272656e7453657474696e6773004a2002a666ae680084004528911111919191a999ab9a300b001123357366618e08618c0800866190089201216d697373696e67207265717569726564206d616e696665737420656e7472793a2000007500b1232300b308101001300d00100100133300c00600500453335734004200229448cdd2a4000616008615c08002211e064661f00600290011183b18598200091987b01800a400044466ae6cc2f410cc2f0112412a202020202d2d206c6f6f6b696e6720666f72206361706f2773206d616e696665737420656e7472793a2000001323300530560010023309b04530030024800088cccc3d80c008c2d4100048cdd2a4000615808002266e9520020ac04213232353335734608c00224617a080062a666ae68c10c00448c2f41000c48c8c8c8c8d4ccd5cd181b0008928018a999ab9a30320011250031533357346072002240082a666ae68c0c00044801054ccd5cd181a00089002090020008010a999ab9a4a22617e089201186e6f6e2d4368617274657244617461206163746976697479001515035333333303a03803503203002e02c30b302001303c0010013005002491197265717569726573206368617274657220617320696e7075740022222222323232333013002001300e008330080070015333573400620042a611208002a666ae68010400c524010022335740614a0800466ae80c118004dd8a4c4666608408007a07061080600246144066104060021fc041f80442646a666ae68c3f00800448c8c29808004c3f00800448c2d41124012e657870656374656420436f6e737472446174617b6d5374727563747d20666f7220446744617461206f75747075740000130ce0330cc03530020012132353335734610002002246400260fe0022a666ae68c1f000448c8004c1ec00448c2d0112410e6e6f206f757470757420646174610000130040012223333004307d0020034901000012222335740610a0200866ae80c2801000ccd5d018560200119aba0309f0400137629311999983f83f03e83d83b987d8100090992510012132323232323232323233573666166080029201026e6f00335736661660866666613c0201000c941264a0932481026e6f0000a32353335734614202002246466ae6ccccc04c048030cc3ec08cc3c00825810004010cc2d8112401146467546b6e206e6f742072657475726e65643a2000006323533357346146020022466ae6cc2e410cc2e011240122202d2d20676f6f642c20746865206467546b6e20697320756e6368616e6765643a20000084a22466ae6ccc05003924010c646774206d6f6469666965640030ba04490100001330a10130d0030960423308704530f00230d203001530f00230d0035301700a30a40100112335736660220169210f756e63684f7574202d206e6f2076680030b70449010000100233333330b1020044a2004941264a09318558080118560080080198090019809001180b00080091119ab9b32353335734610c0400224615e08921326f6b2c20636865636b696e67207370656e64696e6720616374697669747920666f7220612044674461746120506f6c696379001230b00449013977697468556e6971756544445370656e64696e6741637469766974793a206f6e6c792076616c696420666f7220446744617461506f6c69637900001301500233573666615a0492016877697468556e6971756544445370656e64696e6741637469766974793a20636865636b732070726573656e6365206f662064656c6567617465642d6461746120636f6e74726f6c6c65722773207370656e64696e6720616374697669747920666f72207265634964004a0931919ab9b30ae04330ad0449010e202020202d2d2072656349643a2000001335736615e049210b54455354205448495320760033573666615c049201317370656e64446774206d75737420626520616374696e67206f6e20746865206d61746368696e67207265636f72642d6964004a09319ab9b3330ae0249145656e7375726573207468652064656c656761746520697320756e6368616e6765642c20736f2063616c6c657273206e6565646e277420616c736f20636865636b2074686174004a093191a999ab9a30c6010011232335736646a666ae68c3ec0800448c8c8cd5cd99859821984f820010012481086e6f2077617920650032533357346617006014002266ae6cc2d810cc2d4112411820202d2d2065787065637465643a205370656e64696e673a00009335736616c086616a0892011620202d2d2061637475616c3a205370656e64696e673a005309e040013301100b49010e7265634964206d69736d617463680015130b604330b50449012d20202d2d206f6b3a20444420636f6e74726f6c6c6572207370656e64696e6720616374697669747920666f72200000930f20330a60200130fc0200230ea020011230b4044901086e6f207761792066000010015300700630c501001153335734617202002246466ae6cc2c41124121202020202d2d206d756c7469706c65206163746976697469657320666f756e640a00335736666601a01800c6610208601400290002491c6e6f207370656e64696e67206163746976697469657320666f756e6400323357366661640492014a6f6e65206f66207468652064656c656761746520646174612d636f6e74726f6c6c6572206d756c74692d61637469766974696573206d7573742074726561742074686973207265634964004a09319ab9b333300e00d007330f8033308204300b0014800124011a64677420616374696e67206f6e20746869732072656349643f2000330b104491266e6f207370656e64696e6720616374697669747920666f756e6420666f722072656349643a200000533573666616404921396f6e6c79206f6e65206f662061206d756c74692d616374697669747920666f72206120676976656e20726563496420697320616c6c6f776564004a09319ab9b333300e00d007330f8033309c04300b0014800924011665786163746c79206f6e652061637469766974793f2000330b1044912e6d756c7469706c65207370656e64696e67206163746976697469657320666f756e6420666f722072656349643a200000553008007330090012323533357346186020022466ae6ccc03c02524013c6467496e7075743a20776974685370656e64696e6741637469766974793a204372656174696e6744656c6567617465644461746120696e76616c69640030b5044901001533357346182020022466ae6ccc03c02524016a6467496e7075743a20776974685370656e64696e6741637469766974793a205570646174696e6744674461746120696e76616c69643b207573652061205370656e64696e672076617269616e7420696e207468652064656c6567617465642d6461746120706f6c6963790030b504490100153335734617e020022466ae6ccc03c02524013c6467496e7075743a20776974685370656e64696e6741637469766974793a2044656c6574696e6744656c6567617465644461746120696e76616c69640030b5044901001533357346194020022464646a666ae68c3fc0800448c8c8cd5cd9985b821985182001001249086e6f207761792068003253335734661780601c002266ae6cc2e810cc2e4112411920202d2d2065787065637465643a205370656e64696e673a200000d33573661740866172089201180a20202d2d2061637475616c3a205370656e64696e673a2000530a2040013357366602a01e92010e7265634964206d69736d617463680030bb044901001514a261ec0661540400261000600461dc040022466ae6ccc0480312412577726f6e672073747275637475726520666f72207370656e64696e672061637469766974790030b80449010000100130c901001124a0002666666666619c0219a02196021900218a02186021820217e0217a0217202002616a020022466ae6ccc02c015241136e6f6e2d7370656e64206163746976697479210030b10449010000153300b00b003530a6040012223357366661580492014d77697468556e69715365656465644d696e74696e673a20656e7375726573207468652064656c656761746520697320756e6368616e6765642c20736f2063616c6c657273206e6565646e27742e004a093191a999ab9a30c1010011232335736646a666ae68c3e40800448c8cc2c010cc2380c01cc3000ccc030005200049010d73656564206d69736d617463680030f9020011230b204491066e6f20776179000010015300600530c001001153335734616e02002246466ae6ccc2b410cc3fc0cc020005200049011b6e6f206d696e74696e67206163746976697469657320666f756e640032335736666160049201436f6e65206f66207468652064656c6567617465206d756c74692d61637469766974696573206d757374206265206d696e74696e67207769746820746869732073656564004a09319ab9b333300c00b0063308004300900148001241236e6f206d696e74696e6720616374697669747920666f756e6420666f7220736565642100335736666160049201386f6e6c79206f6e65206f662061206d756c74692d616374697669747920666f72206120676976656e207365656420697320616c6c6f776564004a09319ab9b333300c00b0063309a043009001480092412a6d756c7469706c65206d696e74696e67206163746976697469657320666f756e6420666f722073656564005300700633007001232353335734618a020022464646a666ae68c3f40800448c8c8cd5cd9985a8219850820010012481086e6f20776179206300330b2041330930300c30c50330a80200114a261fc0400461d80400224616c08921086e6f2077617920640000100130c401001124a0002666666666619802196021920218c02186021820217e0217a021760216e020026166020022466ae6ccc024011241126e6f6e2d6d696e74206163746976697479210030af0449010000153300900900222330be030022300230db030010dc032232333001001003480008894ccd55cf8010985602248112696e646578206f7574206f662072616e67650015333573466e1c0100044d5d080109998018019aba20023370000290011119ab9b330a504330d40314a22661ec06a6022004a602200400266ae6cc29c1124137e29aa0efb88f20e29aa0efb88f20e29aa0efb88f206572726f7220657865637574696e6720706f6c69637920666f72206467546b6e3a2000335736614e08660ac601400461d406a600c601600466ae6cc29c112401010a00330a5044a0002444466ae6ccc29810cc3540c52889987b81a9809001a9809001800a999ab9a0021330a6044a2921001513300400300122133333333330c1010c0010be010bb010b8010b6010b4010b2010b0010ac0153003001213232335736646a666ae68c3bc0800448c8c8cd5cd98548219854022492e202020202d2df09f909e2067656e657269632064656c656761746520616374697669747920617420696e646578200053081040023235333573461e6040022464615808661560892124202020202d2df09f909e206e657374656420616374697669747920617420696e6465782000530840400130e20200112498004c26808004c3c008008c378080044926001001001309a020015300230070012130b5033098040012222233574061420200a66ae80c22808010cd5d0180380199aba030060023357406124080026ec5260d2030d1032308b0330d1020012300230cf0200123200253335734600e002293099ab9c4911c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988c008c330080048c80094ccd5cd18030008a4c266ae7124011c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988ccccccccc3f0043e8043dc043d0043c8043c0043b0043a80439c04c39c080048c25404c394080043840894cccccd5d200089919192999ab9a3370e00490000a999aab9f00114a02a666aae7cd5d100089864011aba100114a02a666ae68cdc3801240042666aae7c00528a5014a06aae78008d55ce8009baa00114a029405280a502533333357480022646464a666ae68cdc3801240002a666aae7c0045280a999aab9f3574400226150066ae840045280a999ab9a3370e00490010999aab9f0014a29405281aab9e00235573a0026ea80045280a5014a02940888c8c8c8c8c8004cc3e00cc0f4c2d80cc2c80c0052000323533357346114020022464002611e0200224646a666ae68c2300400448c8004c2440400448c27811241234d697373696e67206368617274657220696e70757473202f207265665f696e70757473000013308a0130da030fa0300300133088010030012330e903330b60330dc0300100248000cc20c100114c3800d241076368617274657200533357340042002261d8041ea064646466ae6cc2541124011e67657474696e67207265665f696e70757420666f7220636861727465720a003200132353335734610c020022464002611602002246130089215d4d697373696e67206368617274657220696e207265717569726564207265665f696e707574732028757365207463785769746843686172746572526566287463782920696e2074786e206275696c64696e672066756e6374696f6e732900001330840130eb020f4030012330e503330b20330d80300100248000cc3fc0c0054c3700d241076368617274657200253333335748002264a666ae68cdc39aab9d001480284c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a0294052811986581800a40144a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a502330c9030014802094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046618e06002900312999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc3140c005200413374a90011bb149894cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046618406002900111999999985b0085a00858008570085600855008540085300987e8180092999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd1999999985d0085b80859808588085780856808558085480800899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330bf03001480008888888c80094ccd5cd19999998040038030028020018010008a4c266ae712401225761726e696e673a20696e76616c6964204361706f416374697669747920646174610049888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e00229445281119ba548010cd5d0181280119aba030b1020013762931184a01987a8180091811987b0180092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd18138008992999aab9f00114a0264a666ae68c2d0080044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc2e00c0052004223374a900119aba030200023357406158040026ec5262308f0330f0030012301e30f103001253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a302200113253335573e00229404c94ccd5cd185781000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811985981800a4004266e95200037629312999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc2c00c005200022223200253335734666600a008006004002293099ab9c49012b5761726e696e673a20696e76616c696420636374785f43686172746572496e7075745479706520646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a014a064a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a5013253335734600c002264a666aae7c0045280992999ab9a30820300113253335573e00229404c94ccd5cd184101800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008a5013002375600229405280a50232330010010022253335573e00229444c94ccd5cd1841819aab9d00115333573461f6046aae780044cc00c00cd5d10010a5014a06ae840048cc2a40c0052004253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a029405283a774c46004611e0600246464004a666ae68c044004526133573892011a5761726e696e673a20696e76616c6964206c697374206461746100498dd600091801184b01000919190012999ab9a301100114984cd5ce2481195761726e696e673a20696e76616c6964206d6170206461746100498dd580091832184981000918031864018009183118480100091801187f81000919190012999ab9a300e00114984cd5ce2481195761726e696e673a20696e76616c6964206d6170206461746100498dd580091801186b01800919190012999ab9a300e00114984cd5ce24811a5761726e696e673a20696e76616c6964206c697374206461746100498dd60009182e986b01800848819190012999ab9a300200114984cd5ce249215761726e696e673a20696e76616c696420436861727465724461746120646174610049894cccccd5d20008992999ab9a3370e6aae7400520001325333333574800229405280992999aab9f00114a0264a666ae68c1800044c94ccd55cf8008a5013253335734601c002264a666aae7c0045280992999ab9a300e00113253335573e00229404c94ccd5cd18330008992999aab9f00114a0264a666ae68c0500044c94ccd55cf8008a501325333573460d4002264a666aae7c0045280992999ab9a301400113253335573e00229404c94ccd5cd180a000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001357440042940d5d08009aba200214a06ae84004d5d10010a50357420026ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900045280a50130023758002294052811919800800801112999aab9f00114a22a666ae68ccc0f80ec0dcd5d08008998010011aba200114a04a666666ae90004528098011bab00114a0294052811919800800801112999aab9f00114a2264a666ae68c3b008d55ce8008a999ab9a301635573c0022660060066ae880085280a50357420024a666666ae90004528098011bab00114a0294052811919800800801112999aab9f00114a2264a666ae68c3a808d55ce8008a999ab9a305935573c0022660060066ae880085280a50357420024a666666ae900045280a50130023758002294052811919800800801112999aab9f00114a22a666ae68c158d5d08008998010011aba200114a0444464004a666ae68cccc01401000c008004526133573892011f5761726e696e673a20696e76616c6964204361706f446174756d20646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a044646464661aa06661aa06661aa06002920103202b2000002003333008333007330d3020030042223300933574061a406a61600600266ae80c3480d24107c397f09f92b4200033574061a406a61a2060046ec526003376293251490103202b2000330d303530f701330f401530f101330f001330ef01480014c3b4040092080a8d6b90748202a35ae41d2401042041444100530a00330d602330035309d03530ea0100122330d60200400222330ea0100223300230c00235573a0026198026aae7800432008888ccc2ac0c00c88ccc010008c2400cd55ce8009840819aab9e00100122232323330010010054910022253335573e00429201001330d303330d303001309003357420046660060066ae88008010ccd5cd001000a4810023308703001480008c008cc34808005221036d70680023200253335734600c002293099ab9c4911c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988c21c0ccc34008005220102746e00233333300f00d00b007006005330cf020014890374706500232002533357346004002293099ab9c491275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610049894ccd5cd199866010009ba94881036d706800002153335734666198040026ea522102746e000d602153335734666198040026ea522103747065003333300e00b00900500400314a22a66ae71241275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a02a66ae712401275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a02a66ae712401275761726e696e673a20696e76616c6964204361706f4d616e6966657374456e74727920646174610014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c37c04d5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a0294052812999999aba40011325333573466e1cd55ce800a4010264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a0294094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a5013253335734666666666156021500214a02144021400213c02134021300212a02002264a666aae7c0045280992999ab9a30d3020011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50230f00230dd02001230fd0230b5030012303d30b603001253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a304200113253335573e00229404c94ccd5cd186a810008992999aab9f00114a0264a666ae68c344080044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661f004002900112999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc3d8080052000222222320025333573466666600e00c00a008006004002293099ab9c4901275761726e696e673a20696e76616c6964204d616e6966657374456e747279547970652064617461004988888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a5114a04611204615a060024a666666ae900044c94ccd5cd19b8735573a00290030992999999aba400114a029404c94ccd55cf8008a501325333573461d602002264a666aae7c0045280992999ab9a30ee010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330f102001480188cdd2a4008614c066196020024610a046156060024a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a501325333573461d002002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc3b4080052004253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30e5010011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a502222232002533357346666600c00a008006004002293099ab9c491215761726e696e673a20696e76616c6964206467645f44617461537263206461746100498888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a00229445280700111198548100111801186101000909984c01980180098010009187401186e008009184b81187c008009191bac002533357346004002293099ab9c491265761726e696e673a20696e76616c69642044656c65676174696f6e44657461696c20646174610049894cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30b60100113253335573e00229404c94ccd5cd1861008008992999aab9f00114a0264a666ae68c2f4080044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a04a666666ae900044c94ccd5cd19b8735573a00290010992999999aba400114a029404c94ccd55cf8008a50132533357346666660f00ea0e60e20da0d8002264a666aae7c0045280992999ab9a30080011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502533333357480022940528098011bac00114a029408c8cc004004008894ccd55cf8008a51153335734666666666116021100210a0210402100020fc0f40f00ea6ae840044cc008008d5d10008a502300a309a03001253333335748002264a666ae68cdc39aab9d001480004c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a300e0011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661b8040029000111190012999ab9a33300400300200114984cd5ce24812a5761726e696e673a20696e76616c69642050656e64696e67436861727465724368616e67652064617461004988894ccd5cd18010008a5115333573460060022944528118011868008009190012999ab9a300600114984cd5ce24811c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988ccccccccc200041f81ec1e01d81d01c01b81acc3ac040048cccc16c164150148c3a4040048c8dd60012999ab9a300200114984cd5ce2492b5761726e696e673a20696e76616c69642050656e64696e6744656c65676174654368616e676520646174610049894cccccd5d20008a5014a0264a666aae7c0045280992999ab9a333305c05905405200113253335573e00229404c94ccd5cd1999999998410083f83e03c83b83a8388378360008992999aab9f00114a0264a666ae68c0200044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c06cd5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a029405281111111919191919191919ab9b30a403330a303330a303330a3034911f20e2ac85efb88f20f09f948e20f09f928120657870656374206467546b6e2000001491023a200000432335736a666ae68cc2800c4c2880c00440204c8d4ccd5cd1814000891854019985301a4923e2ac85efb88f20e29d8c20f09f9281206467546b6e206e6f7420637265617465643a2000007123230a903330a703490124e2ac85efb88f20e29d8c20f09f9281206467546b6e206e6f742072657475726e65643a20000083333301401030e6020860300f4a294400401c5454ccd5cd000898528199852019985201a4812220e2ac85efb88f20e29c8520f09f9281206f6b3a20205e206467546b6e2068617320000024911020612076616c6964206f75747075740a0015130a5034913220e2ac85efb88f20f09f9aab20f09f9281206e6f2064656c656761746520627574206e6f742072657127643b2066616c736500001323533357346022002246466ae6cc29c0ccc2980ccc2980d2411b20202e2e2e205e2073656e7420746f2076616c696461746f723a2000530b2010014901010a00330f702330c402330e0010860300100548000c05000448cd5cd985301a491020202028746f20616e797768657265290032353335734602400224944492800099808185f810428191987b811986201187601000802a4000002006646a666ae68c0a00044924010872657475726e6564001249010763726561746564000010053308e0300a530eb02002301a002301b0010085333573400620042a042a666ae68010400c5289119985100801118011874808008658111986801000a400046619e040029000111111919191a999ab9a300d00112533357340082613a066613606920135e29d8ce29d8c20e29ea1efb88f20f09f9281206d697373696e6720726571756972656420696e7075742077697468206467546b6e2000003151500d12323232335736613e066613c069211a20202d2d207365656b696e6720696e707574206467546b6e3a20000063235333573460200022466ae6cc2840d241262020e29c8520e29ea1efb88f2020f09f928120666f756e64205e20696e707574206467546b6e0000112533357340122614406661400692013d5fe29d8c20e29ea1efb88f2020f09f9281206d697373696e6720726571276420696e707574206467546b6e20286174207363726970742061646472292000008151335736614206920147203c2d20f09f9aab20e29ea1efb88f20f09f9281206e6f20696e7075742077697468205e206467546b6e3b206e6f742072657127643b2072657475726e696e672066616c73650a0050120013300e00b23309b031330a90130e10130f2010010031330f002330bd0230e30200100248000cc2280c0254c39c08014c29004004c028004004c04c01cc0500194ccd5cd00108008a51230d1013089030012233309d010022300230a7020010c6022330cb02001480004380048cc32408005200222222232353335734601600224a01624646466ae6ccc2540c005241086e6f20776179206f00300c0013235333573460620022464646a666ae68c2040400448cccccc0340300292824c9412612309c033309a034912164656c6567617465206e6f742056616c69646174696e6753657474696e67733a2000301600c0010013030001123099034901086e6f20776179206e00001333333333303203102f02c02902702502302101d308c010013009001001333330060040030024a20024614004610606002466e95200030fc0230920100110db012330c4020014800888cc3d8080054c34c08c0140088c008c358040048c80094ccd5cd18038008a4c266ae712411c5761726e696e673a20696e76616c6964206f7074696f6e2064617461004988c30808c34c04004340048c8dd60012999ab9a300300114984cd5ce24812a5761726e696e673a20696e76616c69642052656c617469766544656c65676174654c696e6b2064617461004983300494cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30940200113253335573e00229404c94ccd5cd18030008992999aab9f00114a0264a666ae68c25c080044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004dd60008a5014a04a666666ae900044c8c8c94ccd5cd19b870024800054ccd55cf8008a50153335573e6ae880044c26004d5d08008a5015333573466e1c009200213335573e002945280a5035573c0046aae74004dd50008a5014a02940528099ba548008dd8a4c466172040029001099ba548000dd8a4c46616e04002900011801187901000919190012999ab9a300500114984cd5ce24811a5761726e696e673a20696e76616c6964206c697374206461746100498dd600092999999aba40011325333573466e1cd55ce800a4020264a666666ae900045280a5013253335573e00229404c94ccd5cd1803000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502533333357480022940528098011bac00114a029408c8cc004004008894ccd55cf8008a511533357346104046ae840044cc008008d5d10008a502330b1020014804094cccccd5d20008992999ab9a3370e6aae74005200e1325333333574800229405280992999aab9f00114a0264a666ae68c228080044c94ccd55cf8008a5013253335734611604002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046615e04002900712999999aba40011325333573466e1cd55ce800a4018264a666666ae900045280a5013253335573e00229404c94ccd5cd1844010008992999aab9f00114a0264a666ae68c224080044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc2b408005200c253333335748002264a666ae68cdc39aab9d001480284c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30ff0100113253335573e00229404c94ccd5cd184401000899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811985581000a40144a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a501325333573461f802002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408c27c08c3940800494cccccd5d20008992999ab9a3370e6aae7400520061325333333574800229405280992999aab9f00114a0264a666ae68c3e8040044c8ccd55cf800a514a06ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811985381000a400c461380461c4040024a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a501325333573461ee02002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc2900800520042333305705505104f30df02001253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a333305b0580540520011323335573e002945281aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046614204002900112999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd1999999980d00b809808807806805804800899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a5022222222223200253335734666666666601601401201000e00c00a008006004002293099ab9c491345761726e696e673a20696e76616c696420416273747261637444656c656761746541637469766974696573456e756d20646174610049888888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a511533357346012002294454ccd5cd18050008a5114a0466666605e05a05605204a04861b2040024a666666ae900044c94ccd5cd19b8735573a00290060992999999aba400114a029404c94ccd55cf8008a501325333573466666606606005c05805004e002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc26c08005200c253333335748002264a666ae68cdc39aab9d001480284c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30ed0100113253335573e00229404c94ccd5cd187b00800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811984c81000a40144a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a501325333573461d602002264a666aae7c0045280992999ab9a30f4010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50233097020014802094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046612a04002900312999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a5013253335573e00229404c94ccd5cd19999999982101f81e01c81b81a818817816000899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50233093020014801094cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661220400290011184901186501000918718098658100092999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd1870808008992999aab9f00114a0264a666ae68c3a8040044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc2340800520002222222232002533357346666666601201000e00c00a008006004002293099ab9c49012b5761726e696e673a20696e76616c6964204361706f4c6966656379636c654163746976697479206461746100498888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a5114a015604461000460f4002461140461d2020024611204618204002461b4026184040024a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a501325333573461b002002264a666aae7c0045280992999ab9a30e10100113253335573e00229404c94ccd5cd1871808008992999aab9f00114a0264a666ae68c1640044c8ccd55cf800a514a06ae880085281aba1001357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50233084020014801094cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a046610404002900111841811871008009184101185d010009186980985d8100092999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd1868808008992999aab9f00114a0264a666ae68c368040044c94ccd55cf8008a501325333573461b802002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330fd01001480008888c80094ccd5cd19998028020018010008a4c266ae7124012b5761726e696e673a20696e76616c69642050656e64696e6744656c6567617465416374696f6e20646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a04a666666ae900044c94ccd5cd19b8735573a00290040992999999aba400114a029404c94ccd55cf8008a501325333573461a802002264a666aae7c0045280992999ab9a30d0010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a50253333335748002264a666ae68cdc39aab9d001480184c94cccccd5d20008a5014a0264a666aae7c0045280992999ab9a30d30100113253335573e00229404c94ccd5cd186780800899199aab9f0014a2940d5d10010a50357420026ae880085281aba1001375800229405281ba735573c0022940dd50008a5014a0294052811987c00800a400c461f402616204002461f0026164040024a666666ae900044c94ccd5cd19b8735573a00290020992999999aba400114a029404c94ccd55cf8008a5013253335734619e02002264a666aae7c0045280992999ab9a30d0010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330f4010014801094cccccd5d20008992999ab9a3370e6aae7400520021325333333574800229405280992999aab9f00114a0264a666ae68c334040044c94ccd55cf8008a5013253335734619c02002264666aae7c00528a50357440042940d5d08009aba200214a06ae84004dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661e402002900112999999aba40011325333573466e1cd55ce800a4000264a666666ae900045280a5013253335573e00229404c94ccd5cd186580800899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330f00100148000888888c80094ccd5cd1999998038030028020018010008a4c266ae712401265761726e696e673a20696e76616c6964204d616e696665737441637469766974792064617461004988888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a5114a04a666666ae900044c94ccd5cd19b8735573a00290070992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a502330ec01001480384cdd2a40186ec526253333335748002264a666ae68cdc39aab9d001480304c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a0294052811987480800a40184a666666ae900044c94ccd5cd19b8735573a00290050992999999aba400114a029404c94ccd55cf8008a5013253335734618402002264666aae7c00528a50357440042940d5d08009bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc39c04005200a23374a9004184e01185301000918738098508100092999999aba40011325333573466e1cd55ce800a4010264a666666ae900045280a5013253335573e00229404c94ccd5cd185f00800899199aab9f0014a2940d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330e3010014802094cccccd5d20008992999ab9a3370e6aae740052006132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661c202002900312999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc37c04005200413374a90011bb149894cccccd5d20008992999ab9a3370e6aae740052002132533333357480022940528099199aab9f0014a2940dd60008a5014a06e9cd55cf0008a50375400229405280a5014a04661b8020029001099ba548000dd8a4c4a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c8ccd55cf800a514a06eb00045280a50374e6aae780045281baa00114a029405280a502330d90100148000888888888c80094ccd5cd1999999998050048040038030028020018010008a4c266ae712401225761726e696e673a20696e76616c69642044656c6567617465526f6c652064617461004988888888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a51153335734600a002294454ccd5cd18030008a51153335734600e002294454ccd5cd18040008a51153335734601200229445280670092999999aba40011325333573466e1cd55ce800a4008264a666666ae900045280a501323335573e002945281bac00114a02940dd39aab9e00114a06ea80045280a5014a029408cc350040052004253333335748002264a666ae68cdc39aab9d001480084c94cccccd5d20008a5014a0264666aae7c00528a50375800229405281ba735573c0022940dd50008a5014a0294052811986900800a4004461a60261160400246148026118040024a666666ae900044c94ccd5cd19b8735573a00290000992999999aba400114a029404c94ccd55cf8008a5013253335734614402002264a666aae7c0045280992999ab9a30ab010011323335573e002945281aba200214a06ae84004d5d10010a50357420026eb00045280a50374e6aae780045281baa00114a029405280a502330ce01001480008888c80094ccd5cd19998028020018010008a4c266ae712412f5761726e696e673a20696e76616c69642044656c65676174654c6966656379636c65416374697669747920646174610049888894ccd5cd18010008a511533357346006002294454ccd5cd18020008a5114a04646a666ae68c16c00448c8c8d4ccd5cd180c00089180380189184b812494c62616420636173742066726f6d20436f6e737472446174617b5f2c202e2e2e6669656c64737d20746f206d5374727563743a206669727374206669656c64206d7573742062652061206d6170000013005001305b0011230940249127626164206361737420746f206d5374727563742066726f6d206e6f6e2d436f6e7374724461746100001001230c0013574200246196026612a0200291010374706500230cb0133094010014890340696400232002533357346004002293099ab9c4911d5761726e696e673a20696e76616c696420416e794461746120646174610049894ccd5cd199848808009ba94881037470650009c01153335734666122020026ea5221034069640009b0114a22a66ae712411d5761726e696e673a20696e76616c696420416e794461746120646174610014a02a66ae7124011d5761726e696e673a20696e76616c696420416e794461746120646174610014a046464646600c004002660080024646a666ae68c1b000448cc1b0c1ac0040144928000800983507580986580800911919800800801912999aab9f0011308e024901096e6f7420666f756e640013253335734600800220022660060066ae88008c03cd55ce9aba10012233330c5010023064001230bb010011308b0249010d6b6579206e6f7420666f756e640023232002533357346006002293099ab9c491195761726e696e673a20696e76616c6964206d6170206461746100498dd580091919800800801112999aab9f00114a2264a666ae68c26404d55ce8008a999ab9a30940135573c0022660060066ae880085280a50357420024617602002461740200244646600200200644a666aae7c0044c220092401096e6f7420666f756e640013253335734600800220022660060066ae88008c15cd5d0800911111119191919ab9b3308a02330dc013073002480012411a6d697373696e67207265716420746e206f7220746e427974657300330fe01330f80100a002001533357340082006290012999ab9a00510041530d3010015333573400c200a2921002223233573666600a00894400528a999ab9a002100114a24446466ae6cc21008cc20c0924104e29d972000004330820200133083024901132020e29d8ce29d8c205e206661696c65643a200000453335734004200229448c20008cc3fc04cc3fc05241182020f09f9fa52020f09f98b3f09f92a62020544f444f3a2000001491010a000b10125333333574800229405288a5014a029408cccc228040052000013300248100894cccccd5d20008a5014a029405280992999ab9a337126e3400400c5288a50375c002466e94ccd5cd000a4004900007600919ba548008c3a804c0080043980434c04888c8ccc00400401000c8894ccd55cf801099ba5480083b4044c94ccd5cd1801000899ba548000c3b404c0140044ccc010010d5d10018011aba10020dd0123333082010014800001c00894cccccd5d200089919192999ab9a3370e00490000a999aab9f00114a02a666aae7cd5d1000898029aba100114a02a666ae68cdc3801240042666aae7c00528a5014a06aae78008d55ce8009baa00114a029405280a502533333357480022646464a666ae68cdc380124000266600e00c00a0022a666ae68cdc380124004266600e100026600e100026600e1000200a0022940d55cf0011aab9d001375400229405280a5014a04666aae7c00528a5000222253335573e002294054ccd5cd18019aba10011300235744002294094cccccd5d200089919192999ab9a3370e00490000a999aab9f00114a02a666aae7cd5d1000898031aba100114a02a666ae68cdc3801240042a666aae7c0045280a999aab9f357440022600a6ae840045280a5035573c0046aae74004dd50008a5014a02940528183ca407060f0901c04f0092999999aba400114a029405280a50132325333573466e1c005200014a22666ae68cdc3800a4070945281b8d001375c0024266004002461d00266e3cdd71aab9d0014881002233307f0020013764931099842808008011986900a44100488100223370000466e0800404488c020cdc219b8200233704020900a0009099b8433700002666ae68cdc4000a400000600401c9060421ea417f087a44600866e10cdc100119b82003480500052080c0a8ca9a3a23370066e1000520143370866e1400520144802884c94ccd5cd19b88002480004cc378052401012d0030013370400490008980080111986f00a985b80a9804298030009986f00a49012e0037326600a660080020120069006386223233330010010034800122010022225333573466e1c00d200015333573466e2401400840044cccc010011200033700004900119b8b481800044cccc010010cdc1801a402866e0000920023371661720200600200242a666ae68cdc4000a4000266e08005200110012133706002004904044bd11aba130ba0100123574260f800246ae84c1e8004214048cccc17c005200005b00225333333574800229445280a5014a029408d5d0980300091aba13004001235742600400246ae88c0080048d5d1180100091aba2301a001235573a6ea800417c88c030cc00c00800488cc0280088cc01000400888c94ccd5cd1804000899803801180298020008a503008301b0022330a301001480088c008c2e8040041fc240048cdc39aab9d3754002900105a80911982a182c801000919984c00800911981a00118428080085b0091198018010009119980180100091185e0099b880020012223233001001330360040032253335573e00229444c94ccd5cd185e809998038021981b0030009981b0028008a50133003003357440046ae84004888c8cc004004cc0d400c008894ccd55cf8008a51132533357346178026600c6607800a0026607800800229404cc00c00cd5d10011aba1001235573c6ea800494cccccd5d20008a5114a029405280a50223375e60080046008002426eccc008005d3aba12357426004002ae8818ccdd2a4004140024600660e6002426eccc2a0040042880421c048dd6184f80800909984000912999ab9a3370e00490000991919b960023372c92010123000013330820148008c01494c21804004008ccc20405200025300600100115308301003001223253333335748004002002002260066eb4008004c2040400484cc1f8894ccd5cd19b87002480004ccc1fd2000307e253093010010011530810100300105909b010800123305e001480088dd5980100091aba13002001235744600400246ae88c114004250048c130c2480400484dd998480080081938a71a426e500048cc008005c69111191918009801002119180098018021199b8c0023370200266010004900000392999ab9a337100029000099b8033700600800a9001000880091199ab9a33710004002002004e4014088c8cc00400400c894ccd55cf8008800899911998038010008029aba10013300200235744002444646600200200644a666aae7c0044cd5d00028008992999ab9a33004006001133574000c004266ae80004cc00c00cd5d10011aba1001756084e98888c8ccc0040040100088894ccd55cf8010800899aba03005357420046660060066ae8800800488ccc00c008005c011119199800800998038020019bb24988894ccd55cf801080089919192999aab9f0011002133574066ec000cdd300080119980500319804804001198048038011998020021aba20030023574200444646600200200644a666aae7c0044dd924c2a666ae68cdd79aab9d3574200200626eacd55cf1aba100113300200235744002444646660020026600a0060046ec92622253335573e00420022646464a666ae68cdc3800a40002004266ae80cdd80019ba8001002330083300e0070023300e006002333004004357440060046ae8400888c8c8c8cc01800c004ccc00400400800c8894ccd55cf800883f8992999ab9a33009005001133300400400335744004266ae80004ccc01001000cd5d10011aab9d35742002600c0044464666002002004006444a666aae7c00440084cd5d01aba1001333003003002357440024466006004466ebc00400888c8ccc00400400c0088894ccd55cf8010a5015333573460026ae8400852889998018019aba2002001232330010010022253335573e00220f0266ae80d55ce9aba100133002002357440024464666002002006004444a666aae7c0085200015333573466ebcd55ce9aba10020011375a6aae78d5d080109998018019aba2002001223232330010010042253335573e0022611002920110706f6c696379206e6f7420666f756e640015333573466ebcd55ce9aba1001003137566aae78d5d08008998010011aba200130710012132330010010022253335573e00229444cc1fc4c010dd59aab9e357420022660040046ae880048c8cc004004008894ccd55cf8008a5113307e13370e6eb4d55cf1aba1001480004cc008008d5d100080091183e9982780100081811191919800800802112999aab9f00114a02a666ae68cdd79aab9d3574200200629444cc008008d5d100098358009112999999aba400314a0264646600200200444a666aae7c00454cd5ce19b964911a5761726e696e673a206669656c64206e6f7420666f756e643a200037326eb801452809919192999ab9a3375e0040102600e00226600a00a6ae88010d55cf0011aab9d001357420026eac00c5280a5014a044660066eac00800488c8c8cc004004010894ccd55cf8008983f99b9637326eb8dd4802249113a206669656c64206e6f7420666f756e640013232325333573466ebc00801840044cc014014d5d10021aab9e00235573a0026ae84004dd48009251233330050014800000c0088cccccd5d2000a504a094128a502533333357480022646464a666ae68cdc3a40000042a666aae7c0045280a999aab9f3574400226600a90201aba100114a02940d55cf0011aab9d001375400229405280a5014a044a666666ae900045280a5014a029404c94ccd5cd19b87371a00200629445281bae001222253333335748008264a666ae68cdc39aab9d00100413253335573e002294054ccd5cd18021aba100113253335573e002294054ccd5cd18021aba1001153335573e6ae880045288a5014a06ae880045281aab9e00114a06ea80105280a5014a029400948cccccd5d2000a504a09412825125333333574800229405280a5014a0260046eb80048c8c8cc0040052000225333573466e1c00400c5288992999ab9a33712002907f0089980180199b800024800854ccd5cd19b8733706002902024018264a666ae68cdc480080289980399b8e006337000069001112999ab9a00213253335734660e6266e25208002001133712002907f0f8998038038020a503370066e08cdc3002240809040008008a5014a066e00009200415333573466e1ccdc1800a4040900e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd0010992999ab9a33075133712904010000899b89001483fbfc1c4cc02402401852819b803370466e1801920204820100cdc019b8200348200040045280a5014a066e00009200615333573466e1ccdc1800a4020901e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd00109980599b8e00a3370000e9003112999ab9a00213253335734660ee266e2520808008001133712002907f7fff808998058058040a503370066e08cdc3004240209040401019b803370400a90402019b80337040069040008008a5014a0294052819b800024802052819b8e004001371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a090000101119980180100082f911191998008008020019112999aab9f0021004132533357346004002266ae80004ccc010010d5d100180109998020021aba200300235742004002426ecc0048c00cc0b40048dd6180180080091aba1304b00123232325333573466e1c0092004135742002260d29201136e6f7420616e20696e6c696e6520646174756d0035573c0046aae74004dd50009119191919199801001000803112999aab9f00114800054ccd5cd19baf35573a6ae840040104dd69aab9e357420022660040046ae880048894ccd55cf8008a40002a666ae68cdd79aab9d3574200200a2660040046eacd55cf1aba100113330030030023574400260b400460b600244660066e60008dcc000919801000b8d22233225333573466e20008004528099b8f003333718900000080298010019b8d00148202eadc0c8c020c154c154c1540040048d5d0980100091aba23002001235744600400246ae88c0f40048c008c13cc13cc134004014084005c4912999ab9a500214a22a002eb48ccd5cd19b8735573a6ea800520004a094400c008004800488c8ccc00400400c0088894ccd55cf8010a5115333573460026ae840084ccc00c00cd5d10010008a50232330010010022253335573e00229000099b803300200235744002900112999999aba400110041004100413003375a00220084a666666ae90004400c400c400c400c4c008dd70009119800a510022330014a0931119b8735573a6ea80080048888c8ccc0040040140108894ccd55cf8010020992999ab9a3375e0046aae740044c018d55cf00089998020021aba20030023574200446e64dd7000bae132323300100130030232253335573e0022608c921096e6f7420666f756e64001325333573466ebcc01800401040044cc00c00cd5d10011aba1001500323758607000206c2606a002606403c46006600400206046eacc0c000488cd5ce1981d800a980180100110999ab9a00149104747275650049010566616c73650001421373000242002e0488c0cccc08000800484ccc03800488c8c8ccc04800488c8c8cc0ec0114ccd5cd1980500324410013303b49010a6c6f76656c6163653a20003303b53014001491010a0013303b530230063303b491012e003303b530240023303b4901023a20003303b53014001491010a00375a6aae78008dd71aab9d00100437566aae78008dd71aab9d0014910000171e44605e66e2400800484cdcb2490127003372c002920101270022302d3300d0020012133004225333573466e1c0092000132323372c00466e592401012e0000133300648008c01494c068004008ccc01520003004253019001001153007003001223253333335748004002002002002260066eb8008c014004888c8ccc0040040080108894ccd55cf8010a481093c6d697373696e673e0015333573466e1c005200013230060013574200426660060066ae88008cdc0800a40044464a666666ae900084c8cc010d55ce8009aab9e00137540040020020020026006002426466446600400400244a666666ae900044c8c8c8cc0bd4c020008cc0bd2401017b003302f33006001233006006001491017d0035573c0046aae74004dd500089919816a481017b003302d33004001232323303000233030491013a000013300500535573c004660080086aae74005241017d0037560022646605a921015b003302d33004001233004004001491015d003758002264a600c0026eb40044c94c058004dd700080111199803001112999ab9a3300b0024901001300300113302d0023302d4901012c0030030014910021373264a666ae68cdc400124000266e2d205a333001001337040049000a4500133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b300500200123370066e18005201448180888c8ccc0040040100088894ccd55cf801080089998018019aba20023300500135742004002ebdcb912999ab9a3370e6aae74dd5001000880109812a491c756e657870656374656420636f6e7374727563746f7220696e64657800301700102223756600400246ae84c0080048d5d1180100091aba230020012357446022002446464646466600400400200c44a666aae7c0044c08924113746f6b656e4e616d65206e6f7420666f756e640015333573466ebcd55ce9aba10010041375a6aae78d5d08008998010011aba200122253335573e00226044660406604092107706f6c696379200053008375c00a92010a206e6f7420666f756e640015333573466ebcd55ce9aba100100513300200237566aae78d5d080089998018018011aba20013011002301200100121323300100100222325333573466e21200000113372c6e64c8ccd5cd19b87371a002900119b8b48180004004dcc2980299b8e00248000cc00c00cccdc624004002004292100371a00242646e654ccd5cd19b88002480004cdc5a40b466600200266e08009200148810013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc300124040e1c8cdc1000a40024466e95200033005300300230040010017524466ae80008c00c0048cd5d00008011bb1498894ccd5cd19b874800000440204c8c8cd5d019bb0002374c66ae80cdd800098028019bb2498dd924c600a006600c004ea08d5d0980100091aba23003001235742600400246aae78dd50009bb249884dcc80091ba9373000244a666ae6940085400452811180199b880020012333573400294128912999ab9a002149854cd5ce0008b3962335738002931299ab9c001161", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common12 = __core__unConstrData(__CONTEXT);
    __common13 = __core__sndPair(__common12);
    __helios__value__new = (assetClass, i) -> {
        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))
    };
    __helios__bytearray__show = (self_8) -> {
        recurse_3 = (recurse_2, self_9) -> {
            n = __core__lengthOfByteString(self_9);
            __core__ifThenElse(
                __core__lessThanInteger(0, n),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_6 = __core__indexByteString__safe(self_9, 0);
                    recurse_1 = (recurse, self_7, bytes) -> {
                        digit = __core__modInteger(self_7, 16);
                        bytes_1 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_7, 16),
                            () -> {
                                bytes_1
                            },
                            () -> {
                                recurse(recurse, __core__divideInteger(self_7, 16), bytes_1)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_6, 0),
                        () -> {
                            __core__consByteString(45, recurse_1(recurse_1, __core__multiplyInteger(self_6, -1), #))
                        },
                        () -> {
                            recurse_1(recurse_1, self_6, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_9)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_3(recurse_3, self_8)
    };
    __helios__tx__minted = (self_15) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_15))))))))
    };
    __helios__scriptcontext__tx = __core__headList(__common13);
    __helios__common__assert_constr_index = (data, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_1),
            () -> {
                data
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__fold = (self_16, fn, z) -> {
        recurse_5 = (recurse_4, self_17, z_1) -> {
            __core__chooseList(self_17, () -> {
                z_1
            }, () -> {
                recurse_4(recurse_4, __core__tailList__safe(self_17), fn(z_1, __core__headList__safe(self_17)))
            })()
        };
        recurse_5(recurse_5, self_16, z)
    };
    __helios__int__show = (self_18) -> {
        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i_2, bytes_2) -> {
            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i_2, 10), 48), bytes_2);
            __core__ifThenElse(
                __core__lessThanInteger(i_2, 10),
                () -> {
                    bytes_3
                },
                () -> {
                    recurse_6(recurse_6, __core__divideInteger(i_2, 10), bytes_3)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_18, 0),
            () -> {
                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_18, -1), #))
            },
            () -> {
                recurse_7(recurse_7, self_18, #)
            }
        )())
    };
    __helios__value__show = (self_23) -> {
        __helios__common__fold(self_23, (prev_1, pair_3) -> {
            mph_4 = __core__unBData__safe(__core__fstPair(pair_3));
            __helios__common__fold(__core__unMapData__safe(__core__sndPair(pair_3)), (prev_2, pair_4) -> {
                token_name_2 = __core__unBData__safe(__core__fstPair(pair_4));
                qty = __core__unIData__safe(__core__sndPair(pair_4));
                __core__appendString(prev_2, __core__ifThenElse(
                    __core__equalsByteString(mph_4, #),
                    () -> {
                        __core__appendString("lovelace: ", __core__appendString(__helios__int__show(qty), "
"))
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph_4), __core__appendString(".", __core__appendString(__helios__bytearray__show(token_name_2), __core__appendString(": ", __core__appendString(__helios__int__show(qty), "
")))))
                    }
                )())
            }, prev_1)
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common13));
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_13 = (recurse_12, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                error()
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__common__map_get = (self_32, key_1, fnFound, fnNotFound) -> {
        recurse_15 = (recurse_14, self_33, key_2) -> {
            __core__chooseList(self_33, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_33);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(self_33), key_2)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, self_32, key_1)
    };
    __helios__common__length = (lst_3) -> {
        recurse_17 = (recurse_16, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_16(recurse_16, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_17(recurse_17, lst_3)
    };
    __helios__common__all = (self_34, fn_1) -> {
        recurse_19 = (recurse_18, self_35, fn_2) -> {
            __core__chooseList(self_35, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_35)),
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_35), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_34, fn_1)
    };
    __helios__common__enum_fields_after_4 = (self_38) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_38)))))))
    };
    __helios__value__get_safe = (self_46, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_3) -> {
            __core__chooseList(map_3, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_4) -> {
            __core__chooseList(map_4, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_4))
                    }
                )()
            })()
        }, self_46)
    };
    __helios__txoutputdatum__inline = (self_47) -> {
        pair_5 = __core__unConstrData(self_47);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__filter = (self_52, fn_3, nil) -> {
        recurse_21 = (recurse_20, self_53, fn_4) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_20(recurse_20, __core__tailList__safe(self_53), fn_4))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_53), fn_4)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_52, fn_3)
    };
    __helios__common__mStruct_field = (self_55, name_1) -> {
        map_5 = __core__unMapData(self_55);
        name_data = __core__bData(name_1);
        recurse_23 = (recurse_22, map_6) -> {
            __core__chooseList(map_6, () -> {
                error()
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_2 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_2
                    },
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_23(recurse_23, map_5)
    };
    __helios__value__contains_policy = (self_56, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_25 = (recurse_24, map_7) -> {
            __core__chooseList(map_7, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_7))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_56)
    };
    __helios__value__is_zero = (self_58) -> {
        recurse_29 = (recurse_28, map_8) -> {
            __core__chooseList(map_8, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_8)));
                    recurse_27 = (recurse_26, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_26(recurse_26, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_27(recurse_27, tokens_1),
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(map_8))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_29(recurse_29, self_58)
    };
    __helios__value__get_policy = (self_59, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_31 = (recurse_30, map_9) -> {
            __core__chooseList(map_9, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))
                    },
                    () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_9))
                    }
                )()
            })()
        };
        recurse_31(recurse_31, self_59)
    };
    __helios__value__get_inner_map_int = (map_10, key_4) -> {
        recurse_33 = (recurse_32, map_11, key_5) -> {
            __core__chooseList(map_11, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))
                    },
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_11), key_5)
                    }
                )()
            })()
        };
        recurse_33(recurse_33, map_10, key_4)
    };
    __helios__common__any = (self_60, fn_6) -> {
        recurse_37 = (recurse_36, self_61, fn_7) -> {
            __core__chooseList(self_61, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_61)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(self_61), fn_7)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, self_60, fn_6)
    };
    __helios__common__concat = (a_5, b_5) -> {
        recurse_39 = (recurse_38, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_38(recurse_38, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_39(recurse_39, b_5, a_5)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        (aKeys) -> {
            recurse_41 = (recurse_40, keys, map_14) -> {
                __core__chooseList(map_14, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_7 = __core__fstPair(__core__headList__safe(map_14));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_7)
                        }),
                        () -> {
                            recurse_40(recurse_40, keys, __core__tailList__safe(map_14))
                        },
                        () -> {
                            __core__mkCons(key_7, recurse_40(recurse_40, keys, __core__tailList__safe(map_14)))
                        }
                    )()
                })()
            };
            __helios__common__concat(aKeys, recurse_41(recurse_41, aKeys, b_6))
        }(recurse_35 = (recurse_34, map_13) -> {
            __core__chooseList(map_13, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_34(recurse_34, __core__tailList__safe(map_13)))
            })()
        };
        recurse_35(recurse_35, a_6))
    };
    __helios__value__get_inner_map = (map_15, mph_9) -> {
        recurse_45 = (recurse_44, map_16) -> {
            __core__chooseList(map_16, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))
                    },
                    () -> {
                        recurse_44(recurse_44, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_45(recurse_45, map_15)
    };
    __helios__value____add = (a_9, b_9) -> {
        recurse_47 = (recurse_46, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_9 = __core__headList__safe(keys_2);
                tail_1 = recurse_46(recurse_46, __core__tailList__safe(keys_2));
                item_5 = (a_7, b_7) -> {
                    recurse_43 = (recurse_42, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_8 = __core__headList__safe(keys_1);
                            tail = recurse_42(recurse_42, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_7, key_8), __helios__value__get_inner_map_int(b_7, key_8));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_43(recurse_43, __helios__value__merge_map_keys(a_7, b_7))
                }(__helios__value__get_inner_map(a_9, key_9), __helios__value__get_inner_map(b_9, key_9));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_47(recurse_47, __helios__value__merge_map_keys(a_9, b_9))
    };
    __helios__txinput__address = (self_76) -> {
        self_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_76))));
        __core__headList(__core__sndPair(__core__unConstrData(self_2)))
    };
    __helios__tx__value_locked_by = (self_86, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_54 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_86))))));
        __helios__common__filter(self_54, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_83 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_83)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_2 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_2))))
        }, __core__mkNilData(())))
    };
    __helios__real__round_calc_result = (res) -> {
        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))
    };
    __helios__common__find_safe = (self_105, fn_13) -> {
        recurse_65 = (recurse_64, self_106, fn_14) -> {
            __core__chooseList(self_106, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_7 = __core__headList__safe(self_106);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_106), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_105, fn_13)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __helios__list[__helios__txoutput]__find = (self_107, fn_15) -> {
        recurse_67 = (recurse_66, lst_12) -> {
            __core__chooseList(lst_12, () -> {
                error()
            }, () -> {
                item_6 = __core__headList__safe(lst_12);
                __core__ifThenElse(
                    fn_15(item_6),
                    () -> {
                        item_6
                    },
                    () -> {
                        recurse_66(recurse_66, __core__tailList__safe(lst_12))
                    }
                )()
            })()
        };
        recurse_67(recurse_67, self_107)
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_113) -> {
        d = __helios__common__mStruct_field(self_113, #747065);
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_117) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_117)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_123) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_123)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_126) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_126)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_137, mph_11) -> {
        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_137);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_144, mph_14) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_144));
            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_143, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_144);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_164, fn_21) -> {
        __helios__common__filter(self_164, (pair_36) -> {
            fn_21(__core__unBData(__core__fstPair(pair_36)), __core__unMapData(__core__sndPair(pair_36)))
        }, __core__mkNilPairData(()))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_168) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_168)))))))
    };
    __module__CapoHelpers__DgDataDetails[]__output = (self_196) -> {
        __cond_28 = __core__headList(self_196);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 2),
            () -> {
                (self_2) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 3),
                    () -> {
                        (self_4) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_201) -> {
        __cond_30 = __core__headList(__core__tailList(self_201));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 0),
            () -> {
                (__lhs_0_59) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_30)), 1),
                    () -> {
                        (__lhs_0_58) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_51) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_51))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __common30 = __core__unConstrData(activity);
                            __common31 = __core__fstPair(__common30);
                            __core__ifThenElse(
                                __core__equalsInteger(__common31, 2),
                                () -> {
                                    (__lhs_0_57) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__common31, 4),
                                        () -> {
                                            (__lhs_0_56) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common31, 1),
                                                () -> {
                                                    (__lhs_0_55) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common31, 5),
                                                        () -> {
                                                            (__lhs_0_54) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common31, 3),
                                                                () -> {
                                                                    (__lhs_0_53) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_52) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_30)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_202, key_14) -> {
        __helios__common__map_get(self_202, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_212) -> {
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_212)), __core__unBData(__core__headList(self_212)));
        a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        )
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_213, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_165 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_213);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_165)))), __core__unBData(__core__headList(self_213)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_214) -> {
        __cond_35 = __core__headList(__core__tailList(self_214));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),
            () -> {
                (self_173) -> {
                    data_136 = __core__headList(__core__sndPair(__core__unConstrData(self_173)));
                    __helios__common__assert_constr_index(data_136, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
                    () -> {
                        (self_175) -> {
                            data_136 = __core__headList(__core__sndPair(__core__unConstrData(self_175)));
                            __helios__common__assert_constr_index(data_136, 0)
                        }
                    },
                    () -> {
                        (__31) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_35)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address_1, self_215) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_215)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_215);
        __cond_36 = __core__headList(__core__tailList(self_215));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 2),
            () -> {
                (__lhs_0_67) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_48 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo_2) -> {
                        __core__ifThenElse(
                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_2))), capoAddr),
                            () -> {
                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo_2))))), charterAc_2);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            },
                            () -> {
                                false
                            }
                        )()
                    });
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48)))))), 0)
                }
            },
            () -> {
                (__32) -> {
                    error()
                }
            }
        )()(__cond_36)
    };
    __module__CapoHelpers__CapoCtx[]__address_2 = (self_218) -> {
        __helios__txinput__address(__cond_37 = __core__headList(__core__tailList(self_218));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
            () -> {
                (self_4) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 2),
                    () -> {
                        (self_4) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_4))))
                        }
                    },
                    () -> {
                        (__33) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_37))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_221, __useopt__typeName, id_3) -> {
        typeName_2 = __core__ifThenElse(
            __useopt__typeName,
            () -> {
                "s3driver"
            },
            () -> {
                ""
            }
        )();
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_221);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_158 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_158)), 2),
                        () -> {
                            (__lhs_0_74) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_158);
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        __core__equalsString(typeName_2, ""),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "s3driver")
                                        }
                                    )(),
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsByteString(id_3, #),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_3)
                                            }
                                        )()
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__34) -> {
                                false
                            }
                        }
                    )()(data_158)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2 = (self_224, recId_7) -> {
        recIdStr_3 = __core__decodeUtf8(recId_7);
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_224)), recId_7);
        capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(self_224);
        (__cond_43) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),
                () -> {
                    (__lhs_0_78) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)))
                    }
                }
            )()(__cond_43)
        }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_143, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_226) -> {
        charter_2 = __core__headList(__core__tailList(self_226));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_90) -> {
                    self_226
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_89) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_85) -> {
                            mph_24 = __core__unBData(__core__headList(self_226));
                            charterAc_4 = __helios__assetclass__new(mph_24, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                __helios__common__assert_constr_index(data_136, 0), 0);
                                __core__mkCons(__core__bData(mph_24), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_47) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_47)), 0),
                                    () -> {
                                        (self_2) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_47)
                            }(self_140 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_140, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_227) -> {
        charter_3 = __core__headList(__core__tailList(self_227));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_94) -> {
                    self_227
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_93) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_91) -> {
                            mph_25 = __core__unBData(__core__headList(self_227));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                __helios__common__assert_constr_index(data_136, 0), 0);
                                __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_25, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_2) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_140, (txin) -> {
                                a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_237, fn_27) -> {
        recurse_89 = (recurse_88, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_27(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_88(recurse_88, __core__tailList__safe(map_29)))
            })()
        };
        recurse_89(recurse_89, self_237)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_240, key_21) -> {
        __helios__common__map_get(self_240, __core__bData(key_21), (x_12) -> {
            __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_244, comp_4) -> {
        recurse_53 = (recurse_52, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_52(recurse_52, __core__tailList__safe(lst_11));
                x_1 = __core__headList__safe(lst_11);
                recurse_51 = (recurse_50, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_1, lst_9)
                    }, () -> {
                        head_4 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_1)), __core__unIData(__core__sndPair(x_1)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),
                            () -> {
                                __core__mkCons(x_1, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_4, recurse_50(recurse_50, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_51(recurse_51, tail_2)
            })()
        };
        recurse_53(recurse_53, self_244)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_29, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        (delegateApproval) -> {
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_245) -> {
                recurse_95 = (recurse_94, lst_25) -> {
                    __core__chooseList(lst_25, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_25)), recurse_94(recurse_94, __core__tailList__safe(lst_25)))
                    })()
                };
                recurse_95(recurse_95, self_245)
            }(recurse_49 = (recurse_48, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    __module__StellarHeliosHelpers__mkTv(mph_29, mkTokenName_1(purpose_2))), recurse_48(recurse_48, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_49(recurse_49, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted, mph_29),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_29), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                tnStr_1 = __core__decodeUtf8(tn_3);
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_29);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                tnStr = __core__decodeUtf8(tn_2);
                ()
            }), msg_1 = __helios__value__show(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(valueMinted, (b_19, __41) -> {
                __core__ifThenElse(
                    __core__equalsByteString(b_19, mph_29),
                    false,
                    true
                )
            }));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                });
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), otherPoliciesMintOk = __core__ifThenElse(
                b = __helios__value__is_zero(otherMintedValue_1);
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    true
                },
                () -> {
                    remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue, mph_29),
                        () -> {
                            key_23 = __core__bData(mph_29);
                            recurse_93 = (recurse_92, self_242) -> {
                                __core__chooseList(self_242, () -> {
                                    self_242
                                }, () -> {
                                    head_45 = __core__headList__safe(self_242);
                                    tail_4 = __core__tailList__safe(self_242);
                                    __core__ifThenElse(
                                        __core__equalsData(key_23, __core__fstPair(head_45)),
                                        () -> {
                                            recurse_92(recurse_92, tail_4)
                                        },
                                        () -> {
                                            __core__mkCons(head_45, recurse_92(recurse_92, tail_4))
                                        }
                                    )()
                                })()
                            };
                            recurse_93(recurse_93, expectedValue)
                        },
                        () -> {
                            expectedValue
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint),
                        () -> {
                            true
                        },
                        () -> {
                            __core__chooseUnit(recurse_91 = (recurse_90, map_30) -> {
                                __core__chooseList(map_30, () -> {
                                    ()
                                }, () -> {
                                    head_44 = __core__headList__safe(map_30);
                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_4, expectedCount) -> {
                                            __core__ifThenElse(
                                                (b) -> {
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    )
                                                }(__cond_57 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_4);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_57)), 1),
                                                    () -> {
                                                        (__lhs_0_116) -> {
                                                            false
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_115) -> {
                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115))));
                                                            __core__equalsInteger(actualCount, expectedCount)
                                                        }
                                                    }
                                                )()(__cond_57)),
                                                () -> {
                                                    error()
                                                },
                                                () -> {
                                                    ()
                                                }
                                            )()
                                        })
                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_90(recurse_90, __core__tailList__safe(map_30)))
                                })()
                            };
                            recurse_91(recurse_91, remainingExpectedMint), true)
                        }
                    )()
                }
            )();
            __core__chooseUnit(__core__ifThenElse(
                otherPoliciesMintOk,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    otherPoliciesMintOk
                },
                () -> {
                    false
                }
            )()))))))
        }(__lhs_0_114 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        charterAc_1 = __helios__assetclass__new(mph_29, #63686172746572);
        hasCharter_1 = (txin_1) -> {
            a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_1);
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_3, 0),
                false,
                true
            )
        };
        (charterUtxo_1) -> {
            __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
            __helios__common__assert_constr_index(data_136, 0), 0)
        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
            () -> {
                (self_2) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    (__cond_14) -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                            () -> {
                                (self_2) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                }
                            },
                            () -> {
                                (__lhs_0_22) -> {
                                    error()
                                }
                            }
                        )()(__cond_14)
                    }(self_140 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                    __helios__common__find_safe(self_140, hasCharter_1))
                }
            }
        )()(__cond_13)), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
        true)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_275) -> {
        (key_24) -> {
            key_25 = __core__bData(__core__encodeUtf8(key_24));
            recurse_99 = (recurse_98, self_276) -> {
                __core__chooseList(self_276, () -> {
                    self_276
                }, () -> {
                    head_47 = __core__headList__safe(self_276);
                    tail_5 = __core__tailList__safe(self_276);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_47)),
                        () -> {
                            recurse_98(recurse_98, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_47, recurse_98(recurse_98, tail_5))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_275)
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main, mdd, activity_3) -> {
        __common6 = __core__fstPair(__core__unConstrData(mdd));
        __core__ifThenElse(
            __core__equalsInteger(__common6, 2),
            () -> {
                (__lhs_0_267) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common6, 1),
                    () -> {
                        (isD) -> {
                            __common14 = __core__sndPair(__core__unConstrData(isD));
                            __common15 = __core__headList(__common14);
                            __common16 = __core__unListData(__common15);
                            __common40 = __core__tailList(__common16);
                            __common42 = __core__headList(__common40);
                            __common43 = __core__unBData(__common42);
                            (myDgTkn) -> {
                                checkNonDelegatedActivities = __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),
                                    () -> {
                                        (__lhs_0_245) -> {
                                            activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_245))));
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                            __helios__common__all(activities_2, (rawActivity) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 6),
                                                    () -> {
                                                        (__lhs_0_254) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 5),
                                                            () -> {
                                                                (__lhs_0_253) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 7),
                                                                    () -> {
                                                                        (__lhs_0_252) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 2),
                                                                            () -> {
                                                                                (__lhs_0_251) -> {
                                                                                    __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 3),
                                                                                    () -> {
                                                                                        (__lhs_0_250) -> {
                                                                                            __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity)
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 4),
                                                                                            () -> {
                                                                                                (__lhs_0_249) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_248) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_247) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_246) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(rawActivity)
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                            () -> {
                                                (__lhs_0_239) -> {
                                                    innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_239)));
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),
                                                        () -> {
                                                            __common33 = __core__tailList(__common40);
                                                            __common34 = __core__headList(__common33);
                                                            __common35 = __core__unBData(__common34);
                                                            (__lhs_0_243) -> {
                                                                seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_243)));
                                                                (purpose_8) -> {
                                                                    otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common43, __common35), -1);
                                                                    tnStr_3 = __core__decodeUtf8(__common35);
                                                                    cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                                    (isUpdatingCharter) -> {
                                                                        isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common43, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                                        __core__ifThenElse(
                                                                            isMintingOk,
                                                                            () -> {
                                                                                isUpdatingCharter
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    }(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_113)), 5),
                                                                        () -> {
                                                                            (__lhs_0_244) -> {
                                                                                true
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__78) -> {
                                                                                false
                                                                            }
                                                                        }
                                                                    )()(__cond_113))
                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_243))));
                                                                __core__decodeUtf8(__core__unBData(d)))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),
                                                                () -> {
                                                                    (__lhs_0_242) -> {
                                                                        __core__equalsInteger((self_10, assetClass_1) -> {
                                                                            __common36 = __core__unConstrData(assetClass_1);
                                                                            __common37 = __core__sndPair(__common36);
                                                                            mph_2 = __core__headList(__common37);
                                                                            tokenName_1 = __core__headList(__core__tailList(__common37));
                                                                            outer_1 = (outer, inner, map) -> {
                                                                                __core__chooseList(map, () -> {
                                                                                    error()
                                                                                }, () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                                                                                        () -> {
                                                                                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                                        },
                                                                                        () -> {
                                                                                            outer(outer, inner, __core__tailList__safe(map))
                                                                                        }
                                                                                    )()
                                                                                })()
                                                                            };
                                                                            outer_1(outer_1, (inner_1, map_1) -> {
                                                                                __core__chooseList(map_1, () -> {
                                                                                    error()
                                                                                }, () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                                        () -> {
                                                                                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                                        },
                                                                                        () -> {
                                                                                            inner_1(inner_1, __core__tailList__safe(map_1))
                                                                                        }
                                                                                    )()
                                                                                })()
                                                                            }, self_10)
                                                                        }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__common43, __core__unBData(__core__headList(__core__tailList(__common40))))), -1)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(innerActivity)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                    () -> {
                                                        __common41 = __core__bData(__common43);
                                                        (__lhs_0_139) -> {
                                                            dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_139)));
                                                            (cctx_4) -> {
                                                                __core__chooseUnit(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                                                __common32 = __core__fstPair(__core__unConstrData(__cond_110));
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common32, 0),
                                                                    () -> {
                                                                        (__lhs_0_238) -> {
                                                                            cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_238)));
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(cCLA, dCLA),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common32, 5),
                                                                            () -> {
                                                                                (__lhs_0_236) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_237) -> {
                                                                                                ()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__77) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(dCLA)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__76) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_110), neededRole = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),
                                                                    () -> {
                                                                        (__lhs_0_105) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                            () -> {
                                                                                (__lhs_0_104) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                                    () -> {
                                                                                        (__lhs_0_103) -> {
                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                                            () -> {
                                                                                                (__lhs_0_102) -> {
                                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                                                    () -> {
                                                                                                        (__lhs_0_101) -> {
                                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                                            () -> {
                                                                                                                (__lhs_0_100) -> {
                                                                                                                    __core__constrData(6, __core__mkNilData(()))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_99) -> {
                                                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(dCLA);
                                                                myCurrentRole = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),
                                                                    () -> {
                                                                        (__lhs_0_143) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),
                                                                            () -> {
                                                                                (__lhs_0_142) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),
                                                                                    () -> {
                                                                                        (__lhs_0_141) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),
                                                                                            () -> {
                                                                                                (__lhs_0_140) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4),
                                                                                                        () -> {
                                                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                                () -> {
                                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__46) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(neededRole);
                                                                __core__ifThenElse(
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                                        () -> {
                                                                            (__lhs_0_232) -> {
                                                                                seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232)));
                                                                                (purpose_7) -> {
                                                                                    mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_233) -> {
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__common43, seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }
                                                                                                )(), (__cond_109) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_109)), 1),
                                                                                                        () -> {
                                                                                                            (__lhs_0_235) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_234) -> {
                                                                                                                dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_234))));
                                                                                                                __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                                                __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));
                                                                                                                __core__ifThenElse(
                                                                                                                    cond,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common43))
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_109)
                                                                                                }((self_210) -> {
                                                                                                    __helios__common__map_get(self_210, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {
                                                                                                        __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                                                    }, () -> {
                                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                                    })
                                                                                                }(self_167 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_167)))))))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__75) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(myCurrentRole)
                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_232))));
                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                                () -> {
                                                                                    (__lhs_0_180) -> {
                                                                                        charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                        __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                        nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                                                        newChange = __core__headList(nextChangeList);
                                                                                        __lhs_0_181 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_181))));
                                                                                        __common25 = __core__tailList(__lhs_0_0_2);
                                                                                        action = __core__headList(__lhs_0_0_2);
                                                                                        __common4 = __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1);
                                                                                        role_2 = __core__headList(__common25);
                                                                                        __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);
                                                                                        OdgtLink = __core__headList(__core__tailList(__common25));
                                                                                        newDgtRoleName = __core__ifThenElse(
                                                                                            __common3,
                                                                                            () -> {
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                            },
                                                                                            () -> {
                                                                                                (__59) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(role_2);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __common4,
                                                                                            () -> {
                                                                                                (__lhs_0_230) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__73) -> {
                                                                                                    ()
                                                                                                }
                                                                                            }
                                                                                        )()(action), __core__chooseUnit((cond) -> {
                                                                                            __core__ifThenElse(
                                                                                                cond,
                                                                                                () -> {
                                                                                                    ()
                                                                                                },
                                                                                                () -> {
                                                                                                    error()
                                                                                                }
                                                                                            )()
                                                                                        }(self_267 = __core__tailList(nextChangeList);
                                                                                        __core__equalsData(__core__listData(self_267), __core__listData(__common0))), __core__ifThenElse(
                                                                                            __common4,
                                                                                            () -> {
                                                                                                (__lhs_0_229) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_228) -> {
                                                                                                            __common28 = __core__sndPair(__core__unConstrData(__lhs_0_228));
                                                                                                            seed_7 = __core__headList(__common28);
                                                                                                            (purpose_6) -> {
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_228);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }(d = __core__headList(__core__tailList(__common28));
                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_227) -> {
                                                                                                            seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_227)));
                                                                                                            (purpose_5) -> {
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_227);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_227))));
                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                            possibleMintDgtVerifications = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_199) -> {
                                                                                                        true
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                        () -> {
                                                                                                            (__lhs_0_183) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __common4,
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_191) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__61) -> {
                                                                                                                            mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                            mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common43, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());
                                                                                                                            dgtLink_2 = __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_185) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (self_209) -> {
                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_209))))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(OdgtLink);
                                                                                                                            (__common1) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsString(__common1, mkTokenName_2(purpose_4)),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), (delegateTakesOwnership) -> {
                                                                                                                                    possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_186) -> {
                                                                                                                                                __core__chooseUnit(__cond_91 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_91)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                                            dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_188)));
                                                                                                                                                            entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_190) -> {
                                                                                                                                                                        (idPrefix_7) -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    error()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_190))));
                                                                                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__63) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(entryType_1)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_187) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_91), true)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__62) -> {
                                                                                                                                                true
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(action);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            mintedDgTkn,
                                                                                                                                            () -> {
                                                                                                                                                true
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                false
                                                                                                                                            }
                                                                                                                                        )(),
                                                                                                                                        () -> {
                                                                                                                                            possibleExtraReplacementCheck
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            false
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common43);
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    assertion_2,
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), true)))
                                                                                                                            }(d = __core__headList(dgtLink_2);
                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(action)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__60) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(myCurrentRole);
                                                                                            otherPossibleVerifications = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_226) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                        () -> {
                                                                                                            (__lhs_0_200) -> {
                                                                                                                isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_201) -> {
                                                                                                                                __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_201))));
                                                                                                                                pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_202) -> {
                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_202);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                                                false,
                                                                                                                                                true
                                                                                                                                            )
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__67) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(pendingRole)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__66) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(pdChange_2)
                                                                                                                });
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_224) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_225) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__72) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(existingRoleEntryMaybe), true)
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                                            () -> {
                                                                                                                                __common26 = __core__unConstrData(role_2);
                                                                                                                                __common27 = __core__fstPair(__common26);
                                                                                                                                __common29 = __core__equalsInteger(__common27, 2);
                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                    replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_205))))));
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __common29,
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_223) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common27, 3),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_222) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__common27, 7),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_221) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__71) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_208) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_206) -> {
                                                                                                                                                __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_206)));
                                                                                                                                                entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (self_156) -> {
                                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_156))))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__69) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(entryType_2)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(existingRoleEntryMaybe);
                                                                                                                                    existingDgTkn = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__common27, 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common43);
                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common27, 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common43);
                                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __common3,
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common43);
                                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__common27, 5),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_213) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsInteger(__common27, 6),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_212) -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __common29,
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_211) -> {
                                                                                                                                                                                        error()
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __core__equalsInteger(__common27, 3),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_210) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_209) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2);
                                                                                                                                    __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        cond,
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )(), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_203) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(action);
                                                                                                                __core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        possibleReplacementIsCorrect
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )())
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__65) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(myCurrentRole);
                                                                                            __core__ifThenElse(
                                                                                                possibleMintDgtVerifications,
                                                                                                () -> {
                                                                                                    otherPossibleVerifications
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        })))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                                        () -> {
                                                                                            (__lhs_0_179) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                                () -> {
                                                                                                    (__lhs_0_156) -> {
                                                                                                        (pendingChangesList) -> {
                                                                                                            (previousManifest) -> {
                                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                                __common21 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                                                                nextManifest = __core__unMapData(__core__headList(__common21));
                                                                                                                __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common21)))), 0);
                                                                                                                __core__ifThenElse(
                                                                                                                    cond,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), __core__ifThenElse(
                                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                                    () -> {
                                                                                                                        __helios__common__fold(pendingChangesList, (prev_4, item_17) -> {
                                                                                                                            prev_4((a_22, b_21) -> {
                                                                                                                                pdChange_1 = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(item_17)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (self_148) -> {
                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_148))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_169) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(item_17);
                                                                                                                                (pendingTypeName) -> {
                                                                                                                                    __core__chooseUnit(__cond_82 = __core__headList(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_82)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_177) -> {
                                                                                                                                                __cond_85 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_21, pendingTypeName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_85)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_178) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__58) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_85)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__55) -> {
                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__helios__common__length(b_21), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        error()
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                )(), head_46 = __core__headList(b_21);
                                                                                                                                                (CME_key, __lhs_1) -> {
                                                                                                                                                    ME_type_1 = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                                                    __lhs_0_173 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                    ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_173))));
                                                                                                                                                    (ME_idPrefix) -> {
                                                                                                                                                        refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_173))))));
                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(refCount_1, 1),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__equalsString(pendingTypeName, CME_key),
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )(), __core__chooseUnit(msg_1 = __core__appendString("  -- ME policy link ", (self_22) -> {
                                                                                                                                                            __core__appendString("'", __core__appendString(self_22, "'"))
                                                                                                                                                        }(d = __core__headList(ME_policyLink);
                                                                                                                                                        __core__decodeUtf8(__core__unBData(d))));
                                                                                                                                                        (), __core__chooseUnit(msg_1 = __core__appendString("  -- pdChange policy link ", (self_22) -> {
                                                                                                                                                            __core__appendString("'", __core__appendString(self_22, "'"))
                                                                                                                                                        }((self_135) -> {
                                                                                                                                                            d = __core__headList(self_135);
                                                                                                                                                            __core__decodeUtf8(__core__unBData(d))
                                                                                                                                                        }(self_274 = __core__headList(__core__tailList(__core__tailList(pdChange_1)));
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_274)))))));
                                                                                                                                                        (), __core__chooseUnit((cond) -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                cond,
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }((other_3) -> {
                                                                                                                                                            __core__equalsData(__core__listData(ME_policyLink), __core__listData(other_3))
                                                                                                                                                        }(self_274 = __core__headList(__core__tailList(__core__tailList(pdChange_1)));
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_274)))))), (nextIdPrefix) -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }(__cond_83 = __core__headList(pdChange_1);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_83)), 2),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_175) -> {
                                                                                                                                                                    idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_175);
                                                                                                                                                                    __core__chooseUnit(__cond_84 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(nextManifest), pendingTypeName);
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_84)), 0),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_176) -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__57) -> {
                                                                                                                                                                                ()
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_84), idPrefix_6)
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_83)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__56) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_83)))))))
                                                                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_173))));
                                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_46))), __core__sndPair(head_46)))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_82), __cond_81 = __core__headList(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_81)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_172) -> {
                                                                                                                                                (callback_12) -> {
                                                                                                                                                    callback_12(a_22, __core__tailList(b_21))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__54) -> {
                                                                                                                                                (callback_11) -> {
                                                                                                                                                    callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_22)(pendingTypeName), __core__tailList(b_21))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_81))
                                                                                                                                }(__cond_80 = __core__headList(__core__tailList(pdChange_1));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_80)), 4),
                                                                                                                                    () -> {
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__53) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_80))
                                                                                                                            })
                                                                                                                        }, (callback_9) -> {
                                                                                                                            callback_9(previousManifest, nextManifest)
                                                                                                                        })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                            __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                                                        })
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4),
                                                                                                                            () -> {
                                                                                                                                mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                                                                mintThisPolicy = __helios__common__map_get(mint, __common41, (x_13) -> {
                                                                                                                                    __core__constrData(0, __core__mkCons(x_13, __core__mkNilData(())))
                                                                                                                                }, () -> {
                                                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                                                });
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    ),
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                )(), observedTokenBurn = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (self_283) -> {
                                                                                                                                            __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_283))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_157) -> {
                                                                                                                                            __core__mkNilPairData(())
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(mintThisPolicy);
                                                                                                                                remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange) -> {
                                                                                                                                    pdChange = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (self_148) -> {
                                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_148))))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_159) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(pcChange);
                                                                                                                                    __cond_74 = __core__headList(__core__tailList(pdChange));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 4),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_161) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_161);
                                                                                                                                                __cond_75 = __core__headList(pdChange);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_75)), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_168) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__51) -> {
                                                                                                                                                            __cond_76 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_76)), 1),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_167) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_162) -> {
                                                                                                                                                                        __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_162)));
                                                                                                                                                                        ME_type = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                                                        tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                                                        mph_31 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_31)), 0),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_166) -> {
                                                                                                                                                                                    foldingBurn
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__52) -> {
                                                                                                                                                                                    __lhs_0_163 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                                                    refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_163))))));
                                                                                                                                                                                    tnStr_2 = __core__decodeUtf8(tn_5);
                                                                                                                                                                                    __cond_78 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_78)), 1),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_165) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_164) -> {
                                                                                                                                                                                                burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_164))));
                                                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                                        __core__equalsInteger(__core__subtractInteger(0, refCount), burningCount),
                                                                                                                                                                                                        false,
                                                                                                                                                                                                        true
                                                                                                                                                                                                    ),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        error()
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        ()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), key_29 = __core__bData(tn_5);
                                                                                                                                                                                                recurse_103 = (recurse_102, self_282) -> {
                                                                                                                                                                                                    __core__chooseList(self_282, () -> {
                                                                                                                                                                                                        self_282
                                                                                                                                                                                                    }, () -> {
                                                                                                                                                                                                        head_49 = __core__headList__safe(self_282);
                                                                                                                                                                                                        tail_6 = __core__tailList__safe(self_282);
                                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                                            __core__equalsData(key_29, __core__fstPair(head_49)),
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                recurse_102(recurse_102, tail_6)
                                                                                                                                                                                                            },
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                __core__mkCons(head_49, recurse_102(recurse_102, tail_6))
                                                                                                                                                                                                            }
                                                                                                                                                                                                        )()
                                                                                                                                                                                                    })()
                                                                                                                                                                                                };
                                                                                                                                                                                                recurse_103(recurse_103, foldingBurn))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_78)
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(mph_31)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_76)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_75)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__50) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_74)
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), true))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )())
                                                                                                            }(self_171 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                            __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_171)))))
                                                                                                        }(self_172 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                        __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(self_172))))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                                                        () -> {
                                                                                                            (__lhs_0_146) -> {
                                                                                                                manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_146)));
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_155) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_154) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_148) -> {
                                                                                                                                            (key_31) -> {
                                                                                                                                                tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_148)))));
                                                                                                                                                charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                                                                                nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_2, cctx_4);
                                                                                                                                                __common22 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                                                __common23 = __core__headList(__common22);
                                                                                                                                                __common24 = __core__unMapData(__common23);
                                                                                                                                                (__lhs_0_149) -> {
                                                                                                                                                    __core__chooseUnit(__cond_69 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common24, key_31);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_69)), 1),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_153) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_150) -> {
                                                                                                                                                                __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_150)));
                                                                                                                                                                entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                                                tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                                                mph_30 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsByteString(tn_4, tokenName_5),
                                                                                                                                                                    () -> {
                                                                                                                                                                        ()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_30)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_152) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__49) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(mph_30), __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_151) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__48) -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(entryType)))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_69), (cond) -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            cond,
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }(self_277 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                                                    __core__equalsData(__core__mapData(self_277), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common24)(key_31)))))
                                                                                                                                                }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);
                                                                                                                                                recIdStr = __core__decodeUtf8(tokenName_5);
                                                                                                                                                (__cond_38) -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_38)), 1),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_71) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_70) -> {
                                                                                                                                                                __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_70)))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_38)
                                                                                                                                                }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                                                __helios__common__find_safe(self_140, hasDD)))
                                                                                                                                            }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_148)));
                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_147) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(manifestActivity), true)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_145) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_144) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(dCLA),
                                                                    () -> {
                                                                        true
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )())
                                                            }(self_208 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__core__mkCons(__common41, __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                            __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_170 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_208);
                                                            __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_170))), __core__unBData(__core__headList(self_208)));
                                                            __core__ifThenElse(
                                                                cond,
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), self_208))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                                            () -> {
                                                                (__lhs_0_138) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                                                    () -> {
                                                                        (__lhs_0_137) -> {
                                                                            (dDataType) -> {
                                                                                recId_10 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_137)))));
                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                                                __core__ifThenElse(
                                                                                    cond,
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit((cond) -> {
                                                                                    ()
                                                                                }(self_194 = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1, self_192) -> {
                                                                                    __core__chooseUnit(__cond_25 = __core__headList(__core__tailList(self_192));
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                                                        () -> {
                                                                                            (__lhs_0_40) -> {
                                                                                                ()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__27) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_25), strId = __core__decodeUtf8(recId_10);
                                                                                    (__cond_21) -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 2),
                                                                                            () -> {
                                                                                                (__lhs_0_38) -> {
                                                                                                    sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_38)));
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__chooseData(sa_1, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        })(),
                                                                                                        () -> {
                                                                                                            (__lhs_0_39) -> {
                                                                                                                index_13 = __core__fstPair(__core__unConstrData(__lhs_0_39));
                                                                                                                fields_74 = __core__sndPair(__core__unConstrData(__lhs_0_39));
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    __core__equalsInteger(index_13, index_13),
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), foundRecId_1 = __core__unBData(__core__headList(fields_74));
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsByteString(recId_10, foundRecId_1),
                                                                                                                        false,
                                                                                                                        true
                                                                                                                    ),
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    }
                                                                                                                )())
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__26) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_192))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 8),
                                                                                                    () -> {
                                                                                                        (__lhs_0_32) -> {
                                                                                                            activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_19) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 5),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_37) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 6),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_36) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 7),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_35) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_19)), 2),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_33) -> {
                                                                                                                                                    sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__chooseData(sa, () -> {
                                                                                                                                                            true
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        }, () -> {
                                                                                                                                                            false
                                                                                                                                                        })(),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_34) -> {
                                                                                                                                                                index_12 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                                fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(index_12, index_12),
                                                                                                                                                                    () -> {
                                                                                                                                                                        ()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsByteString(recId_10, foundRecId),
                                                                                                                                                                        false,
                                                                                                                                                                        true
                                                                                                                                                                    ),
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        true
                                                                                                                                                                    }
                                                                                                                                                                )())
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__25) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(sa)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__24) -> {
                                                                                                                                                    false
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(a_19)
                                                                                                            }, __core__mkNilData(()));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__lessThanEqualsInteger(__helios__common__length(actsOnThisRecord), 0),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__equalsInteger(__helios__common__length(actsOnThisRecord), 1),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_192))))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__23) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_21)
                                                                                    }((i_8) -> {
                                                                                        inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__chooseData(inputData, () -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            })(),
                                                                                            () -> {
                                                                                                (__lhs_0_25) -> {
                                                                                                    index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                                                                                                    fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                                                                                                    __cond_16 = __core__headList(fields_70);
                                                                                                    __core__ifThenElse(
                                                                                                        __core__chooseData(__cond_16, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        }, () -> {
                                                                                                            false
                                                                                                        })(),
                                                                                                        () -> {
                                                                                                            (__lhs_0_26) -> {
                                                                                                                index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                                                                                                ()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__18) -> {
                                                                                                                ()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_16)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__17) -> {
                                                                                                    ()
                                                                                                }
                                                                                            }
                                                                                        )()(inputData), inputData)
                                                                                    }(self_2 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_192))));
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2))))))
                                                                                }((self_193) -> {
                                                                                    link_1 = __core__unListData(__core__headList(self_193));
                                                                                    input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_193))));
                                                                                    mph_19 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_193))))));
                                                                                    (uut_1) -> {
                                                                                        validatorHash_1 = __core__headList(__core__tailList(link_1));
                                                                                        targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, uut_1);
                                                                                        returnedUnchanged = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                                                                                            () -> {
                                                                                                (__lhs_0_44) -> {
                                                                                                    vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_44))));
                                                                                                    __core__chooseUnit((assertionOk) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            assertionOk,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )()
                                                                                                    }(a_13 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                                                                                                    recurse_57 = (recurse_56, keys_4) -> {
                                                                                                        __core__chooseList(keys_4, () -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            key_11 = __core__headList__safe(keys_4);
                                                                                                            __core__ifThenElse(
                                                                                                                b = (a_11, b_11) -> {
                                                                                                                    recurse_55 = (recurse_54, keys_3) -> {
                                                                                                                        __core__chooseList(keys_3, () -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            key_10 = __core__headList__safe(keys_3);
                                                                                                                            __core__ifThenElse(
                                                                                                                                b = (a_qty, b_qty) -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanInteger(a_qty, b_qty),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    )
                                                                                                                                }(__helios__value__get_inner_map_int(a_11, key_10), __helios__value__get_inner_map_int(b_11, key_10));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    b,
                                                                                                                                    false,
                                                                                                                                    true
                                                                                                                                ),
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    recurse_54(recurse_54, __core__tailList__safe(keys_3))
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        })()
                                                                                                                    };
                                                                                                                    recurse_55(recurse_55, __helios__value__merge_map_keys(a_11, b_11))
                                                                                                                }(__helios__value__get_inner_map(a_13, key_11), __helios__value__get_inner_map(targetValue, key_11));
                                                                                                                __core__ifThenElse(
                                                                                                                    b,
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    recurse_56(recurse_56, __core__tailList__safe(keys_4))
                                                                                                                }
                                                                                                            )()
                                                                                                        })()
                                                                                                    };
                                                                                                    recurse_57(recurse_57, __helios__value__merge_map_keys(a_13, targetValue))), (__cond_27) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_46) -> {
                                                                                                                    true
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_45) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_27)
                                                                                                    }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                                                                                                    __helios__common__find_safe(self_143, (o_1) -> {
                                                                                                        __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_50 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                                                                                                        self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))));
                                                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48)))))))
                                                                                                    })))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_43) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(validatorHash_1);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            returnedUnchanged,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_19);
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), self_193))
                                                                                    }(d = __core__headList(link_1);
                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                }, __cond_33 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_171 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2);
                                                                                __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_171)))), dDataType);
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),
                                                                                    () -> {
                                                                                        (__lhs_0_64) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_62) -> {
                                                                                            entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_62)));
                                                                                            __cond_34 = __helios__common__mStruct_field(entry, #747065);
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_63) -> {
                                                                                                        policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_63))));
                                                                                                        (idPrefix_2) -> {
                                                                                                            (callback_8) -> {
                                                                                                                callback_8(policyLink, idPrefix_2)
                                                                                                            }
                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_63))));
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__30) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_34)((dgtLink, idPrefix_1) -> {
                                                                                                (role_1, idPrefix_3) -> {
                                                                                                    (input, mph_18) -> {
                                                                                                        __core__mkCons(__core__listData(dgtLink), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_18), __core__mkNilData(()))))))
                                                                                                    }((inputs_1, mph_13) -> {
                                                                                                        (uutName) -> {
                                                                                                            __cond_6 = __core__headList(__core__tailList(dgtLink));
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_8) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_6) -> {
                                                                                                                        vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                                                                                                                        needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                                                                                                                        ac = __helios__assetclass__new(mph_13, __core__encodeUtf8(uutName));
                                                                                                                        __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsData(self_2 = __helios__txinput__address(i_7);
                                                                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2))), needsAddrWithCred),
                                                                                                                                () -> {
                                                                                                                                    a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                                                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), ac);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__lessThanEqualsInteger(a_3, 0),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    )
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        });
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                                                                                                            () -> {
                                                                                                                                (foundGood) -> {
                                                                                                                                    foundGood
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_7) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_7)
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_6)
                                                                                                        }(d = __core__headList(dgtLink);
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(cctx_2))), __core__unBData(__core__headList(cctx_2)))
                                                                                                }(__core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(dDataType)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                                                                                            })
                                                                                        }
                                                                                    }
                                                                                )()(__cond_33));
                                                                                true), (inputDD) -> {
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsData(inputDD, inputDD),
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsString("settings", dDataType),
                                                                                        () -> {
                                                                                            (curSettingsId) -> {
                                                                                                ()
                                                                                            }((self_286) -> {
                                                                                                __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_286))))
                                                                                            }((oe) -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_61) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_60) -> {
                                                                                                            e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60)));
                                                                                                            some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                                            __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                                                        }
                                                                                                    }
                                                                                                )()(oe)
                                                                                            }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                                                        },
                                                                                        () -> {
                                                                                            ()
                                                                                        }
                                                                                    )(), __core__ifThenElse(
                                                                                        dgData = __helios__txoutputdatum__inline(self_48 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(cctx_2, recId_10);
                                                                                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
                                                                                            () -> {
                                                                                                (__lhs_0_76) -> {
                                                                                                    data_160 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                                                                                                    recIdStr_2 = __core__decodeUtf8(recId_10);
                                                                                                    __core__ifThenElse(
                                                                                                        self_57 = __core__unBData(__helios__common__mStruct_field(data_160, #406964));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsByteString(self_57, recId_10),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                self_21 = __module__StellarHeliosHelpers__AnyData[]__type(data_160);
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsString(self_21, dDataType),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__36) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(dgData),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()))
                                                                                }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, false, recId_10);
                                                                                recIdStr_1 = __core__decodeUtf8(recId_10);
                                                                                (__cond_39) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 1),
                                                                                        () -> {
                                                                                            (__lhs_0_73) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_72) -> {
                                                                                                __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_72)))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_39)
                                                                                }(self_140 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                                __helios__common__find_safe(self_140, hasDD_1)))))
                                                                            }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_137)));
                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                                            () -> {
                                                                                (__lhs_0_135) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                                                    () -> {
                                                                                        (__lhs_0_134) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                                            () -> {
                                                                                                (__lhs_0_133) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_132) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(activity_3);
                                __core__chooseUnit(__core__ifThenElse(
                                    checkNonDelegatedActivities,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )(), (cctx_7) -> {
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                                () -> {
                                                    (__lhs_0_127) -> {
                                                        true
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                        () -> {
                                                            (__lhs_0_126) -> {
                                                                error()
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                () -> {
                                                                    __common2 = __core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))));
                                                                    __common38 = __core__unConstrData(__common2);
                                                                    __common39 = __core__sndPair(__common38);
                                                                    (__lhs_0_121) -> {
                                                                        VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_121)));
                                                                        seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));
                                                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                                                        mintingOk = __module__CapoMintHelpers__validateUutMinting(__common43, seed_3, __core__mkCons(__core__bData(#7333647276), __core__mkNilData(())), true, mkTn, false, ());
                                                                        __core__chooseUnit((cond) -> {
                                                                            ()
                                                                        }(self_234 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);
                                                                        true), (newRecData) -> {
                                                                            __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);
                                                                            (reg) -> {
                                                                                __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__core__unIData((self_2) -> {
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                                                                }(self_2 = __core__headList(__core__tailList(__common39));
                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2))))), __core__unIData((self_2) -> {
                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_2)))
                                                                                }(self_2 = __core__headList(__common39);
                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_2)))))), 3600000);
                                                                                __core__ifThenElse(
                                                                                    cond,
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), (memberToken) -> {
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__ifThenElse(
                                                                                            self_43 = __core__encodeUtf8(memberToken);
                                                                                            __core__ifThenElse(
                                                                                                __core__lessThanInteger(__core__lengthOfByteString(self_43), 7),
                                                                                                () -> {
                                                                                                    false
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__equalsByteString(#6d656d6265722d, __core__sliceByteString(0, 7, self_43))
                                                                                                }
                                                                                            )(),
                                                                                            false,
                                                                                            true
                                                                                        ),
                                                                                        () -> {
                                                                                            error()
                                                                                        },
                                                                                        () -> {
                                                                                            ()
                                                                                        }
                                                                                    )(), memberTokenAc = __helios__assetclass__new(__common43, __core__encodeUtf8(memberToken));
                                                                                    __core__ifThenElse(
                                                                                        __core__ifThenElse(
                                                                                            (__cond_61) -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_61)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_125) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_124) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    }
                                                                                                )()(__cond_61)
                                                                                            }(self_140 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                                            __helios__common__find_safe(self_140, (i_13) -> {
                                                                                                __core__equalsInteger(__helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_13))));
                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), memberTokenAc), 1)
                                                                                            })),
                                                                                            () -> {
                                                                                                true
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )(),
                                                                                        () -> {
                                                                                            mintingOk
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )())
                                                                                }(d = __helios__common__mStruct_field(reg, #6d74);
                                                                                __core__decodeUtf8(__core__unBData(d))))
                                                                            }(__cond_29 = __helios__txoutputdatum__inline(self_48 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);
                                                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                                                            __core__ifThenElse(
                                                                                __core__chooseData(__cond_29, () -> {
                                                                                    true
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                }, () -> {
                                                                                    false
                                                                                })(),
                                                                                () -> {
                                                                                    (__lhs_0_50) -> {
                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_50)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__29) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(__cond_29))
                                                                        }(recIdBytes_1 = __core__encodeUtf8(mkTn("s3drv"));
                                                                        output_2 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(cctx_7, recIdBytes_1);
                                                                        mph_21 = __core__unBData(__core__headList(cctx_7));
                                                                        __core__mkCons(__core__constrData(2, __core__mkCons(output_2, __core__mkNilData(()))), __core__mkCons(__core__bData(recIdBytes_1), __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(mph_21), __core__mkNilData(())))))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                                        () -> {
                                                                            (__lhs_0_118) -> {
                                                                                VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_118)));
                                                                                __core__chooseUnit((cond) -> {
                                                                                    ()
                                                                                }(self_234 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);
                                                                                true), recId_8 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));
                                                                                hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_7, true, recId_8);
                                                                                (hasRecOutput) -> {
                                                                                    __core__chooseUnit((self_262) -> {
                                                                                        recurse_97 = (recurse_96, lst_26) -> {
                                                                                            __core__chooseList(lst_26, () -> {
                                                                                                ()
                                                                                            }, () -> {
                                                                                                __core__chooseUnit(__lhs_0_120 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__core__headList__safe(lst_26)))));
                                                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                                                                                updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasRecOutput);
                                                                                                updatedData = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));
                                                                                                (), recurse_96(recurse_96, __core__tailList__safe(lst_26)))
                                                                                            })()
                                                                                        };
                                                                                        recurse_97(recurse_97, self_262)
                                                                                    }(self_54 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                                    __helios__common__filter(self_54, hasRecInput, __core__mkNilData(()))), true)
                                                                                }(capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(cctx_7);
                                                                                (txo_3) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_3))), capoAddr_2),
                                                                                        () -> {
                                                                                            data_159 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_3))))));
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),
                                                                                                () -> {
                                                                                                    (__lhs_0_75) -> {
                                                                                                        x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "s3driver"),
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsByteString(recId_8, #),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_8)
                                                                                                                    }
                                                                                                                )()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                false
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__35) -> {
                                                                                                        false
                                                                                                    }
                                                                                                }
                                                                                            )()(data_159)
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),
                                                                                () -> {
                                                                                    (__lhs_0_117) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__42) -> {
                                                                                        false
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()(activity_3),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))
                                            }
                                        )(),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            error()
                                        }
                                    )()
                                }(self_225 = __core__mkCons(__core__bData(__common43), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));
                                charter_1 = __core__headList(__core__tailList(self_225));
                                __common19 = __core__unConstrData(charter_1);
                                __common20 = __core__fstPair(__common19);
                                __core__ifThenElse(
                                    __core__equalsInteger(__common20, 1),
                                    () -> {
                                        (__lhs_0_84) -> {
                                            self_225
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__common20, 2),
                                            () -> {
                                                (__lhs_0_83) -> {
                                                    self_225
                                                }
                                            },
                                            () -> {
                                                (__lhs_0_79) -> {
                                                    mph_23 = __core__unBData(__core__headList(self_225));
                                                    charterAc_3 = __helios__assetclass__new(mph_23, #63686172746572);
                                                    (__cond_45) -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 1),
                                                            () -> {
                                                                (__lhs_0_82) -> {
                                                                    __module__CapoHelpers__CapoCtx[]__withCharterInput_1(self_225)
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_81) -> {
                                                                    charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_81)));
                                                                    datum_4 = __helios__common__assert_constr_index(data_136 = __helios__txoutputdatum__inline(self_48 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                                                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_48))))));
                                                                    __helios__common__assert_constr_index(data_136, 0), 0);
                                                                    __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                                                }
                                                            }
                                                        )()(__cond_45)
                                                    }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                    __helios__common__find_safe(self_140, (txin_5) -> {
                                                        a_3 = __helios__value__get_safe(self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))), charterAc_3);
                                                        __core__ifThenElse(
                                                            __core__lessThanEqualsInteger(a_3, 0),
                                                            false,
                                                            true
                                                        )
                                                    }))
                                                }
                                            }
                                        )()
                                    }
                                )()(charter_1)))
                            }((v) -> {
                                others = __helios__value__show(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__common__filter(v, (pair_8) -> {
                                    b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_8)), #);
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    )
                                }, __core__mkNilPairData(())), (someMph, __10) -> {
                                    __core__ifThenElse(
                                        __core__equalsByteString(__common43, someMph),
                                        false,
                                        true
                                    )
                                }));
                                ada = __core__appendString((self_99) -> {
                                    show_positive = (x_3) -> {
                                        __core__appendString(__helios__int__show(__core__divideInteger(__core__ifThenElse(
                                            __core__lessThanInteger(x_3, 0),
                                            () -> {
                                                __core__multiplyInteger(x_3, -1)
                                            },
                                            () -> {
                                                x_3
                                            }
                                        )(), 1000000)), __core__appendString(".", __core__decodeUtf8__safe(self_98 = __core__modInteger(x_3, 1000000);
                                        recurse_61 = (recurse_60, x_2, pos_1, bytes_8) -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(x_2, 0),
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(6, pos_1),
                                                        () -> {
                                                            bytes_8
                                                        },
                                                        () -> {
                                                            recurse_60(recurse_60, 0, __core__addInteger(pos_1, 1), __core__consByteString(48, bytes_8))
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    recurse_60(recurse_60, __core__divideInteger(x_2, 10), __core__addInteger(pos_1, 1), __core__consByteString(__core__addInteger(__core__modInteger(x_2, 10), 48), bytes_8))
                                                }
                                            )()
                                        };
                                        recurse_61(recurse_61, self_98, 0, #))))
                                    };
                                    __core__ifThenElse(
                                        __core__lessThanInteger(self_99, 0),
                                        () -> {
                                            __core__appendString("-", show_positive(__core__multiplyInteger(self_99, -1)))
                                        },
                                        () -> {
                                            show_positive(self_99)
                                        }
                                    )()
                                }((a_14) -> {
                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_14, 10000000000000), 1000000000))
                                }((self_100) -> {
                                    __core__quotientInteger(__core__addInteger(self_100, __core__ifThenElse(
                                        __core__lessThanInteger(self_100, 0),
                                        -500000,
                                        500000
                                    )), 1000000)
                                }((a_15) -> {
                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_15, 10000000), 1000000000))
                                }(b_16 = __helios__value__get_safe(v, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(())))));
                                __core__multiplyInteger(b_16, 1000000))))), " ADA");
                                (mine) -> {
                                    __core__appendString(__core__appendString(__core__appendString(mine, " + "), ada), others)
                                }((self_162) -> {
                                    recurse_77 = (recurse_76, lst_18, sep) -> {
                                        __core__chooseList(lst_18, () -> {
                                            ""
                                        }, () -> {
                                            __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_18)))), recurse_76(recurse_76, __core__tailList__safe(lst_18), " + "))
                                        })()
                                    };
                                    recurse_77(recurse_77, self_162, "")
                                }(self_163 = __helios__value__get_policy(v, __common43);
                                __helios__common__fold(self_163, (z_3, pair_35) -> {
                                    (tokenName_3, c_3) -> {
                                        __helios__common__concat(__core__mkCons(__core__bData(__core__encodeUtf8(__helios__int__show(c_3))), __core__mkCons(__core__bData(#c397f09f92b420), __core__mkCons(s = __core__decodeUtf8(tokenName_3);
                                        __core__bData(__core__encodeUtf8(s)), __core__mkNilData(())))), z_3)
                                    }(__core__unBData(__core__fstPair(pair_35)), __core__unIData(__core__sndPair(pair_35)))
                                }, __core__mkNilData(()))))
                            }(self_30 = __helios__scriptcontext__get_current_input();
                            self_29 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_30))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_29)))))))
                        }
                    },
                    () -> {
                        (__44) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                () -> {
                                    (__lhs_0_131) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                        () -> {
                                            (__lhs_0_130) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__45) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                                                    () -> {
                                                        (__lhs_0_129) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                                            () -> {
                                                                (__lhs_0_128) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__43) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(activity_3)
                                            }
                                        }
                                    )()
                                }
                            )()(activity_3)
                        }
                    }
                )()
            }
        )()(mdd)
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1, __DATUM, __REDEEMER),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__int____geq = (a, b_1) -> {
        __helios__bool____not(__core__lessThanInteger(a, b_1))
    };
    __helios__bool__and = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                b_2()
            },
            () -> {
                false
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__bytearray__decode_utf8 = (self) -> {
        () -> {
            __core__decodeUtf8(self)
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_1) -> {
        __core__sndPair(__core__unConstrData(self_1))
    };
    __helios__common__enum_field_0 = (self_2) -> {
        __core__headList(__helios__common__enum_fields(self_2))
    };
    __helios__common__enum_fields_after_0 = (self_3) -> {
        __core__tailList(__helios__common__enum_fields(self_3))
    };
    __helios__common__enum_field_1 = (self_4) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_4))
    };
    __helios__int____to_data = __core__iData;
    __helios__value__new = (assetClass, i) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_5) -> {
        __core__multiplyInteger(self_5, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__int__to_hex = (self_6) -> {
        () -> {
            recurse_1 = (recurse) -> {
                (self_7, bytes) -> {
                    digit = __core__modInteger(self_7, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_7, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse(recurse)(__core__divideInteger(self_7, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_6, 0),
                () -> {
                    __core__consByteString(45, recurse_1(recurse_1)(__core__multiplyInteger(self_6, -1), #))
                },
                () -> {
                    recurse_1(recurse_1)(self_6, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_8) -> {
        () -> {
            recurse_3 = (recurse_2, self_9) -> {
                n = __core__lengthOfByteString(self_9);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_9, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_2(recurse_2, __core__sliceByteString(1, n, self_9)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_3(recurse_3, self_8)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_10) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_10)
        }
    };
    __helios__common__enum_fields_after_1 = (self_11) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__common__enum_fields_after_2 = (self_12) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_12))
    };
    __helios__common__enum_fields_after_3 = (self_13) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_13))
    };
    __helios__common__enum_field_4 = (self_14) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_14))
    };
    __helios__tx__minted = (self_15) -> {
        __core__unMapData(__helios__common__enum_field_4(self_15))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_1),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_16, fn, z) -> {
        recurse_5 = (recurse_4, self_17, z_1) -> {
            __core__chooseList(self_17, () -> {
                z_1
            }, () -> {
                recurse_4(recurse_4, __core__tailList__safe(self_17), fn(z_1, __core__headList__safe(self_17)))
            })()
        };
        recurse_5(recurse_5, self_16, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_18) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i_2, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i_2), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i_2, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i_2, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_18, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_18, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_18, #)
                }
            )())
        }
    };
    __helios__data__show = (self_19) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_9, data_2) -> {
                recurse_9(recurse_9, data_2)
            }((recurse_8, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_8(recurse_8, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_8(recurse_8, __core__fstPair(pair));
                        value_1 = recurse_8(recurse_8, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_8(recurse_8, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_4 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_4)()
                })()
            }, self_19)
        }
    };
    __helios__data__show_constr_data = (callback) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_1) -> {
        (list_1) -> {
            recurse_11 = (recurse_10) -> {
                (lst_1, i_3) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_3, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_1(head)
                            },
                            () -> {
                                recurse_10(recurse_10)(__core__tailList__safe(lst_1), __core__subtractInteger(i_3, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_11(recurse_11)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_2) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_2(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_20) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_20)()
                    }
                )()
            })(self_20)
        }
    };
    __helios__string____neq = (self_21, other) -> {
        __helios__bool____not(__helios__string____eq(self_21, other))
    };
    __helios__string__show = (self_22) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_22, "'"))
        }
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__value__show = (self_23) -> {
        () -> {
            __helios__common__fold(self_23, (prev_1, pair_3) -> {
                mph_4 = __core__unBData__safe(__core__fstPair(pair_3));
                tokens = __core__unMapData__safe(__core__sndPair(pair_3));
                __helios__common__fold(tokens, (prev_2, pair_4) -> {
                    token_name_2 = __core__unBData__safe(__core__fstPair(pair_4));
                    qty = __core__unIData__safe(__core__sndPair(pair_4));
                    __helios__string____add(prev_2, __core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            __helios__string____add("lovelace: ", __helios__string____add(__helios__int__show(qty)(), "
"))
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), __helios__string____add(".", __helios__string____add(__helios__bytearray__show(token_name_2)(), __helios__string____add(": ", __helios__string____add(__helios__int__show(qty)(), "
")))))
                        }
                    )())
                }, prev_1)
            }, "")
        }
    };
    __helios__int____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__int____eq(self_24, other_1))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_25) -> {
        () -> {
            self_25
        }
    };
    __helios__string__encode_utf8 = (self_26) -> {
        () -> {
            __core__encodeUtf8(self_26)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_27) -> {
        () -> {
            __core__ifThenElse(
                self_27,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_28) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_28)()), self_28)
        }
    };
    __helios__txoutput__value = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_1(self_29))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_30) -> {
        __helios__txoutput__value(__helios__txinput__output(self_30))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_31) -> {
        __core__unListData(__helios__common__enum_field_0(self_31))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__map_get = (self_32, key_1, fnFound, fnNotFound) -> {
        recurse_15 = (recurse_14, self_33, key_2) -> {
            __core__chooseList(self_33, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_33);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_14(recurse_14, __core__tailList__safe(self_33), key_2)
                    }
                )()
            })()
        };
        recurse_15(recurse_15, self_32, key_1)
    };
    __helios__common__enum_tag_equals = (data_5, i_4) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_5)), i_4)
    };
    __helios__option__NONE_FUNC = (callback_3) -> {
        callback_3(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_4) -> {
            callback_4(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_6) -> {
        __core__chooseData(data_6, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_6))
        })()
    };
    __helios__int__from_data_safe = (data_7) -> {
        __core__chooseData(data_7, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_7))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__length = (lst_3) -> {
        recurse_17 = (recurse_16, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_16(recurse_16, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_17(recurse_17, lst_3)
    };
    __helios__common__all = (self_34, fn_1) -> {
        recurse_19 = (recurse_18, self_35, fn_2) -> {
            __core__chooseList(self_35, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_35)),
                    () -> {
                        recurse_18(recurse_18, __core__tailList__safe(self_35), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_19(recurse_19, self_34, fn_1)
    };
    __helios__common__identity = (self_36) -> {
        self_36
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__bool__or = (a_4, b_4) -> {
        __core__ifThenElse(
            a_4(),
            () -> {
                true
            },
            () -> {
                b_4()
            }
        )()
    };
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_37) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_37))))
    };
    __helios__common__enum_fields_after_4 = (self_38) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_38))
    };
    __helios__common__enum_fields_after_5 = (self_39) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_39))
    };
    __helios__common__enum_fields_after_6 = (self_40) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_40))
    };
    __helios__common__enum_field_7 = (self_41) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_41))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_42) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_42))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__common__starts_with = (self_43, selfLengthFn) -> {
        (prefix_1) -> {
            (n_1, m) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(n_1, m),
                    () -> {
                        false
                    },
                    () -> {
                        __core__equalsByteString(prefix_1, __core__sliceByteString(0, m, self_43))
                    }
                )()
            }(selfLengthFn(self_43), __core__lengthOfByteString(prefix_1))
        }
    };
    __helios__bytearray__starts_with = (self_44) -> {
        __helios__common__starts_with(self_44, __core__lengthOfByteString)
    };
    __helios__string__starts_with = (self_45) -> {
        (prefix_2) -> {
            __helios__bytearray__starts_with(__core__encodeUtf8(self_45))(__core__encodeUtf8(prefix_2))
        }
    };
    __helios__value__get_safe = (self_46) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_3) -> {
                __core__chooseList(map_3, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_4) -> {
                __core__chooseList(map_4, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_46)
        }
    };
    __helios__txoutputdatum__inline = (self_47) -> {
        pair_5 = __core__unConstrData(self_47);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_48) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_48))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__tx__outputs = (self_49) -> {
        __core__unListData(__helios__common__enum_field_2(self_49))
    };
    __helios__txinput__datum = (self_50) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_50))
    };
    __helios__common__serialize = (self_51) -> {
        () -> {
            __core__serialiseData(self_51)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_52, fn_3, nil) -> {
        recurse_21 = (recurse_20, self_53, fn_4) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_20(recurse_20, __core__tailList__safe(self_53), fn_4))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_53), fn_4)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_52, fn_3)
    };
    __helios__common__filter_list = (self_54, fn_5) -> {
        __helios__common__filter(self_54, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__parse_utf8_cont_byte = (byte, callback_5) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback_5(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback_5(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_23 = (recurse_22, i_5) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_5, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_5);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_22(recurse_22, __core__addInteger(i_5, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_5, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_22(recurse_22, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_5, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_22(recurse_22, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_5, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_5, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_22(recurse_22, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_23(recurse_23, 0)
    };
    __helios__string__is_valid_data = (data_8) -> {
        __core__chooseData(data_8, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_8))
        })()
    };
    __helios__bytearray__is_valid_data = (data_9) -> {
        __core__chooseData(data_9, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_10, index_2, test_a, test_b) -> {
        __core__chooseData(data_10, () -> {
            pair_6 = __core__unConstrData__safe(data_10);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_6), index_2),
                () -> {
                    fields_3 = __core__sndPair(pair_6);
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_3)),
                            () -> {
                                tail = __core__tailList__safe(fields_3);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_11) -> {
            __core__chooseData(data_11, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_6 = __core__unBData__safe(data_11);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_6), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, () -> {
            pair_7 = __core__unConstrData__safe(data_12);
            index_3 = __core__fstPair(pair_7);
            fields_4 = __core__sndPair(pair_7);
            __core__ifThenElse(
                __core__equalsInteger(0, index_3),
                () -> {
                    __core__chooseList(fields_4, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_4), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_4))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_13) -> {
        __core__chooseData(data_13, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_14) -> {
        __helios__common__test_constr_data_2(data_14, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_15) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_5, name) -> {
        name_data = __core__bData(name);
        recurse_25 = (recurse_24, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_2 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_2
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, map_5)
    };
    __helios__common__mStruct_field = (self_55, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_55), name_1)
    };
    __helios__common__test_mStruct_field = (self_56, name_2, inner_test) -> {
        __core__chooseData(self_56, () -> {
            false
        }, () -> {
            map_7 = __core__unMapData__safe(self_56);
            recurse_27 = (recurse_26, map_8) -> {
                __core__chooseList(map_8, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_8);
                    key_4 = __core__fstPair(head_4);
                    value_3 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_2),
                        () -> {
                            inner_test(value_3)
                        },
                        () -> {
                            recurse_26(recurse_26, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_27(recurse_27, map_7)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__value__contains_policy = (self_57) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_29 = (recurse_28, map_9) -> {
                __core__chooseList(map_9, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, self_57)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__bytearray____neq = (self_58, other_2) -> {
        __helios__bool____not(__helios__bytearray____eq(self_58, other_2))
    };
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_31 = (recurse_30, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_31(recurse_31, tokens_1)
    };
    __helios__value__is_zero = (self_59) -> {
        () -> {
            recurse_33 = (recurse_32, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_10))))
                    }, () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_10))
                    })
                })()
            };
            recurse_33(recurse_33, self_59)
        }
    };
    __helios__value__get_policy = (self_60) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_35 = (recurse_34, map_11) -> {
                __core__chooseList(map_11, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                        },
                        () -> {
                            recurse_34(recurse_34, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_35(recurse_35, self_60)
        }
    };
    __helios__value__get_inner_map_int = (map_12, key_5) -> {
        recurse_37 = (recurse_36, map_13, key_6) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), key_6),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_13)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_13), key_6)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, map_12, key_5)
    };
    __helios__value__get_map_keys = (map_14) -> {
        recurse_39 = (recurse_38, map_15) -> {
            __core__chooseList(map_15, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_15)), recurse_38(recurse_38, __core__tailList__safe(map_15)))
            })()
        };
        recurse_39(recurse_39, map_14)
    };
    __helios__common__any = (self_61, fn_6) -> {
        recurse_41 = (recurse_40, self_62, fn_7) -> {
            __core__chooseList(self_62, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_62)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(self_62), fn_7)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, self_61, fn_6)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_7) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_7)
        })
    };
    __helios__common__concat = (a_5, b_5) -> {
        recurse_43 = (recurse_42, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_43(recurse_43, b_5, a_5)
    };
    __helios__value__merge_map_keys = (a_6, b_6) -> {
        aKeys = __helios__value__get_map_keys(a_6);
        recurse_45 = (recurse_44, keys, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__common__list_0
            }, () -> {
                key_8 = __core__fstPair(__core__headList__safe(map_16));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_8),
                    () -> {
                        recurse_44(recurse_44, keys, __core__tailList__safe(map_16))
                    },
                    () -> {
                        __core__mkCons(key_8, recurse_44(recurse_44, keys, __core__tailList__safe(map_16)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_45(recurse_45, aKeys, b_6);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_7, b_7) -> {
            recurse_47 = (recurse_46, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_9 = __core__headList__safe(keys_1);
                    tail_1 = recurse_46(recurse_46, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_7, key_9), __helios__value__get_inner_map_int(b_7, key_9));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_47(recurse_47, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_17, mph_9) -> {
        recurse_49 = (recurse_48, map_18) -> {
            __core__chooseList(map_18, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_18)))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(map_18))
                    }
                )()
            })()
        };
        recurse_49(recurse_49, map_17)
    };
    __helios__value__add_or_subtract = (a_8, b_8, op_1) -> {
        recurse_51 = (recurse_50, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_10 = __core__headList__safe(keys_2);
                tail_2 = recurse_50(recurse_50, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_8, key_10), __helios__value__get_inner_map(b_8, key_10));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_51(recurse_51, __helios__value__merge_map_keys(a_8, b_8), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_9, b_9) -> {
        __helios__value__add_or_subtract(a_9, b_9, __core__addInteger)
    };
    __helios__common__map = (self_63, fn_8, init) -> {
        recurse_53 = (recurse_52, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_53(recurse_53, self_63, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_1, lst_8, comp) -> {
        recurse_55 = (recurse_54, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_1, lst_9)
            }, () -> {
                head_5 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_1, head_5),
                    () -> {
                        __core__mkCons(x_1, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_5, recurse_54(recurse_54, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_55(recurse_55, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_6, tail_3) -> {
                    __helios__common__insert_in_sorted(head_6, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_56(recurse_56, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_57(recurse_57, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_10, b_10) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_10, b_10),
            b_10,
            a_10
        )
    };
    __helios__common__slice_bytearray = (self_64, selfLengthFn_1) -> {
        (start, end) -> {
            normalize = (pos) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn_1(self_64), 1), pos)
                    },
                    () -> {
                        pos
                    }
                )()
            };
            fn_10 = (start_1) -> {
                fn_9 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_64)
                };
                fn_9(normalize(end))
            };
            fn_10(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_65) -> {
        __helios__common__slice_bytearray(self_65, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_66) -> {
        () -> {
            __core__blake2b_256(self_66)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__int__serialize = (self_67) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_67))
        }
    };
    __helios__txoutputid__index = (self_68) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_68))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_69) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_69))
    };
    __helios__common__enum_fields_after_8 = (self_70) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_70))
    };
    __helios__common__enum_field_9 = (self_71) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_71))
    };
    __helios__tx__redeemers = (self_72) -> {
        __core__unMapData(__helios__common__enum_field_9(self_72))
    };
    __helios__scriptpurpose__spending____is = (data_16) -> {
        __helios__common__enum_tag_equals(data_16, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_73) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_7) -> {
                            __helios__bytearray__show(bytes_7)()
                        }))(fields_5)
                    },
                    () -> {
                        __helios__data__show(self_73)()
                    }
                )()
            })(self_73)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_17) -> {
            callback_nok_2 = __helios__data__show(data_17);
            __core__chooseData(data_17, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
                callback_6(__core__unIData__safe(data_17))
            }, callback_nok_2)()
        }
    };
    __helios__txoutputid__show = (self_74) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_6);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_6);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_74)()
                    }
                )()
            })(self_74)
        }
    };
    __helios__tx__ref_inputs = (self_75) -> {
        __core__unListData(__helios__common__enum_field_1(self_75))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__string__serialize = (self_76) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_76))
        }
    };
    __helios__txinput__address = (self_77) -> {
        __helios__txoutput__address(__helios__txinput__output(self_77))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_78) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_78))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_79) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_79))
        }
    };
    __helios__struct____eq = (self_80, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_80), __helios__struct____to_data(other_3))
    };
    __helios__data__constrdata____is = (data_18) -> {
        __core__chooseData(data_18, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_19) -> {
        __core__sndPair(__core__unConstrData(data_19))
    };
    __helios__value__compare_inner = (comp_2, a_11, b_11) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_11 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_11, key_11), __helios__value__get_inner_map_int(b_11, key_11))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value__compare = (a_12, b_12, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_12 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_12, key_12), __helios__value__get_inner_map(b_12, key_12))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, b_12))
    };
    __helios__value____geq = (a_13, b_13) -> {
        __helios__value__compare(a_13, b_13, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_81) -> {
        (value_4) -> {
            __helios__value____geq(self_81, value_4)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_82, fn_11) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_82), fn_11)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_83) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_83)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_84) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_84))
    };
    __helios__spendingcredential__validator__cast = (data_20) -> {
        __helios__common__assert_constr_index(data_20, 1)
    };
    __helios__txoutput__is_locked_by = (self_85) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_85));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_86) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_86, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_87) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_87)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata__tag = (data_21) -> {
        __core__fstPair(__core__unConstrData(data_21))
    };
    __helios__common__struct_fields_after_1 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_fields_after_2 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_89))
    };
    __helios__common__struct_fields_after_3 = (self_90) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_90))
    };
    __helios__common__struct_field_4 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_91))
    };
    __helios__common__struct_field_3 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_92))
    };
    __helios__common__struct_field_2 = (self_93) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_93))
    };
    __helios__txoutput__is_valid_data = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_23) -> {
        __helios__common__test_constr_data_2(data_23, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_94) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_94))
    };
    __helios__common__enum_field_5 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_95))
    };
    __helios__common__enum_field_3 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_96))
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_97) -> {
        () -> {
            __core__divideInteger(self_97, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_98) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_98, 0),
                () -> {
                    __core__multiplyInteger(self_98, -1)
                },
                () -> {
                    self_98
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_99, n_4) -> {
        recurse_63 = (recurse_62, x_2, pos_1, bytes_8) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_2, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_4, pos_1),
                        () -> {
                            bytes_8
                        },
                        () -> {
                            recurse_62(recurse_62, 0, __core__addInteger(pos_1, 1), __core__consByteString(48, bytes_8))
                        }
                    )()
                },
                () -> {
                    recurse_62(recurse_62, __core__divideInteger(x_2, 10), __core__addInteger(pos_1, 1), __core__consByteString(__helios__int__show_digit(x_2), bytes_8))
                }
            )()
        };
        recurse_63(recurse_63, self_99, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_100) -> {
        () -> {
            show_positive = (x_3) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_3)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_3, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_100, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_100, -1)))
                },
                () -> {
                    show_positive(self_100)
                }
            )()
        }
    };
    __helios__real__round_calc_result = (res) -> {
        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))
    };
    __helios__real__ONESQ = 1000000000000;
    __helios__int____div1 = (a_14, b_14) -> {
        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_14, __core__multiplyInteger(__helios__real__ONESQ, 10)), b_14))
    };
    __helios__real__MINUS_HALF = -500000;
    __helios__real__HALF = 500000;
    __helios__real__round = (self_101) -> {
        () -> {
            __core__quotientInteger(__core__addInteger(self_101, __core__ifThenElse(
                __core__lessThanInteger(self_101, 0),
                __helios__real__MINUS_HALF,
                __helios__real__HALF
            )), __helios__real__ONE)
        }
    };
    __helios__real____div = (a_15, b_15) -> {
        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_15, __core__multiplyInteger(__helios__real__ONE, 10)), b_15))
    };
    __helios__real____add1 = (a_16, b_16) -> {
        __core__addInteger(a_16, __core__multiplyInteger(b_16, __helios__real__ONE))
    };
    __helios__assetclass__ADA = __helios__assetclass__new(#, #);
    __helios__value__get_lovelace = (self_102) -> {
        () -> {
            __helios__value__get_safe(self_102)(__helios__assetclass__ADA)
        }
    };
    __helios__common__filter_map = (self_103, fn_12) -> {
        __helios__common__filter(self_103, fn_12, __core__mkNilPairData(()))
    };
    __helios__value__get_assets = (self_104) -> {
        () -> {
            __helios__common__filter_map(self_104, (pair_8) -> {
                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_8)), #))
            })
        }
    };
    __helios__mintingpolicyhash__is_valid_data = (data_24) -> {
        __core__chooseData(data_24, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_24);
            n_5 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_5, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_5, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__txoutput____to_data = __helios__common__identity;
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            pair_9 = __core__unConstrData__safe(data_25);
            index_4 = __core__fstPair(pair_9);
            fields_7 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_26) -> {
        __core__chooseData(data_26, () -> {
            pair_10 = __core__unConstrData__safe(data_26);
            tag_4 = __core__fstPair(pair_10);
            fields_8 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            pair_11 = __core__unConstrData__safe(data_27);
            index_5 = __core__fstPair(pair_11);
            fields_9 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_28) -> {
        __helios__common__test_constr_data_2(data_28, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_105, fn_13, callback_7) -> {
        recurse_65 = (recurse_64, self_106, fn_14) -> {
            __core__chooseList(self_106, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_7 = __core__headList__safe(self_106);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_7)))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_106), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_105, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_17) -> {
        __core__constrData(__core__ifThenElse(
            b_17,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_6) -> {
        (data_29) -> {
            __core__chooseData(data_29, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_29);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_6),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_30) -> {
        __helios__common__test_constr_data_2(data_30, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_31) -> {
        __core__chooseData(data_31, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_107) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_107)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_108) -> {
        __helios__common__length(self_108)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_109) -> {
        __helios__common__length(self_109)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_32) -> {
        map_21 = __core__unMapData(data_32);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_110) -> {
        (key_13) -> {
            __helios__common__map_get(self_110, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_111) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_111)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_33) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_33, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_33, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid AnyData data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_34) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_34),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_34
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_112) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_112, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_113) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_113, #747065))
    };
    __helios__list[__helios__data]__head = (self_114) -> {
        __helios__data__from_data(__core__headList(self_114))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_35) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_35),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_35),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_35),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_36) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_36),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_36
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_37) -> {
        __helios__common__enum_tag_equals(data_37, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_38) -> {
        __core__chooseData(data_38, () -> {
            pair_12 = __core__unConstrData__safe(data_38);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 0),
                () -> {
                    data_39 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_39, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_39);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_115) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_115))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_116))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_13 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 1),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_14 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 2),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_46) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_46),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_46),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_46),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_46),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_46),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_46),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_46),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_46),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_47) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_47),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_47
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_48) -> {
        __helios__common__enum_tag_equals(data_48, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_49) -> {
        __core__chooseData(data_49, () -> {
            pair_15 = __core__unConstrData__safe(data_49);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 0),
                () -> {
                    data_50 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_50, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_50);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_16 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 1),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_17 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 2),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_18 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 3),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_19 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 4),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_117) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_118) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_118)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_20 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 5),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_21 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 6),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_22 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 7),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_72) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_72),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_72),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_72),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_72),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_72),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_73) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_73),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_73
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_74) -> {
        __helios__common__enum_tag_equals(data_74, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_75) -> {
        __core__chooseData(data_75, () -> {
            pair_23 = __core__unConstrData__safe(data_75);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 0),
                () -> {
                    data_76 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_76, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_76);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_24 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 1),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_25 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 2),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_119))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_120) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_120))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_26 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 3),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_27 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 4),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_88) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_88),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_88),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_88),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_89) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_89),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_89
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_90) -> {
        __helios__common__enum_tag_equals(data_90, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_28 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 0),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_123) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_29 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 1),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_30 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 2),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_124) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_125) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_125))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_126) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_126))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_127) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_127))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_99) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_99),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_99),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_99),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_99),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_99),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_99),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_99),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_100) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_100),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_100
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_31 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 0),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_128) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_128))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_129) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_129))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_32 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 1),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_33 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 2),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_34 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 3),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_35 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 4),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_36 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 5),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_37 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 6),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_130) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_122) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_122),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_122),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_122),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_122),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_122),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_122),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_122),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_122),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_122),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_123) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_123),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_123
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_124) -> {
        __core__chooseData(data_124, () -> {
            pair_38 = __core__unConstrData__safe(data_124);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 0),
                () -> {
                    data_125 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_125, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_125);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_126) -> {
        __helios__common__enum_tag_equals(data_126, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_39 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 1),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_131) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_40 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 2),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_132) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_41 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 3),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_133) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_133))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_135) -> {
        __core__chooseData(data_135, () -> {
            pair_42 = __core__unConstrData__safe(data_135);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 4),
                () -> {
                    data_136 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_136, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_136);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_43 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 5),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_44 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 6),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_45 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 7),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_147) -> {
        __core__chooseData(data_147, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_147))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_148) -> {
        __core__chooseData(data_148, () -> {
            pair_46 = __core__unConstrData__safe(data_148);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 8),
                () -> {
                    data_149 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_149, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_149);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_150) -> {
        lst_15 = __core__unListData(data_150);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_134) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_151) -> {
        __helios__common__enum_tag_equals(data_151, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_152) -> {
        __helios__common__enum_tag_equals(data_152, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_153) -> {
        __core__chooseData(data_153, () -> {
            pair_47 = __core__unConstrData__safe(data_153);
            index_6 = __core__fstPair(pair_47);
            fields_86 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_154) -> {
        __core__chooseData(data_154, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_154);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_155) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_155),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_155)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_135) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_135))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_156) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_156),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_156
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_136) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_136))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_137) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_137))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_157) -> {
        __helios__common__enum_tag_equals(data_157, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_138) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_138))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_139) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_139)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_17 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_17;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_139)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_139)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_158) -> {
        __helios__common__enum_tag_equals(data_158, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_159) -> {
        __helios__common__enum_tag_equals(data_159, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_140) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_140, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_141) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_141))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_142) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_142);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_142);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_143) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_143, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_144) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_144;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_144)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_162) -> {
        __core__chooseData(data_162, () -> {
            pair_48 = __core__unConstrData__safe(data_162);
            index_7 = __core__fstPair(pair_48);
            fields_91 = __core__sndPair(pair_48);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_163) -> {
        __core__chooseData(data_163, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_163);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_164) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_164),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_164)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_145) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_145))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_146) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_146))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_165) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_165),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_165
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_147) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_147))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_166) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_166),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_166),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_167) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_167),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_167
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_168) -> {
        __helios__common__enum_tag_equals(data_168, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_169) -> {
        __core__chooseData(data_169, () -> {
            pair_49 = __core__unConstrData__safe(data_169);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 0),
                () -> {
                    data_170 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_170, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_170);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_148) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_148))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_171) -> {
        __core__chooseData(data_171, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_171))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_172) -> {
        __core__chooseData(data_172, () -> {
            pair_50 = __core__unConstrData__safe(data_172);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 1),
                () -> {
                    data_173 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_173, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_173);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_174) -> {
        __core__chooseData(data_174, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_174);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_175) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_175),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_175)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_149) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_149))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_150) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_150))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_151) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_151), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_151))
        }
    };
    __helios__list[__helios__txinput]__any = (self_152) -> {
        (fn_19) -> {
            __helios__common__any(self_152, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]____to_data = __helios__common__identity;
    __module__CapoHelpers__dgd_DataSrc[]__is_valid_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data) -> {
        (data_176) -> {
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data(data_176),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data(data_176),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data(data_176),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data(data_176),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__from_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1) -> {
        (data_177) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__is_valid_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1)(data_177),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid dgd_DataSrc data", ())
                }
            )();
            data_177
        }
    };
    __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2 = (data_178) -> {
        __core__chooseData(data_178, () -> {
            pair_51 = __core__unConstrData__safe(data_178);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 0),
                () -> {
                    data_179 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_179, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_179);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2 = (data_180) -> {
        __core__chooseData(data_180, () -> {
            pair_52 = __core__unConstrData__safe(data_180);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 1),
                () -> {
                    data_181 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_181, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_181);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_61),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____is = (data_182) -> {
        __helios__common__enum_tag_equals(data_182, 2)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2 = (data_183) -> {
        __core__chooseData(data_183, () -> {
            pair_53 = __core__unConstrData__safe(data_183);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 2),
                () -> {
                    data_184 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_184, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_108 = __core__unListData__safe(data_184);
                        __core__chooseList(fields_108, () -> {
                            false
                        }, () -> {
                            head_62 = __core__headList__safe(fields_108);
                            __core__ifThenElse(
                                __helios__txoutput__is_valid_data(head_62),
                                () -> {
                                    fields_109 = __core__tailList__safe(fields_108);
                                    __core__chooseList(fields_109, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output__txo = (self_153) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_153))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Output____new = (self_154) -> {
        __core__constrData(2, __helios__common__list_1(__helios__txoutput____to_data(self_154)))
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both____is = (data_185) -> {
        __helios__common__enum_tag_equals(data_185, 3)
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2 = (data_186) -> {
        __core__chooseData(data_186, () -> {
            pair_54 = __core__unConstrData__safe(data_186);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 3),
                () -> {
                    data_187 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_187, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_187);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_63 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __helios__txinput__is_valid_data(head_63),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_64 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__txoutput__is_valid_data(head_64),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__dgd_DataSrc[]__Both__txo = (self_155) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_1(self_155))
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_188) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_188),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_188),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_188),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_188),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_188),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_189) -> {
            ignore_12 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_189),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_189
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_190) -> {
        __helios__common__enum_tag_equals(data_190, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_55 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 0),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_193) -> {
        __helios__common__enum_tag_equals(data_193, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_56 = __core__unConstrData__safe(data_194);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 1),
                () -> {
                    data_195 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_195, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_195);
                        __core__chooseList(fields_114, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_114);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_65),
                                () -> {
                                    fields_115 = __core__tailList__safe(fields_114);
                                    __core__chooseList(fields_115, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_115);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_66),
                                            () -> {
                                                fields_116 = __core__tailList__safe(fields_115);
                                                __core__chooseList(fields_116, () -> {
                                                    false
                                                }, () -> {
                                                    head_67 = __core__headList__safe(fields_116);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_67),
                                                        () -> {
                                                            fields_117 = __core__tailList__safe(fields_116);
                                                            __core__chooseList(fields_117, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_156) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_156))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_157) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_157))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_158) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_158))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_196) -> {
        __core__chooseData(data_196, () -> {
            pair_57 = __core__unConstrData__safe(data_196);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 2),
                () -> {
                    data_197 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_197, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_197);
                        __core__chooseList(fields_118, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_118);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_68),
                                () -> {
                                    fields_119 = __core__tailList__safe(fields_118);
                                    __core__chooseList(fields_119, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_119);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_69),
                                            () -> {
                                                fields_120 = __core__tailList__safe(fields_119);
                                                __core__chooseList(fields_120, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_198) -> {
        __core__chooseData(data_198, () -> {
            pair_58 = __core__unConstrData__safe(data_198);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 3),
                () -> {
                    data_199 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_199, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_199);
                        __core__chooseList(fields_121, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_200) -> {
        __core__chooseData(data_200, () -> {
            pair_59 = __core__unConstrData__safe(data_200);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 4),
                () -> {
                    data_201 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_201, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_122 = __core__unListData__safe(data_201);
                        __core__chooseList(fields_122, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            pair_60 = __core__unConstrData__safe(data_202);
            index_8 = __core__fstPair(pair_60);
            fields_123 = __core__sndPair(pair_60);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_123, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_123), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_123))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_123, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_203) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_203, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_203, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_203, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_204) -> {
        ignore_13 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_204),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_204
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_159) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_159, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_160) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_160, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_205) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_205),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_205
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_161) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_161, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_206) -> {
        __helios__common__enum_tag_equals(data_206, 0)
    };
    __helios__list[__helios__string]__join = (self_162) -> {
        (__useopt__separator, separator) -> {
            separator_1 = __core__ifThenElse(
                __useopt__separator,
                separator,
                ""
            );
            recurse_77 = (recurse_76, lst_18, sep) -> {
                __core__chooseList(lst_18, () -> {
                    ""
                }, () -> {
                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_18))), recurse_76(recurse_76, __core__tailList__safe(lst_18), separator_1))
                })()
            };
            recurse_77(recurse_77, self_162, "")
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__fold[__helios__list[__helios__string]] = (self_163) -> {
        (fn_20, z_2) -> {
            __helios__common__fold(self_163, (z_3, pair_61) -> {
                fn_20(z_3, __helios__bytearray__from_data(__core__fstPair(pair_61)), __helios__int__from_data(__core__sndPair(pair_61)))
            }, z_2)
        }
    };
    __helios__list[__helios__string]____add = __helios__common__concat;
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_164) -> {
        (fn_21) -> {
            __helios__common__filter_map(self_164, (pair_62) -> {
                fn_21(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_62)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_62)))
            })
        }
    };
    __module__CapoHelpers__mkTokenShow = (mph_15) -> {
        (v) -> {
            others = __helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(__helios__value__get_assets(v)())())((someMph, __10) -> {
                __helios__mintingpolicyhash____neq(mph_15, someMph)
            })))();
            ada = __helios__string____add(__helios__real__show(__helios__int____div1(__helios__real__round(__helios__real____div(__helios__real____add1(0, __helios__value__get_lovelace(v)()), 1000000000))(), 1000000000))(), " ADA");
            mine = __helios__list[__helios__string]__join(__helios__map[__helios__bytearray@__helios__int]__fold[__helios__list[__helios__string]](__helios__value__get_policy(v)(mph_15))((previous, tokenName_3, c_3) -> {
                __helios__list[__helios__string]____add(__core__mkCons(__helios__string____to_data(__helios__int__show(c_3)()), __core__mkCons(__helios__string____to_data("\xD7\u{1F4B4} "), __core__mkCons(__helios__string____to_data(__helios__bytearray__decode_utf8(tokenName_3)()), __core__mkNilData(())))), previous)
            }, __core__mkNilData(())))(true, " + ");
            __helios__string____add(__helios__string____add(__helios__string____add(mine, " + "), ada), others)
        }
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_207) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_207),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_207),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_207),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_208) -> {
            ignore_14 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_208),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_208
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_209) -> {
        __core__chooseData(data_209, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_209))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_81 = (recurse_80, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_70 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_70)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_70)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_210) -> {
        __core__chooseData(data_210, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_210))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_83 = (recurse_82, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_71 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_71)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_71)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_211) -> {
        __core__chooseData(data_211, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_211))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {
        recurse_85 = (recurse_84, lst_22) -> {
            __core__chooseList(lst_22, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_22))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_21)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_212) -> {
        __core__chooseData(data_212, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_212))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_213) -> {
        __core__chooseData(data_213, () -> {
            pair_63 = __core__unConstrData__safe(data_213);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 0),
                () -> {
                    data_214 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_214, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_124 = __core__unListData__safe(data_214);
                        __core__chooseList(fields_124, () -> {
                            false
                        }, () -> {
                            head_72 = __core__headList__safe(fields_124);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_72),
                                () -> {
                                    fields_125 = __core__tailList__safe(fields_124);
                                    __core__chooseList(fields_125, () -> {
                                        false
                                    }, () -> {
                                        head_73 = __core__headList__safe(fields_125);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_73),
                                            () -> {
                                                fields_126 = __core__tailList__safe(fields_125);
                                                __core__chooseList(fields_126, () -> {
                                                    false
                                                }, () -> {
                                                    head_74 = __core__headList__safe(fields_126);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_74),
                                                        () -> {
                                                            fields_127 = __core__tailList__safe(fields_126);
                                                            __core__chooseList(fields_127, () -> {
                                                                false
                                                            }, () -> {
                                                                head_75 = __core__headList__safe(fields_127);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_75),
                                                                    () -> {
                                                                        fields_128 = __core__tailList__safe(fields_127);
                                                                        __core__chooseList(fields_128, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_76 = __core__headList__safe(fields_128);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_76),
                                                                                () -> {
                                                                                    fields_129 = __core__tailList__safe(fields_128);
                                                                                    __core__chooseList(fields_129, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_77 = __core__headList__safe(fields_129);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_77),
                                                                                            () -> {
                                                                                                fields_130 = __core__tailList__safe(fields_129);
                                                                                                __core__chooseList(fields_130, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_78 = __core__headList__safe(fields_130);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_78),
                                                                                                        () -> {
                                                                                                            fields_131 = __core__tailList__safe(fields_130);
                                                                                                            __core__chooseList(fields_131, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_79 = __core__headList__safe(fields_131);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_79),
                                                                                                                    () -> {
                                                                                                                        fields_132 = __core__tailList__safe(fields_131);
                                                                                                                        __core__chooseList(fields_132, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_215) -> {
        ignore_15 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_215),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_215
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_165))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_216) -> {
        lst_23 = __core__unListData(data_216);
        __11 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_166) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_166))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_217) -> {
        map_27 = __core__unMapData(data_217);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_167) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_167))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_168) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_168))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_169) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_169))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_170) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_170))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_218) -> {
        map_28 = __core__unMapData(data_218);
        __13 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_171) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_171))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_219) -> {
        lst_24 = __core__unListData(data_219);
        __14 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_24
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_172) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_172))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_64 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 1),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_133, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_87 = (recurse_86, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_80 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_80)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_80)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_223) -> {
        __core__chooseData(data_223, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_223))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_224) -> {
        __core__chooseData(data_224, () -> {
            pair_65 = __core__unConstrData__safe(data_224);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 2),
                () -> {
                    data_225 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_225, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_225);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_81 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_81),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_82 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_82),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, () -> {
                                                    false
                                                }, () -> {
                                                    head_83 = __core__headList__safe(fields_136);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_83),
                                                        () -> {
                                                            fields_137 = __core__tailList__safe(fields_136);
                                                            __core__chooseList(fields_137, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_226) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_226),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_226),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_226),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_227) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_227),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_227
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_228) -> {
        __helios__common__enum_tag_equals(data_228, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_229) -> {
        __core__chooseData(data_229, () -> {
            pair_66 = __core__unConstrData__safe(data_229);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 0),
                () -> {
                    data_230 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_230, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_138 = __core__unListData__safe(data_230);
                        __core__chooseList(fields_138, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_231) -> {
        __helios__common__enum_tag_equals(data_231, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_232) -> {
        __core__chooseData(data_232, () -> {
            pair_67 = __core__unConstrData__safe(data_232);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 1),
                () -> {
                    data_233 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_233, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_233);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_84),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, () -> {
                                        false
                                    }, () -> {
                                        head_85 = __core__headList__safe(fields_140);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_85),
                                            () -> {
                                                fields_141 = __core__tailList__safe(fields_140);
                                                __core__chooseList(fields_141, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_173) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_173))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_174) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_174))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_234) -> {
        __helios__common__enum_tag_equals(data_234, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_235) -> {
        __core__chooseData(data_235, () -> {
            pair_68 = __core__unConstrData__safe(data_235);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 2),
                () -> {
                    data_236 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_236, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_236);
                        __core__chooseList(fields_142, () -> {
                            false
                        }, () -> {
                            head_86 = __core__headList__safe(fields_142);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_86),
                                () -> {
                                    fields_143 = __core__tailList__safe(fields_142);
                                    __core__chooseList(fields_143, () -> {
                                        false
                                    }, () -> {
                                        head_87 = __core__headList__safe(fields_143);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_87),
                                            () -> {
                                                fields_144 = __core__tailList__safe(fields_143);
                                                __core__chooseList(fields_144, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_175) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_175))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_176) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_176))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_237) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_237),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_237),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_237),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_237),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_237),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_237),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_238) -> {
            ignore_17 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_238),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_238
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_69 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_69), 0),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_69));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_145, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_145);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_88),
                                () -> {
                                    fields_146 = __core__tailList__safe(fields_145);
                                    __core__chooseList(fields_146, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_177) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_177))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_70 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_70), 1),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_70));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_71 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_71), 2),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_71));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_248) -> {
        __helios__common__enum_tag_equals(data_248, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_72 = __core__unConstrData__safe(data_249);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_72), 3),
                () -> {
                    data_250 = __core__listData(__core__sndPair(pair_72));
                    __core__chooseData(data_250, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_149 = __core__unListData__safe(data_250);
                        __core__chooseList(fields_149, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_251) -> {
        __helios__common__enum_tag_equals(data_251, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_252) -> {
        __core__chooseData(data_252, () -> {
            pair_73 = __core__unConstrData__safe(data_252);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 4),
                () -> {
                    data_253 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_253, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_150 = __core__unListData__safe(data_253);
                        __core__chooseList(fields_150, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_255) -> {
        __core__chooseData(data_255, () -> {
            pair_74 = __core__unConstrData__safe(data_255);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 5),
                () -> {
                    data_256 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_256, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_256);
                        __core__chooseList(fields_151, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_257) -> {
        __core__chooseData(data_257, () -> {
            pair_75 = __core__unConstrData__safe(data_257);
            index_9 = __core__fstPair(pair_75);
            fields_152 = __core__sndPair(pair_75);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_152, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_152), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_152))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_152, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_258) -> {
        __core__chooseData(data_258, () -> {
            pair_76 = __core__unConstrData__safe(data_258);
            index_10 = __core__fstPair(pair_76);
            fields_153 = __core__sndPair(pair_76);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_153, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_153), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_153))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_153, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_178) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_178))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_179) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_179))
    };
    __helios__option[__helios__string]__from_data = (data_259) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_259),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_259
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_180) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_180))
    };
    __helios__option[__helios__txinput]__from_data = (data_260) -> {
        __16 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_260),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_260
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_181) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_181))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_182) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_182))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_183) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_183))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_184) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_184))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_154 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_154);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__17) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_185) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_185)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_186) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_186)(), __module__CapoHelpers__DelegateInput[]__serialize(self_186)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_186)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_187) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_187)(), __module__CapoHelpers__DelegateInput[]__serialize(self_187)())
            }), msg_4), __core__chooseUnit(__helios__print("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: "), __core__chooseUnit(__helios__print(__module__CapoHelpers__mkTokenShow(__module__CapoHelpers__DelegateInput[]__mph(self_187))(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_187))()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_188) -> {
        (index_12) -> {
            recurse_89 = (recurse_88, self_189, i_9) -> {
                __core__chooseList(self_189, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_189)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_189), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_188, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_190) -> {
        (fn_22) -> {
            __helios__common__filter_list(self_190, (item_11) -> {
                fn_22(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_191) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_191)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_156 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_156)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__22) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_191)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_18) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_18);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_155 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_155)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__21) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__20) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_191)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_191)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_191)())))))
                                }
                            },
                            () -> {
                                (__19) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_191)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_192) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_192);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__27) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_192)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_158 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_158));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_192)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__26) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_192)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_192)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_19) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_19);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_157 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_157));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__25) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__24) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_192)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_192)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_192)()))))))
                                }
                            },
                            () -> {
                                (__23) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_192)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_193) -> {
        () -> {
            __lhs_0_41 = self_193;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"), self_193))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_193)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_193)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_193)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_194) -> {
        () -> {
            __lhs_0_47 = self_194;
            true
        }
    };
    __module__CapoHelpers__DgDataDetails[]__dataSrc = (self_195) -> {
        __module__CapoHelpers__dgd_DataSrc[]__from_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2)(__helios__common__struct_field_0(self_195))
    };
    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, type, mph_20) -> {
        __core__mkCons(__module__CapoHelpers__dgd_DataSrc[]____to_data(dataSrc), __core__mkCons(__helios__bytearray____to_data(id_1), __core__mkCons(__helios__string____to_data(type), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkNilData(())))))
    };
    __module__CapoHelpers__DgDataDetails[]__creating = (id_2, output_1, mph_21) -> {
        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Output____new(output_1), id_2, "", mph_21)
    };
    __module__CapoHelpers__DgDataDetails[]__output = (self_196) -> {
        () -> {
            __cond_28 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_196);
            __core__ifThenElse(
                __module__CapoHelpers__dgd_DataSrc[]__Output____is(__cond_28),
                () -> {
                    (__lhs_0_49) -> {
                        txo_1 = __module__CapoHelpers__dgd_DataSrc[]__Output__txo(__lhs_0_49);
                        txo_1
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_28),
                        () -> {
                            (__lhs_0_48) -> {
                                txo = __module__CapoHelpers__dgd_DataSrc[]__Both__txo(__lhs_0_48);
                                txo
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("no output data")
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __module__CapoHelpers__DgDataDetails[]__outputData = (self_197) -> {
        () -> {
            __cond_29 = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__DgDataDetails[]__output(self_197)()));
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_29),
                () -> {
                    (__lhs_0_50) -> {
                        fields_159 = __helios__data__constrdata__fields(__lhs_0_50);
                        __helios__list[__helios__data]__head(fields_159)
                    }
                },
                () -> {
                    (__29) -> {
                        __helios__error("expected ConstrData{mStruct} for DgData output")
                    }
                }
            )()(__cond_29)
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_198) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_198))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_199) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_199))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_22, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_22), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__creatingDgData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_200) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                output_2 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_200)(recIdBytes_1);
                __module__CapoHelpers__DgDataDetails[]__creating(recIdBytes_1, output_2, __module__CapoHelpers__CapoCtx[]__mph(self_200))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_201) -> {
        () -> {
            e = "requires charter as input";
            __cond_30 = __module__CapoHelpers__CapoCtx[]__charter(self_201);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_30),
                () -> {
                    (__lhs_0_59) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_30),
                        () -> {
                            (__lhs_0_58) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_51) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_51);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_31 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_31),
                                    () -> {
                                        (__lhs_0_57) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_31),
                                            () -> {
                                                (__lhs_0_56) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_31),
                                                    () -> {
                                                        (__lhs_0_55) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_31),
                                                            () -> {
                                                                (__lhs_0_54) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_31),
                                                                    () -> {
                                                                        (__lhs_0_53) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_52) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_31)
                            }
                        }
                    )()
                }
            )()(__cond_30)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_202) -> {
        (key_14) -> {
            __helios__common__map_get(self_202, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_203) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_203)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_204) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_204))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_205) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_205)(key_16);
                __cond_32 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_32),
                    () -> {
                        (__lhs_0_61) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_60) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_60);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_32)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_206) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_206)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_207) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_207))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_208) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_208)()))(__module__CapoHelpers__CapoCtx[]__mph(self_208), false, (), false, ()), "no way m"), self_208))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_209) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_209))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_210) -> {
        (key_17) -> {
            __helios__common__map_get(self_210, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_211) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_33 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_211)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_33),
                    () -> {
                        (__lhs_0_64) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_62) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_62);
                            __cond_34 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_34),
                                () -> {
                                    (__lhs_0_63) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_63);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_63);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__30) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_34)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_211)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_33)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_212) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_212)()))(__module__CapoHelpers__CapoCtx[]__mph(self_212));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_213) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_213)()))(__module__CapoHelpers__CapoCtx[]__mph(self_213));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_214) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_214);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_66);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_65);
                                datum_2
                            }
                        },
                        () -> {
                            (__31) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1) -> {
        (self_215) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_215), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address_1(self_215)();
                __cond_36 = __module__CapoHelpers__CapoCtx[]__charter(self_215);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_36),
                    () -> {
                        (__lhs_0_67) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo_2) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo_2), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo_2))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__32) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_36)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2 = (self_216) -> {
        () -> {
            __cond_37 = __module__CapoHelpers__CapoCtx[]__charter(self_216);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_37),
                () -> {
                    (__lhs_0_69) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_69);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_37),
                        () -> {
                            (__lhs_0_68) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_68);
                                utxo_3
                            }
                        },
                        () -> {
                            (__33) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_37)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_217) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_217), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_217))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_2 = (self_218) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2(self_218)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_219) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_219)(false, (), true, recIdBytes_3);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_38 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_38),
                    () -> {
                        (__lhs_0_71) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_70) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_70);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_38))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_220) -> {
            (__useopt__recId_2, recId_5, __useopt__recIdBytes_2, recIdBytes_4) -> {
                recId_6 = __core__ifThenElse(
                    __useopt__recId_2,
                    () -> {
                        recId_5
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_5 = __core__ifThenElse(
                    __useopt__recIdBytes_2,
                    () -> {
                        recIdBytes_4
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_6)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_220)(false, (), true, recIdBytes_5);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_5)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_39 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_39),
                    () -> {
                        (__lhs_0_73) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_72) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_72);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_39))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_221) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_3) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_4 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_2(self_221)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_4), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_264 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_40 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_264);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                            () -> {
                                (__lhs_0_74) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_264));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__34) -> {
                                    false
                                }
                            }
                        )()(__cond_40)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_222) -> {
        (typeName_3, __useopt__id_1, id_5) -> {
            id_6 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_5
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_2(self_222)();
            (txo_3) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_3), capoAddr_2),
                    () -> {
                        data_265 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_3));
                        __cond_41 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_265);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_41),
                            () -> {
                                (__lhs_0_75) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_265));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_6, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_6)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__35) -> {
                                    false
                                }
                            }
                        )()(__cond_41)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1) -> {
        (self_223) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_223)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_42 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_42),
                    () -> {
                        (__lhs_0_76) -> {
                            data_266 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_266), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_266))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_266), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_266))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__36) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_42)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_267) -> {
        __helios__common__enum_tag_equals(data_267, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2 = (self_224) -> {
        (recId_7) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_7)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_224), recId_7);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_2(self_224)();
            __cond_43 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_43),
                () -> {
                    (__lhs_0_78) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_77);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_43)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_225) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_225);
                __cond_44 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                    () -> {
                        (__lhs_0_84) -> {
                            self_225
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                            () -> {
                                (__lhs_0_83) -> {
                                    self_225
                                }
                            },
                            () -> {
                                (__lhs_0_79) -> {
                                    __lhs_0_80 = self_225;
                                    mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_80);
                                    charterAc_3 = __helios__assetclass__new(mph_23, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_45),
                                        () -> {
                                            (__lhs_0_82) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_225)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_81) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_81);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_45)
                                }
                            }
                        )()
                    }
                )()(__cond_44))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_226) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_226);
            __cond_46 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                () -> {
                    (__lhs_0_90) -> {
                        self_226
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_85) -> {
                                __lhs_0_86 = self_226;
                                mph_24 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_86);
                                charterAc_4 = __helios__assetclass__new(mph_24, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_47 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_47),
                                    () -> {
                                        (__lhs_0_88) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_88);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_47)))
                            }
                        }
                    )()
                }
            )()(__cond_46))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_227) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_227);
            __cond_48 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_48),
                () -> {
                    (__lhs_0_94) -> {
                        self_227
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_48),
                        () -> {
                            (__lhs_0_93) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_91) -> {
                                __lhs_0_92 = self_227;
                                mph_25 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_92);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_25);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_228) -> {
        (fn_23, z_4) -> {
            __helios__common__fold(self_228, (z_5, pair_77) -> {
                fn_23(z_5, __helios__string__from_data(__core__fstPair(pair_77)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_77)))
            }, z_4)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_229) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_229))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_230) -> {
        (fn_24) -> {
            fn_25 = (pair_78) -> {
                fn_24(__helios__string__from_data(__core__fstPair(pair_78)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_78)))
            };
            __helios__common__all(self_230, fn_25)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_231) -> {
        (fn_26) -> {
            __helios__common__all(self_231, (item_12) -> {
                fn_26(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_232) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_232)();
            mph_26 = __module__CapoHelpers__CapoCtx[]__mph(self_232);
            __lhs_0_95 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_95);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_95);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_95);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_95);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_95);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_232)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_26, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_50 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_50),
                        () -> {
                            (__lhs_0_98) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_98);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_26, true))()
                            }
                        },
                        () -> {
                            (__37) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_50)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_26, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_49 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_26, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_49),
                () -> {
                    (__lhs_0_97) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_96) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_49)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_233) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_233, self_233)
            }), "prevent unused var"), __cond_51 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_51),
                () -> {
                    (__lhs_0_105) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_51),
                        () -> {
                            (__lhs_0_104) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_51),
                                () -> {
                                    (__lhs_0_103) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_51),
                                        () -> {
                                            (__lhs_0_102) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_51),
                                                () -> {
                                                    (__lhs_0_101) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_51),
                                                        () -> {
                                                            (__lhs_0_100) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_99) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_51))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_234) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_234)(), __module__CapoHelpers__CapoCtx[]__serialize(self_234)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_27) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_27, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__38) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_269) -> {
        __helios__common__enum_tag_equals(data_269, 1)
    };
    __helios__option[__helios__data]__some__some = (self_235) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_235))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_236) -> {
        (key_20) -> {
            __helios__common__map_get(self_236, __helios__scriptpurpose____to_data(key_20), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_28, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_28);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_53 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_53),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__39) -> {
                            false
                        }
                    }
                )()(__cond_53)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_54 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_54),
                () -> {
                    (__lhs_0_113) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_108) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_108);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_55 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_55),
                            () -> {
                                (__lhs_0_109) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_109);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_56 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_56),
                                        () -> {
                                            (__lhs_0_112) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_56),
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_110) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_56)))
                                }
                            },
                            () -> {
                                (__40) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_55)
                    }
                }
            )()(__cond_54)))
        }(__cond_52 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_52),
            () -> {
                (__lhs_0_107) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_107);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_106) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_52))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_237) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_89 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_27(__helios__bytearray__from_data(__core__fstPair(head_89)), __helios__int__from_data(__core__sndPair(head_89))), recurse_90(recurse_90, __core__tailList__safe(map_31)))
                })()
            };
            recurse_91(recurse_91, self_237)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_238) -> {
        (fn_28) -> {
            recurse_93 = (recurse_92, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_90 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_28(__helios__mintingpolicyhash__from_data(__core__fstPair(head_90)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_90))), recurse_92(recurse_92, __core__tailList__safe(map_32)))
                })()
            };
            recurse_93(recurse_93, self_238)
        }
    };
    __helios__option[__helios__int]__none____is = (data_270) -> {
        __helios__common__enum_tag_equals(data_270, 1)
    };
    __helios__option[__helios__int]__some__some = (self_239) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_239))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_240) -> {
        (key_21) -> {
            __helios__common__map_get(self_240, __helios__bytearray____to_data(key_21), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_241) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_95 = (recurse_94, self_242) -> {
                __core__chooseList(self_242, () -> {
                    self_242
                }, () -> {
                    head_91 = __core__headList__safe(self_242);
                    tail_4 = __core__tailList__safe(self_242);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_91)),
                        () -> {
                            recurse_94(recurse_94, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_91, recurse_94(recurse_94, tail_4))
                        }
                    )()
                })()
            };
            recurse_95(recurse_95, self_241)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_243, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_243), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_244) -> {
        (comp_4) -> {
            __helios__common__sort(self_244, (a_20, b_18) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_20)), __helios__int__from_data(__core__sndPair(a_20)), __helios__bytearray__from_data(__core__fstPair(b_18)), __helios__int__from_data(__core__sndPair(b_18)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_245) -> {
        recurse_97 = (recurse_96, lst_25) -> {
            __core__chooseList(lst_25, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_96(recurse_96, __core__tailList__safe(lst_25)))
            })()
        };
        recurse_97(recurse_97, self_245)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_246) -> {
        (fn_29) -> {
            __helios__common__map(self_246, (item_13) -> {
                __helios__value____to_data(fn_29(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_29, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_114 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_29, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_29, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_29, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_29)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_29)();
                valStr = __helios__value__show(valueMinted)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_29))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_29);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_19, __41) -> {
                    __helios__mintingpolicyhash____neq(b_19, mph_29)
                })))())))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_29),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_29))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_4, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_57 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_4);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_57),
                                                () -> {
                                                    (__lhs_0_116) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_115) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_115);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_57)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8(tokenName_4)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __helios__list[__helios__string]__is_valid_data_internal = (lst_26) -> {
        recurse_99 = (recurse_98, lst_27) -> {
            __core__chooseList(lst_27, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__headList__safe(lst_27)),
                    () -> {
                        recurse_98(recurse_98, __core__tailList__safe(lst_27))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_99(recurse_99, lst_26)
    };
    __helios__list[__helios__string]__is_valid_data = (data_271) -> {
        __core__chooseData(data_271, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__string]__is_valid_data_internal(__core__unListData__safe(data_271))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverData__S3DriverData[]__is_valid_data = (data_272) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_272, __core__bData(#6d74726373), __helios__list[__helios__string]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_272, __core__bData(#64657363), __helios__string__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_272, __core__bData(#76736e), __helios__string__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_272, __core__bData(#70757270), __helios__string__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_272, __core__bData(#746e736e), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_272, __core__bData(#6e6d), __helios__string__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_272, __core__bData(#6d74), __helios__string__is_valid_data),
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __helios__common__test_mStruct_field(data_272, __core__bData(#74797065), __helios__string__is_valid_data),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __helios__common__test_mStruct_field(data_272, __core__bData(#6964), __helios__bytearray__is_valid_data),
                                                                            () -> {
                                                                                true
                                                                            },
                                                                            () -> {
                                                                                __core__trace("Warning: invalid S3DriverData data", () -> {
                                                                                    false
                                                                                })()
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__trace("Warning: invalid S3DriverData data", () -> {
                                                                            false
                                                                        })()
                                                                    }
                                                                )()
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid S3DriverData data", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid S3DriverData data", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid S3DriverData data", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid S3DriverData data", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid S3DriverData data", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid S3DriverData data", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid S3DriverData data", () -> {
                    false
                })()
            }
        )()
    };
    __module__S3DriverData__S3DriverData[]____eq = (a_21, b_20) -> {
        aFields = __core__unMapData(a_21);
        bFields = __core__unMapData(b_20);
        __core__ifThenElse(
            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6964), __helios__common__mStruct_field_internal(bFields, #6964)),
            () -> {
                __core__ifThenElse(
                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #74797065), __helios__common__mStruct_field_internal(bFields, #74797065)),
                    () -> {
                        __core__ifThenElse(
                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6d74), __helios__common__mStruct_field_internal(bFields, #6d74)),
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6e6d), __helios__common__mStruct_field_internal(bFields, #6e6d)),
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #746e736e), __helios__common__mStruct_field_internal(bFields, #746e736e)),
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #70757270), __helios__common__mStruct_field_internal(bFields, #70757270)),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #76736e), __helios__common__mStruct_field_internal(bFields, #76736e)),
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #64657363), __helios__common__mStruct_field_internal(bFields, #64657363)),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6d74726373), __helios__common__mStruct_field_internal(bFields, #6d74726373)),
                                                                            () -> {
                                                                                true
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            },
            () -> {
                false
            }
        )()
    };
    __module__S3DriverData__S3DriverData[]__from_data = (data_273) -> {
        ignore_18 = __core__ifThenElse(
            __module__S3DriverData__S3DriverData[]__is_valid_data(data_273),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid S3DriverData data", ())
            }
        )();
        data_273
    };
    __module__S3DriverData__S3DriverData[]__memberToken = (self_247) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_247, #6d74))
    };
    __module__S3DriverData__S3DriverData[]__validate = (self_248) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__S3DriverData__S3DriverData[]____eq(self_248, self_248)
            }), "no way"), true)
        }
    };
    __module__S3DriverPolicy__DelegateDatum[]__is_valid_data = (__module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_274) -> {
            __core__ifThenElse(
                __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_274),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_274),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_274),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__S3DriverPolicy__DelegateDatum[]__from_data = (__module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_275) -> {
            ignore_19 = __core__ifThenElse(
                __module__S3DriverPolicy__DelegateDatum[]__is_valid_data(__module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_275),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_275
        }
    };
    __module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_276) -> {
        __core__chooseData(data_276, () -> {
            pair_79 = __core__unConstrData__safe(data_276);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_277 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_277, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_160 = __core__unListData__safe(data_277);
                        __core__chooseList(fields_160, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_160);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_92),
                                () -> {
                                    fields_161 = __core__tailList__safe(fields_160);
                                    __core__chooseList(fields_161, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_161);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_162 = __core__tailList__safe(fields_161);
                                                __core__chooseList(fields_162, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_162);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_163 = __core__tailList__safe(fields_162);
                                                            __core__chooseList(fields_163, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__S3DriverPolicy__DelegateDatum[]__IsDelegation____is = (data_278) -> {
        __helios__common__enum_tag_equals(data_278, 1)
    };
    __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_80 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 1),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_164 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_164, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_164);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_95),
                                () -> {
                                    fields_165 = __core__tailList__safe(fields_164);
                                    __core__chooseList(fields_165, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__dd = (self_249) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_249))
    };
    __module__S3DriverPolicy__DelegateDatum[]__capoStoredData____is = (data_281) -> {
        __helios__common__enum_tag_equals(data_281, 2)
    };
    __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_282) -> {
        __core__chooseData(data_282, () -> {
            pair_81 = __core__unConstrData__safe(data_282);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 2),
                () -> {
                    data_283 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_283, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_283);
                        __core__chooseList(fields_166, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_166);
                            __core__ifThenElse(
                                __module__S3DriverData__S3DriverData[]__is_valid_data(head_96),
                                () -> {
                                    fields_167 = __core__tailList__safe(fields_166);
                                    __core__chooseList(fields_167, () -> {
                                        false
                                    }, () -> {
                                        head_97 = __core__headList__safe(fields_167);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_97),
                                            () -> {
                                                fields_168 = __core__tailList__safe(fields_167);
                                                __core__chooseList(fields_168, () -> {
                                                    false
                                                }, () -> {
                                                    head_98 = __core__headList__safe(fields_168);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_98),
                                                        () -> {
                                                            fields_169 = __core__tailList__safe(fields_168);
                                                            __core__chooseList(fields_169, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__MintingActivity[]__is_valid_data = (__module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_284) -> {
            __core__ifThenElse(
                __module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_284),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DriverPolicy__MintingActivity[]__from_data = (__module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_285) -> {
            ignore_20 = __core__ifThenElse(
                __module__S3DriverPolicy__MintingActivity[]__is_valid_data(__module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_285),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_285
        }
    };
    __module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_82 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_99),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__MintingActivity[]__CreatingRecord__seed = (self_250) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_250))
    };
    __module__S3DriverPolicy__SpendingActivity[]__is_valid_data = (__module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DriverPolicy__SpendingActivity[]__from_data = (__module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_289) -> {
            ignore_21 = __core__ifThenElse(
                __module__S3DriverPolicy__SpendingActivity[]__is_valid_data(__module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_289),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_289
        }
    };
    __module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_290) -> {
        __core__chooseData(data_290, () -> {
            pair_83 = __core__unConstrData__safe(data_290);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 0),
                () -> {
                    data_291 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_291, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_291);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_100),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__id = (self_251) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_251))
    };
    __module__S3DriverPolicy__BurningActivity[]__is_valid_data = (__module__S3DriverPolicy__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_292) -> {
            __core__ifThenElse(
                __module__S3DriverPolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_292),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__S3DriverPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_293) -> {
        __core__chooseData(data_293, () -> {
            pair_84 = __core__unConstrData__safe(data_293);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 0),
                () -> {
                    data_294 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_294, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_294);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_101),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__is_valid_data = (__module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_295) -> {
            __core__ifThenElse(
                __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_295),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_295),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_295),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_295),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_295),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_295),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_295),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_295),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_295),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__S3DriverPolicy__DelegateActivity[]__from_data = (__module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_296) -> {
            ignore_22 = __core__ifThenElse(
                __module__S3DriverPolicy__DelegateActivity[]__is_valid_data(__module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_296),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_296
        }
    };
    __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_297) -> {
        __helios__common__enum_tag_equals(data_297, 0)
    };
    __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_298) -> {
        __core__chooseData(data_298, () -> {
            pair_85 = __core__unConstrData__safe(data_298);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 0),
                () -> {
                    data_299 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_299, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_299);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_102),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_252) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_252))
    };
    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_300) -> {
        __helios__common__enum_tag_equals(data_300, 1)
    };
    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_301) -> {
        __core__chooseData(data_301, () -> {
            pair_86 = __core__unConstrData__safe(data_301);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 1),
                () -> {
                    data_302 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_302, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_302);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_103),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_253) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_253))
    };
    __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities____is = (data_303) -> {
        __helios__common__enum_tag_equals(data_303, 2)
    };
    __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_304) -> {
        __core__chooseData(data_304, () -> {
            pair_87 = __core__unConstrData__safe(data_304);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 2),
                () -> {
                    data_305 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_305, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_305);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_104 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__S3DriverPolicy__SpendingActivity[]__is_valid_data(__module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_104),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__activity = (self_254) -> {
        __module__S3DriverPolicy__SpendingActivity[]__from_data(__module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_254))
    };
    __module__S3DriverPolicy__DelegateActivity[]__MintingActivities____is = (data_306) -> {
        __helios__common__enum_tag_equals(data_306, 3)
    };
    __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_307) -> {
        __core__chooseData(data_307, () -> {
            pair_88 = __core__unConstrData__safe(data_307);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 3),
                () -> {
                    data_308 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_308, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_308);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __module__S3DriverPolicy__MintingActivity[]__is_valid_data(__module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_105),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__activity = (self_255) -> {
        __module__S3DriverPolicy__MintingActivity[]__from_data(__module__S3DriverPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_255))
    };
    __module__S3DriverPolicy__DelegateActivity[]__BurningActivities____is = (data_309) -> {
        __helios__common__enum_tag_equals(data_309, 4)
    };
    __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_310) -> {
        __core__chooseData(data_310, () -> {
            pair_89 = __core__unConstrData__safe(data_310);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_89), 4),
                () -> {
                    data_311 = __core__listData(__core__sndPair(pair_89));
                    __core__chooseData(data_311, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_184 = __core__unListData__safe(data_311);
                        __core__chooseList(fields_184, () -> {
                            false
                        }, () -> {
                            head_106 = __core__headList__safe(fields_184);
                            __core__ifThenElse(
                                __module__S3DriverPolicy__BurningActivity[]__is_valid_data(__module__S3DriverPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_106),
                                () -> {
                                    fields_185 = __core__tailList__safe(fields_184);
                                    __core__chooseList(fields_185, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_312) -> {
        __helios__common__enum_tag_equals(data_312, 5)
    };
    __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_313) -> {
        __core__chooseData(data_313, () -> {
            pair_90 = __core__unConstrData__safe(data_313);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_90), 5),
                () -> {
                    data_314 = __core__listData(__core__sndPair(pair_90));
                    __core__chooseData(data_314, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_314);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_107),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_187);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_108),
                                            () -> {
                                                fields_188 = __core__tailList__safe(fields_187);
                                                __core__chooseList(fields_188, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_256) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_256))
    };
    __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_257) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_257))
    };
    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_315) -> {
        __helios__common__enum_tag_equals(data_315, 6)
    };
    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_316) -> {
        __core__chooseData(data_316, () -> {
            pair_91 = __core__unConstrData__safe(data_316);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_91), 6),
                () -> {
                    data_317 = __core__listData(__core__sndPair(pair_91));
                    __core__chooseData(data_317, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_189 = __core__unListData__safe(data_317);
                        __core__chooseList(fields_189, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_189);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_109),
                                () -> {
                                    fields_190 = __core__tailList__safe(fields_189);
                                    __core__chooseList(fields_190, () -> {
                                        false
                                    }, () -> {
                                        head_110 = __core__headList__safe(fields_190);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_110),
                                            () -> {
                                                fields_191 = __core__tailList__safe(fields_190);
                                                __core__chooseList(fields_191, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_258) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_258))
    };
    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_259) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_259))
    };
    __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_318) -> {
        __helios__common__enum_tag_equals(data_318, 7)
    };
    __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_319) -> {
        __core__chooseData(data_319, () -> {
            pair_92 = __core__unConstrData__safe(data_319);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_92), 7),
                () -> {
                    data_320 = __core__listData(__core__sndPair(pair_92));
                    __core__chooseData(data_320, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_192 = __core__unListData__safe(data_320);
                        __core__chooseList(fields_192, () -> {
                            false
                        }, () -> {
                            head_111 = __core__headList__safe(fields_192);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_111),
                                () -> {
                                    fields_193 = __core__tailList__safe(fields_192);
                                    __core__chooseList(fields_193, () -> {
                                        false
                                    }, () -> {
                                        head_112 = __core__headList__safe(fields_193);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_112),
                                            () -> {
                                                fields_194 = __core__tailList__safe(fields_193);
                                                __core__chooseList(fields_194, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_260) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_260))
    };
    __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_321) -> {
        __helios__common__enum_tag_equals(data_321, 8)
    };
    __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_322) -> {
        __core__chooseData(data_322, () -> {
            pair_93 = __core__unConstrData__safe(data_322);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_93), 8),
                () -> {
                    data_323 = __core__listData(__core__sndPair(pair_93));
                    __core__chooseData(data_323, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_195 = __core__unListData__safe(data_323);
                        __core__chooseList(fields_195, () -> {
                            false
                        }, () -> {
                            head_113 = __core__headList__safe(fields_195);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_113),
                                () -> {
                                    fields_196 = __core__tailList__safe(fields_195);
                                    __core__chooseList(fields_196, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_261) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_261))
    };
    __helios__list[__helios__txinput]__for_each = (self_262) -> {
        (fn_30) -> {
            recurse_101 = (recurse_100, lst_28) -> {
                __core__chooseList(lst_28, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_30(__helios__txinput__from_data(__core__headList__safe(lst_28))), recurse_100(recurse_100, __core__tailList__safe(lst_28)))
                })()
            };
            recurse_101(recurse_101, self_262)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_263) -> {
        (fn_31) -> {
            __helios__common__filter_list(self_263, (item_14) -> {
                fn_31(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__S3DriverPolicy__DelegateActivity[]__additionalDelegateValidation = (self_264) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt val "), __helios__bool__or(() -> {
                __cond_58 = self_264;
                __core__ifThenElse(
                    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_58),
                    () -> {
                        (__lhs_0_127) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_58),
                            () -> {
                                (__lhs_0_126) -> {
                                    __helios__error("unreachable in a dgDataPolicy")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__S3DriverPolicy__DelegateActivity[]__MintingActivities____is(__cond_58),
                                    () -> {
                                        (__lhs_0_121) -> {
                                            VMA = __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_121);
                                            __cond_60 = VMA;
                                            __lhs_0_122 = __cond_60;
                                            seed_3 = __module__S3DriverPolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_122);
                                            __core__chooseUnit(__helios__print("registering a new S3Driver..."), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the operator must provide a valid minting seed", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the seed must have a S3Driver.operator token in it", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            mintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__S3DriverPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("s3drv"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ());
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), newRecData = __module__CapoHelpers__CapoCtx[]__creatingDgData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx)(true, mkTn("s3drv"), false, ());
                                            __lhs_0_123 = __module__CapoHelpers__DgDataDetails[]__output(newRecData)();
                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("send the fee to Treasury w/ acctg info"), reg = __module__S3DriverData__S3DriverData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(newRecData)());
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), memberToken = __module__S3DriverData__S3DriverData[]__memberToken(reg);
                                            __core__chooseUnit(__core__ifThenElse(
                                                __helios__bool____not(__helios__string__starts_with(memberToken)("member-")),
                                                () -> {
                                                    __helios__error("invalid member token name")
                                                },
                                                () -> {
                                                    () -> {
                                                        ()
                                                    }()
                                                }
                                            )(), memberTokenAc = __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__S3DriverPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), __helios__string__encode_utf8(memberToken)());
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    __cond_61 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {
                                                        __helios__int____eq(__helios__value__get_safe(__helios__txinput__value(i_13))(memberTokenAc), 1)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__txinput]__none____is(__cond_61),
                                                        () -> {
                                                            (__lhs_0_125) -> {
                                                                __helios__error("missing member token")
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_124) -> {
                                                                true
                                                            }
                                                        }
                                                    )()(__cond_61)
                                                }, () -> {
                                                    __module__S3DriverData__S3DriverData[]__validate(reg)()
                                                })
                                            }, () -> {
                                                mintingOk
                                            }))))))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities____is(__cond_58),
                                            () -> {
                                                (__lhs_0_118) -> {
                                                    VSA = __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_118);
                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "no charter ref"), __cond_59 = VSA;
                                                    __lhs_0_119 = __cond_59;
                                                    recId_8 = __module__S3DriverPolicy__SpendingActivity[]__UpdatingRecord__id(__lhs_0_119);
                                                    __core__chooseUnit(__helios__print("updating the details for a single S3Driver..."), hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "s3driver", true, recId_8);
                                                    hasRecOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("s3driver", true, recId_8);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasRecInput))((utxo_6) -> {
                                                        __lhs_0_120 = __module__S3DriverData__S3DriverData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasRecOutput);
                                                        updatedData = __module__S3DriverData__S3DriverData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the lastHeartbeat must be extended by settings.expectedHeartbeatInterval", false, ()), __core__chooseUnit(__helios__assert(__module__S3DriverData__S3DriverData[]__validate(updatedData)(), "<-- that throws; this can't."), ()))
                                                    }), true)))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__S3DriverPolicy__DelegateActivity[]__BurningActivities____is(__cond_58),
                                                    () -> {
                                                        (__lhs_0_117) -> {
                                                            __helios__error("no burn activity here yet")
                                                        }
                                                    },
                                                    () -> {
                                                        (__42) -> {
                                                            false
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_58)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__S3DriverPolicy__DelegateActivity[]__otherDatumValidation = (self_265) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_62 = self_265;
            __core__ifThenElse(
                __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                () -> {
                    (__lhs_0_129) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                        () -> {
                            (__lhs_0_128) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__43) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_62)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#5333447269766572506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_266) -> {
        (fn_32) -> {
            __helios__common__all(self_266, (item_15) -> {
                fn_32(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_267, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_267), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__option[__helios__assetclass]__unwrap = (self_268) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_268))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_269) -> {
        (fn_33) -> {
            __helios__common__all(self_269, (item_16) -> {
                fn_33(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_270) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_270))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_271) -> {
        (fn_34, a0, b0_1) -> {
            __helios__common__fold(self_271, (prev_4, item_17) -> {
                prev_4((a_22, b_21) -> {
                    fn_34(a_22, b_21, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
                })
            }, (callback_9) -> {
                callback_9(a0, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_272) -> {
        __helios__common__length(self_272)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_273) -> {
        head_114 = __core__headList(self_273);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_114)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_114)))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_274) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_274))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_275) -> {
        (key_24) -> {
            key_25 = __helios__string____to_data(key_24);
            recurse_103 = (recurse_102, self_276) -> {
                __core__chooseList(self_276, () -> {
                    self_276
                }, () -> {
                    head_115 = __core__headList__safe(self_276);
                    tail_5 = __core__tailList__safe(self_276);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_115)),
                        () -> {
                            recurse_102(recurse_102, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_115, recurse_102(recurse_102, tail_5))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_275)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_277, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_277), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_278) -> {
        () -> {
            recurse_105 = (recurse_104, self_279, first) -> {
                __core__chooseList(self_279, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_116 = __core__headList__safe(self_279);
                    key_data = __core__fstPair(head_116);
                    key_26 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_116);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_26((valid_7, key_27) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_27)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_104(recurse_104, __core__tailList__safe(self_279), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_105(recurse_105, self_278, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_280) -> {
        (fn_35, a0_1) -> {
            __helios__common__fold(self_280, (prev_5, item_18) -> {
                fn_35(prev_5, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
            }, a0_1)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_281) -> {
        (key_28) -> {
            key_29 = __helios__bytearray____to_data(key_28);
            recurse_107 = (recurse_106, self_282) -> {
                __core__chooseList(self_282, () -> {
                    self_282
                }, () -> {
                    head_117 = __core__headList__safe(self_282);
                    tail_6 = __core__tailList__safe(self_282);
                    __core__ifThenElse(
                        __core__equalsData(key_29, __core__fstPair(head_117)),
                        () -> {
                            recurse_106(recurse_106, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_117, recurse_106(recurse_106, tail_6))
                        }
                    )()
                })()
            };
            recurse_107(recurse_107, self_281)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_324) -> {
        __helios__common__enum_tag_equals(data_324, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_283) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_283))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_284) -> {
        (key_30) -> {
            __helios__common__map_get(self_284, __helios__mintingpolicyhash____to_data(key_30), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__unwrap = (self_285) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_285))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_286) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_286))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), __core__chooseUnit(__helios__assert(__helios__int____geq(__module__BasicDelegate__rev, 1), "rev must be at least 1"), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_63 = mdd;
            __core__ifThenElse(
                __module__S3DriverPolicy__DelegateDatum[]__capoStoredData____is(__cond_63),
                () -> {
                    (__lhs_0_267) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__S3DriverPolicy__DelegateDatum[]__IsDelegation____is(__cond_63),
                        () -> {
                            (isD) -> {
                                dd = __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__dd(isD);
                                showMyTokens = __module__CapoHelpers__mkTokenShow(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                myDgTkn = showMyTokens(__helios__txinput__value(__helios__scriptcontext__get_current_input()));
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__S3DriverPolicy__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__S3DriverPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_65 = activity_3;
                                __core__ifThenElse(
                                    __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_65),
                                    () -> {
                                        (__lhs_0_245) -> {
                                            activities_2 = __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_245);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                a_23 = __module__S3DriverPolicy__DelegateActivity[]__from_data(__module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                __core__ifThenElse(
                                                    __helios__bool__and(() -> {
                                                        __module__BasicDelegate__isMintDelegate
                                                    }, () -> {
                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                                    }),
                                                    () -> {
                                                        __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_116 = a_23;
                                                        __core__ifThenElse(
                                                            __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_116),
                                                            () -> {
                                                                (__lhs_0_266) -> {
                                                                    __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_116),
                                                                    () -> {
                                                                        (__lhs_0_265) -> {
                                                                            __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_116),
                                                                            () -> {
                                                                                (__lhs_0_264) -> {
                                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_116),
                                                                                    () -> {
                                                                                        (__lhs_0_263) -> {
                                                                                            __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_116),
                                                                                            () -> {
                                                                                                (__lhs_0_262) -> {
                                                                                                    __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_116),
                                                                                                    () -> {
                                                                                                        (__lhs_0_261) -> {
                                                                                                            __helios__error("multi:multi: nesting not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__80) -> {
                                                                                                            __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_116)))
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __module__BasicDelegate__isSpendDelegate
                                                            }, () -> {
                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                                            }),
                                                            () -> {
                                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_115 = a_23;
                                                                __core__ifThenElse(
                                                                    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_115),
                                                                    () -> {
                                                                        (__lhs_0_260) -> {
                                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                __module__BasicDelegate__isSpendDelegate
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_115),
                                                                            () -> {
                                                                                (__lhs_0_259) -> {
                                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_115),
                                                                                    () -> {
                                                                                        (__lhs_0_258) -> {
                                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_115),
                                                                                            () -> {
                                                                                                (__lhs_0_257) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_115),
                                                                                                    () -> {
                                                                                                        (__lhs_0_256) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_115),
                                                                                                            () -> {
                                                                                                                (__lhs_0_255) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__79) -> {
                                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_115)))
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                    }, () -> {
                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                    }), "ack! delegated-data policy can't be a mint/spend delegate"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_114 = a_23;
                                                                    __core__ifThenElse(
                                                                        __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_114),
                                                                        () -> {
                                                                            (__lhs_0_254) -> {
                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_114),
                                                                                () -> {
                                                                                    (__lhs_0_253) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_114),
                                                                                        () -> {
                                                                                            (__lhs_0_252) -> {
                                                                                                __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities____is(__cond_114),
                                                                                                () -> {
                                                                                                    (__lhs_0_251) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__S3DriverPolicy__DelegateActivity[]__MintingActivities____is(__cond_114),
                                                                                                        () -> {
                                                                                                            (__lhs_0_250) -> {
                                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23)
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__S3DriverPolicy__DelegateActivity[]__BurningActivities____is(__cond_114),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_249) -> {
                                                                                                                        __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_23))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_248) -> {
                                                                                                                                __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_247) -> {
                                                                                                                                        __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_246) -> {
                                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_114)))))
                                                                }()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_65),
                                            () -> {
                                                (__lhs_0_239) -> {
                                                    innerActivity = __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_239);
                                                    __cond_112 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_112),
                                                        () -> {
                                                            (__lhs_0_243) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_243);
                                                                purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_243);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_113),
                                                                    () -> {
                                                                        (__lhs_0_244) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__78) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_113)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_112),
                                                                () -> {
                                                                    (__lhs_0_242) -> {
                                                                        __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_240) -> {
                                                                        __lhs_0_241 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_112)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_65),
                                                    () -> {
                                                        (__lhs_0_139) -> {
                                                            dCLA = __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_139);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_110),
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_238);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_110),
                                                                        () -> {
                                                                            (__lhs_0_236) -> {
                                                                                __cond_111 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_111),
                                                                                    () -> {
                                                                                        (__lhs_0_237) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__77) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_111)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__76) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_110), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_67 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_67),
                                                                        () -> {
                                                                            (__lhs_0_232) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_232);
                                                                                purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_232);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_108 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_108),
                                                                                    () -> {
                                                                                        (__lhs_0_233) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_109 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)()))(purpose_7);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_109),
                                                                                                () -> {
                                                                                                    (__lhs_0_235) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_234) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_234);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_109))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__75) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_108)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_67),
                                                                                () -> {
                                                                                    (__lhs_0_180) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_181 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_181);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_106 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_106),
                                                                                                () -> {
                                                                                                    (__lhs_0_230) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_107 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_107),
                                                                                                            () -> {
                                                                                                                (__lhs_0_231) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__74) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_107))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__73) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_106), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_105 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_105),
                                                                                                () -> {
                                                                                                    (__lhs_0_229) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_105),
                                                                                                        () -> {
                                                                                                            (__lhs_0_228) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_228);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_228);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_228);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_227) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_227);
                                                                                                                purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_227);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_227);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_105)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })
                                                                                                    }(__cond_94 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_94),
                                                                                                        () -> {
                                                                                                            (__lhs_0_226) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_94),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_200) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_95 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_95),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_201);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_96 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_96),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_202) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_202);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__67) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_96)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__66) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_95)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_97 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_97),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_224) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_104 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_104),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_225) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__72) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_104), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_97),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_205) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_205);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_103 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_103),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_223) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_103),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_222) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_103),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_221) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__71) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_103), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_102 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_102),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_220) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_102),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_102),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_218) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_102),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__70) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_102)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_101 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_101),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_216) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_101),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_215) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_101),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_101),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_101),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_101),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_101),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_209) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_101)))
                                                                                                                                            }(__cond_99 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_99),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_208) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_206);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_100 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_100),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_207);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__69) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_100)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_99))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_98 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_98),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__68) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_98), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_97))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__65) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_94))
                                                                                                }(__cond_87 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_87),
                                                                                                    () -> {
                                                                                                        (__lhs_0_199) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_87),
                                                                                                            () -> {
                                                                                                                (__lhs_0_183) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_88 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_88),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_191) -> {
                                                                                                                                    __core__chooseUnit(__cond_93 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_93),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_198) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_93),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_197) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_93),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_196) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_93),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_93),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_93),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_193) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_93),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__64) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_93), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__61) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_90 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_90),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_186) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_91 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_91),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_188) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_188);
                                                                                                                                                                __lhs_0_189 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_189);
                                                                                                                                                                __cond_92 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_92),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_190) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_190);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__63) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_92)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_187) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_91), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__62) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_90)))
                                                                                                                                    }(__cond_89 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_89),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_185) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_184) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_184);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_89))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_88)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__60) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_87))
                                                                                            }))))
                                                                                        }(__cond_86 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_86),
                                                                                            () -> {
                                                                                                (__lhs_0_182) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_182);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__59) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_86)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_67),
                                                                                        () -> {
                                                                                            (__lhs_0_179) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_67),
                                                                                                () -> {
                                                                                                    (__lhs_0_156) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange_1) -> {
                                                                                                                    (pdChange_1) -> {
                                                                                                                        (pendingTypeName) -> {
                                                                                                                            __core__chooseUnit(__cond_82 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_82),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_177) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgt-change: Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_85 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_85),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_178) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__58) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_85))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__55) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                            () -> {
                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                () -> {
                                                                                                                                                    ()
                                                                                                                                                }()
                                                                                                                                            }
                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                            __lhs_0_173 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_173);
                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_173);
                                                                                                                                            refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_173);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount_1, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), __core__chooseUnit(__helios__print(__helios__string____add("  -- ME policy link ", __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))())), __core__chooseUnit(__helios__print(__helios__string____add("  -- pdChange policy link ", __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange_1))()))())), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange_1))()), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("     vv @entry: ", CME_key)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy")))
                                                                                                                                            }(__cond_83 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_83),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_175) -> {
                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_175);
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_84 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextManifest))(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_84),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_176) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__57) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_84), idPrefix_6))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_83),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_174) -> {
                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_174);
                                                                                                                                                                idPrefix_5
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__56) -> {
                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_83))))))))
                                                                                                                                        })))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_82), __cond_81 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_81),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_172) -> {
                                                                                                                                        (callback_12) -> {
                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__54) -> {
                                                                                                                                        (callback_11) -> {
                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_81))
                                                                                                                        }(__cond_80 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_80),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_171) -> {
                                                                                                                                    typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_171);
                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_5)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__53) -> {
                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_80))
                                                                                                                    }(__cond_79 = pcChange_1;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_79),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_170);
                                                                                                                                dgtChange_1
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_169) -> {
                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_79))
                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                }))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                        mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                        len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __helios__int____gt(len, 1),
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))()), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                }()
                                                                                                                            }
                                                                                                                        )(), (observedTokenBurn) -> {
                                                                                                                            remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange) -> {
                                                                                                                                    __cond_74 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_74),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_161) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_161);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_75 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_75),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_168) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__51) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_76 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_76),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_167) -> {
                                                                                                                                                                        __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_162) -> {
                                                                                                                                                                        __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_162);
                                                                                                                                                                        ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                        tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                        mph_31 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                        __cond_77 = mph_31;
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_77),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_166) -> {
                                                                                                                                                                                    __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__52) -> {
                                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_163 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_163);
                                                                                                                                                                                    tnStr_2 = __helios__bytearray__decode_utf8(tn_5)();
                                                                                                                                                                                    __cond_78 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __helios__option[__helios__int]__none____is(__cond_78),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_165) -> {
                                                                                                                                                                                                __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_164) -> {
                                                                                                                                                                                                burningCount = __helios__option[__helios__int]__some__some(__lhs_0_164);
                                                                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __helios__int____neq(__helios__int____sub(0, refCount), burningCount),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            ()
                                                                                                                                                                                                        }()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_78))
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_77)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_76))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_75))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__50) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_74)
                                                                                                                                }(__cond_73 = pcChange;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_73),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_160) -> {
                                                                                                                                            dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_160);
                                                                                                                                            dgtChange
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_159) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_73)))
                                                                                                                            }, observedTokenBurn);
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                        }(__cond_72 = mintThisPolicy;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_72),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_158) -> {
                                                                                                                                    minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_158);
                                                                                                                                    minted
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_157) -> {
                                                                                                                                    __core__mkNilPairData(())
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_72)))))
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )())))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_67),
                                                                                                        () -> {
                                                                                                            (__lhs_0_146) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_146);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_68 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_68),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_155) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_68),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_154) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_68),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_148) -> {
                                                                                                                                            key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_148);
                                                                                                                                            tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_148);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_149 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_69 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_69),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_153) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_150) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_150);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_30 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_71 = mph_30;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_71),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__49) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_71), __cond_70 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_70),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_151) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__48) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_70)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_69), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_68),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_147) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_68), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_67),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_145) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_144) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_67)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_66 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_66),
                                                                () -> {
                                                                    (__lhs_0_143) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_66),
                                                                        () -> {
                                                                            (__lhs_0_142) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_66),
                                                                                () -> {
                                                                                    (__lhs_0_141) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_66),
                                                                                        () -> {
                                                                                            (__lhs_0_140) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__46) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_66)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_65),
                                                            () -> {
                                                                (__lhs_0_138) -> {
                                                                    seed_4 = __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_138);
                                                                    dataTypePurpose_1 = __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_138);
                                                                    cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        __module__BasicDelegate__isMintDelegate
                                                                    }, () -> {
                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ())
                                                                    }), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                    tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                    purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                    newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                    __helios__bool__and(() -> {
                                                                        __helios__bool__and(() -> {
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        true
                                                                                    }, () -> {
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                })
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                            })
                                                                        }, () -> {
                                                                            __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                        })
                                                                    }, () -> {
                                                                        __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                    }))))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_65),
                                                                    () -> {
                                                                        (__lhs_0_137) -> {
                                                                            dDataType = __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_137);
                                                                            recId_10 = __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_137);
                                                                            cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_10))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_10);
                                                                            __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                __helios__string____eq("settings", dDataType),
                                                                                () -> {
                                                                                    curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                        false,
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __helios__bytearray____eq(curSettingsId, recId_10),
                                                                                                () -> {
                                                                                                    __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        recIdStr_4 = __helios__bytearray__decode_utf8(recId_10)();
                                                                                                        curSettingsIdStr = __helios__bytearray__decode_utf8(curSettingsId)();
                                                                                                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                    }()
                                                                                                }
                                                                                            )()
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )())
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        ()
                                                                                    }()
                                                                                }
                                                                            )(), __helios__bool__and(() -> {
                                                                                __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2)(cctx_2)(recId_10, dDataType))("  -- did output delegated data? ")
                                                                            }, () -> {
                                                                                true
                                                                            }))))))))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_65),
                                                                            () -> {
                                                                                (__lhs_0_135) -> {
                                                                                    recId_9 = __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_135);
                                                                                    cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_136 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_9);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), __helios__bool__and(() -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ())
                                                                                    }, () -> {
                                                                                        false
                                                                                    }))))))))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities____is(__cond_65),
                                                                                    () -> {
                                                                                        (__lhs_0_134) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__S3DriverPolicy__DelegateActivity[]__MintingActivities____is(__cond_65),
                                                                                            () -> {
                                                                                                (__lhs_0_133) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_132) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_65)))
                            }
                        },
                        () -> {
                            (__44) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_64 = activity_3;
                                __core__ifThenElse(
                                    __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_64),
                                    () -> {
                                        (__lhs_0_131) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_64),
                                            () -> {
                                                (__lhs_0_130) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__45) -> {
                                                    __module__S3DriverPolicy__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_64)
                            }
                        }
                    )()
                }
            )()(__cond_63))))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__S3DriverPolicy__DelegateDatum[]__from_data(__module__S3DriverPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__S3DriverPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__S3DriverPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__S3DriverPolicy__DelegateActivity[]__from_data(__module__S3DriverPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__S3DriverPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/s3/S3Driver/S3DriverPolicy.hl", "src/delegation/CapoDelegateHelpers.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f18670019052508186b0019053e0818850119053b0418860119053b0419012c02190122181f19012e021901271419013b02190134181f1903280219015f181b1903d7001905ab181e19043702190166182019043c02190166181c190480001906a2081904a9001906ab18331908d3011902131824190f7e0119039718301911c1011903d518201913a10119035e18321913b30119035d18521913c60119035c184e1914e90019056a182019153c01190432183a19154401190431184f191602011901f61824191610011901f8182b191616011901f8182719162f011901db1821191644011901db1821191659011901db182119166e011901db1821191683011901db1821191698011901db18211916a0011901db18211916a3001904c2091916cb011901ad182719170e011904bc14191720011904bd181f191726011904bd181b191735001902560919175b00190260081917640019026018271917650019026018271917750019026f1119179a0019026418381917c2001902671843191800001902741852191808001901de184e191809001901de184e19181d001902761019181e001902a811191826001901de184e191827001901de184e19183a001902ad11191842001901de184e191843001901de184e19186c0019027b181d19188100190281181d19189600190289181d1918ce0019029118441918f600190294185019190f0019029b185719192e001902b11831191932001901d008191934001901cf091919cb001902f318271919da001902f4182e191a07001902df11191a11001901de184e191a12001901de184e191acf001902e41847191ad2001902e81832191b3d001902ee182d191c6503190113181d191cef011904c3181c191d1d011904c3181c191d46011904d51845191d5b001904500b191d5c001904500b191d6a00190452184c191daf001906331833191dda011904f814191e04011904f814191e24011904f814191e6e011904bc1831191edf001882181c191eef00188508191f3c0018801219200a00187c1619202d00187b1829192047001876171921ac041901b9182e1921ad041901b9182e1921af041901ba0c1921bd041901be18391921be041901be18391921e504181f021921e604181f0219220604182016192249041901d6183719247d00190189184b19249f00190189184d1924bd0419015e18341925bb04190128181b192607001906eb08192680001906f3141926be00190167184b1926ef00190167184d192702001906c20819277e001906cd184619277f001906cd182519289000190595181f1929080019059618221929f80019052f0c192a670019050c09192b470019042215192b480019042215192cb10319013f10192ea105183204192ea205183204192eca051832181aff", "variableNames": "", "termDescriptions": "b319012e646d6b546e190480676368617274657219170e6463637478191764683c7377697463683e191765683c7377697463683e19181d70616374734f6e546869735265636f7264191d5b683c7377697463683e191d5c683c7377697463683e1921ac62746e1921ad62746e1921af65746e5374721921e56b686173536565645574786f1921e66b686173536565645574786f19260767636861727465721927026763686172746572192b47683c7377697463683e192b48683c7377697463683e192ea167746e4279746573192ea267746e4279746573" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/s3/S3Driver/S3DriverPolicy.hl", "src/s3/S3Driver/S3DriverData.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f19042700190166183219045700190259182a190459001902cd183a19045b001902fb0b19046100190332101904630019036f08190499001905250819049d0019053e081905a90119053b041905aa0119053b041905d90118bf183a1905da0118bf183a1905dd0118c0182e1905de0118c0182e1905df0118c0091905e00118c0041905e10118c018271905e30118c018271905e40118c018191905e60118c018191905e70118c00a1905f30118c10a1905f40118c10f190601011905390a19060401190539182919060501190539181a19065f011905231019066d01190524183619066f01190524182d1906d50118ec18181909c7011901861826190af6011902131824190ffc0119028e1828191295011903971830191458011903d518201915720119040418651915f4011903d318351915f9011903d3183119160a0119035e18321916140119035d185219161a0119035c184e19176d01190434183419177601190434183019177a01190432183a19178501190431184f1917a30119044d182f1917aa0119044d182b19183001190464181d191862011901e51827191869011901e51823191892011901ee1827191899011901ee18231918c1011901f618241918c8011901f618201918d4011901f8182b1918db011901f818271918f1011901db18251918f5011901db18211918fb011901ad1827191913011904721826191917011904731419193001190475183119193701190475182d19197601190498181f19197901190499181e19197a01190499181e191996011904a3181b19199d011904a3171919a8011904a818381919c101190478182e1919cb01190478182a1919ce0119047318311919ed011904bc141919f5011904bd181f1919fc011904bd181b191a2f011904c31820191a39011904c3181c191a8c011904eb1828191aae011904f1182b191ab6011904d51845191ab9011904d5182c191ac0011904d51828191acd011904f81818191ad4011904f814191ad9011904ca182c191ae2011904ca1828191ae6011904bc1831191b03011904fe14191b5f0119050f1818191b660119050f14191b6a01190506182d191b73011905061829191b77011904fe1831191dea02190192181e191e15021901141827191e160219011608191e170219011608191e5402190122181f191e730219012714191e8002190134181f191f17021901391835191f24021901391831191f420219012c181e191f430219012c181e191f4c0219012f1825191f790219015f181b191f9d0219016d1841191fd20219016b1820191fd80219016b181c191fdb021901661820191fe202190166181c192a53031212192a660313182a192d01041901b11826192d02041901b11831192d1f041901b9182e192d20041901b9182e192d22041901ba0c192d33041901bb182c192d4e041901be1839192d4f041901be1839192db9041901d61837192f330419015e18341930b704190128181b1930d30419011c0e1930ee04190112181b19313504185b05193136041859182d19314c0418611419317f04186b171931e604184b091931e704184b182e19320104184506193202041842181919327804182e184419327904182e184419329a04181f0219329b04181f021932aa041820161932b10418210d1932c00418240e1932df001907a918271932fb001907a3182c19331400190780101934770019076a183219347a00190751182c19348000190753181f19349e00190755183b1934d80019073e121934d90019073e182b1934db001907340d1934dc0019072f182a193500001907301830193589001906eb0819358a001906ec0f1935c5001906f3141935e0001906c2081935e1001906c30f193628001906cd1846193629001906cd1825193675001906a208193676001906a30f19369c001906ab183319375a00190661182519377f001906331833193834001905ab181e1938b5001905910f1938c500190595181f19391c00190596182219396c001905861019399c00190578182319399d0019057818231939af0019056a18201939b900190569081939cc0019056c101939f10019056418281939f2001905641841193a0d0019055a11193a570019053d181c193a8a0019052c181c193acc001905341818193ad90019052f0c193ae6001905241818193b220019050c09193b290019050a181d193b42001905011820193b68001904f909193b6f001904f7181b193bf1001904df184d193bff001904df1844193c5d001904ba181e193c5e001904bb183d193c69001904c209193c82001904bf10193cb8001904500b193cb9001904500b193cbf00190452184c193d1100190442183f193d13001904411821193d14001904411821193d4700190420181c193d510019042215193d520019042215193e43001903d114193e690019036e10193ed9001902f910193edf001902cc181b193ef2001902f31827193efb001902f4182e193f0c001902f40f193f21001902df11193f48001902e41847193f56001902e81832193f60001902e81822193f81001902ee182d193fb20019025609193fd0001902581878193fdb0019026008193fdd0019025a1826193fe70019025a0e193fe80019025c181b193fef0019025d1841193ffa0019025e185519400c00190260182719400d0019026018271940150019026f1119402b00190264183819404600190267184319405100190268184d19406100190268184519409500190273183d19409c0019027418521940ae0019027418261940b000190276101940b1001902a418621940bc001902a8111940d7001902a918511940e2001902ad111941140019027b181d19412c00190281181d19414400190289181d19417000190291184419418b00190294185019419600190295185c1941a40019029618441941a60019029518541941a70019029518541941c10019029b18571941f0001902b1183119420a00190223185d1942250019022f1119426700190234184c19427500190234182119427800190244185b1942830019024518601942960019024618501942a10019024718681942df0019023a18441943290019024c1830194385001901e81856194387001901e715194388001901e71519438c001901e814194391001901e80f19439d001901e8184419439e001901ea183c1943a0001901e8184e1943a1001901e8184e1943a5001901ee091943b9001901ef131943c7001901dd171943c8001901dd171943c9001901de18561943cb001901dd182b1943cc001901dd182b1943d0001901de141943d5001901de0f1943e1001901de18441943e6001901de184e1943e7001901de184e1943f9001901d31821194413001901be1827194416001901d008194418001901cf0919442e001901c41853194439001901c4184b194455001901c7184a1946240019018d1319463400190189184b19463900190189183019463c00190189184d19468500190167184b19468a00190167183019468d00190167184d1950d7001882181c1950e7001885081951040018801219510a0018801619512300187d1119512500187c1619512700187d0a19512900187c0e19512b00187b182919513700187b18251951390018761719513a0018780a195c120519013a09195c130519013a09195c4905190151183d195c54051901541819195c57051901541837195c6805190150181d195c7a0519015a15195c7b0519015a1836195c7e0519015a1837195cad0519013f10195dbe05190113181d195ec20518c304195ede0518bc0419600f0518b10819634e051895081963d20518920819645905188f08196619051881081969320518660819693805186508196a6805185e08196a6e05185808196a7405185708196a7a05185608196bc205184f08196bc805184e08196bce05184d08196e1c05183f08196e2205183e0819719605182c081974e5051820081974eb05181f0819778406183204197785061832041977860618320419778706183204197788061832041977890618320419778a061832041977be061832181aff", "variableNames": "", "termDescriptions": "b83d1905d9646d61696e1905da646d61696e1906d5616119191764636374781919ed6463637478191b036463637478191dea6473656c66191e156473656c66191e166463637478191e176463637478191e73646d6b546e191f9d647574786f192a536473656c66192d1f62746e192d2062746e192d2265746e5374721931e667707572706f7365193278781a6e6f4f7468657241637469766974696573537570706f72746564193279781a6e6f4f7468657241637469766974696573537570706f7274656419329a6b686173536565645574786f19329b6b686173536565645574786f1932df696d6b4361706f43747819358967636861727465721935e067636861727465721936756763686172746572193a0d6473656c66193a576473656c66193a8a6473656c66193ae66473656c66193c5d6473656c66193cb8683c7377697463683e193cb9683c7377697463683e193d13636b6579193d14636b6579193d476473656c66193d51683c7377697463683e193d52683c7377697463683e193e436473656c66193e696473656c66193ed96473656c66193edf6473656c6619400c683c7377697463683e19400d683c7377697463683e1940b070616374734f6e546869735265636f7264194387636d7367194388636d73671943c76b617373657274696f6e4f6b1943c86b617373657274696f6e4f6b1943cb636d73671943cc636d73671943f96473656c661944136473656c66195c12683c61737369676e3e195c13683c61737369676e3e19778467746e427974657319778567746e427974657319778667746e427974657319778767746e427974657319778867746e427974657319778967746e427974657319778a67746e4279746573" } },
      scriptHash: "0e82bd11371d80abdbe0ec82378fb10720277bb906131287c6904679",
      config: { "rev": "1", "delegateName": "S3DriverPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": false }
    }
  };
  specializedDelegateModule = S3DriverPolicy_hl;
  requiresGovAuthority = false;
  get modules() {
    return [
      ...super.modules,
      S3DriverData_hl
      // S3DriverSettings,
      // ProtocolSettings
    ];
  }
}

export { S3DriverBundle as default };
//# sourceMappingURL=S3Driver.hlb.ts.hlb.mjs.map
