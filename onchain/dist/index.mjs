import { makeInlineTxOutputDatum, makeValue, makePubKey } from '@helios-lang/ledger';
import { ContractDataBridge, EnumBridge, impliedSeedActivityMaker, DataBridgeReaderClass, DelegatedDataContract, hasReqts, BasicMintDelegate, textToBytes, Capo, delegateRoles, defineRole, mkValuesEntry, mergesInheritedReqts } from '@donecollectively/stellar-contracts';
import ProtocolSettingsBundle from 'dred-network-registry/contracts-preprod/ProtocolSettings.hlb';
import { makeCast } from '@helios-lang/contract-utils';
import DredCapoBundle from 'dred-network-registry/contracts-preprod/DredCapo.hlb';
import MyMintSpendDelegateBundle from 'dred-network-registry/contracts-preprod/MyMintSpendDelegate.hlb';
import NodeRegistryBundle from 'dred-network-registry/contracts-preprod/NodeRegistry.hlb';
import NeighborhoodBundle from 'dred-network-registry/contracts-preprod/Neighborhood.hlb';

class ProtocolSettingsPolicyDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper$3({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper$3({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new ProtocolSettingsPolicyDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper$3({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NodeOperatorSettings*** for the `BasicDelegate` script
     */
    NodeOperatorSettings: (fields) => {
      return this["\u1C7A\u1C7ANodeOperatorSettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NeighborhoodSettings*** for the `BasicDelegate` script
     */
    NeighborhoodSettings: (fields) => {
      return this["\u1C7A\u1C7ANeighborhoodSettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***ProtocolSettings*** for the `BasicDelegate` script
     */
    ProtocolSettings: (fields) => {
      return this["\u1C7A\u1C7AProtocolSettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANodeOperatorSettingsCast" = makeCast(
    NodeOperatorSettingsSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANeighborhoodSettingsCast" = makeCast(
    NeighborhoodSettingsSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AProtocolSettingsCast" = makeCast(
    ProtocolSettingsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema$3,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class ProtocolSettingsPolicyDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NodeOperatorSettings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NodeOperatorSettings(d) {
    const cast = this.bridge["\u1C7A\u1C7ANodeOperatorSettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NeighborhoodSettings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NeighborhoodSettings(d) {
    const cast = this.bridge["\u1C7A\u1C7ANeighborhoodSettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **ProtocolSettings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ProtocolSettings(d) {
    const cast = this.bridge["\u1C7A\u1C7AProtocolSettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
let DelegateDatumHelper$3 = class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"ProtocolSettingsPolicy::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "ProtocolSettingsPolicy::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"ProtocolSettingsPolicy::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "ProtocolSettingsPolicy::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"ProtocolSettingsPolicy::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "ProtocolSettingsPolicy::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelper$3 = class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelper$3 = class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelperNested$3 = class DelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelperNested$3 = class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let CapoLifecycleActivityHelper$3 = class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new DelegateRoleHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelper$3 = class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelper$3 = class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord"***
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
};
let MintingActivityHelper$3 = class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates  UplcData for ***"ProtocolSettingsPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "ProtocolSettingsPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates  UplcData for ***"ProtocolSettingsPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
};
let BurningActivityHelper$3 = class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"ProtocolSettingsPolicy::BurningActivity.DeletingRecord"***
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "ProtocolSettingsPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
};
let ActivityDelegateRoleHelperNested$3 = class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let CapoLifecycleActivityHelperNested$3 = class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelperNested$3 = class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelperNested$3 = class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "ProtocolSettingsPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
};
let MintingActivityHelperNested$3 = class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
  */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "ProtocolSettingsPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
};
let BurningActivityHelperNested$3 = class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::BurningActivity.DeletingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "ProtocolSettingsPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
};
let DelegateActivityHelper$3 = class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "ProtocolSettingsPolicy::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "ProtocolSettingsPolicy::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "ProtocolSettingsPolicy::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "ProtocolSettingsPolicy::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested$3({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "ProtocolSettingsPolicy::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "ProtocolSettingsPolicy::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "ProtocolSettingsPolicy::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"ProtocolSettingsPolicy::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "ProtocolSettingsPolicy::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
};
let PendingDelegateActionHelper$3 = class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let ManifestEntryTypeHelper$3 = class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let PendingCharterChangeHelper$3 = class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let cctx_CharterInputTypeHelper$3 = class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema$3,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
const AnyDataSchema$3 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema$3 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const NodeOperatorSettingsSchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NodeOperatorSettings__NodeOperatorSettings[]",
  "name": "NodeOperatorSettings",
  "fieldTypes": [
    {
      "name": "expectedHeartbeatInterval",
      "type": {
        "kind": "internal",
        "name": "Duration"
      },
      "key": "ndHbi"
    },
    {
      "name": "requiredNodeUptime",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "ndUpt"
    },
    {
      "name": "minNodeRegistrationFee",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "minFee"
    },
    {
      "name": "minNodeOperatorStake",
      "type": {
        "kind": "internal",
        "name": "Value"
      },
      "key": "minStk"
    }
  ]
};
const NeighborhoodSettingsSchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodSettings__NeighborhoodSettings[]",
  "name": "NeighborhoodSettings",
  "fieldTypes": [
    {
      "name": "minRegistrationFee",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "minRegFee"
    },
    {
      "name": "minNbhStake",
      "type": {
        "kind": "internal",
        "name": "Value"
      },
      "key": "minStk"
    }
  ]
};
const ProtocolSettingsSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__ProtocolSettings__ProtocolSettings[]",
  "name": "ProtocolSettings",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    },
    {
      "name": "nodeOpSettings",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NodeOperatorSettings__NodeOperatorSettings[]",
        "name": "NodeOperatorSettings",
        "fieldTypes": [
          {
            "name": "expectedHeartbeatInterval",
            "type": {
              "kind": "internal",
              "name": "Duration"
            },
            "key": "ndHbi"
          },
          {
            "name": "requiredNodeUptime",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "ndUpt"
          },
          {
            "name": "minNodeRegistrationFee",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "minFee"
          },
          {
            "name": "minNodeOperatorStake",
            "type": {
              "kind": "internal",
              "name": "Value"
            },
            "key": "minStk"
          }
        ]
      },
      "key": "nOp"
    },
    {
      "name": "nbhSettings",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NeighborhoodSettings__NeighborhoodSettings[]",
        "name": "NeighborhoodSettings",
        "fieldTypes": [
          {
            "name": "minRegistrationFee",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "minRegFee"
          },
          {
            "name": "minNbhStake",
            "type": {
              "kind": "internal",
              "name": "Value"
            },
            "key": "minStk"
          }
        ]
      },
      "key": "nbh"
    }
  ]
};
const DelegateDatumSchema$3 = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__ProtocolSettingsPolicy__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__ProtocolSettingsPolicy__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__ProtocolSettingsPolicy__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__ProtocolSettingsPolicy__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__ProtocolSettings__ProtocolSettings[]",
            "name": "ProtocolSettings",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              },
              {
                "name": "nodeOpSettings",
                "type": {
                  "kind": "struct",
                  "format": "map",
                  "id": "__module__NodeOperatorSettings__NodeOperatorSettings[]",
                  "name": "NodeOperatorSettings",
                  "fieldTypes": [
                    {
                      "name": "expectedHeartbeatInterval",
                      "type": {
                        "kind": "internal",
                        "name": "Duration"
                      },
                      "key": "ndHbi"
                    },
                    {
                      "name": "requiredNodeUptime",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "ndUpt"
                    },
                    {
                      "name": "minNodeRegistrationFee",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "minFee"
                    },
                    {
                      "name": "minNodeOperatorStake",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      },
                      "key": "minStk"
                    }
                  ]
                },
                "key": "nOp"
              },
              {
                "name": "nbhSettings",
                "type": {
                  "kind": "struct",
                  "format": "map",
                  "id": "__module__NeighborhoodSettings__NeighborhoodSettings[]",
                  "name": "NeighborhoodSettings",
                  "fieldTypes": [
                    {
                      "name": "minRegistrationFee",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "minRegFee"
                    },
                    {
                      "name": "minNbhStake",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      },
                      "key": "minStk"
                    }
                  ]
                },
                "key": "nbh"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema$3 = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema$3 = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema$3 = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema$3 = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema$3 = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__ProtocolSettingsPolicy__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord",
      "name": "UpdatingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema$3 = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__ProtocolSettingsPolicy__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord",
      "name": "CreatingRecord",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema$3 = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__ProtocolSettingsPolicy__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord",
      "name": "DeletingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema$3 = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__ProtocolSettingsPolicy__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__ProtocolSettingsPolicy__SpendingActivity[]__UpdatingRecord",
                "name": "UpdatingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__ProtocolSettingsPolicy__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__ProtocolSettingsPolicy__MintingActivity[]__CreatingRecord",
                "name": "CreatingRecord",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__ProtocolSettingsPolicy__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__ProtocolSettingsPolicy__BurningActivity[]__DeletingRecord",
                "name": "DeletingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__ProtocolSettingsPolicy__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema$3 = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const RelativeDelegateLinkSchema$3 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const PendingDelegateChangeSchema$3 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema$3 = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema$3 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema$3 = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema$3 = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema$3 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};

class ProtocolSettingsController extends DelegatedDataContract {
  dataBridgeClass = ProtocolSettingsPolicyDataBridge;
  scriptBundle() {
    return ProtocolSettingsBundle.create();
  }
  get capo() {
    return super.capo;
  }
  get delegateName() {
    return "ProtocolSettings";
  }
  get idPrefix() {
    return "set";
  }
  get recordTypeName() {
    return "settings";
  }
  requirements() {
    return hasReqts({});
  }
  /**
   * creates settings data with minting-policy hashes prepared for each membership tier
   */
  async initialSettingsData() {
    const settings = this.exampleData();
    return settings;
  }
  exampleData() {
    const settings = {
      nodeOpSettings: {
        expectedHeartbeatInterval: 7 * 24 * 60 * 60 * 1e3,
        minNodeOperatorStake: makeValue(20000n),
        minNodeRegistrationFee: 2000n,
        requiredNodeUptime: 90n
      },
      nbhSettings: {
        minNbhStake: makeValue(50000001n),
        minRegistrationFee: 4000000000n
      }
      /* Add other settings here */
    };
    return settings;
  }
  // sample of making a wrapped-data class when using a WrappedDgDataContract:
  // mkDataWrapper(data: ErgoProtocolSettings) {
  //     return new OffchainSettingsClass(data, this, this.capo as any);
  // }
}

class MyMintSpendDelegateDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper$2({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper$2({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new MyMintSpendDelegateDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper$2({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema$2,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class MyMintSpendDelegateDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
let DelegateDatumHelper$2 = class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"MyMintSpendDelegate::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "MyMintSpendDelegate::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"MyMintSpendDelegate::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "MyMintSpendDelegate::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"MyMintSpendDelegate::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "MyMintSpendDelegate::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelper$2 = class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelper$2 = class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelperNested$2 = class DelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelperNested$2 = class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let CapoLifecycleActivityHelper$2 = class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new DelegateRoleHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelper$2 = class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelper$2 = class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity"***
   */
  SampleSpendingActivity(recId) {
    const uplc = this.mkUplcData({
      SampleSpendingActivity: recId
    }, "MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity");
    return uplc;
  }
};
let MintingActivityHelper$2 = class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"MyMintSpendDelegate::MintingActivity.SampleMintingActivity"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get SampleMintingActivity() {
    const uplc = this.mkUplcData(
      { SampleMintingActivity: {} },
      "MyMintSpendDelegate::MintingActivity.SampleMintingActivity"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"MyMintSpendDelegate::MintingActivity.MintingFungibleTokens"***
   */
  MintingFungibleTokens(tokenName) {
    const uplc = this.mkUplcData({
      MintingFungibleTokens: tokenName
    }, "MyMintSpendDelegate::MintingActivity.MintingFungibleTokens");
    return uplc;
  }
};
let BurningActivityHelper$2 = class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"MyMintSpendDelegate::BurningActivity._placeholder1BA"***
   */
  _placeholder1BA(recId) {
    const uplc = this.mkUplcData({
      _placeholder1BA: recId
    }, "MyMintSpendDelegate::BurningActivity._placeholder1BA");
    return uplc;
  }
};
let ActivityDelegateRoleHelperNested$2 = class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let CapoLifecycleActivityHelperNested$2 = class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelperNested$2 = class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelperNested$2 = class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  SampleSpendingActivity(recId) {
    const uplc = this.mkUplcData({
      SampleSpendingActivity: recId
    }, "MyMintSpendDelegate::SpendingActivity.SampleSpendingActivity");
    return uplc;
  }
};
let MintingActivityHelperNested$2 = class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"MyMintSpendDelegate::MintingActivity.SampleMintingActivity"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get SampleMintingActivity() {
    const uplc = this.mkUplcData(
      { SampleMintingActivity: {} },
      "MyMintSpendDelegate::MintingActivity.SampleMintingActivity"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::MintingActivity.MintingFungibleTokens"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  MintingFungibleTokens(tokenName) {
    const uplc = this.mkUplcData({
      MintingFungibleTokens: tokenName
    }, "MyMintSpendDelegate::MintingActivity.MintingFungibleTokens");
    return uplc;
  }
};
let BurningActivityHelperNested$2 = class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::BurningActivity._placeholder1BA"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  _placeholder1BA(recId) {
    const uplc = this.mkUplcData({
      _placeholder1BA: recId
    }, "MyMintSpendDelegate::BurningActivity._placeholder1BA");
    return uplc;
  }
};
let DelegateActivityHelper$2 = class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "MyMintSpendDelegate::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "MyMintSpendDelegate::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "MyMintSpendDelegate::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "MyMintSpendDelegate::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested$2({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "MyMintSpendDelegate::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "MyMintSpendDelegate::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "MyMintSpendDelegate::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MyMintSpendDelegate::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "MyMintSpendDelegate::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
};
let PendingDelegateActionHelper$2 = class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let ManifestEntryTypeHelper$2 = class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let PendingCharterChangeHelper$2 = class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let cctx_CharterInputTypeHelper$2 = class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema$2,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
const AnyDataSchema$2 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema$2 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const DelegateDatumSchema$2 = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__MyMintSpendDelegate__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MyMintSpendDelegate__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MyMintSpendDelegate__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MyMintSpendDelegate__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema$2 = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema$2 = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema$2 = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema$2 = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema$2 = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__MyMintSpendDelegate__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity",
      "name": "SampleSpendingActivity",
      "fieldTypes": [
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema$2 = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__MyMintSpendDelegate__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity",
      "name": "SampleMintingActivity",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens",
      "name": "MintingFungibleTokens",
      "fieldTypes": [
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema$2 = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__MyMintSpendDelegate__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA",
      "name": "_placeholder1BA",
      "fieldTypes": [
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema$2 = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__MyMintSpendDelegate__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__MyMintSpendDelegate__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MyMintSpendDelegate__SpendingActivity[]__SampleSpendingActivity",
                "name": "SampleSpendingActivity",
                "fieldTypes": [
                  {
                    "name": "recId",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__MyMintSpendDelegate__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MyMintSpendDelegate__MintingActivity[]__SampleMintingActivity",
                "name": "SampleMintingActivity",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__MyMintSpendDelegate__MintingActivity[]__MintingFungibleTokens",
                "name": "MintingFungibleTokens",
                "fieldTypes": [
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__MyMintSpendDelegate__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MyMintSpendDelegate__BurningActivity[]___placeholder1BA",
                "name": "_placeholder1BA",
                "fieldTypes": [
                  {
                    "name": "recId",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__MyMintSpendDelegate__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema$2 = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const RelativeDelegateLinkSchema$2 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const PendingDelegateChangeSchema$2 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema$2 = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema$2 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema$2 = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema$2 = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema$2 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};

class MyMintSpendDelegate extends BasicMintDelegate {
  get delegateName() {
    return "MyMintSpendDelegate";
  }
  dataBridgeClass = MyMintSpendDelegateDataBridge;
  scriptBundle() {
    return MyMintSpendDelegateBundle.create();
  }
}

class DredNodeRegistryPolicyDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper$1({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper$1({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new DredNodeRegistryPolicyDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***dgd_DataSrc*** for the `BasicDelegate` script
     */
    dgd_DataSrc: new dgd_DataSrcHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NodeRegistrationData*** for the `BasicDelegate` script
     */
    NodeRegistrationData: (fields) => {
      return this["\u1C7A\u1C7ANodeRegistrationDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NodeOperatorSettings*** for the `BasicDelegate` script
     */
    NodeOperatorSettings: (fields) => {
      return this["\u1C7A\u1C7ANodeOperatorSettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***AbstractSettingsForNodeOperator*** for the `BasicDelegate` script
     */
    AbstractSettingsForNodeOperator: (fields) => {
      return this["\u1C7A\u1C7AAbstractSettingsForNodeOperatorCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DgDataDetails*** for the `BasicDelegate` script
     */
    DgDataDetails: (fields) => {
      return this["\u1C7A\u1C7ADgDataDetailsCast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANodeRegistrationDataCast" = makeCast(
    NodeRegistrationDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANodeOperatorSettingsCast" = makeCast(
    NodeOperatorSettingsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAbstractSettingsForNodeOperatorCast" = makeCast(
    AbstractSettingsForNodeOperatorSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADgDataDetailsCast" = makeCast(
    DgDataDetailsSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class DredNodeRegistryPolicyDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **dgd_DataSrc*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  dgd_DataSrc(d) {
    const typeHelper = this.bridge.types.dgd_DataSrc;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NodeRegistrationData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NodeRegistrationData(d) {
    const cast = this.bridge["\u1C7A\u1C7ANodeRegistrationDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NodeOperatorSettings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NodeOperatorSettings(d) {
    const cast = this.bridge["\u1C7A\u1C7ANodeOperatorSettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **AbstractSettingsForNodeOperator*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AbstractSettingsForNodeOperator(d) {
    const cast = this.bridge["\u1C7A\u1C7AAbstractSettingsForNodeOperatorCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DgDataDetails*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DgDataDetails(d) {
    const cast = this.bridge["\u1C7A\u1C7ADgDataDetailsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
let DelegateDatumHelper$1 = class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"DredNodeRegistryPolicy::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "DredNodeRegistryPolicy::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"DredNodeRegistryPolicy::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "DredNodeRegistryPolicy::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"DredNodeRegistryPolicy::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "DredNodeRegistryPolicy::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelper$1 = class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelper$1 = class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelperNested$1 = class DelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelperNested$1 = class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let CapoLifecycleActivityHelper$1 = class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new DelegateRoleHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelper$1 = class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelper$1 = class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord"***
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
};
let MintingActivityHelper$1 = class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates  UplcData for ***"DredNodeRegistryPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "DredNodeRegistryPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates  UplcData for ***"DredNodeRegistryPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
};
let BurningActivityHelper$1 = class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"DredNodeRegistryPolicy::BurningActivity.DeletingRecord"***
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "DredNodeRegistryPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
};
let ActivityDelegateRoleHelperNested$1 = class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let CapoLifecycleActivityHelperNested$1 = class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelperNested$1 = class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelperNested$1 = class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "DredNodeRegistryPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
};
let MintingActivityHelperNested$1 = class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
  */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "DredNodeRegistryPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
};
let BurningActivityHelperNested$1 = class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::BurningActivity.DeletingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "DredNodeRegistryPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
};
let DelegateActivityHelper$1 = class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "DredNodeRegistryPolicy::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "DredNodeRegistryPolicy::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "DredNodeRegistryPolicy::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "DredNodeRegistryPolicy::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "DredNodeRegistryPolicy::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "DredNodeRegistryPolicy::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "DredNodeRegistryPolicy::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"DredNodeRegistryPolicy::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "DredNodeRegistryPolicy::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
};
let PendingDelegateActionHelper$1 = class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let ManifestEntryTypeHelper$1 = class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let PendingCharterChangeHelper$1 = class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let cctx_CharterInputTypeHelper$1 = class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let dgd_DataSrcHelper$1 = class dgd_DataSrcHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    dgd_DataSrcSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::dgd_DataSrc.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::dgd_DataSrc.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Input"***
   */
  Input(utxo) {
    const uplc = this.mkUplcData({
      Input: utxo
    }, "CapoHelpers::dgd_DataSrc.Input");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Output"***
   */
  Output(txo) {
    const uplc = this.mkUplcData({
      Output: txo
    }, "CapoHelpers::dgd_DataSrc.Output");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Both"***
   * @remarks - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.
   */
  Both(fields) {
    const uplc = this.mkUplcData({
      Both: fields
    }, "CapoHelpers::dgd_DataSrc.Both");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
const AnyDataSchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const NodeRegistrationDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NodeRegistrationData__NodeRegistrationData[]",
  "name": "NodeRegistrationData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    },
    {
      "name": "memberToken",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "mt"
    },
    {
      "name": "nodeAddress",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "addr"
    },
    {
      "name": "nodePort",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "port"
    },
    {
      "name": "nodePublicKey",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "pubk"
    },
    {
      "name": "lastHeartbeat",
      "type": {
        "kind": "internal",
        "name": "Time"
      },
      "key": "lhb"
    }
  ]
};
const DelegateDatumSchema$1 = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__DredNodeRegistryPolicy__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__DredNodeRegistryPolicy__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__DredNodeRegistryPolicy__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__DredNodeRegistryPolicy__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__NodeRegistrationData__NodeRegistrationData[]",
            "name": "NodeRegistrationData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              },
              {
                "name": "memberToken",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "mt"
              },
              {
                "name": "nodeAddress",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "addr"
              },
              {
                "name": "nodePort",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                },
                "key": "port"
              },
              {
                "name": "nodePublicKey",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "pubk"
              },
              {
                "name": "lastHeartbeat",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                },
                "key": "lhb"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema$1 = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema$1 = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema$1 = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema$1 = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema$1 = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__DredNodeRegistryPolicy__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__DredNodeRegistryPolicy__SpendingActivity[]__UpdatingRecord",
      "name": "UpdatingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema$1 = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__DredNodeRegistryPolicy__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__DredNodeRegistryPolicy__MintingActivity[]__CreatingRecord",
      "name": "CreatingRecord",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema$1 = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__DredNodeRegistryPolicy__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__DredNodeRegistryPolicy__BurningActivity[]__DeletingRecord",
      "name": "DeletingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema$1 = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__DredNodeRegistryPolicy__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__DredNodeRegistryPolicy__SpendingActivity[]__UpdatingRecord",
                "name": "UpdatingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__DredNodeRegistryPolicy__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__DredNodeRegistryPolicy__MintingActivity[]__CreatingRecord",
                "name": "CreatingRecord",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__DredNodeRegistryPolicy__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__DredNodeRegistryPolicy__BurningActivity[]__DeletingRecord",
                "name": "DeletingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__DredNodeRegistryPolicy__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema$1 = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const RelativeDelegateLinkSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const PendingDelegateChangeSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema$1 = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema$1 = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema$1 = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};
const NodeOperatorSettingsSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NodeOperatorSettings__NodeOperatorSettings[]",
  "name": "NodeOperatorSettings",
  "fieldTypes": [
    {
      "name": "expectedHeartbeatInterval",
      "type": {
        "kind": "internal",
        "name": "Duration"
      },
      "key": "ndHbi"
    },
    {
      "name": "requiredNodeUptime",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "ndUpt"
    },
    {
      "name": "minNodeRegistrationFee",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "minFee"
    },
    {
      "name": "minNodeOperatorStake",
      "type": {
        "kind": "internal",
        "name": "Value"
      },
      "key": "minStk"
    }
  ]
};
const AbstractSettingsForNodeOperatorSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NodeOperatorSettings__AbstractSettingsForNodeOperator[]",
  "name": "AbstractSettingsForNodeOperator",
  "fieldTypes": [
    {
      "name": "nodeOpSettings",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NodeOperatorSettings__NodeOperatorSettings[]",
        "name": "NodeOperatorSettings",
        "fieldTypes": [
          {
            "name": "expectedHeartbeatInterval",
            "type": {
              "kind": "internal",
              "name": "Duration"
            },
            "key": "ndHbi"
          },
          {
            "name": "requiredNodeUptime",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "ndUpt"
          },
          {
            "name": "minNodeRegistrationFee",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "minFee"
          },
          {
            "name": "minNodeOperatorStake",
            "type": {
              "kind": "internal",
              "name": "Value"
            },
            "key": "minStk"
          }
        ]
      },
      "key": "nOp"
    }
  ]
};
const dgd_DataSrcSchema$1 = {
  "kind": "enum",
  "name": "dgd_DataSrc",
  "id": "__module__CapoHelpers__dgd_DataSrc[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
      "name": "Output",
      "fieldTypes": [
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
      "name": "Both",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        },
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    }
  ]
};
const DgDataDetailsSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__DgDataDetails[]",
  "name": "DgDataDetails",
  "fieldTypes": [
    {
      "name": "dataSrc",
      "type": {
        "kind": "enum",
        "name": "dgd_DataSrc",
        "id": "__module__CapoHelpers__dgd_DataSrc[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
            "name": "Output",
            "fieldTypes": [
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
            "name": "Both",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              },
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    }
  ]
};

class NodeRegistryController extends DelegatedDataContract {
  dataBridgeClass = DredNodeRegistryPolicyDataBridge;
  scriptBundle() {
    return NodeRegistryBundle.create();
  }
  idPrefix = "dredNode";
  get delegateName() {
    return "NodeRegistryDgt";
  }
  get recordTypeName() {
    return "DredNode";
  }
  exampleData() {
    return {
      // id: textToBytes("dredNode-1234"),
      // type: "dredNode",
      // status: "active",
      lastHeartbeat: 0,
      memberToken: "member-1234",
      nodeAddress: "1.2.4.3.example.com",
      nodePort: 13337n,
      // bad data, but good enough for being a lame example.  
      // It should be a valid Ed25519 public key, expressed as a numeric array
      nodePublicKey: makePubKey(textToBytes("0x1234567890abcdef1234567890abcdef"))
    };
  }
  get capo() {
    return super.capo;
  }
  async mkTxnRegisteringNode(nodeReg) {
    await this.capo.getMintDelegate();
    return this.mkTxnCreateRecord(
      {
        activity: this.activity.MintingActivities.$seeded$CreatingRecord,
        data: {
          ...nodeReg
          // memberToken: tcx.state.memberToken.name,
        }
        // addedUtxoValue: makeValue(initialVaultStake),
      }
      // tcx
    );
  }
  async mkTxnUpdatingNodeRegistration(txnName, item, options, tcx) {
    return super.mkTxnUpdateRecord(txnName, item, options, tcx);
  }
  requirements() {
    return hasReqts({
      // todo
    });
  }
}

class DredCapo extends Capo {
  autoSetup = true;
  get defaultFeatureFlags() {
    return {
      settings: true,
      nodeOpRegistry: true,
      nbhRegistry: true
      /* Add other feature-flag defaults here */
    };
  }
  scriptBundle() {
    return DredCapoBundle.create({
      setup: this.setup
    });
  }
  /**
   * locates the current settings for the capo
   */
  async findSettingsInfo(options) {
    return super.findSettingsInfo(options);
  }
  /**
   * Finds and instantiates the mint delegate for the capo
   */
  async getMintDelegate(charterData) {
    return super.getMintDelegate(charterData);
  }
  /**
   * Finds and instantiates the spend delegate for the capo
   */
  async getSpendDelegate(charterData) {
    return super.getSpendDelegate(charterData);
  }
  /**
   * Finds and instantiates the node registry controller for the capo
   */
  async getNodeRegistryController(charterData) {
    if (!charterData) {
      charterData = await this.findCharterData();
    }
    return this.getDgDataController("nodeReg", {
      charterData
    });
  }
  /**
   * Finds and instantiates the neighborhood registry controller for the capo
   */
  async getNbhRegistryController(charterData) {
    if (!charterData) {
      charterData = await this.findCharterData();
    }
    return this.getDgDataController("nbhRegistry", {
      charterData
    });
  }
  /**
   * Finds and instantiates the settings controller for the capo
   */
  async getSettingsController(options) {
    return this.getDgDataController("settings", options);
  }
  /* add other controller-fetching methods here */
  /**
   * Creates the initial settings for the capo
   */
  async mkInitialSettings() {
    return {
      nodeOpSettings: {
        expectedHeartbeatInterval: BigInt(72 * 60 * 60 * 1e3),
        minNodeOperatorStake: makeValue(20000n),
        minNodeRegistrationFee: 10000000n,
        requiredNodeUptime: 0.95
      },
      nbhSettings: {
        minRegistrationFee: 3000000000n,
        minNbhStake: makeValue(50000001n)
      }
    };
  }
  /**
   * Finds all the node-registration records
   * @remarks
   * This is a convenience method for finding all the node-registration records.
   * It is equivalent to calling `findDelegatedDataUtxos` with the type `"dredNode"`.
   */
  async findNodeOpEntries() {
    return this.findDelegatedDataUtxos({
      type: "dredNode"
    });
  }
  /**
   * Finds all the neighborhood-registration records
   */
  async findNbhRegistryEntries() {
    return this.findDelegatedDataUtxos({
      type: "dredNbh"
    });
  }
  /* add other model-specific finders here */
  /**
   * Initializes the delegate roles for the capo
   * @internal
   */
  initDelegateRoles() {
    const inh = super.basicDelegateRoles();
    const { mintDelegate: parentMD, spendDelegate, govAuthority } = inh;
    const myDelegates = delegateRoles({
      govAuthority,
      spendDelegate: defineRole("spendDgt", MyMintSpendDelegate, {}),
      mintDelegate: defineRole("mintDgt", MyMintSpendDelegate, {}),
      settings: defineRole("dgDataPolicy", ProtocolSettingsController, {}),
      nodeOpRegistry: defineRole("dgDataPolicy", NodeRegistryController, {})
      // nbhRegistry: defineRole("dgDataPolicy", NeighborhoodController, {}),
      /* Add other delegate roles here */
      // optional tokenomics features:
      // mktSale: defineRole(
      //     "dgDataPolicy",
      //     MarketSaleController, {}
      // ),
      // needs to stay disabled until it can have access to TieredScale:
      // fundedPurpose: defineRole(
      //     "dgDataPolicy",
      //     FundedPurposeController,
      //     {}
      // ),
    });
    return myDelegates;
  }
  /**
   * Mints fungible tokens under the Capo's minting policy
   */
  async txnMintingFungibleTokens(tcx, tokenName, tokenCount) {
    if (typeof tokenName === "string") {
      tokenName = textToBytes(tokenName);
    }
    const mintDgt = await this.getMintDelegate();
    const tcx2 = await this.tcxWithCharterRef(tcx);
    const tcx2a = await this.txnAddGovAuthority(tcx2);
    const minter = this.minter;
    return minter.txnMintWithDelegateAuthorizing(
      tcx2a,
      [mkValuesEntry(tokenName, tokenCount)],
      mintDgt,
      mintDgt.activity.MintingActivities.MintingFungibleTokens(tokenName)
    );
  }
  // mkConfigData() {
  //     throw new Error(`unused, but a basic example of how to create a MapData object`);
  //     const uplcMap = makeMapData([
  //         [makeByteArrayData(textToBytes("id")), makeByteArrayData(textToBytes("set"))],
  //     ]);
  //     return uplcMap;
  // }
  todoAddNamedDelegates() {
  }
  // async mkAdditionalTxnsForCharter<TCX extends hasAddlTxns<StellarTxnContext<any>>>(
  //     this: DredCapo,
  //     tcx: TCX,
  //     options: {
  //         charterData: CharterData;
  //         capoUtxos: TxInput[];
  //     }
  // ) {
  //    // now handled by autoSetup
  //
  //     await this.setupFundedPurpose(tcx, options);
  //     await this.setupMarketSale(tcx, options);
  //     await this.setupNodeRegistry(tcx, options);
  //
  //     return tcx;
  // }
  requirements() {
    const baseTokenomics = super.requirements();
    return mergesInheritedReqts(baseTokenomics, {
      "has custom settings for protocol parameters": {
        purpose: "sets up particular points of adjustability for operational policies",
        details: [
          "Arranges details including expiration period for node registrations, ",
          "  ... so clients and node operator (software) can reference them and make adjustments",
          "The configuration details can be stored in a separate script. ",
          "The transaction-builder references the config record in txns needing to access it. ",
          "On-chain scripts needing to read the config ('client scripts') can find it as a refInput to the txn. ",
          "By using a CIP-68-style struct, the config's structure can be be upgraded, ",
          "  ... allowing new scripts needing new configs to get those new configs, ",
          "  ... while leaving its existing client scripts unmodified, "
        ],
        mech: [
          "has an initial discount scale for artists and listeners",
          "has staking-reward settings",
          "provides a 'settings' struct in a module that other contracts import to access parameters"
        ],
        requires: ["can update the settings"]
      },
      "can update the settings": {
        purpose: "to allow for future adjustments to protocol parameters",
        details: [
          "When the settings are updated, the new settings are used in all future transactions referencing settings`"
        ],
        mech: [
          "applies the new settings on-chain",
          "won't update the settings without capo govAuthority approval"
        ]
      },
      "Provides a Node Operator registry, in which node operators can maintain their node registrations": {
        purpose: "so node operators can publish their server availability",
        details: ["Node operators can join the network and contribute capacity."],
        mech: [
          "Allows registering a node operator record with the DRED.nodeOperator token",
          "Registers the member-* id with the node registration record"
        ],
        requires: []
      }
    });
  }
}

class NeighborhoodPolicyDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new NeighborhoodPolicyDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***FeeSource*** for the `BasicDelegate` script
     */
    FeeSource: new FeeSourceHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SubscriptionFeeFrequency*** for the `BasicDelegate` script
     */
    SubscriptionFeeFrequency: new SubscriptionFeeFrequencyHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***RevenueModel*** for the `BasicDelegate` script
     */
    RevenueModel: new RevenueModelHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***dgd_DataSrc*** for the `BasicDelegate` script
     */
    dgd_DataSrc: new dgd_DataSrcHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***AppInfo*** for the `BasicDelegate` script
     */
    AppInfo: (fields) => {
      return this["\u1C7A\u1C7AAppInfoCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NodeOpsInfo*** for the `BasicDelegate` script
     */
    NodeOpsInfo: (fields) => {
      return this["\u1C7A\u1C7ANodeOpsInfoCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NeighborhoodData*** for the `BasicDelegate` script
     */
    NeighborhoodData: (fields) => {
      return this["\u1C7A\u1C7ANeighborhoodDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***NeighborhoodSettings*** for the `BasicDelegate` script
     */
    NeighborhoodSettings: (fields) => {
      return this["\u1C7A\u1C7ANeighborhoodSettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***AbstractSettingsForNeighborhood*** for the `BasicDelegate` script
     */
    AbstractSettingsForNeighborhood: (fields) => {
      return this["\u1C7A\u1C7AAbstractSettingsForNeighborhoodCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DgDataDetails*** for the `BasicDelegate` script
     */
    DgDataDetails: (fields) => {
      return this["\u1C7A\u1C7ADgDataDetailsCast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAppInfoCast" = makeCast(
    AppInfoSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANodeOpsInfoCast" = makeCast(
    NodeOpsInfoSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANeighborhoodDataCast" = makeCast(
    NeighborhoodDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ANeighborhoodSettingsCast" = makeCast(
    NeighborhoodSettingsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAbstractSettingsForNeighborhoodCast" = makeCast(
    AbstractSettingsForNeighborhoodSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADgDataDetailsCast" = makeCast(
    DgDataDetailsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class NeighborhoodPolicyDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  /**
      * reads UplcData *known to fit the **FeeSource*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  FeeSource(d) {
    const typeHelper = this.bridge.types.FeeSource;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SubscriptionFeeFrequency*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SubscriptionFeeFrequency(d) {
    const typeHelper = this.bridge.types.SubscriptionFeeFrequency;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **RevenueModel*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RevenueModel(d) {
    const typeHelper = this.bridge.types.RevenueModel;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **dgd_DataSrc*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  dgd_DataSrc(d) {
    const typeHelper = this.bridge.types.dgd_DataSrc;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **AppInfo*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AppInfo(d) {
    const cast = this.bridge["\u1C7A\u1C7AAppInfoCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NodeOpsInfo*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NodeOpsInfo(d) {
    const cast = this.bridge["\u1C7A\u1C7ANodeOpsInfoCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NeighborhoodData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NeighborhoodData(d) {
    const cast = this.bridge["\u1C7A\u1C7ANeighborhoodDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **NeighborhoodSettings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  NeighborhoodSettings(d) {
    const cast = this.bridge["\u1C7A\u1C7ANeighborhoodSettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **AbstractSettingsForNeighborhood*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AbstractSettingsForNeighborhood(d) {
    const cast = this.bridge["\u1C7A\u1C7AAbstractSettingsForNeighborhoodCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DgDataDetails*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DgDataDetails(d) {
    const cast = this.bridge["\u1C7A\u1C7ADgDataDetailsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
class FeeSourceHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    FeeSourceSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"NeighborhoodData::FeeSource.EndUser"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get EndUser() {
    const uplc = this.mkUplcData(
      { EndUser: {} },
      "NeighborhoodData::FeeSource.EndUser"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"NeighborhoodData::FeeSource.SponsorContract"***
   */
  SponsorContract(sponsorContract) {
    const uplc = this.mkUplcData({
      SponsorContract: sponsorContract
    }, "NeighborhoodData::FeeSource.SponsorContract");
    return uplc;
  }
}
class SubscriptionFeeFrequencyHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SubscriptionFeeFrequencySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"NeighborhoodData::SubscriptionFeeFrequency.Epoch"***
   */
  Epoch(fee) {
    const uplc = this.mkUplcData({
      Epoch: fee
    }, "NeighborhoodData::SubscriptionFeeFrequency.Epoch");
    return uplc;
  }
  /**
   * generates  UplcData for ***"NeighborhoodData::SubscriptionFeeFrequency.Monthly"***
   */
  Monthly(fee) {
    const uplc = this.mkUplcData({
      Monthly: fee
    }, "NeighborhoodData::SubscriptionFeeFrequency.Monthly");
    return uplc;
  }
  /**
   * generates  UplcData for ***"NeighborhoodData::SubscriptionFeeFrequency.Yearly"***
   */
  Yearly(fee) {
    const uplc = this.mkUplcData({
      Yearly: fee
    }, "NeighborhoodData::SubscriptionFeeFrequency.Yearly");
    return uplc;
  }
}
class RevenueModelHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    RevenueModelSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"NeighborhoodData::RevenueModel.TransactionBased"***
   * @remarks - ***RevenueModel$TransactionBasedLike*** is the same as the expanded field-types.
   */
  TransactionBased(fields) {
    const uplc = this.mkUplcData({
      TransactionBased: fields
    }, "NeighborhoodData::RevenueModel.TransactionBased");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"NeighborhoodData::RevenueModel.Subscription"***
   */
  Subscription(subscriptionFee) {
    const uplc = this.mkUplcData({
      Subscription: subscriptionFee
    }, "NeighborhoodData::RevenueModel.Subscription");
    return uplc;
  }
}
class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"NeighborhoodPolicy::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "NeighborhoodPolicy::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"NeighborhoodPolicy::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "NeighborhoodPolicy::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"NeighborhoodPolicy::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "NeighborhoodPolicy::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
}
class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class DelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new DelegateRoleHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: false
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
}
class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"NeighborhoodPolicy::SpendingActivity.UpdatingRecord"***
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "NeighborhoodPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
}
class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates  UplcData for ***"NeighborhoodPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "NeighborhoodPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates  UplcData for ***"NeighborhoodPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
}
class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"NeighborhoodPolicy::BurningActivity.DeletingRecord"***
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "NeighborhoodPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
}
class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
}
class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::SpendingActivity.UpdatingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "NeighborhoodPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
}
class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
  */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "NeighborhoodPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
}
class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::BurningActivity.DeletingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "NeighborhoodPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
}
class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "NeighborhoodPolicy::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "NeighborhoodPolicy::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "NeighborhoodPolicy::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "NeighborhoodPolicy::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "NeighborhoodPolicy::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "NeighborhoodPolicy::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "NeighborhoodPolicy::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"NeighborhoodPolicy::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "NeighborhoodPolicy::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
}
class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
}
class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class dgd_DataSrcHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    dgd_DataSrcSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::dgd_DataSrc.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::dgd_DataSrc.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Input"***
   */
  Input(utxo) {
    const uplc = this.mkUplcData({
      Input: utxo
    }, "CapoHelpers::dgd_DataSrc.Input");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Output"***
   */
  Output(txo) {
    const uplc = this.mkUplcData({
      Output: txo
    }, "CapoHelpers::dgd_DataSrc.Output");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Both"***
   * @remarks - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.
   */
  Both(fields) {
    const uplc = this.mkUplcData({
      Both: fields
    }, "CapoHelpers::dgd_DataSrc.Both");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
const AnyDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const FeeSourceSchema = {
  "kind": "enum",
  "name": "FeeSource",
  "id": "__module__NeighborhoodData__FeeSource[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodData__FeeSource[]__EndUser",
      "name": "EndUser",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__NeighborhoodData__FeeSource[]__SponsorContract",
      "name": "SponsorContract",
      "fieldTypes": [
        {
          "name": "sponsorContract",
          "type": {
            "kind": "internal",
            "name": "ScriptHash"
          }
        }
      ]
    }
  ]
};
const SubscriptionFeeFrequencySchema = {
  "kind": "enum",
  "name": "SubscriptionFeeFrequency",
  "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch",
      "name": "Epoch",
      "fieldTypes": [
        {
          "name": "fee",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly",
      "name": "Monthly",
      "fieldTypes": [
        {
          "name": "fee",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly",
      "name": "Yearly",
      "fieldTypes": [
        {
          "name": "fee",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        }
      ]
    }
  ]
};
const RevenueModelSchema = {
  "kind": "enum",
  "name": "RevenueModel",
  "id": "__module__NeighborhoodData__RevenueModel[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodData__RevenueModel[]__TransactionBased",
      "name": "TransactionBased",
      "fieldTypes": [
        {
          "name": "minTxFee",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        },
        {
          "name": "maxTxFee",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Value"
            }
          }
        },
        {
          "name": "chargeTo",
          "type": {
            "kind": "enum",
            "name": "FeeSource",
            "id": "__module__NeighborhoodData__FeeSource[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__NeighborhoodData__FeeSource[]__EndUser",
                "name": "EndUser",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__NeighborhoodData__FeeSource[]__SponsorContract",
                "name": "SponsorContract",
                "fieldTypes": [
                  {
                    "name": "sponsorContract",
                    "type": {
                      "kind": "internal",
                      "name": "ScriptHash"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__NeighborhoodData__RevenueModel[]__Subscription",
      "name": "Subscription",
      "fieldTypes": [
        {
          "name": "subscriptionFee",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "SubscriptionFeeFrequency",
              "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch",
                  "name": "Epoch",
                  "fieldTypes": [
                    {
                      "name": "fee",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly",
                  "name": "Monthly",
                  "fieldTypes": [
                    {
                      "name": "fee",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly",
                  "name": "Yearly",
                  "fieldTypes": [
                    {
                      "name": "fee",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const AppInfoSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodData__AppInfo[]",
  "name": "AppInfo",
  "fieldTypes": [
    {
      "name": "url",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "url"
    },
    {
      "name": "revenueModel",
      "type": {
        "kind": "list",
        "itemType": {
          "kind": "enum",
          "name": "RevenueModel",
          "id": "__module__NeighborhoodData__RevenueModel[]",
          "variantTypes": [
            {
              "kind": "variant",
              "tag": 0,
              "id": "__module__NeighborhoodData__RevenueModel[]__TransactionBased",
              "name": "TransactionBased",
              "fieldTypes": [
                {
                  "name": "minTxFee",
                  "type": {
                    "kind": "internal",
                    "name": "Value"
                  }
                },
                {
                  "name": "maxTxFee",
                  "type": {
                    "kind": "option",
                    "someType": {
                      "kind": "internal",
                      "name": "Value"
                    }
                  }
                },
                {
                  "name": "chargeTo",
                  "type": {
                    "kind": "enum",
                    "name": "FeeSource",
                    "id": "__module__NeighborhoodData__FeeSource[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__NeighborhoodData__FeeSource[]__EndUser",
                        "name": "EndUser",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__NeighborhoodData__FeeSource[]__SponsorContract",
                        "name": "SponsorContract",
                        "fieldTypes": [
                          {
                            "name": "sponsorContract",
                            "type": {
                              "kind": "internal",
                              "name": "ScriptHash"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 1,
              "id": "__module__NeighborhoodData__RevenueModel[]__Subscription",
              "name": "Subscription",
              "fieldTypes": [
                {
                  "name": "subscriptionFee",
                  "type": {
                    "kind": "list",
                    "itemType": {
                      "kind": "enum",
                      "name": "SubscriptionFeeFrequency",
                      "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch",
                          "name": "Epoch",
                          "fieldTypes": [
                            {
                              "name": "fee",
                              "type": {
                                "kind": "internal",
                                "name": "Value"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly",
                          "name": "Monthly",
                          "fieldTypes": [
                            {
                              "name": "fee",
                              "type": {
                                "kind": "internal",
                                "name": "Value"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly",
                          "name": "Yearly",
                          "fieldTypes": [
                            {
                              "name": "fee",
                              "type": {
                                "kind": "internal",
                                "name": "Value"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "key": "revMdl"
    }
  ]
};
const NodeOpsInfoSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodData__NodeOpsInfo[]",
  "name": "NodeOpsInfo",
  "fieldTypes": [
    {
      "name": "minNodes",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "cMin"
    },
    {
      "name": "maxNodes",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "cMax"
    },
    {
      "name": "minNodeOperatorStake",
      "type": {
        "kind": "internal",
        "name": "Value"
      },
      "key": "minStk"
    },
    {
      "name": "minUptime",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "minUpt"
    }
  ]
};
const NeighborhoodDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodData__NeighborhoodData[]",
  "name": "NeighborhoodData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    },
    {
      "name": "memberToken",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "mt"
    },
    {
      "name": "name",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "nm"
    },
    {
      "name": "description",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "dsc"
    },
    {
      "name": "appInfo",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NeighborhoodData__AppInfo[]",
        "name": "AppInfo",
        "fieldTypes": [
          {
            "name": "url",
            "type": {
              "kind": "internal",
              "name": "String"
            },
            "key": "url"
          },
          {
            "name": "revenueModel",
            "type": {
              "kind": "list",
              "itemType": {
                "kind": "enum",
                "name": "RevenueModel",
                "id": "__module__NeighborhoodData__RevenueModel[]",
                "variantTypes": [
                  {
                    "kind": "variant",
                    "tag": 0,
                    "id": "__module__NeighborhoodData__RevenueModel[]__TransactionBased",
                    "name": "TransactionBased",
                    "fieldTypes": [
                      {
                        "name": "minTxFee",
                        "type": {
                          "kind": "internal",
                          "name": "Value"
                        }
                      },
                      {
                        "name": "maxTxFee",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "Value"
                          }
                        }
                      },
                      {
                        "name": "chargeTo",
                        "type": {
                          "kind": "enum",
                          "name": "FeeSource",
                          "id": "__module__NeighborhoodData__FeeSource[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__NeighborhoodData__FeeSource[]__EndUser",
                              "name": "EndUser",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__NeighborhoodData__FeeSource[]__SponsorContract",
                              "name": "SponsorContract",
                              "fieldTypes": [
                                {
                                  "name": "sponsorContract",
                                  "type": {
                                    "kind": "internal",
                                    "name": "ScriptHash"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "kind": "variant",
                    "tag": 1,
                    "id": "__module__NeighborhoodData__RevenueModel[]__Subscription",
                    "name": "Subscription",
                    "fieldTypes": [
                      {
                        "name": "subscriptionFee",
                        "type": {
                          "kind": "list",
                          "itemType": {
                            "kind": "enum",
                            "name": "SubscriptionFeeFrequency",
                            "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]",
                            "variantTypes": [
                              {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch",
                                "name": "Epoch",
                                "fieldTypes": [
                                  {
                                    "name": "fee",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Value"
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "variant",
                                "tag": 1,
                                "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly",
                                "name": "Monthly",
                                "fieldTypes": [
                                  {
                                    "name": "fee",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Value"
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "variant",
                                "tag": 2,
                                "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly",
                                "name": "Yearly",
                                "fieldTypes": [
                                  {
                                    "name": "fee",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Value"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            },
            "key": "revMdl"
          }
        ]
      },
      "key": "app"
    },
    {
      "name": "opsInfo",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NeighborhoodData__NodeOpsInfo[]",
        "name": "NodeOpsInfo",
        "fieldTypes": [
          {
            "name": "minNodes",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "cMin"
          },
          {
            "name": "maxNodes",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "cMax"
          },
          {
            "name": "minNodeOperatorStake",
            "type": {
              "kind": "internal",
              "name": "Value"
            },
            "key": "minStk"
          },
          {
            "name": "minUptime",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "minUpt"
          }
        ]
      },
      "key": "ops"
    }
  ]
};
const DelegateDatumSchema = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__NeighborhoodPolicy__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodPolicy__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__NeighborhoodPolicy__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__NeighborhoodPolicy__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__NeighborhoodData__NeighborhoodData[]",
            "name": "NeighborhoodData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              },
              {
                "name": "memberToken",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "mt"
              },
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "nm"
              },
              {
                "name": "description",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "dsc"
              },
              {
                "name": "appInfo",
                "type": {
                  "kind": "struct",
                  "format": "map",
                  "id": "__module__NeighborhoodData__AppInfo[]",
                  "name": "AppInfo",
                  "fieldTypes": [
                    {
                      "name": "url",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      },
                      "key": "url"
                    },
                    {
                      "name": "revenueModel",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "RevenueModel",
                          "id": "__module__NeighborhoodData__RevenueModel[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__NeighborhoodData__RevenueModel[]__TransactionBased",
                              "name": "TransactionBased",
                              "fieldTypes": [
                                {
                                  "name": "minTxFee",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Value"
                                  }
                                },
                                {
                                  "name": "maxTxFee",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "internal",
                                      "name": "Value"
                                    }
                                  }
                                },
                                {
                                  "name": "chargeTo",
                                  "type": {
                                    "kind": "enum",
                                    "name": "FeeSource",
                                    "id": "__module__NeighborhoodData__FeeSource[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__NeighborhoodData__FeeSource[]__EndUser",
                                        "name": "EndUser",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__NeighborhoodData__FeeSource[]__SponsorContract",
                                        "name": "SponsorContract",
                                        "fieldTypes": [
                                          {
                                            "name": "sponsorContract",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ScriptHash"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__NeighborhoodData__RevenueModel[]__Subscription",
                              "name": "Subscription",
                              "fieldTypes": [
                                {
                                  "name": "subscriptionFee",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "SubscriptionFeeFrequency",
                                      "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Epoch",
                                          "name": "Epoch",
                                          "fieldTypes": [
                                            {
                                              "name": "fee",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Value"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Monthly",
                                          "name": "Monthly",
                                          "fieldTypes": [
                                            {
                                              "name": "fee",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Value"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__NeighborhoodData__SubscriptionFeeFrequency[]__Yearly",
                                          "name": "Yearly",
                                          "fieldTypes": [
                                            {
                                              "name": "fee",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Value"
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "key": "revMdl"
                    }
                  ]
                },
                "key": "app"
              },
              {
                "name": "opsInfo",
                "type": {
                  "kind": "struct",
                  "format": "map",
                  "id": "__module__NeighborhoodData__NodeOpsInfo[]",
                  "name": "NodeOpsInfo",
                  "fieldTypes": [
                    {
                      "name": "minNodes",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "cMin"
                    },
                    {
                      "name": "maxNodes",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "cMax"
                    },
                    {
                      "name": "minNodeOperatorStake",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      },
                      "key": "minStk"
                    },
                    {
                      "name": "minUptime",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      },
                      "key": "minUpt"
                    }
                  ]
                },
                "key": "ops"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__NeighborhoodPolicy__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord",
      "name": "UpdatingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__NeighborhoodPolicy__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord",
      "name": "CreatingRecord",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__NeighborhoodPolicy__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord",
      "name": "DeletingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__NeighborhoodPolicy__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__NeighborhoodPolicy__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__NeighborhoodPolicy__SpendingActivity[]__UpdatingRecord",
                "name": "UpdatingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__NeighborhoodPolicy__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__NeighborhoodPolicy__MintingActivity[]__CreatingRecord",
                "name": "CreatingRecord",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__NeighborhoodPolicy__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__NeighborhoodPolicy__BurningActivity[]__DeletingRecord",
                "name": "DeletingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__NeighborhoodPolicy__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const RelativeDelegateLinkSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const PendingDelegateChangeSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};
const NeighborhoodSettingsSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodSettings__NeighborhoodSettings[]",
  "name": "NeighborhoodSettings",
  "fieldTypes": [
    {
      "name": "minRegistrationFee",
      "type": {
        "kind": "internal",
        "name": "Int"
      },
      "key": "minRegFee"
    },
    {
      "name": "minNbhStake",
      "type": {
        "kind": "internal",
        "name": "Value"
      },
      "key": "minStk"
    }
  ]
};
const AbstractSettingsForNeighborhoodSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__NeighborhoodSettings__AbstractSettingsForNeighborhood[]",
  "name": "AbstractSettingsForNeighborhood",
  "fieldTypes": [
    {
      "name": "NeighborhoodSettings",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__NeighborhoodSettings__NeighborhoodSettings[]",
        "name": "NeighborhoodSettings",
        "fieldTypes": [
          {
            "name": "minRegistrationFee",
            "type": {
              "kind": "internal",
              "name": "Int"
            },
            "key": "minRegFee"
          },
          {
            "name": "minNbhStake",
            "type": {
              "kind": "internal",
              "name": "Value"
            },
            "key": "minStk"
          }
        ]
      },
      "key": "nbhd"
    }
  ]
};
const dgd_DataSrcSchema = {
  "kind": "enum",
  "name": "dgd_DataSrc",
  "id": "__module__CapoHelpers__dgd_DataSrc[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
      "name": "Output",
      "fieldTypes": [
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
      "name": "Both",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        },
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    }
  ]
};
const DgDataDetailsSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__DgDataDetails[]",
  "name": "DgDataDetails",
  "fieldTypes": [
    {
      "name": "dataSrc",
      "type": {
        "kind": "enum",
        "name": "dgd_DataSrc",
        "id": "__module__CapoHelpers__dgd_DataSrc[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
            "name": "Output",
            "fieldTypes": [
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
            "name": "Both",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              },
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    }
  ]
};

class NeighborhoodController extends DelegatedDataContract {
  dataBridgeClass = NeighborhoodPolicyDataBridge;
  scriptBundle() {
    return NeighborhoodBundle.create();
  }
  idPrefix = "nbhd";
  get delegateName() {
    return "nbhRegistry";
  }
  get recordTypeName() {
    return "dredNbh";
  }
  exampleData() {
    return {
      // id: "nbhd-0000000000",
      // type: "dredNbh",
      memberToken: "member-owner",
      name: "Default Neighborhood",
      description: "A default neighborhood for Dred services",
      appInfo: {
        url: "https://dred.com",
        revenueModel: [
          {
            TransactionBased: {
              chargeTo: {
                EndUser: {}
              },
              minTxFee: makeValue(42000000n),
              maxTxFee: void 0
            }
          }
        ]
      },
      opsInfo: {
        minNodes: 3n,
        maxNodes: 13n,
        minNodeOperatorStake: makeValue(42000000n),
        minUptime: 90n
      }
    };
  }
  get capo() {
    return super.capo;
  }
  async mkTxnRegisteringNode(nodeReg) {
    await this.capo.getMintDelegate();
    return this.mkTxnCreateRecord(
      {
        activity: this.activity.MintingActivities.$seeded$CreatingRecord,
        data: {
          ...nodeReg
          // memberToken: tcx.state.memberToken.name,
        }
        // addedUtxoValue: makeValue(initialVaultStake),
      }
      // tcx
    );
  }
  requirements() {
    return hasReqts({
      // todo
    });
  }
}

export { DredCapo, MyMintSpendDelegate, NeighborhoodController, NodeRegistryController, ProtocolSettingsController };
//# sourceMappingURL=index.mjs.map
